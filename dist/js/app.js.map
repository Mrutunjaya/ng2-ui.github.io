{"version":3,"sources":["webpack:///js/app.js","webpack:///./app/main.ts","webpack:///./app/app.module.ts","webpack:///./~/@angular/forms/bundles/forms.umd.js","webpack:///./app/app.component.ts","webpack:///./~/ng2-ui/dist/ng2-ui.umd.js","webpack:///./app/app.html","webpack:///./app/drawer.component.ts","webpack:///./app/repo-info.component.ts","webpack:///./app/http-cache.ts","webpack:///./app/ng2-storage.ts","webpack:///./app/app.routes.ts","webpack:///./app/ng2-ui-components/components.route.ts","webpack:///./app/ng2-ui-components/accordion.component.ts","webpack:///./app/ng2-ui-components/datetime-picker.component.ts","webpack:///./app/ng2-ui-components/google-map.component.ts","webpack:///./app/ng2-ui-components/infinite-list.component.ts","webpack:///./app/ng2-ui-components/overlay.component.ts","webpack:///./app/ng2-ui-components/parallax-scroll.component.ts","webpack:///./app/ng2-ui-components/popup.component.ts","webpack:///./app/ng2-ui-components/scrollable.component.ts","webpack:///./app/ng2-ui-components/sticky.component.ts","webpack:///./app/ng2-ui-components/tab.component.ts","webpack:///./app/ng2-ui-components/tooltip.component.ts","webpack:///./app/ng2-ui-components/auto-complete.component.ts","webpack:///./app/ng2-ui-components/menu.component.ts","webpack:///./app/ng2-ui-components/sortable.component.ts","webpack:///./app/getting-started.component.ts","webpack:///./~/ng2-utils/dist/ng2-utils.umd.js"],"names":["webpackJsonp","0","module","exports","__webpack_require__","process","main","platform_browser_dynamic_1","platformBrowserDynamic","bootstrapModule","app_module_1","AppModule","core_1","env","ENV","enableProdMode","document","readyState","addEventListener","call","24","__decorate","this","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","k","v","metadata","platform_browser_1","forms_1","http_1","common_1","app_component_1","drawer_component_1","repo_info_component_1","http_cache_1","ng2_storage_1","app_routes_1","getting_started_component_1","accordion_component_1","datetime_picker_component_1","google_map_component_1","infinite_list_component_1","menu_component_1","overlay_component_1","parallax_scroll_component_1","popup_component_1","scrollable_component_1","sticky_component_1","tab_component_1","tooltip_component_1","auto_complete_component_1","sortable_component_1","ng2_ui_1","ng2_utils_1","NgModule","imports","BrowserModule","FormsModule","HttpModule","APP_ROUTER_PROVIDERS","Ng2UIModule","Ng2MapModule","apiUrl","Ng2UtilsModule","declarations","AppComponent","DrawerComponent","RepoInfoComponent","GettingStartedComponent","AccordionComponent","AutoCompleteComponent","DatetimePickerComponent","GoogleMapComponent","InfiniteListComponent","MenuComponent","OverlayComponent","ParallaxScrollComponent","PopupComponent","ScrollableComponent","StickyComponent","TabComponent","TooltipComponent","SortableComponent","providers","HttpCache","Ng2Storage","provide","LocationStrategy","useClass","HashLocationStrategy","bootstrap","25","global","factory","_angular_core","rxjs_operator_toPromise","rxjs_Subject","rxjs_Observable","rxjs_observable_fromPromise","isPresent","obj","isBlank","looseIdentical","a","b","isNaN","isJsObject","o","isPrimitive","isEmptyInputValue","value","_convertToPromise","isPromise","toPromise","_executeValidators","control","validators","map","_executeAsyncValidators","_mergeErrors","arrayOfErrors","res","reduce","errors","StringMapWrapper","merge","keys","normalizeValidator","validator","validate","normalizeAsyncValidator","unimplemented","Error","_buildValueString","id","slice","_extractId","valueString","split","_buildValueString$1","_extractId$1","controlPath","name","parent","path","concat","setUpControl","dir","_throwError","valueAccessor","Validators","compose","asyncValidator","composeAsync","writeValue","registerOnChange","newValue","viewToModelUpdate","markAsDirty","setValue","emitModelToViewChange","registerOnTouched","markAsTouched","emitModelEvent","setDisabledState","registerOnDisabledChange","isDisabled","_rawValidators","forEach","registerOnValidatorChange","updateValueAndValidity","_rawAsyncValidators","cleanUpControl","_noControlError","_clearChangeFns","setUpFormContainer","message","messageEnd","join","composeValidators","composeAsyncValidators","isPropertyUpdated","changes","viewModel","hasOwnProperty","change","isFirstChange","currentValue","isBuiltInAccessor","BUILTIN_ACCESSORS","some","constructor","selectValueAccessor","valueAccessors","defaultAccessor","builtinAccessor","customAccessor","DefaultValueAccessor","_find","delimiter","Array","FormGroup","controls","FormArray","at","toObservable","fromPromise","coerceToValidator","isArray","coerceToAsyncValidator","_hasInvalidParent","FormGroupName","FormGroupDirective","FormArrayName","AbstractControlDirective","prototype","get","enumerable","configurable","valid","invalid","pending","pristine","dirty","touched","untouched","disabled","enabled","statusChanges","valueChanges","reset","undefined","hasError","errorCode","getError","__extends$1","__extends","__","p","create","ControlContainer","_super","apply","m1","m2","m","_i","_a","_b","_c","equals","k1","k2","ListWrapper","findLast","arr","condition","removeAll","list","items","index","indexOf","splice","remove","el","flatten","flat","item","flatItem","__core_private__","NG_VALIDATORS","OpaqueToken","NG_ASYNC_VALIDATORS","required","minLength","minlength","requiredLength","actualLength","maxLength","maxlength","pattern","nullValidator","regex","regexStr","RegExp","toString","test","requiredPattern","actualValue","presentValidators","filter","promises","Promise","all","then","NG_VALUE_ACCESSOR","CHECKBOX_VALUE_ACCESSOR","useExisting","forwardRef","CheckboxControlValueAccessor","multi","_renderer","_elementRef","onChange","_","onTouched","setElementProperty","nativeElement","fn","type","Directive","args","selector","host","(change)","(blur)","ctorParameters","Renderer","ElementRef","DEFAULT_VALUE_ACCESSOR","normalizedValue","(input)","NUMBER_VALUE_ACCESSOR","NumberValueAccessor","parseFloat","__extends$2","NgControl","_parent","RADIO_VALUE_ACCESSOR","RadioControlValueAccessor","RadioControlRegistry","_accessors","add","accessor","push","select","_this","_isSameGroup","fireUncheck","controlPair","_control","Injectable","_registry","_injector","ngOnInit","_checkName","ngOnDestroy","_state","_fn","formControlName","_throwNameError","Injector","propDecorators","Input","RANGE_VALUE_ACCESSOR","RangeValueAccessor","SELECT_VALUE_ACCESSOR","SelectControlValueAccessor","_optionMap","Map","_idCounter","_getOptionId","_getOptionValue","_registerOption","from","has","NgSelectOption","_element","_select","set","_setElementValue","delete","Optional","Host","ngValue","SELECT_MULTIPLE_VALUE_ACCESSOR","SelectMultipleControlValueAccessor","values","ids","opt","_setSelected","selected","options","selectedOptions","val","_value","NgSelectMultipleOption","AbstractFormGroupDirective","_checkParentType","formDirective","addFormGroup","removeFormGroup","getFormGroup","_validators","_asyncValidators","__extends$3","AbstractControlStatus","cd","_cd","ngControlStatusHost","[class.ng-untouched]","[class.ng-touched]","[class.ng-pristine]","[class.ng-dirty]","[class.ng-valid]","[class.ng-invalid]","[class.ng-pending]","NgControlStatus","Self","NgControlStatusGroup","__extends$5","EventEmitter","isAsync","__isAsync","emit","next","subscribe","generatorOrNext","error","complete","schedulerFn","errorFn","err","completeFn","setTimeout","Subject","__extends$6","VALID","INVALID","PENDING","DISABLED","AbstractControl","_onCollectionChange","_pristine","_touched","_onDisabledChange","_status","_errors","_valueChanges","_statusChanges","setValidators","newValidator","setAsyncValidators","clearValidators","clearAsyncValidators","onlySelf","markAsUntouched","_forEachChild","_updateTouched","markAsPristine","_updatePristine","markAsPending","disable","emitEvent","_updateValue","_updateAncestors","changeFn","enable","setParent","patchValue","_setInitialStatus","_runValidator","_calculateStatus","_runAsyncValidator","_updateTreeValidity","ctrl","_allControlsDisabled","_cancelExistingSubscription","obs","_asyncValidationSubscription","setErrors","unsubscribe","_updateControlsErrors","x","_initObservables","_anyControlsHaveStatus","cb","_anyControls","status","_anyControlsDirty","_anyControlsTouched","_isBoxedValue","formState","_registerOnCollectionChange","FormControl","_onChange","_applyFormState","emitViewToModelChange","_setUpControls","registerControl","addControl","removeControl","setControl","contains","controlName","_checkAllValuesPresent","_throwIfControlMissing","getRawValue","_reduceChildren","acc","_reduceValue","initValue","_registerControl","insert","removeAt","__extends$4","formDirectiveProvider","NgForm","resolvedPromise","resolve","asyncValidators","_submitted","ngSubmit","form","container","_findContainer","getControl","group","updateModel","onSubmit","$event","onReset","resetForm","pop","(submit)","(reset)","outputs","exportAs","Inject","Examples","formGroupName","formArrayName","ngModelGroup","ngModelWithFormGroup","TemplateDrivenErrors","modelParentException","formGroupNameException","missingNameException","modelGroupParentException","__extends$8","modelGroupProvider","NgModelGroup","SkipSelf","__extends$7","formControlBinding","NgModel","resolvedPromise$1","_registered","update","ngOnChanges","_checkForErrors","_setUpControl","_updateDisabled","model","_isStandalone","_setUpStandalone","standalone","disabledValue","Output","ReactiveErrors","controlParentException","ngModelGroupException","missingFormException","groupParentException","arrayParentException","disabledAttrWarning","console","warn","__extends$9","formControlBinding$1","FormControlDirective","_isControlChanged","__extends$11","formDirectiveProvider$1","directives","_checkFormPresent","_updateValidators","_updateDomValue","_updateRegistrations","addFormArray","removeFormArray","getFormArray","newCtrl","_oldForm","sync","async","__extends$12","formGroupNameProvider","formArrayNameProvider","__extends$10","controlNameBinding","FormControlName","_added","REQUIRED_VALIDATOR","RequiredValidator","_required","[attr.required]","MIN_LENGTH_VALIDATOR","MinLengthValidator","_createValidator","_validator","parseInt","[attr.minlength]","MAX_LENGTH_VALIDATOR","MaxLengthValidator","[attr.maxlength]","PATTERN_VALIDATOR","PatternValidator","[attr.pattern]","FormBuilder","controlsConfig","extra","_reduceControls","array","_createControl","controlConfig","VERSION","Version","SHARED_FORM_DIRECTIVES","TEMPLATE_DRIVEN_DIRECTIVES","REACTIVE_DRIVEN_DIRECTIVES","InternalFormsSharedModule","ReactiveFormsModule","30","router_1","router","location","Ng2MapComponent","events","event","sendToGoogleAnalytics","NavigationEnd","newRoute","currentRoute","window","Component","template","Router","Location","61","root","__WEBPACK_EXTERNAL_MODULE_2__","__WEBPACK_EXTERNAL_MODULE_3__","__WEBPACK_EXTERNAL_MODULE_4__","__WEBPACK_EXTERNAL_MODULE_6__","__WEBPACK_EXTERNAL_MODULE_7__","__WEBPACK_EXTERNAL_MODULE_8__","__WEBPACK_EXTERNAL_MODULE_11__","__WEBPACK_EXTERNAL_MODULE_12__","modules","moduleId","installedModules","loaded","ng2_ui_module_1","Ng2ScrollableDirective","Ng2MessagePopupComponent","Ng2PopupComponent","Ng2OverlayManager","ng2_auto_complete_1","ng2_datetime_picker_1","ng2_map_1","ng2_popup_1","ng2_menu_1","ng2_parallax_scroll_1","ng2_sticky_1","ng2_tab_1","ng2_tooltip_overlay_1","ng2_ui_sortable_1","ng2_overlay_1","ng2_scrollable_1","ng2_collapsable_1","ng2_infinite_list_1","ng2_overlay_2","ng2_scrollable_2","ng2_popup_2","ng2_map_2","Ng2AutoCompleteModule","Ng2DatetimePickerModule","Ng2InfiniteListModule","Ng2MenuModule","Ng2ParallaxScrollModule","Ng2PopupModule","Ng2StickyModule","Ng2TabModule","Ng2ScrollableModule","Ng2TooltipOverlayModule","Ng2OverlayModule","Ng2SortableModule","Ng2CollapsableModule","Ng2AutoComplete","ng2_auto_complete_module_1","ng2_auto_complete_component_1","Ng2AutoCompleteComponent","ng2_auto_complete_directive_1","Ng2AutoCompleteDirective","__param","paramIndex","decorator","http","keyword","objStr","JSON","stringify","toLowerCase","getRemoteData","source","matches","match","replacementWord","url","replace","resp","json","data","pathToData","paths","prop","Http","forRoot","ngModule","CommonModule","entryComponents","elementRef","autoComplete","minChars","loadingText","showInputTag","showDropdownOnInit","valueSelected","inputChanged","dropdownVisible","isLoading","filteredList","minCharsEntered","itemIndex","reloadListInDelay","evt","delayMs","isSrcArr","delay","reloadList","inputElKeyHandler","totalNumItem","keyCode","selectOne","preventDefault","timer","callback","ms","clearTimeout","autoCompleteInput","focus","showDropdownList","hideDropdownList","maxNumList","getFormattedList","formatted","formatter","listFormatter","Function","String","Number","Boolean","ViewChild","styles","encapsulation","ViewEncapsulation","None","resolver","renderer","viewContainerRef","parentForm","ngModelChange","valueChanged","showAutoCompleteDropdown","resolveComponentFactory","componentRef","createComponent","component","instance","placeholder","autoCompletePlaceholder","acceptUserInput","blankOptionText","noMatchFoundText","selectNewValue","componentInputChanged","acDropdownEl","style","display","tagName","inputEl","parentElement","insertBefore","nextSibling","styleAutoCompleteDropdown","hideAutoCompleteDropdown","destroy","thisInputElBCR","getBoundingClientRect","closeToBottom","bottom","innerHeight","width","position","zIndex","left","height","top","extFormControl","formControl","ngModel","addToStringFunction","selectValueOf","keydownEventHandler","inputEventHandler","element","wrapperEl","createElement","className","appendChild","displayPropertyName","ngAfterViewInit","querySelector","displayVal_1","ComponentFactoryResolver","ViewContainerRef","__WEBPACK_EXTERNAL_MODULE_5__","ng2_datetime_1","Ng2Datetime","ng2_datetime_picker_component_1","Ng2DatetimePickerComponent","ng2_datetime_picker_directive_1","Ng2DatetimePickerDirective","ng2_datetime_picker_module_1","formatDate","format","dateOnly","ret","pad0","number","getFullYear","getMonth","getDate","getHours","getMinutes","moment","parseDate","dateStr","parseFormat","dateFormat","removeTimezone","addDSTOffset","parseFromDefaultFormat","formats","date","toDate","isValid","ISO_8601","jan","Date","jul","stdTimezoneOffset","Math","max","getTimezoneOffset","isDST","offset","diff","abs","tmp","getMonthData","year","month","firstDayOfMonth","lastDayOfMonth","lastDayOfPreviousMonth","daysInMonth","daysInLastMonth","dayOfWeek","getDay","leadingDays","firstDayOfWeek","trailingDays","days","localizedDaysOfWeek","daysOfWeek","monthData","weekends","fullName","months","shortName","weekdays","weekdaysShort","substr","localeData","ng2Datetime","cdRef","minuteStep","selected$","closing$","selectedDate","day","dt","setHours","setMinutes","setSeconds","setMilliseconds","today","isWeekend","dayNum","weekday","defaultValue","hour","minute","hours","toDateOnly","selectCurrentTime","selectDateTime","isDateDisabled","minutes","updateMonthData","num","dateInTime","getTime","disabledDatesInTime","disabledDates","minDate","maxDate","close","ChangeDetectorRef","isInteger","isFinite","floor","inputElValueChanged","setInputElDateValue","showDatetimePicker","ng2DatetimePickerEl","clickedDatetimePicker","timeOnly","minHour","maxHour","showCloseButton","closeOnSelect","styleDatetimePicker","dateSelected","hideDatetimePicker","stopPropagation","keyEventListener","e","normalizeInput","formDir","sub","updateDatepicker","wrapper","elementIn","containerEl","parentNode","thisElBCR","transition","visibility","thisElBcr","ng2DatetimePickerElBcr","arg","__WEBPACK_EXTERNAL_MODULE_29__","bicycling_layer_1","BicyclingLayer","navigator_geolocation_1","NavigatorGeolocation","option_builder_1","OptionBuilder","config_1","NG_MAP_CONFIG_TOKEN","ng2_map_component_1","info_window_1","InfoWindow","circle_1","Circle","data_layer_1","DataLayer","directions_renderer_1","DirectionsRenderer","drawing_manager_1","DrawingManager","geo_coder_1","GeoCoder","ground_overlay_1","GroundOverlay","heatmap_layer_1","HeatmapLayer","kml_layer_1","KmlLayer","marker_1","Marker","Ng2Map","places_auto_complete_1","PlacesAutoComplete","polygon_1","Polygon","polyline_1","Polyline","street_view_panorama_1","StreetViewPanorama","traffic_layer_1","TrafficLayer","transit_layer_1","TransitLayer","ng2_map_module_1","base_map_directive_1","INPUTS","OUTPUTS","ng2MapComp","inputs","BaseMapDirective","ng2MapComponent","mapObjectName","initialized$","_subscriptions","ng2Map","optionBuilder","output","mapIdledOnce","initialize","mapReady$","objectOptions","googlizeAllInputs","center","libraryName","mapObject","google","maps","setMap","setObjectEvents","addToMapObjectGroup","updateGoogleObject","subscription","removeFromMapObjectGroup","clearListeners","Subject_1","util_1","zone","geolocation","geoCoder","config","mapOptions","inputChanges$","infoWindows","componentFn","initializeMap","mapInitPath","addGoogleMapsApi","run","script","src","zoom","setCenter","addListener","debounceTime","geocode","address","results","geometry","LatLng","getCurrentPosition","latLng","coords","latitude","longitude","openInfoWindow","anchor","open","groupName","toCamelCase","NgZone","definedInputs","userInputs","onlyOptionsGiven","input","googlize","googlizeMultiple","getJSONParsed","getAnyMapObject","getAnyMapConstant","getDateObject","LatLngBounds","getMapIcons","getLatLng","getMarkerIcon","getMapControlOption","getJSON","newOptions","capitalizedKey","charAt","toUpperCase","controlOptions","newControlOptions","str","MapTypeId","objName","ControlPosition","icon","SymbolPath","Point","Size","jsonize","parse","$1","re","letter","geocode$","geocoder","Geocoder","GeocoderStatus","OK","geoLocationOptions","timeout","getCurrentPosition$","navigator","object","setMethodName","definedEvents","thisObj","prefix","definedEvent","eventName","param","innerHTML","infoWindow","html","setContent","loadGeoJson","directionsService","DirectionsService","directionsRenderer","showDirections","directionsRequest","route","response","DirectionsStatus","setDirections","setPosition","place_changed","autocomplete","places","Autocomplete","place","custom_marker_1","COMPONENTS_DIRECTIVES","CustomMarker","useValue","getCustomMarkerOverlayView","htmlEl","CustomMarkerOverlayView","visible","onAdd","getPanes","overlayMouseTarget","draw","setZIndex","setVisible","onRemove","_setPosition","posPixel","getProjection","fromLatLngToDivPixel","round","offsetWidth","y","offsetHeight","OverlayView","ng2_popup_component_1","ng2_message_popup_component_1","ng2_popup_module_1","componentResolver","overlayManager","overlayEl","marker","overlay","Ng2Overlay","windowOverlay","register","opened","classNames","closeButton","popupOptions","popup","read","Ng2OverlayDirective","ng2_overlay_manager_1","ng2_overlay_directive_1","ng2_overlay_module_1","ng2_util_1","getPositionProperty","positionIt","inside","positionItInside","positionItOutside","positionStr","vertical","horizontal","insideStr","assign","backgroundColor","right","parentEl","offsetTop","offsetLeft","LEFT","justifyContent","CENTER","RIGHT","alignItems","MIDDLE","pointerEvents","elToPosition","children","TOP","BOTTOM","CURSOR","mousePos","Ng2Util","getMousePositionInElement","getDocumentPosition","oElement","posX","posY","offsetParent","elPos","pageX","pageY","clientX","clientY","body","scrollLeft","documentElement","scrollTop","overlays","wrapItWithOverlayTag","registerToOverlayManager","overlayPosition","overlayOf","ng2_menu_directive_1","Ng2MenuDirective","ng2_menu_module_1","ng2_parallax_scroll_directive_1","Ng2ParallaxScrollDirective","ng2_parallax_scroll_module_1","viewContainer","img","onload","imgOrgWidth","imgOrgHeight","log","setParallaxImage","updateParallaxImage","imgSize","overflow","imgWrapperEl","elRect","imgRect","imgDist","windowBottom","percentScrolled","parallax","ng2_sticky_directive_1","Ng2StickyDirective","ng2_sticky_module_1","stickyOffsetTop","scrollHandler","dynProps","parentRect","bodyRect","original","float","marginRight","marginLeft","marginTop","marginBottom","boundingClientRect","floatAdjustment","fillerEl","removeChild","boxSizing","stickyAfter","cetStickyAfterEl","allowedPositions","parentElPosition","computedStyle","attach","detach","removeEventListener","scroll_to_1","scrollTo","element_visible_1","elementVisible","computed_style_1","outer_width_1","outerWidth","outer_height_1","outerHeight","html_code_pipe_1","HtmlCodePipe","javascript_code_pipe_1","JavascriptCodePipe","ng2_utils_module_1","parentSelector","distance","targetEl","targetOffsetTop","targetOffsetLeft","parentElStyle","getComputedStyle","scrollContainerEl","currentScrollTop","currentScrollLeft","targetRect","step","ceil","scrollProp","loop","innerElement","outerElement","adjustment","innerEl","outerEl","innerRect","bottomAdjustment","innerWidth","outerRect","defaultView","ownerDocument","outerRectBorderTopWidth","getPropertyValue","outerRectBorderLeftWidth","topVisible","bottomVisible","leftVisible","rightVisible","styleProp","oldLeft","oldRsLeft","transform","tagsIncludeExclude","tagsInclude","tagsExclude","tag","regEx","Pipe","js_beautify","get_beautify","css_beautify","html_beautify","beautify","js","css","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","TypeError","js_source_text","in_array","what","trim","s","ltrim","sanitizeOperatorPosition","opPosition","OPERATOR_POSITION","before_newline","validPositionValues","Beautifier","create_flags","flags_base","mode","next_indent_level","indentation_level","just_added_newline","line_indent_level","next_flags","last_text","last_word","declaration_statement","declaration_assignment","multiline_frame","inline_frame","if_block","else_block","do_block","do_while","import_block","in_case_statement","in_case","case_body","start_line_index","get_line_number","ternary_depth","handle_token","local_token","newlines","keep_whitespace","keep_array_indentation","is_array","flags","print_newline","max_preserve_newlines","preserve_newlines","j","current_token","handlers","split_linebreaks","acorn","allLineBreaks","out","idx","substring","allow_wrap_or_preserved_newline","force_linewrap","shouldPreserveOrForce","wanted_newline","operatorLogicApplies","Tokenizer","positionable_operators","text","shouldPrintOperatorNewline","operator_position","OPERATOR_POSITION_BEFORE_OR_PRESERVE","wrap_line_length","last_type","newline_restricted_tokens","proposed_line_length","current_line","get_character_count","space_before_token","force_newline","preserve_statement_flags","MODE","Statement","restore_mode","add_new_line","print_token_line_indentation","whitespace_before","set_indent","print_token","printable_token","raw","add_raw_token","comma_first","previous_line","last","popped","is_empty","add_token","indent","deindent","set_mode","flag_store","previous_flags","ArrayLiteral","is_expression","Expression","ForInitializer","Conditional","remove_redundant_indentation","start_of_object_property","ObjectLiteral","start_of_statement","BlockStatement","last_last_text","all_lines_start_with","lines","line","each_line_matches_indent","len","is_special_word","word","get_token","token_pos","tokens","handle_start_expr","next_mode","line_starters","space_in_paren","space_after_anon_function","space_before_conditional","handle_end_expr","space_in_empty_paren","handle_start_block","next_token","second_token","empty_braces","comments_before","empty_anonymous_function","brace_style","check_token","handle_end_block","handle_word","jslint_happy","just_added_blankline","handle_semicolon","handle_string","handle_equals","handle_comma","handle_operator","space_before","space_after","in_ternary","isGeneratorAsterisk","isUnary","isColon","isTernaryColon","isOtherColon","after_newline","preserve_newline","handle_block_comment","preserve","test_output_raw","newline","javadoc","starless","lastIndent","lastIndentLength","handle_comment","handle_dot","break_chained_methods","handle_unknown","handle_eof","indent_string","baseIndentString","TK_START_EXPR","TK_END_EXPR","TK_START_BLOCK","TK_END_BLOCK","TK_WORD","TK_RESERVED","TK_SEMICOLON","TK_STRING","TK_EQUALS","TK_OPERATOR","TK_COMMA","TK_BLOCK_COMMENT","TK_COMMENT","TK_DOT","TK_UNKNOWN","TK_EOF","braces_on_own_line","indent_size","indent_char","eol","unescape_strings","e4x","end_with_newline","indent_with_tabs","lineBreak","preindent_index","get_local_token","sweet_code","tokenizer","tokenize","get_code","OutputLine","_character_count","_indent_count","_items","_empty","level","baseIndentLength","indent_length","remove_indent","result","indent_cache","add_outputline","token","add_space_before_token","frame","output_length","eat_newlines","input_string","opts","get_directives","directives_block_pattern","directive_pattern","lastIndex","directive_match","exec","tokenize_next","resulting_string","whitespace_on_this_line","n_newlines","whitespace_before_token","last_token","Token","whitespace","peek","digit","testChar","allow_decimal","allow_e","local_digit","digit_bin","digit_oct","digit_hex","back","isIdentifierStart","peekCharCode","hasNext","isIdentifierChar","reserved_words","comment_match","comment","block_comment_pattern","ignore","directives_end_ignore_pattern","comment_pattern","startXmlRegExp","sep","esc","has_char_escapes","in_char_class","xmlRegExp","xmlStr","rootTag","isCurlyRoot","depth","isEndTag","isSingletonTag","parse_string","allow_unescaped_newlines","start_sub","current_char","unescape_string","sharp","template_match","template_pattern","in_html_comment","punct","escaped","input_scan","InputScanner","matched","fromCharCode","token_values","open_stack","comments","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","nonASCIIidentifier","code","_input","_input_length","_position","charCodeAt","pattern_match","beautifier","source_text","ch","pos","skipWhitespace","prev_pos","eatWhitespace","eatString","endChars","start","peekString","endChar","whiteRe","eatComment","singleLine","lookBack","foundNestedPseudoClass","openParen","indentLevel","basebaseIndentString","singleIndent","outdent","indentSize","indentCharacter","selectorSeparatorNewline","selector_separator_newline","newline_between_rules","space_around_combinator","space_around_selector_separator","parenLevel","nestedLevel","print","singleSpace","newLine","_lastCharWhitespace","keepWhitespace","preserveSingleSpace","isAfterSpace","insideRule","insidePropertyValue","enteringConditionalGroup","top_ch","last_top_ch","isAfterNewline","header","variableOrRule","NESTED_AT_RULE","CONDITIONAL_GROUP_RULE","sweetCode","@page","@font-face","@keyframes","@media","@supports","@document","rtrim","style_html","html_source","Parser","tokenMatcher","newToken","doesNotMatch","current_mode","tags","parentcount","parent1","tag_type","token_text","token_type","indent_content","indent_inner_html","indent_body_inner_html","indent_head_inner_html","Utils","single_token","extra_liners","is_whitespace","n","traverse_whitespace","input_char","space_or_wrap","content","line_char_count","print_indentation","get_content","indent_handlebars","peek3","get_tag","get_contents_to","reg_match","reg_array","end_script","record_tag","indent_level","retrieve_tag","temp_parent","indent_to_tag","tag_start","tag_end","tag_start_char","space","first_attr","orig_pos","orig_line_char_count","get_unformatted","wrapped","indentAttrs","wrap_attributes","count","wrap_attributes_indent_size","indent_character","get_comment","tag_index","tag_offset","tag_complete","tag_check","is_unformatted","unformatted","search","start_pos","orig_tag","delimiterMatcher","tag_name_type","get_full_indent","next_tag","printer","js_source","force","print_token_raw","unindent","multi_parser","max_char","t","tag_name","tag_extracted_from_last_output","foundIfOnCurrentLine","lastCheckedOutput","_beautifier","script_indent_level","indent_scripts","indentation","Child_options","child_options","white","_level","reindent","requireamd","ng2_utils_directive_1","Ng2UtilsDirective","ng2_tab_component_1","Ng2TabComponent","ng2_tab_module_1","selectedIndexClass","selectedContentsClass","indexEls","querySelectorAll","contentsEls","selectTab","selectedIndex","getAttribute","removeClass","addClass","ng2_tooltip_directive_1","Ng2TooltipDirective","ng2_tooltip_overlay_module_1","getTooltipOverlay","tooltip","showTooltip","hideTooltip","tooltipEl","divEl","random","(mouseover)","(mouseout)","ng2_sortable_directive_1","Ng2SortableDirective","ng2_sortable_module_1","orderChanged","dragStartHandler","draggingEl","dragHandler","deltaY","newElDragEnter","elementFromPoint","elDragEnter","dragEndHandler","emitOrderChanged","ulEl","liEls","liEl","mc","Hammer","direction","DIRECTION_ALL","on","orders","Ng2OverlayManager_1","ng2_scrollable_directive_1","ng2_scrollable_module_1","sections","childEl","thisElStyle","elToListenScroll","listenScrollOn","elScrolledToVisible","section","__WEBPACK_EXTERNAL_MODULE_1__","ng2_collapsable_component_1","Ng2CollapsableComponent","ng2_collapsable_module_1","ng2_infinite_list_directive_1","Ng2InfiniteListDirective","endVisible","scrollListener","endEl","70","71","72","httpCache","NavigationStart","currentUrl","repositories","currentRepoUrl","getCurrentRepoUrl","repo","currentRepo","getContributors","contributors","repoUrl","73","Rx_1","storage","cached","getItem","Observable","of","setItem","359","MemoryStorage","removeItem","clear","preference","hasStorage","localStorage","sessionStorage","strValue","360","components_route_1","routes","ComponentsRoutes","redirectTo","pathMatch","RouterModule","361","362","foo","bar","scroll","363","title","date1","date1DefaultValue","date2","date2DisabledDates","date2MinDate","date2MaxDate","date3","364","positions","clicked","lat","getPosition","lng","showRandomMarkers","randomLat","randomLng","365","set1","limit","endOfList","loadingInProgress","set2","loadMore","366","367","368","CustomPopupComponent","ngafterviewinit","openPopup","size","buttons","CANCEL","openCustomPopup","369","hid","wid","370","371","372","373","arrayOfStrings","arrayOfKeyValues","arrayOfKeyValues2","googleGeoCode","374","375","376","377"],"mappings":"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","file":"js/app.js","sourcesContent":["webpackJsonp([0],{\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {\"use strict\";\n\tvar core_1 = __webpack_require__(2);\n\tvar platform_browser_dynamic_1 = __webpack_require__(20);\n\tvar app_module_1 = __webpack_require__(24);\n\t// depending on the env mode, enable prod mode or add debugging modules\n\tif (process.env.ENV === 'build') {\n\t    core_1.enableProdMode();\n\t}\n\tfunction main() {\n\t    return platform_browser_dynamic_1.platformBrowserDynamic().bootstrapModule(app_module_1.AppModule);\n\t}\n\texports.main = main;\n\tif (document.readyState === 'complete') {\n\t    main();\n\t}\n\telse {\n\t    document.addEventListener('DOMContentLoaded', main);\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ },\n\n/***/ 24:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(2);\n\tvar platform_browser_1 = __webpack_require__(22);\n\tvar forms_1 = __webpack_require__(25);\n\tvar http_1 = __webpack_require__(29);\n\tvar common_1 = __webpack_require__(23);\n\tvar app_component_1 = __webpack_require__(30);\n\tvar drawer_component_1 = __webpack_require__(71);\n\tvar repo_info_component_1 = __webpack_require__(72);\n\tvar http_cache_1 = __webpack_require__(73);\n\tvar ng2_storage_1 = __webpack_require__(359);\n\tvar app_routes_1 = __webpack_require__(360);\n\tvar getting_started_component_1 = __webpack_require__(376);\n\tvar accordion_component_1 = __webpack_require__(362);\n\tvar datetime_picker_component_1 = __webpack_require__(363);\n\tvar google_map_component_1 = __webpack_require__(364);\n\tvar infinite_list_component_1 = __webpack_require__(365);\n\tvar menu_component_1 = __webpack_require__(374);\n\tvar overlay_component_1 = __webpack_require__(366);\n\tvar parallax_scroll_component_1 = __webpack_require__(367);\n\tvar popup_component_1 = __webpack_require__(368);\n\tvar scrollable_component_1 = __webpack_require__(369);\n\tvar sticky_component_1 = __webpack_require__(370);\n\tvar tab_component_1 = __webpack_require__(371);\n\tvar tooltip_component_1 = __webpack_require__(372);\n\tvar auto_complete_component_1 = __webpack_require__(373);\n\tvar sortable_component_1 = __webpack_require__(375);\n\tvar ng2_ui_1 = __webpack_require__(61);\n\tvar ng2_utils_1 = __webpack_require__(377);\n\tvar AppModule = (function () {\n\t    function AppModule() {\n\t    }\n\t    return AppModule;\n\t}());\n\tAppModule = __decorate([\n\t    core_1.NgModule({\n\t        imports: [\n\t            platform_browser_1.BrowserModule,\n\t            forms_1.FormsModule,\n\t            http_1.HttpModule,\n\t            app_routes_1.APP_ROUTER_PROVIDERS,\n\t            ng2_ui_1.Ng2UIModule,\n\t            ng2_ui_1.Ng2MapModule['forRoot']({\n\t                apiUrl: 'https://maps.google.com/maps/api/js?key=AIzaSyCbMGRUwcqKjlYX4h4-P6t-xcDryRYLmCM' +\n\t                    '&libraries=visualization,places,drawing',\n\t            }),\n\t            ng2_utils_1.Ng2UtilsModule\n\t        ],\n\t        declarations: [\n\t            app_component_1.AppComponent,\n\t            drawer_component_1.DrawerComponent,\n\t            repo_info_component_1.RepoInfoComponent,\n\t            getting_started_component_1.GettingStartedComponent,\n\t            accordion_component_1.AccordionComponent,\n\t            auto_complete_component_1.AutoCompleteComponent,\n\t            datetime_picker_component_1.DatetimePickerComponent,\n\t            google_map_component_1.GoogleMapComponent,\n\t            infinite_list_component_1.InfiniteListComponent,\n\t            menu_component_1.MenuComponent,\n\t            overlay_component_1.OverlayComponent,\n\t            parallax_scroll_component_1.ParallaxScrollComponent,\n\t            popup_component_1.PopupComponent,\n\t            scrollable_component_1.ScrollableComponent,\n\t            sticky_component_1.StickyComponent,\n\t            tab_component_1.TabComponent,\n\t            tooltip_component_1.TooltipComponent,\n\t            sortable_component_1.SortableComponent\n\t        ],\n\t        providers: [\n\t            http_cache_1.HttpCache,\n\t            ng2_storage_1.Ng2Storage,\n\t            { provide: common_1.LocationStrategy, useClass: common_1.HashLocationStrategy }\n\t        ],\n\t        bootstrap: [app_component_1.AppComponent]\n\t    }),\n\t    __metadata(\"design:paramtypes\", [])\n\t], AppModule);\n\texports.AppModule = AppModule;\n\n\n/***/ },\n\n/***/ 25:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @license Angular v2.3.0\n\t * (c) 2010-2016 Google, Inc. https://angular.io/\n\t * License: MIT\n\t */\n\t(function (global, factory) {\n\t     true ? factory(exports, __webpack_require__(2), __webpack_require__(26), __webpack_require__(3), __webpack_require__(4), __webpack_require__(27)) :\n\t    typeof define === 'function' && define.amd ? define(['exports', '@angular/core', 'rxjs/operator/toPromise', 'rxjs/Subject', 'rxjs/Observable', 'rxjs/observable/fromPromise'], factory) :\n\t    (factory((global.ng = global.ng || {}, global.ng.forms = global.ng.forms || {}),global.ng.core,global.Rx.Observable.prototype,global.Rx,global.Rx,global.Rx.Observable));\n\t}(this, function (exports,_angular_core,rxjs_operator_toPromise,rxjs_Subject,rxjs_Observable,rxjs_observable_fromPromise) { 'use strict';\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    /**\n\t     *  Base class for control directives.\n\t      * *\n\t      * Only used internally in the forms module.\n\t      * *\n\t     * @abstract\n\t     */\n\t    var AbstractControlDirective = (function () {\n\t        function AbstractControlDirective() {\n\t        }\n\t        Object.defineProperty(AbstractControlDirective.prototype, \"control\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { throw new Error('unimplemented'); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlDirective.prototype, \"value\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this.control ? this.control.value : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlDirective.prototype, \"valid\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this.control ? this.control.valid : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlDirective.prototype, \"invalid\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this.control ? this.control.invalid : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlDirective.prototype, \"pending\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this.control ? this.control.pending : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlDirective.prototype, \"errors\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this.control ? this.control.errors : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlDirective.prototype, \"pristine\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this.control ? this.control.pristine : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlDirective.prototype, \"dirty\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this.control ? this.control.dirty : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlDirective.prototype, \"touched\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this.control ? this.control.touched : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlDirective.prototype, \"untouched\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this.control ? this.control.untouched : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlDirective.prototype, \"disabled\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this.control ? this.control.disabled : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlDirective.prototype, \"enabled\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this.control ? this.control.enabled : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlDirective.prototype, \"statusChanges\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this.control ? this.control.statusChanges : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlDirective.prototype, \"valueChanges\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this.control ? this.control.valueChanges : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlDirective.prototype, \"path\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @param {?=} value\n\t         * @return {?}\n\t         */\n\t        AbstractControlDirective.prototype.reset = function (value) {\n\t            if (value === void 0) { value = undefined; }\n\t            if (this.control)\n\t                this.control.reset(value);\n\t        };\n\t        /**\n\t         * @param {?} errorCode\n\t         * @param {?=} path\n\t         * @return {?}\n\t         */\n\t        AbstractControlDirective.prototype.hasError = function (errorCode, path) {\n\t            if (path === void 0) { path = null; }\n\t            return this.control ? this.control.hasError(errorCode, path) : false;\n\t        };\n\t        /**\n\t         * @param {?} errorCode\n\t         * @param {?=} path\n\t         * @return {?}\n\t         */\n\t        AbstractControlDirective.prototype.getError = function (errorCode, path) {\n\t            if (path === void 0) { path = null; }\n\t            return this.control ? this.control.getError(errorCode, path) : null;\n\t        };\n\t        return AbstractControlDirective;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$1 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     *  A directive that contains multiple {@link NgControl}s.\n\t      * *\n\t      * Only used by the forms module.\n\t      * *\n\t     */\n\t    var ControlContainer = (function (_super) {\n\t        __extends$1(ControlContainer, _super);\n\t        function ControlContainer() {\n\t            _super.apply(this, arguments);\n\t        }\n\t        Object.defineProperty(ControlContainer.prototype, \"formDirective\", {\n\t            /**\n\t             *  Get the form to which this container belongs.\n\t             * @return {?}\n\t             */\n\t            get: function () { return null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ControlContainer.prototype, \"path\", {\n\t            /**\n\t             *  Get the path to this container.\n\t             * @return {?}\n\t             */\n\t            get: function () { return null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return ControlContainer;\n\t    }(AbstractControlDirective));\n\t\n\t    /**\n\t     * @param {?} obj\n\t     * @return {?}\n\t     */\n\t    function isPresent(obj) {\n\t        return obj != null;\n\t    }\n\t    /**\n\t     * @param {?} obj\n\t     * @return {?}\n\t     */\n\t    function isBlank(obj) {\n\t        return obj == null;\n\t    }\n\t    /**\n\t     * @param {?} a\n\t     * @param {?} b\n\t     * @return {?}\n\t     */\n\t    function looseIdentical(a, b) {\n\t        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n\t    }\n\t    /**\n\t     * @param {?} o\n\t     * @return {?}\n\t     */\n\t    function isJsObject(o) {\n\t        return o !== null && (typeof o === 'function' || typeof o === 'object');\n\t    }\n\t    /**\n\t     * @param {?} obj\n\t     * @return {?}\n\t     */\n\t    function isPrimitive(obj) {\n\t        return !isJsObject(obj);\n\t    }\n\t\n\t    /**\n\t     *  Wraps Javascript Objects\n\t     */\n\t    var StringMapWrapper = (function () {\n\t        function StringMapWrapper() {\n\t        }\n\t        /**\n\t         * @param {?} m1\n\t         * @param {?} m2\n\t         * @return {?}\n\t         */\n\t        StringMapWrapper.merge = function (m1, m2) {\n\t            var /** @type {?} */ m = {};\n\t            for (var _i = 0, _a = Object.keys(m1); _i < _a.length; _i++) {\n\t                var k = _a[_i];\n\t                m[k] = m1[k];\n\t            }\n\t            for (var _b = 0, _c = Object.keys(m2); _b < _c.length; _b++) {\n\t                var k = _c[_b];\n\t                m[k] = m2[k];\n\t            }\n\t            return m;\n\t        };\n\t        /**\n\t         * @param {?} m1\n\t         * @param {?} m2\n\t         * @return {?}\n\t         */\n\t        StringMapWrapper.equals = function (m1, m2) {\n\t            var /** @type {?} */ k1 = Object.keys(m1);\n\t            var /** @type {?} */ k2 = Object.keys(m2);\n\t            if (k1.length != k2.length) {\n\t                return false;\n\t            }\n\t            for (var /** @type {?} */ i = 0; i < k1.length; i++) {\n\t                var /** @type {?} */ key = k1[i];\n\t                if (m1[key] !== m2[key]) {\n\t                    return false;\n\t                }\n\t            }\n\t            return true;\n\t        };\n\t        return StringMapWrapper;\n\t    }());\n\t    var ListWrapper = (function () {\n\t        function ListWrapper() {\n\t        }\n\t        /**\n\t         * @param {?} arr\n\t         * @param {?} condition\n\t         * @return {?}\n\t         */\n\t        ListWrapper.findLast = function (arr, condition) {\n\t            for (var /** @type {?} */ i = arr.length - 1; i >= 0; i--) {\n\t                if (condition(arr[i])) {\n\t                    return arr[i];\n\t                }\n\t            }\n\t            return null;\n\t        };\n\t        /**\n\t         * @param {?} list\n\t         * @param {?} items\n\t         * @return {?}\n\t         */\n\t        ListWrapper.removeAll = function (list, items) {\n\t            for (var /** @type {?} */ i = 0; i < items.length; ++i) {\n\t                var /** @type {?} */ index = list.indexOf(items[i]);\n\t                if (index > -1) {\n\t                    list.splice(index, 1);\n\t                }\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} list\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        ListWrapper.remove = function (list, el) {\n\t            var /** @type {?} */ index = list.indexOf(el);\n\t            if (index > -1) {\n\t                list.splice(index, 1);\n\t                return true;\n\t            }\n\t            return false;\n\t        };\n\t        /**\n\t         * @param {?} a\n\t         * @param {?} b\n\t         * @return {?}\n\t         */\n\t        ListWrapper.equals = function (a, b) {\n\t            if (a.length != b.length)\n\t                return false;\n\t            for (var /** @type {?} */ i = 0; i < a.length; ++i) {\n\t                if (a[i] !== b[i])\n\t                    return false;\n\t            }\n\t            return true;\n\t        };\n\t        /**\n\t         * @param {?} list\n\t         * @return {?}\n\t         */\n\t        ListWrapper.flatten = function (list) {\n\t            return list.reduce(function (flat, item) {\n\t                var /** @type {?} */ flatItem = Array.isArray(item) ? ListWrapper.flatten(item) : item;\n\t                return ((flat)).concat(flatItem);\n\t            }, []);\n\t        };\n\t        return ListWrapper;\n\t    }());\n\t\n\t    var /** @type {?} */ isPromise = _angular_core.__core_private__.isPromise;\n\t\n\t    /**\n\t     * @param {?} value\n\t     * @return {?}\n\t     */\n\t    function isEmptyInputValue(value) {\n\t        return value == null || typeof value === 'string' && value.length === 0;\n\t    }\n\t    /**\n\t     * Providers for validators to be used for {@link FormControl}s in a form.\n\t     *\n\t     * Provide this using `multi: true` to add validators.\n\t     *\n\t     * ### Example\n\t     *\n\t     * {@example core/forms/ts/ng_validators/ng_validators.ts region='ng_validators'}\n\t     * @stable\n\t     */\n\t    var /** @type {?} */ NG_VALIDATORS = new _angular_core.OpaqueToken('NgValidators');\n\t    /**\n\t     * Providers for asynchronous validators to be used for {@link FormControl}s\n\t     * in a form.\n\t     *\n\t     * Provide this using `multi: true` to add validators.\n\t     *\n\t     * See {@link NG_VALIDATORS} for more details.\n\t     *\n\t     * @stable\n\t     */\n\t    var /** @type {?} */ NG_ASYNC_VALIDATORS = new _angular_core.OpaqueToken('NgAsyncValidators');\n\t    /**\n\t     *  Provides a set of validators used by form controls.\n\t      * *\n\t      * A validator is a function that processes a {@link FormControl} or collection of\n\t      * controls and returns a map of errors. A null map means that validation has passed.\n\t      * *\n\t      * ### Example\n\t      * *\n\t      * ```typescript\n\t      * var loginControl = new FormControl(\"\", Validators.required)\n\t      * ```\n\t      * *\n\t     */\n\t    var Validators = (function () {\n\t        function Validators() {\n\t        }\n\t        /**\n\t         *  Validator that requires controls to have a non-empty value.\n\t         * @param {?} control\n\t         * @return {?}\n\t         */\n\t        Validators.required = function (control) {\n\t            return isEmptyInputValue(control.value) ? { 'required': true } : null;\n\t        };\n\t        /**\n\t         *  Validator that requires controls to have a value of a minimum length.\n\t         * @param {?} minLength\n\t         * @return {?}\n\t         */\n\t        Validators.minLength = function (minLength) {\n\t            return function (control) {\n\t                if (isEmptyInputValue(control.value)) {\n\t                    return null; // don't validate empty values to allow optional controls\n\t                }\n\t                var /** @type {?} */ length = typeof control.value === 'string' ? control.value.length : 0;\n\t                return length < minLength ?\n\t                    { 'minlength': { 'requiredLength': minLength, 'actualLength': length } } :\n\t                    null;\n\t            };\n\t        };\n\t        /**\n\t         *  Validator that requires controls to have a value of a maximum length.\n\t         * @param {?} maxLength\n\t         * @return {?}\n\t         */\n\t        Validators.maxLength = function (maxLength) {\n\t            return function (control) {\n\t                var /** @type {?} */ length = typeof control.value === 'string' ? control.value.length : 0;\n\t                return length > maxLength ?\n\t                    { 'maxlength': { 'requiredLength': maxLength, 'actualLength': length } } :\n\t                    null;\n\t            };\n\t        };\n\t        /**\n\t         *  Validator that requires a control to match a regex to its value.\n\t         * @param {?} pattern\n\t         * @return {?}\n\t         */\n\t        Validators.pattern = function (pattern) {\n\t            if (!pattern)\n\t                return Validators.nullValidator;\n\t            var /** @type {?} */ regex;\n\t            var /** @type {?} */ regexStr;\n\t            if (typeof pattern === 'string') {\n\t                regexStr = \"^\" + pattern + \"$\";\n\t                regex = new RegExp(regexStr);\n\t            }\n\t            else {\n\t                regexStr = pattern.toString();\n\t                regex = pattern;\n\t            }\n\t            return function (control) {\n\t                if (isEmptyInputValue(control.value)) {\n\t                    return null; // don't validate empty values to allow optional controls\n\t                }\n\t                var /** @type {?} */ value = control.value;\n\t                return regex.test(value) ? null :\n\t                    { 'pattern': { 'requiredPattern': regexStr, 'actualValue': value } };\n\t            };\n\t        };\n\t        /**\n\t         *  No-op validator.\n\t         * @param {?} c\n\t         * @return {?}\n\t         */\n\t        Validators.nullValidator = function (c) { return null; };\n\t        /**\n\t         *  Compose multiple validators into a single function that returns the union\n\t          * of the individual error maps.\n\t         * @param {?} validators\n\t         * @return {?}\n\t         */\n\t        Validators.compose = function (validators) {\n\t            if (!validators)\n\t                return null;\n\t            var /** @type {?} */ presentValidators = validators.filter(isPresent);\n\t            if (presentValidators.length == 0)\n\t                return null;\n\t            return function (control) {\n\t                return _mergeErrors(_executeValidators(control, presentValidators));\n\t            };\n\t        };\n\t        /**\n\t         * @param {?} validators\n\t         * @return {?}\n\t         */\n\t        Validators.composeAsync = function (validators) {\n\t            if (!validators)\n\t                return null;\n\t            var /** @type {?} */ presentValidators = validators.filter(isPresent);\n\t            if (presentValidators.length == 0)\n\t                return null;\n\t            return function (control) {\n\t                var /** @type {?} */ promises = _executeAsyncValidators(control, presentValidators).map(_convertToPromise);\n\t                return Promise.all(promises).then(_mergeErrors);\n\t            };\n\t        };\n\t        return Validators;\n\t    }());\n\t    /**\n\t     * @param {?} obj\n\t     * @return {?}\n\t     */\n\t    function _convertToPromise(obj) {\n\t        return isPromise(obj) ? obj : rxjs_operator_toPromise.toPromise.call(obj);\n\t    }\n\t    /**\n\t     * @param {?} control\n\t     * @param {?} validators\n\t     * @return {?}\n\t     */\n\t    function _executeValidators(control, validators) {\n\t        return validators.map(function (v) { return v(control); });\n\t    }\n\t    /**\n\t     * @param {?} control\n\t     * @param {?} validators\n\t     * @return {?}\n\t     */\n\t    function _executeAsyncValidators(control, validators) {\n\t        return validators.map(function (v) { return v(control); });\n\t    }\n\t    /**\n\t     * @param {?} arrayOfErrors\n\t     * @return {?}\n\t     */\n\t    function _mergeErrors(arrayOfErrors) {\n\t        var /** @type {?} */ res = arrayOfErrors.reduce(function (res, errors) {\n\t            return isPresent(errors) ? StringMapWrapper.merge(res, errors) : res;\n\t        }, {});\n\t        return Object.keys(res).length === 0 ? null : res;\n\t    }\n\t\n\t    /**\n\t     * Used to provide a {@link ControlValueAccessor} for form controls.\n\t     *\n\t     * See {@link DefaultValueAccessor} for how to implement one.\n\t     * @stable\n\t     */\n\t    var /** @type {?} */ NG_VALUE_ACCESSOR = new _angular_core.OpaqueToken('NgValueAccessor');\n\t\n\t    var /** @type {?} */ CHECKBOX_VALUE_ACCESSOR = {\n\t        provide: NG_VALUE_ACCESSOR,\n\t        useExisting: _angular_core.forwardRef(function () { return CheckboxControlValueAccessor; }),\n\t        multi: true,\n\t    };\n\t    /**\n\t     *  The accessor for writing a value and listening to changes on a checkbox input element.\n\t      * *\n\t      * ### Example\n\t      * ```\n\t      * <input type=\"checkbox\" name=\"rememberLogin\" ngModel>\n\t      * ```\n\t      * *\n\t      * @stable\n\t     */\n\t    var CheckboxControlValueAccessor = (function () {\n\t        /**\n\t         * @param {?} _renderer\n\t         * @param {?} _elementRef\n\t         */\n\t        function CheckboxControlValueAccessor(_renderer, _elementRef) {\n\t            this._renderer = _renderer;\n\t            this._elementRef = _elementRef;\n\t            this.onChange = function (_) { };\n\t            this.onTouched = function () { };\n\t        }\n\t        /**\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        CheckboxControlValueAccessor.prototype.writeValue = function (value) {\n\t            this._renderer.setElementProperty(this._elementRef.nativeElement, 'checked', value);\n\t        };\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        CheckboxControlValueAccessor.prototype.registerOnChange = function (fn) { this.onChange = fn; };\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        CheckboxControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n\t        /**\n\t         * @param {?} isDisabled\n\t         * @return {?}\n\t         */\n\t        CheckboxControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n\t            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n\t        };\n\t        CheckboxControlValueAccessor.decorators = [\n\t            { type: _angular_core.Directive, args: [{\n\t                        selector: 'input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]',\n\t                        host: { '(change)': 'onChange($event.target.checked)', '(blur)': 'onTouched()' },\n\t                        providers: [CHECKBOX_VALUE_ACCESSOR]\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        CheckboxControlValueAccessor.ctorParameters = function () { return [\n\t            { type: _angular_core.Renderer, },\n\t            { type: _angular_core.ElementRef, },\n\t        ]; };\n\t        return CheckboxControlValueAccessor;\n\t    }());\n\t\n\t    var /** @type {?} */ DEFAULT_VALUE_ACCESSOR = {\n\t        provide: NG_VALUE_ACCESSOR,\n\t        useExisting: _angular_core.forwardRef(function () { return DefaultValueAccessor; }),\n\t        multi: true\n\t    };\n\t    /**\n\t     *  The default accessor for writing a value and listening to changes that is used by the\n\t      * {@link NgModel}, {@link FormControlDirective}, and {@link FormControlName} directives.\n\t      * *\n\t      * ### Example\n\t      * ```\n\t      * <input type=\"text\" name=\"searchQuery\" ngModel>\n\t      * ```\n\t      * *\n\t      * @stable\n\t     */\n\t    var DefaultValueAccessor = (function () {\n\t        /**\n\t         * @param {?} _renderer\n\t         * @param {?} _elementRef\n\t         */\n\t        function DefaultValueAccessor(_renderer, _elementRef) {\n\t            this._renderer = _renderer;\n\t            this._elementRef = _elementRef;\n\t            this.onChange = function (_) { };\n\t            this.onTouched = function () { };\n\t        }\n\t        /**\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        DefaultValueAccessor.prototype.writeValue = function (value) {\n\t            var /** @type {?} */ normalizedValue = value == null ? '' : value;\n\t            this._renderer.setElementProperty(this._elementRef.nativeElement, 'value', normalizedValue);\n\t        };\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        DefaultValueAccessor.prototype.registerOnChange = function (fn) { this.onChange = fn; };\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        DefaultValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n\t        /**\n\t         * @param {?} isDisabled\n\t         * @return {?}\n\t         */\n\t        DefaultValueAccessor.prototype.setDisabledState = function (isDisabled) {\n\t            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n\t        };\n\t        DefaultValueAccessor.decorators = [\n\t            { type: _angular_core.Directive, args: [{\n\t                        selector: 'input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]',\n\t                        // TODO: vsavkin replace the above selector with the one below it once\n\t                        // https://github.com/angular/angular/issues/3011 is implemented\n\t                        // selector: '[ngControl],[ngModel],[ngFormControl]',\n\t                        host: { '(input)': 'onChange($event.target.value)', '(blur)': 'onTouched()' },\n\t                        providers: [DEFAULT_VALUE_ACCESSOR]\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        DefaultValueAccessor.ctorParameters = function () { return [\n\t            { type: _angular_core.Renderer, },\n\t            { type: _angular_core.ElementRef, },\n\t        ]; };\n\t        return DefaultValueAccessor;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    /**\n\t     * @param {?} validator\n\t     * @return {?}\n\t     */\n\t    function normalizeValidator(validator) {\n\t        if (((validator)).validate) {\n\t            return function (c) { return ((validator)).validate(c); };\n\t        }\n\t        else {\n\t            return (validator);\n\t        }\n\t    }\n\t    /**\n\t     * @param {?} validator\n\t     * @return {?}\n\t     */\n\t    function normalizeAsyncValidator(validator) {\n\t        if (((validator)).validate) {\n\t            return function (c) { return ((validator)).validate(c); };\n\t        }\n\t        else {\n\t            return (validator);\n\t        }\n\t    }\n\t\n\t    var /** @type {?} */ NUMBER_VALUE_ACCESSOR = {\n\t        provide: NG_VALUE_ACCESSOR,\n\t        useExisting: _angular_core.forwardRef(function () { return NumberValueAccessor; }),\n\t        multi: true\n\t    };\n\t    /**\n\t     *  The accessor for writing a number value and listening to changes that is used by the\n\t      * {@link NgModel}, {@link FormControlDirective}, and {@link FormControlName} directives.\n\t      * *\n\t      * ### Example\n\t      * ```\n\t      * <input type=\"number\" [(ngModel)]=\"age\">\n\t      * ```\n\t     */\n\t    var NumberValueAccessor = (function () {\n\t        /**\n\t         * @param {?} _renderer\n\t         * @param {?} _elementRef\n\t         */\n\t        function NumberValueAccessor(_renderer, _elementRef) {\n\t            this._renderer = _renderer;\n\t            this._elementRef = _elementRef;\n\t            this.onChange = function (_) { };\n\t            this.onTouched = function () { };\n\t        }\n\t        /**\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        NumberValueAccessor.prototype.writeValue = function (value) {\n\t            // The value needs to be normalized for IE9, otherwise it is set to 'null' when null\n\t            var /** @type {?} */ normalizedValue = value == null ? '' : value;\n\t            this._renderer.setElementProperty(this._elementRef.nativeElement, 'value', normalizedValue);\n\t        };\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        NumberValueAccessor.prototype.registerOnChange = function (fn) {\n\t            this.onChange = function (value) { fn(value == '' ? null : parseFloat(value)); };\n\t        };\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        NumberValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n\t        /**\n\t         * @param {?} isDisabled\n\t         * @return {?}\n\t         */\n\t        NumberValueAccessor.prototype.setDisabledState = function (isDisabled) {\n\t            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n\t        };\n\t        NumberValueAccessor.decorators = [\n\t            { type: _angular_core.Directive, args: [{\n\t                        selector: 'input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]',\n\t                        host: {\n\t                            '(change)': 'onChange($event.target.value)',\n\t                            '(input)': 'onChange($event.target.value)',\n\t                            '(blur)': 'onTouched()'\n\t                        },\n\t                        providers: [NUMBER_VALUE_ACCESSOR]\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        NumberValueAccessor.ctorParameters = function () { return [\n\t            { type: _angular_core.Renderer, },\n\t            { type: _angular_core.ElementRef, },\n\t        ]; };\n\t        return NumberValueAccessor;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$2 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * @return {?}\n\t     */\n\t    function unimplemented() {\n\t        throw new Error('unimplemented');\n\t    }\n\t    /**\n\t     *  A base class that all control directive extend.\n\t      * It binds a {@link FormControl} object to a DOM element.\n\t      * *\n\t      * Used internally by Angular forms.\n\t      * *\n\t     * @abstract\n\t     */\n\t    var NgControl = (function (_super) {\n\t        __extends$2(NgControl, _super);\n\t        function NgControl() {\n\t            _super.apply(this, arguments);\n\t            /** @internal */\n\t            this._parent = null;\n\t            this.name = null;\n\t            this.valueAccessor = null;\n\t            /** @internal */\n\t            this._rawValidators = [];\n\t            /** @internal */\n\t            this._rawAsyncValidators = [];\n\t        }\n\t        Object.defineProperty(NgControl.prototype, \"validator\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return (unimplemented()); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgControl.prototype, \"asyncValidator\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return (unimplemented()); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @abstract\n\t         * @param {?} newValue\n\t         * @return {?}\n\t         */\n\t        NgControl.prototype.viewToModelUpdate = function (newValue) { };\n\t        return NgControl;\n\t    }(AbstractControlDirective));\n\t\n\t    var /** @type {?} */ RADIO_VALUE_ACCESSOR = {\n\t        provide: NG_VALUE_ACCESSOR,\n\t        useExisting: _angular_core.forwardRef(function () { return RadioControlValueAccessor; }),\n\t        multi: true\n\t    };\n\t    /**\n\t     *  Internal class used by Angular to uncheck radio buttons with the matching name.\n\t     */\n\t    var RadioControlRegistry = (function () {\n\t        function RadioControlRegistry() {\n\t            this._accessors = [];\n\t        }\n\t        /**\n\t         * @param {?} control\n\t         * @param {?} accessor\n\t         * @return {?}\n\t         */\n\t        RadioControlRegistry.prototype.add = function (control, accessor) {\n\t            this._accessors.push([control, accessor]);\n\t        };\n\t        /**\n\t         * @param {?} accessor\n\t         * @return {?}\n\t         */\n\t        RadioControlRegistry.prototype.remove = function (accessor) {\n\t            for (var /** @type {?} */ i = this._accessors.length - 1; i >= 0; --i) {\n\t                if (this._accessors[i][1] === accessor) {\n\t                    this._accessors.splice(i, 1);\n\t                    return;\n\t                }\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} accessor\n\t         * @return {?}\n\t         */\n\t        RadioControlRegistry.prototype.select = function (accessor) {\n\t            var _this = this;\n\t            this._accessors.forEach(function (c) {\n\t                if (_this._isSameGroup(c, accessor) && c[1] !== accessor) {\n\t                    c[1].fireUncheck(accessor.value);\n\t                }\n\t            });\n\t        };\n\t        /**\n\t         * @param {?} controlPair\n\t         * @param {?} accessor\n\t         * @return {?}\n\t         */\n\t        RadioControlRegistry.prototype._isSameGroup = function (controlPair, accessor) {\n\t            if (!controlPair[0].control)\n\t                return false;\n\t            return controlPair[0]._parent === accessor._control._parent &&\n\t                controlPair[1].name === accessor.name;\n\t        };\n\t        RadioControlRegistry.decorators = [\n\t            { type: _angular_core.Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        RadioControlRegistry.ctorParameters = function () { return []; };\n\t        return RadioControlRegistry;\n\t    }());\n\t    /**\n\t     *  *\n\t      * Used by {@link NgModel}, {@link FormControlDirective}, and {@link FormControlName}\n\t      * to keep the view synced with the {@link FormControl} model.\n\t      * *\n\t      * *\n\t      * If you have imported the {@link FormsModule} or the {@link ReactiveFormsModule}, this\n\t      * value accessor will be active on any radio control that has a form directive. You do\n\t      * **not** need to add a special selector to activate it.\n\t      * *\n\t      * ### How to use radio buttons with form directives\n\t      * *\n\t      * To use radio buttons in a template-driven form, you'll want to ensure that radio buttons\n\t      * in the same group have the same `name` attribute.  Radio buttons with different `name`\n\t      * attributes do not affect each other.\n\t      * *\n\t      * {@example forms/ts/radioButtons/radio_button_example.ts region='TemplateDriven'}\n\t      * *\n\t      * When using radio buttons in a reactive form, radio buttons in the same group should have the\n\t      * same `formControlName`. You can also add a `name` attribute, but it's optional.\n\t      * *\n\t      * {@example forms/ts/reactiveRadioButtons/reactive_radio_button_example.ts region='Reactive'}\n\t      * *\n\t      * * **npm package**: `@angular/forms`\n\t      * *\n\t      * @stable\n\t     */\n\t    var RadioControlValueAccessor = (function () {\n\t        /**\n\t         * @param {?} _renderer\n\t         * @param {?} _elementRef\n\t         * @param {?} _registry\n\t         * @param {?} _injector\n\t         */\n\t        function RadioControlValueAccessor(_renderer, _elementRef, _registry, _injector) {\n\t            this._renderer = _renderer;\n\t            this._elementRef = _elementRef;\n\t            this._registry = _registry;\n\t            this._injector = _injector;\n\t            this.onChange = function () { };\n\t            this.onTouched = function () { };\n\t        }\n\t        /**\n\t         * @return {?}\n\t         */\n\t        RadioControlValueAccessor.prototype.ngOnInit = function () {\n\t            this._control = this._injector.get(NgControl);\n\t            this._checkName();\n\t            this._registry.add(this._control, this);\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        RadioControlValueAccessor.prototype.ngOnDestroy = function () { this._registry.remove(this); };\n\t        /**\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        RadioControlValueAccessor.prototype.writeValue = function (value) {\n\t            this._state = value === this.value;\n\t            this._renderer.setElementProperty(this._elementRef.nativeElement, 'checked', this._state);\n\t        };\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        RadioControlValueAccessor.prototype.registerOnChange = function (fn) {\n\t            var _this = this;\n\t            this._fn = fn;\n\t            this.onChange = function () {\n\t                fn(_this.value);\n\t                _this._registry.select(_this);\n\t            };\n\t        };\n\t        /**\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        RadioControlValueAccessor.prototype.fireUncheck = function (value) { this.writeValue(value); };\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        RadioControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n\t        /**\n\t         * @param {?} isDisabled\n\t         * @return {?}\n\t         */\n\t        RadioControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n\t            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        RadioControlValueAccessor.prototype._checkName = function () {\n\t            if (this.name && this.formControlName && this.name !== this.formControlName) {\n\t                this._throwNameError();\n\t            }\n\t            if (!this.name && this.formControlName)\n\t                this.name = this.formControlName;\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        RadioControlValueAccessor.prototype._throwNameError = function () {\n\t            throw new Error(\"\\n      If you define both a name and a formControlName attribute on your radio button, their values\\n      must match. Ex: <input type=\\\"radio\\\" formControlName=\\\"food\\\" name=\\\"food\\\">\\n    \");\n\t        };\n\t        RadioControlValueAccessor.decorators = [\n\t            { type: _angular_core.Directive, args: [{\n\t                        selector: 'input[type=radio][formControlName],input[type=radio][formControl],input[type=radio][ngModel]',\n\t                        host: { '(change)': 'onChange()', '(blur)': 'onTouched()' },\n\t                        providers: [RADIO_VALUE_ACCESSOR]\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        RadioControlValueAccessor.ctorParameters = function () { return [\n\t            { type: _angular_core.Renderer, },\n\t            { type: _angular_core.ElementRef, },\n\t            { type: RadioControlRegistry, },\n\t            { type: _angular_core.Injector, },\n\t        ]; };\n\t        RadioControlValueAccessor.propDecorators = {\n\t            'name': [{ type: _angular_core.Input },],\n\t            'formControlName': [{ type: _angular_core.Input },],\n\t            'value': [{ type: _angular_core.Input },],\n\t        };\n\t        return RadioControlValueAccessor;\n\t    }());\n\t\n\t    var /** @type {?} */ RANGE_VALUE_ACCESSOR = {\n\t        provide: NG_VALUE_ACCESSOR,\n\t        useExisting: _angular_core.forwardRef(function () { return RangeValueAccessor; }),\n\t        multi: true\n\t    };\n\t    /**\n\t     *  The accessor for writing a range value and listening to changes that is used by the\n\t      * {@link NgModel}, {@link FormControlDirective}, and {@link FormControlName} directives.\n\t      * *\n\t      * ### Example\n\t      * ```\n\t      * <input type=\"range\" [(ngModel)]=\"age\" >\n\t      * ```\n\t     */\n\t    var RangeValueAccessor = (function () {\n\t        /**\n\t         * @param {?} _renderer\n\t         * @param {?} _elementRef\n\t         */\n\t        function RangeValueAccessor(_renderer, _elementRef) {\n\t            this._renderer = _renderer;\n\t            this._elementRef = _elementRef;\n\t            this.onChange = function (_) { };\n\t            this.onTouched = function () { };\n\t        }\n\t        /**\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        RangeValueAccessor.prototype.writeValue = function (value) {\n\t            this._renderer.setElementProperty(this._elementRef.nativeElement, 'value', parseFloat(value));\n\t        };\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        RangeValueAccessor.prototype.registerOnChange = function (fn) {\n\t            this.onChange = function (value) { fn(value == '' ? null : parseFloat(value)); };\n\t        };\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        RangeValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n\t        /**\n\t         * @param {?} isDisabled\n\t         * @return {?}\n\t         */\n\t        RangeValueAccessor.prototype.setDisabledState = function (isDisabled) {\n\t            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n\t        };\n\t        RangeValueAccessor.decorators = [\n\t            { type: _angular_core.Directive, args: [{\n\t                        selector: 'input[type=range][formControlName],input[type=range][formControl],input[type=range][ngModel]',\n\t                        host: {\n\t                            '(change)': 'onChange($event.target.value)',\n\t                            '(input)': 'onChange($event.target.value)',\n\t                            '(blur)': 'onTouched()'\n\t                        },\n\t                        providers: [RANGE_VALUE_ACCESSOR]\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        RangeValueAccessor.ctorParameters = function () { return [\n\t            { type: _angular_core.Renderer, },\n\t            { type: _angular_core.ElementRef, },\n\t        ]; };\n\t        return RangeValueAccessor;\n\t    }());\n\t\n\t    var /** @type {?} */ SELECT_VALUE_ACCESSOR = {\n\t        provide: NG_VALUE_ACCESSOR,\n\t        useExisting: _angular_core.forwardRef(function () { return SelectControlValueAccessor; }),\n\t        multi: true\n\t    };\n\t    /**\n\t     * @param {?} id\n\t     * @param {?} value\n\t     * @return {?}\n\t     */\n\t    function _buildValueString(id, value) {\n\t        if (id == null)\n\t            return \"\" + value;\n\t        if (!isPrimitive(value))\n\t            value = 'Object';\n\t        return (id + \": \" + value).slice(0, 50);\n\t    }\n\t    /**\n\t     * @param {?} valueString\n\t     * @return {?}\n\t     */\n\t    function _extractId(valueString) {\n\t        return valueString.split(':')[0];\n\t    }\n\t    /**\n\t     *  *\n\t      * Used by {@link NgModel}, {@link FormControlDirective}, and {@link FormControlName}\n\t      * to keep the view synced with the {@link FormControl} model.\n\t      * *\n\t      * *\n\t      * If you have imported the {@link FormsModule} or the {@link ReactiveFormsModule}, this\n\t      * value accessor will be active on any select control that has a form directive. You do\n\t      * **not** need to add a special selector to activate it.\n\t      * *\n\t      * ### How to use select controls with form directives\n\t      * *\n\t      * To use a select in a template-driven form, simply add an `ngModel` and a `name`\n\t      * attribute to the main `<select>` tag.\n\t      * *\n\t      * If your option values are simple strings, you can bind to the normal `value` property\n\t      * on the option.  If your option values happen to be objects (and you'd like to save the\n\t      * selection in your form as an object), use `ngValue` instead:\n\t      * *\n\t      * {@example forms/ts/selectControl/select_control_example.ts region='Component'}\n\t      * *\n\t      * In reactive forms, you'll also want to add your form directive (`formControlName` or\n\t      * `formControl`) on the main `<select>` tag. Like in the former example, you have the\n\t      * choice of binding to the  `value` or `ngValue` property on the select's options.\n\t      * *\n\t      * {@example forms/ts/reactiveSelectControl/reactive_select_control_example.ts region='Component'}\n\t      * *\n\t      * Note: We listen to the 'change' event because 'input' events aren't fired\n\t      * for selects in Firefox and IE:\n\t      * https://bugzilla.mozilla.org/show_bug.cgi?id=1024350\n\t      * https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/4660045/\n\t      * *\n\t      * * **npm package**: `@angular/forms`\n\t      * *\n\t     */\n\t    var SelectControlValueAccessor = (function () {\n\t        /**\n\t         * @param {?} _renderer\n\t         * @param {?} _elementRef\n\t         */\n\t        function SelectControlValueAccessor(_renderer, _elementRef) {\n\t            this._renderer = _renderer;\n\t            this._elementRef = _elementRef;\n\t            /** @internal */\n\t            this._optionMap = new Map();\n\t            /** @internal */\n\t            this._idCounter = 0;\n\t            this.onChange = function (_) { };\n\t            this.onTouched = function () { };\n\t        }\n\t        /**\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        SelectControlValueAccessor.prototype.writeValue = function (value) {\n\t            this.value = value;\n\t            var /** @type {?} */ valueString = _buildValueString(this._getOptionId(value), value);\n\t            this._renderer.setElementProperty(this._elementRef.nativeElement, 'value', valueString);\n\t        };\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        SelectControlValueAccessor.prototype.registerOnChange = function (fn) {\n\t            var _this = this;\n\t            this.onChange = function (valueString) {\n\t                _this.value = valueString;\n\t                fn(_this._getOptionValue(valueString));\n\t            };\n\t        };\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        SelectControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n\t        /**\n\t         * @param {?} isDisabled\n\t         * @return {?}\n\t         */\n\t        SelectControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n\t            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        SelectControlValueAccessor.prototype._registerOption = function () { return (this._idCounter++).toString(); };\n\t        /**\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        SelectControlValueAccessor.prototype._getOptionId = function (value) {\n\t            for (var _i = 0, _a = Array.from(this._optionMap.keys()); _i < _a.length; _i++) {\n\t                var id = _a[_i];\n\t                if (looseIdentical(this._optionMap.get(id), value))\n\t                    return id;\n\t            }\n\t            return null;\n\t        };\n\t        /**\n\t         * @param {?} valueString\n\t         * @return {?}\n\t         */\n\t        SelectControlValueAccessor.prototype._getOptionValue = function (valueString) {\n\t            var /** @type {?} */ id = _extractId(valueString);\n\t            return this._optionMap.has(id) ? this._optionMap.get(id) : valueString;\n\t        };\n\t        SelectControlValueAccessor.decorators = [\n\t            { type: _angular_core.Directive, args: [{\n\t                        selector: 'select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]',\n\t                        host: { '(change)': 'onChange($event.target.value)', '(blur)': 'onTouched()' },\n\t                        providers: [SELECT_VALUE_ACCESSOR]\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        SelectControlValueAccessor.ctorParameters = function () { return [\n\t            { type: _angular_core.Renderer, },\n\t            { type: _angular_core.ElementRef, },\n\t        ]; };\n\t        return SelectControlValueAccessor;\n\t    }());\n\t    /**\n\t     *  *\n\t      * *\n\t      * See docs for {@link SelectControlValueAccessor} for usage examples.\n\t      * *\n\t     */\n\t    var NgSelectOption = (function () {\n\t        /**\n\t         * @param {?} _element\n\t         * @param {?} _renderer\n\t         * @param {?} _select\n\t         */\n\t        function NgSelectOption(_element, _renderer, _select) {\n\t            this._element = _element;\n\t            this._renderer = _renderer;\n\t            this._select = _select;\n\t            if (this._select)\n\t                this.id = this._select._registerOption();\n\t        }\n\t        Object.defineProperty(NgSelectOption.prototype, \"ngValue\", {\n\t            /**\n\t             * @param {?} value\n\t             * @return {?}\n\t             */\n\t            set: function (value) {\n\t                if (this._select == null)\n\t                    return;\n\t                this._select._optionMap.set(this.id, value);\n\t                this._setElementValue(_buildValueString(this.id, value));\n\t                this._select.writeValue(this._select.value);\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgSelectOption.prototype, \"value\", {\n\t            /**\n\t             * @param {?} value\n\t             * @return {?}\n\t             */\n\t            set: function (value) {\n\t                this._setElementValue(value);\n\t                if (this._select)\n\t                    this._select.writeValue(this._select.value);\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        NgSelectOption.prototype._setElementValue = function (value) {\n\t            this._renderer.setElementProperty(this._element.nativeElement, 'value', value);\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        NgSelectOption.prototype.ngOnDestroy = function () {\n\t            if (this._select) {\n\t                this._select._optionMap.delete(this.id);\n\t                this._select.writeValue(this._select.value);\n\t            }\n\t        };\n\t        NgSelectOption.decorators = [\n\t            { type: _angular_core.Directive, args: [{ selector: 'option' },] },\n\t        ];\n\t        /** @nocollapse */\n\t        NgSelectOption.ctorParameters = function () { return [\n\t            { type: _angular_core.ElementRef, },\n\t            { type: _angular_core.Renderer, },\n\t            { type: SelectControlValueAccessor, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Host },] },\n\t        ]; };\n\t        NgSelectOption.propDecorators = {\n\t            'ngValue': [{ type: _angular_core.Input, args: ['ngValue',] },],\n\t            'value': [{ type: _angular_core.Input, args: ['value',] },],\n\t        };\n\t        return NgSelectOption;\n\t    }());\n\t\n\t    var /** @type {?} */ SELECT_MULTIPLE_VALUE_ACCESSOR = {\n\t        provide: NG_VALUE_ACCESSOR,\n\t        useExisting: _angular_core.forwardRef(function () { return SelectMultipleControlValueAccessor; }),\n\t        multi: true\n\t    };\n\t    /**\n\t     * @param {?} id\n\t     * @param {?} value\n\t     * @return {?}\n\t     */\n\t    function _buildValueString$1(id, value) {\n\t        if (id == null)\n\t            return \"\" + value;\n\t        if (typeof value === 'string')\n\t            value = \"'\" + value + \"'\";\n\t        if (!isPrimitive(value))\n\t            value = 'Object';\n\t        return (id + \": \" + value).slice(0, 50);\n\t    }\n\t    /**\n\t     * @param {?} valueString\n\t     * @return {?}\n\t     */\n\t    function _extractId$1(valueString) {\n\t        return valueString.split(':')[0];\n\t    }\n\t    /**\n\t     *  The accessor for writing a value and listening to changes on a select element.\n\t      * *\n\t     */\n\t    var SelectMultipleControlValueAccessor = (function () {\n\t        /**\n\t         * @param {?} _renderer\n\t         * @param {?} _elementRef\n\t         */\n\t        function SelectMultipleControlValueAccessor(_renderer, _elementRef) {\n\t            this._renderer = _renderer;\n\t            this._elementRef = _elementRef;\n\t            /** @internal */\n\t            this._optionMap = new Map();\n\t            /** @internal */\n\t            this._idCounter = 0;\n\t            this.onChange = function (_) { };\n\t            this.onTouched = function () { };\n\t        }\n\t        /**\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        SelectMultipleControlValueAccessor.prototype.writeValue = function (value) {\n\t            var _this = this;\n\t            this.value = value;\n\t            if (value == null)\n\t                return;\n\t            var /** @type {?} */ values = (value);\n\t            // convert values to ids\n\t            var /** @type {?} */ ids = values.map(function (v) { return _this._getOptionId(v); });\n\t            this._optionMap.forEach(function (opt, o) { opt._setSelected(ids.indexOf(o.toString()) > -1); });\n\t        };\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        SelectMultipleControlValueAccessor.prototype.registerOnChange = function (fn) {\n\t            var _this = this;\n\t            this.onChange = function (_) {\n\t                var /** @type {?} */ selected = [];\n\t                if (_.hasOwnProperty('selectedOptions')) {\n\t                    var /** @type {?} */ options = _.selectedOptions;\n\t                    for (var /** @type {?} */ i = 0; i < options.length; i++) {\n\t                        var /** @type {?} */ opt = options.item(i);\n\t                        var /** @type {?} */ val = _this._getOptionValue(opt.value);\n\t                        selected.push(val);\n\t                    }\n\t                }\n\t                else {\n\t                    var /** @type {?} */ options = (_.options);\n\t                    for (var /** @type {?} */ i = 0; i < options.length; i++) {\n\t                        var /** @type {?} */ opt = options.item(i);\n\t                        if (opt.selected) {\n\t                            var /** @type {?} */ val = _this._getOptionValue(opt.value);\n\t                            selected.push(val);\n\t                        }\n\t                    }\n\t                }\n\t                fn(selected);\n\t            };\n\t        };\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        SelectMultipleControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n\t        /**\n\t         * @param {?} isDisabled\n\t         * @return {?}\n\t         */\n\t        SelectMultipleControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n\t            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n\t        };\n\t        /**\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        SelectMultipleControlValueAccessor.prototype._registerOption = function (value) {\n\t            var /** @type {?} */ id = (this._idCounter++).toString();\n\t            this._optionMap.set(id, value);\n\t            return id;\n\t        };\n\t        /**\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        SelectMultipleControlValueAccessor.prototype._getOptionId = function (value) {\n\t            for (var _i = 0, _a = Array.from(this._optionMap.keys()); _i < _a.length; _i++) {\n\t                var id = _a[_i];\n\t                if (looseIdentical(this._optionMap.get(id)._value, value))\n\t                    return id;\n\t            }\n\t            return null;\n\t        };\n\t        /**\n\t         * @param {?} valueString\n\t         * @return {?}\n\t         */\n\t        SelectMultipleControlValueAccessor.prototype._getOptionValue = function (valueString) {\n\t            var /** @type {?} */ id = _extractId$1(valueString);\n\t            return this._optionMap.has(id) ? this._optionMap.get(id)._value : valueString;\n\t        };\n\t        SelectMultipleControlValueAccessor.decorators = [\n\t            { type: _angular_core.Directive, args: [{\n\t                        selector: 'select[multiple][formControlName],select[multiple][formControl],select[multiple][ngModel]',\n\t                        host: { '(change)': 'onChange($event.target)', '(blur)': 'onTouched()' },\n\t                        providers: [SELECT_MULTIPLE_VALUE_ACCESSOR]\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        SelectMultipleControlValueAccessor.ctorParameters = function () { return [\n\t            { type: _angular_core.Renderer, },\n\t            { type: _angular_core.ElementRef, },\n\t        ]; };\n\t        return SelectMultipleControlValueAccessor;\n\t    }());\n\t    /**\n\t     *  Marks `<option>` as dynamic, so Angular can be notified when options change.\n\t      * *\n\t      * ### Example\n\t      * *\n\t      * ```\n\t      * <select multiple name=\"city\" ngModel>\n\t      * <option *ngFor=\"let c of cities\" [value]=\"c\"></option>\n\t      * </select>\n\t      * ```\n\t     */\n\t    var NgSelectMultipleOption = (function () {\n\t        /**\n\t         * @param {?} _element\n\t         * @param {?} _renderer\n\t         * @param {?} _select\n\t         */\n\t        function NgSelectMultipleOption(_element, _renderer, _select) {\n\t            this._element = _element;\n\t            this._renderer = _renderer;\n\t            this._select = _select;\n\t            if (this._select) {\n\t                this.id = this._select._registerOption(this);\n\t            }\n\t        }\n\t        Object.defineProperty(NgSelectMultipleOption.prototype, \"ngValue\", {\n\t            /**\n\t             * @param {?} value\n\t             * @return {?}\n\t             */\n\t            set: function (value) {\n\t                if (this._select == null)\n\t                    return;\n\t                this._value = value;\n\t                this._setElementValue(_buildValueString$1(this.id, value));\n\t                this._select.writeValue(this._select.value);\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgSelectMultipleOption.prototype, \"value\", {\n\t            /**\n\t             * @param {?} value\n\t             * @return {?}\n\t             */\n\t            set: function (value) {\n\t                if (this._select) {\n\t                    this._value = value;\n\t                    this._setElementValue(_buildValueString$1(this.id, value));\n\t                    this._select.writeValue(this._select.value);\n\t                }\n\t                else {\n\t                    this._setElementValue(value);\n\t                }\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        NgSelectMultipleOption.prototype._setElementValue = function (value) {\n\t            this._renderer.setElementProperty(this._element.nativeElement, 'value', value);\n\t        };\n\t        /**\n\t         * @param {?} selected\n\t         * @return {?}\n\t         */\n\t        NgSelectMultipleOption.prototype._setSelected = function (selected) {\n\t            this._renderer.setElementProperty(this._element.nativeElement, 'selected', selected);\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        NgSelectMultipleOption.prototype.ngOnDestroy = function () {\n\t            if (this._select) {\n\t                this._select._optionMap.delete(this.id);\n\t                this._select.writeValue(this._select.value);\n\t            }\n\t        };\n\t        NgSelectMultipleOption.decorators = [\n\t            { type: _angular_core.Directive, args: [{ selector: 'option' },] },\n\t        ];\n\t        /** @nocollapse */\n\t        NgSelectMultipleOption.ctorParameters = function () { return [\n\t            { type: _angular_core.ElementRef, },\n\t            { type: _angular_core.Renderer, },\n\t            { type: SelectMultipleControlValueAccessor, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Host },] },\n\t        ]; };\n\t        NgSelectMultipleOption.propDecorators = {\n\t            'ngValue': [{ type: _angular_core.Input, args: ['ngValue',] },],\n\t            'value': [{ type: _angular_core.Input, args: ['value',] },],\n\t        };\n\t        return NgSelectMultipleOption;\n\t    }());\n\t\n\t    /**\n\t     * @param {?} name\n\t     * @param {?} parent\n\t     * @return {?}\n\t     */\n\t    function controlPath(name, parent) {\n\t        return parent.path.concat([name]);\n\t    }\n\t    /**\n\t     * @param {?} control\n\t     * @param {?} dir\n\t     * @return {?}\n\t     */\n\t    function setUpControl(control, dir) {\n\t        if (!control)\n\t            _throwError(dir, 'Cannot find control with');\n\t        if (!dir.valueAccessor)\n\t            _throwError(dir, 'No value accessor for form control with');\n\t        control.validator = Validators.compose([control.validator, dir.validator]);\n\t        control.asyncValidator = Validators.composeAsync([control.asyncValidator, dir.asyncValidator]);\n\t        dir.valueAccessor.writeValue(control.value);\n\t        // view -> model\n\t        dir.valueAccessor.registerOnChange(function (newValue) {\n\t            dir.viewToModelUpdate(newValue);\n\t            control.markAsDirty();\n\t            control.setValue(newValue, { emitModelToViewChange: false });\n\t        });\n\t        // touched\n\t        dir.valueAccessor.registerOnTouched(function () { return control.markAsTouched(); });\n\t        control.registerOnChange(function (newValue, emitModelEvent) {\n\t            // control -> view\n\t            dir.valueAccessor.writeValue(newValue);\n\t            // control -> ngModel\n\t            if (emitModelEvent)\n\t                dir.viewToModelUpdate(newValue);\n\t        });\n\t        if (dir.valueAccessor.setDisabledState) {\n\t            control.registerOnDisabledChange(function (isDisabled) { dir.valueAccessor.setDisabledState(isDisabled); });\n\t        }\n\t        // re-run validation when validator binding changes, e.g. minlength=3 -> minlength=4\n\t        dir._rawValidators.forEach(function (validator) {\n\t            if (((validator)).registerOnValidatorChange)\n\t                ((validator)).registerOnValidatorChange(function () { return control.updateValueAndValidity(); });\n\t        });\n\t        dir._rawAsyncValidators.forEach(function (validator) {\n\t            if (((validator)).registerOnValidatorChange)\n\t                ((validator)).registerOnValidatorChange(function () { return control.updateValueAndValidity(); });\n\t        });\n\t    }\n\t    /**\n\t     * @param {?} control\n\t     * @param {?} dir\n\t     * @return {?}\n\t     */\n\t    function cleanUpControl(control, dir) {\n\t        dir.valueAccessor.registerOnChange(function () { return _noControlError(dir); });\n\t        dir.valueAccessor.registerOnTouched(function () { return _noControlError(dir); });\n\t        dir._rawValidators.forEach(function (validator) {\n\t            if (validator.registerOnValidatorChange) {\n\t                validator.registerOnValidatorChange(null);\n\t            }\n\t        });\n\t        dir._rawAsyncValidators.forEach(function (validator) {\n\t            if (validator.registerOnValidatorChange) {\n\t                validator.registerOnValidatorChange(null);\n\t            }\n\t        });\n\t        if (control)\n\t            control._clearChangeFns();\n\t    }\n\t    /**\n\t     * @param {?} control\n\t     * @param {?} dir\n\t     * @return {?}\n\t     */\n\t    function setUpFormContainer(control, dir) {\n\t        if (isBlank(control))\n\t            _throwError(dir, 'Cannot find control with');\n\t        control.validator = Validators.compose([control.validator, dir.validator]);\n\t        control.asyncValidator = Validators.composeAsync([control.asyncValidator, dir.asyncValidator]);\n\t    }\n\t    /**\n\t     * @param {?} dir\n\t     * @return {?}\n\t     */\n\t    function _noControlError(dir) {\n\t        return _throwError(dir, 'There is no FormControl instance attached to form control element with');\n\t    }\n\t    /**\n\t     * @param {?} dir\n\t     * @param {?} message\n\t     * @return {?}\n\t     */\n\t    function _throwError(dir, message) {\n\t        var /** @type {?} */ messageEnd;\n\t        if (dir.path.length > 1) {\n\t            messageEnd = \"path: '\" + dir.path.join(' -> ') + \"'\";\n\t        }\n\t        else if (dir.path[0]) {\n\t            messageEnd = \"name: '\" + dir.path + \"'\";\n\t        }\n\t        else {\n\t            messageEnd = 'unspecified name attribute';\n\t        }\n\t        throw new Error(message + \" \" + messageEnd);\n\t    }\n\t    /**\n\t     * @param {?} validators\n\t     * @return {?}\n\t     */\n\t    function composeValidators(validators) {\n\t        return isPresent(validators) ? Validators.compose(validators.map(normalizeValidator)) : null;\n\t    }\n\t    /**\n\t     * @param {?} validators\n\t     * @return {?}\n\t     */\n\t    function composeAsyncValidators(validators) {\n\t        return isPresent(validators) ? Validators.composeAsync(validators.map(normalizeAsyncValidator)) :\n\t            null;\n\t    }\n\t    /**\n\t     * @param {?} changes\n\t     * @param {?} viewModel\n\t     * @return {?}\n\t     */\n\t    function isPropertyUpdated(changes, viewModel) {\n\t        if (!changes.hasOwnProperty('model'))\n\t            return false;\n\t        var /** @type {?} */ change = changes['model'];\n\t        if (change.isFirstChange())\n\t            return true;\n\t        return !looseIdentical(viewModel, change.currentValue);\n\t    }\n\t    var /** @type {?} */ BUILTIN_ACCESSORS = [\n\t        CheckboxControlValueAccessor,\n\t        RangeValueAccessor,\n\t        NumberValueAccessor,\n\t        SelectControlValueAccessor,\n\t        SelectMultipleControlValueAccessor,\n\t        RadioControlValueAccessor,\n\t    ];\n\t    /**\n\t     * @param {?} valueAccessor\n\t     * @return {?}\n\t     */\n\t    function isBuiltInAccessor(valueAccessor) {\n\t        return BUILTIN_ACCESSORS.some(function (a) { return valueAccessor.constructor === a; });\n\t    }\n\t    /**\n\t     * @param {?} dir\n\t     * @param {?} valueAccessors\n\t     * @return {?}\n\t     */\n\t    function selectValueAccessor(dir, valueAccessors) {\n\t        if (!valueAccessors)\n\t            return null;\n\t        var /** @type {?} */ defaultAccessor;\n\t        var /** @type {?} */ builtinAccessor;\n\t        var /** @type {?} */ customAccessor;\n\t        valueAccessors.forEach(function (v) {\n\t            if (v.constructor === DefaultValueAccessor) {\n\t                defaultAccessor = v;\n\t            }\n\t            else if (isBuiltInAccessor(v)) {\n\t                if (builtinAccessor)\n\t                    _throwError(dir, 'More than one built-in value accessor matches form control with');\n\t                builtinAccessor = v;\n\t            }\n\t            else {\n\t                if (customAccessor)\n\t                    _throwError(dir, 'More than one custom value accessor matches form control with');\n\t                customAccessor = v;\n\t            }\n\t        });\n\t        if (customAccessor)\n\t            return customAccessor;\n\t        if (builtinAccessor)\n\t            return builtinAccessor;\n\t        if (defaultAccessor)\n\t            return defaultAccessor;\n\t        _throwError(dir, 'No valid value accessor for form control with');\n\t        return null;\n\t    }\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     *  This is a base class for code shared between {@link NgModelGroup} and {@link FormGroupName}.\n\t      * *\n\t     */\n\t    var AbstractFormGroupDirective = (function (_super) {\n\t        __extends(AbstractFormGroupDirective, _super);\n\t        function AbstractFormGroupDirective() {\n\t            _super.apply(this, arguments);\n\t        }\n\t        /**\n\t         * @return {?}\n\t         */\n\t        AbstractFormGroupDirective.prototype.ngOnInit = function () {\n\t            this._checkParentType();\n\t            this.formDirective.addFormGroup(this);\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        AbstractFormGroupDirective.prototype.ngOnDestroy = function () {\n\t            if (this.formDirective) {\n\t                this.formDirective.removeFormGroup(this);\n\t            }\n\t        };\n\t        Object.defineProperty(AbstractFormGroupDirective.prototype, \"control\", {\n\t            /**\n\t             *  Get the {@link FormGroup} backing this binding.\n\t             * @return {?}\n\t             */\n\t            get: function () { return this.formDirective.getFormGroup(this); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractFormGroupDirective.prototype, \"path\", {\n\t            /**\n\t             *  Get the path to this control group.\n\t             * @return {?}\n\t             */\n\t            get: function () { return controlPath(this.name, this._parent); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractFormGroupDirective.prototype, \"formDirective\", {\n\t            /**\n\t             *  Get the {@link Form} to which this group belongs.\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._parent ? this._parent.formDirective : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractFormGroupDirective.prototype, \"validator\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return composeValidators(this._validators); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractFormGroupDirective.prototype, \"asyncValidator\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return composeAsyncValidators(this._asyncValidators); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @return {?}\n\t         */\n\t        AbstractFormGroupDirective.prototype._checkParentType = function () { };\n\t        return AbstractFormGroupDirective;\n\t    }(ControlContainer));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$3 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var AbstractControlStatus = (function () {\n\t        /**\n\t         * @param {?} cd\n\t         */\n\t        function AbstractControlStatus(cd) {\n\t            this._cd = cd;\n\t        }\n\t        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassUntouched\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._cd.control ? this._cd.control.untouched : false; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassTouched\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._cd.control ? this._cd.control.touched : false; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassPristine\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._cd.control ? this._cd.control.pristine : false; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassDirty\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._cd.control ? this._cd.control.dirty : false; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassValid\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._cd.control ? this._cd.control.valid : false; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassInvalid\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._cd.control ? this._cd.control.invalid : false; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassPending\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._cd.control ? this._cd.control.pending : false; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return AbstractControlStatus;\n\t    }());\n\t    var /** @type {?} */ ngControlStatusHost = {\n\t        '[class.ng-untouched]': 'ngClassUntouched',\n\t        '[class.ng-touched]': 'ngClassTouched',\n\t        '[class.ng-pristine]': 'ngClassPristine',\n\t        '[class.ng-dirty]': 'ngClassDirty',\n\t        '[class.ng-valid]': 'ngClassValid',\n\t        '[class.ng-invalid]': 'ngClassInvalid',\n\t        '[class.ng-pending]': 'ngClassPending',\n\t    };\n\t    /**\n\t     *  Directive automatically applied to Angular form controls that sets CSS classes\n\t      * based on control status (valid/invalid/dirty/etc).\n\t      * *\n\t     */\n\t    var NgControlStatus = (function (_super) {\n\t        __extends$3(NgControlStatus, _super);\n\t        /**\n\t         * @param {?} cd\n\t         */\n\t        function NgControlStatus(cd) {\n\t            _super.call(this, cd);\n\t        }\n\t        NgControlStatus.decorators = [\n\t            { type: _angular_core.Directive, args: [{ selector: '[formControlName],[ngModel],[formControl]', host: ngControlStatusHost },] },\n\t        ];\n\t        /** @nocollapse */\n\t        NgControlStatus.ctorParameters = function () { return [\n\t            { type: NgControl, decorators: [{ type: _angular_core.Self },] },\n\t        ]; };\n\t        return NgControlStatus;\n\t    }(AbstractControlStatus));\n\t    /**\n\t     *  Directive automatically applied to Angular form groups that sets CSS classes\n\t      * based on control status (valid/invalid/dirty/etc).\n\t      * *\n\t     */\n\t    var NgControlStatusGroup = (function (_super) {\n\t        __extends$3(NgControlStatusGroup, _super);\n\t        /**\n\t         * @param {?} cd\n\t         */\n\t        function NgControlStatusGroup(cd) {\n\t            _super.call(this, cd);\n\t        }\n\t        NgControlStatusGroup.decorators = [\n\t            { type: _angular_core.Directive, args: [{\n\t                        selector: '[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]',\n\t                        host: ngControlStatusHost\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        NgControlStatusGroup.ctorParameters = function () { return [\n\t            { type: ControlContainer, decorators: [{ type: _angular_core.Self },] },\n\t        ]; };\n\t        return NgControlStatusGroup;\n\t    }(AbstractControlStatus));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$5 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     *  Use by directives and components to emit custom Events.\n\t      * *\n\t      * ### Examples\n\t      * *\n\t      * In the following example, `Zippy` alternatively emits `open` and `close` events when its\n\t      * title gets clicked:\n\t      * *\n\t      * ```\n\t      * selector: 'zippy',\n\t      * template: `\n\t      * <div class=\"zippy\">\n\t      * <div (click)=\"toggle()\">Toggle</div>\n\t      * <div [hidden]=\"!visible\">\n\t      * <ng-content></ng-content>\n\t      * </div>\n\t      * </div>`})\n\t      * export class Zippy {\n\t      * visible: boolean = true;\n\t      * @Output() open: EventEmitter<any> = new EventEmitter();\n\t      * @Output() close: EventEmitter<any> = new EventEmitter();\n\t      * *\n\t      * toggle() {\n\t      * this.visible = !this.visible;\n\t      * if (this.visible) {\n\t      * this.open.emit(null);\n\t      * } else {\n\t      * this.close.emit(null);\n\t      * }\n\t      * }\n\t      * }\n\t      * ```\n\t      * *\n\t      * The events payload can be accessed by the parameter `$event` on the components output event\n\t      * handler:\n\t      * *\n\t      * ```\n\t      * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n\t      * ```\n\t      * *\n\t      * Uses Rx.Observable but provides an adapter to make it work as specified here:\n\t      * https://github.com/jhusain/observable-spec\n\t      * *\n\t      * Once a reference implementation of the spec is available, switch to it.\n\t     */\n\t    var EventEmitter = (function (_super) {\n\t        __extends$5(EventEmitter, _super);\n\t        /**\n\t         *  Creates an instance of [EventEmitter], which depending on [isAsync],\n\t          * delivers events synchronously or asynchronously.\n\t         * @param {?=} isAsync\n\t         */\n\t        function EventEmitter(isAsync) {\n\t            if (isAsync === void 0) { isAsync = false; }\n\t            _super.call(this);\n\t            this.__isAsync = isAsync;\n\t        }\n\t        /**\n\t         * @param {?=} value\n\t         * @return {?}\n\t         */\n\t        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n\t        /**\n\t         * @param {?=} generatorOrNext\n\t         * @param {?=} error\n\t         * @param {?=} complete\n\t         * @return {?}\n\t         */\n\t        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n\t            var /** @type {?} */ schedulerFn;\n\t            var /** @type {?} */ errorFn = function (err) { return null; };\n\t            var /** @type {?} */ completeFn = function () { return null; };\n\t            if (generatorOrNext && typeof generatorOrNext === 'object') {\n\t                schedulerFn = this.__isAsync ? function (value) {\n\t                    setTimeout(function () { return generatorOrNext.next(value); });\n\t                } : function (value) { generatorOrNext.next(value); };\n\t                if (generatorOrNext.error) {\n\t                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n\t                        function (err) { generatorOrNext.error(err); };\n\t                }\n\t                if (generatorOrNext.complete) {\n\t                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n\t                        function () { generatorOrNext.complete(); };\n\t                }\n\t            }\n\t            else {\n\t                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n\t                    function (value) { generatorOrNext(value); };\n\t                if (error) {\n\t                    errorFn =\n\t                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n\t                }\n\t                if (complete) {\n\t                    completeFn =\n\t                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n\t                }\n\t            }\n\t            return _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n\t        };\n\t        return EventEmitter;\n\t    }(rxjs_Subject.Subject));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$6 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * Indicates that a FormControl is valid, i.e. that no errors exist in the input value.\n\t     */\n\t    var /** @type {?} */ VALID = 'VALID';\n\t    /**\n\t     * Indicates that a FormControl is invalid, i.e. that an error exists in the input value.\n\t     */\n\t    var /** @type {?} */ INVALID = 'INVALID';\n\t    /**\n\t     * Indicates that a FormControl is pending, i.e. that async validation is occurring and\n\t     * errors are not yet available for the input value.\n\t     */\n\t    var /** @type {?} */ PENDING = 'PENDING';\n\t    /**\n\t     * Indicates that a FormControl is disabled, i.e. that the control is exempt from ancestor\n\t     * calculations of validity or value.\n\t     */\n\t    var /** @type {?} */ DISABLED = 'DISABLED';\n\t    /**\n\t     * @param {?} control\n\t     * @param {?} path\n\t     * @param {?} delimiter\n\t     * @return {?}\n\t     */\n\t    function _find(control, path, delimiter) {\n\t        if (path == null)\n\t            return null;\n\t        if (!(path instanceof Array)) {\n\t            path = ((path)).split(delimiter);\n\t        }\n\t        if (path instanceof Array && (path.length === 0))\n\t            return null;\n\t        return ((path)).reduce(function (v, name) {\n\t            if (v instanceof FormGroup) {\n\t                return v.controls[name] || null;\n\t            }\n\t            if (v instanceof FormArray) {\n\t                return v.at(/** @type {?} */ (name)) || null;\n\t            }\n\t            return null;\n\t        }, control);\n\t    }\n\t    /**\n\t     * @param {?} r\n\t     * @return {?}\n\t     */\n\t    function toObservable(r) {\n\t        return isPromise(r) ? rxjs_observable_fromPromise.fromPromise(r) : r;\n\t    }\n\t    /**\n\t     * @param {?} validator\n\t     * @return {?}\n\t     */\n\t    function coerceToValidator(validator) {\n\t        return Array.isArray(validator) ? composeValidators(validator) : validator;\n\t    }\n\t    /**\n\t     * @param {?} asyncValidator\n\t     * @return {?}\n\t     */\n\t    function coerceToAsyncValidator(asyncValidator) {\n\t        return Array.isArray(asyncValidator) ? composeAsyncValidators(asyncValidator) : asyncValidator;\n\t    }\n\t    /**\n\t     *  {@link FormArray}.\n\t      * *\n\t      * It provides some of the shared behavior that all controls and groups of controls have, like\n\t      * running validators, calculating status, and resetting state. It also defines the properties\n\t      * that are shared between all sub-classes, like `value`, `valid`, and `dirty`. It shouldn't be\n\t      * instantiated directly.\n\t      * *\n\t     * @abstract\n\t     */\n\t    var AbstractControl = (function () {\n\t        /**\n\t         * @param {?} validator\n\t         * @param {?} asyncValidator\n\t         */\n\t        function AbstractControl(validator, asyncValidator) {\n\t            this.validator = validator;\n\t            this.asyncValidator = asyncValidator;\n\t            /** @internal */\n\t            this._onCollectionChange = function () { };\n\t            this._pristine = true;\n\t            this._touched = false;\n\t            /** @internal */\n\t            this._onDisabledChange = [];\n\t        }\n\t        Object.defineProperty(AbstractControl.prototype, \"value\", {\n\t            /**\n\t             *  The value of the control.\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._value; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControl.prototype, \"parent\", {\n\t            /**\n\t             *  The parent control.\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._parent; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControl.prototype, \"status\", {\n\t            /**\n\t             *  The validation status of the control. There are four possible\n\t              * validation statuses:\n\t              * *\n\t              * * **VALID**:  control has passed all validation checks\n\t              * * **INVALID**: control has failed at least one validation check\n\t              * * **PENDING**: control is in the midst of conducting a validation check\n\t              * * **DISABLED**: control is exempt from validation checks\n\t              * *\n\t              * These statuses are mutually exclusive, so a control cannot be\n\t              * both valid AND invalid or invalid AND disabled.\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._status; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControl.prototype, \"valid\", {\n\t            /**\n\t             *  A control is `valid` when its `status === VALID`.\n\t              * *\n\t              * In order to have this status, the control must have passed all its\n\t              * validation checks.\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._status === VALID; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControl.prototype, \"invalid\", {\n\t            /**\n\t             *  A control is `invalid` when its `status === INVALID`.\n\t              * *\n\t              * In order to have this status, the control must have failed\n\t              * at least one of its validation checks.\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._status === INVALID; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControl.prototype, \"pending\", {\n\t            /**\n\t             *  A control is `pending` when its `status === PENDING`.\n\t              * *\n\t              * In order to have this status, the control must be in the\n\t              * middle of conducting a validation check.\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._status == PENDING; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControl.prototype, \"disabled\", {\n\t            /**\n\t             *  A control is `disabled` when its `status === DISABLED`.\n\t              * *\n\t              * Disabled controls are exempt from validation checks and\n\t              * are not included in the aggregate value of their ancestor\n\t              * controls.\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._status === DISABLED; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControl.prototype, \"enabled\", {\n\t            /**\n\t             *  A control is `enabled` as long as its `status !== DISABLED`.\n\t              * *\n\t              * In other words, it has a status of `VALID`, `INVALID`, or\n\t              * `PENDING`.\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._status !== DISABLED; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControl.prototype, \"errors\", {\n\t            /**\n\t             *  Returns any errors generated by failing validation. If there\n\t              * are no errors, it will return null.\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._errors; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControl.prototype, \"pristine\", {\n\t            /**\n\t             *  A control is `pristine` if the user has not yet changed\n\t              * the value in the UI.\n\t              * *\n\t              * Note that programmatic changes to a control's value will\n\t              * *not* mark it dirty.\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._pristine; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControl.prototype, \"dirty\", {\n\t            /**\n\t             *  A control is `dirty` if the user has changed the value\n\t              * in the UI.\n\t              * *\n\t              * Note that programmatic changes to a control's value will\n\t              * *not* mark it dirty.\n\t             * @return {?}\n\t             */\n\t            get: function () { return !this.pristine; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControl.prototype, \"touched\", {\n\t            /**\n\t             *  A control is marked `touched` once the user has triggered\n\t              * a `blur` event on it.\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._touched; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControl.prototype, \"untouched\", {\n\t            /**\n\t             *  A control is `untouched` if the user has not yet triggered\n\t              * a `blur` event on it.\n\t             * @return {?}\n\t             */\n\t            get: function () { return !this._touched; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControl.prototype, \"valueChanges\", {\n\t            /**\n\t             *  Emits an event every time the value of the control changes, in\n\t              * the UI or programmatically.\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._valueChanges; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControl.prototype, \"statusChanges\", {\n\t            /**\n\t             *  Emits an event every time the validation status of the control\n\t              * is re-calculated.\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._statusChanges; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         *  Sets the synchronous validators that are active on this control.  Calling\n\t          * this will overwrite any existing sync validators.\n\t         * @param {?} newValidator\n\t         * @return {?}\n\t         */\n\t        AbstractControl.prototype.setValidators = function (newValidator) {\n\t            this.validator = coerceToValidator(newValidator);\n\t        };\n\t        /**\n\t         *  Sets the async validators that are active on this control. Calling this\n\t          * will overwrite any existing async validators.\n\t         * @param {?} newValidator\n\t         * @return {?}\n\t         */\n\t        AbstractControl.prototype.setAsyncValidators = function (newValidator) {\n\t            this.asyncValidator = coerceToAsyncValidator(newValidator);\n\t        };\n\t        /**\n\t         *  Empties out the sync validator list.\n\t         * @return {?}\n\t         */\n\t        AbstractControl.prototype.clearValidators = function () { this.validator = null; };\n\t        /**\n\t         *  Empties out the async validator list.\n\t         * @return {?}\n\t         */\n\t        AbstractControl.prototype.clearAsyncValidators = function () { this.asyncValidator = null; };\n\t        /**\n\t         *  Marks the control as `touched`.\n\t          * *\n\t          * This will also mark all direct ancestors as `touched` to maintain\n\t          * the model.\n\t         * @param {?=} __0\n\t         * @return {?}\n\t         */\n\t        AbstractControl.prototype.markAsTouched = function (_a) {\n\t            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n\t            this._touched = true;\n\t            if (this._parent && !onlySelf) {\n\t                this._parent.markAsTouched({ onlySelf: onlySelf });\n\t            }\n\t        };\n\t        /**\n\t         *  Marks the control as `untouched`.\n\t          * *\n\t          * If the control has any children, it will also mark all children as `untouched`\n\t          * to maintain the model, and re-calculate the `touched` status of all parent\n\t          * controls.\n\t         * @param {?=} __0\n\t         * @return {?}\n\t         */\n\t        AbstractControl.prototype.markAsUntouched = function (_a) {\n\t            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n\t            this._touched = false;\n\t            this._forEachChild(function (control) { control.markAsUntouched({ onlySelf: true }); });\n\t            if (this._parent && !onlySelf) {\n\t                this._parent._updateTouched({ onlySelf: onlySelf });\n\t            }\n\t        };\n\t        /**\n\t         *  Marks the control as `dirty`.\n\t          * *\n\t          * This will also mark all direct ancestors as `dirty` to maintain\n\t          * the model.\n\t         * @param {?=} __0\n\t         * @return {?}\n\t         */\n\t        AbstractControl.prototype.markAsDirty = function (_a) {\n\t            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n\t            this._pristine = false;\n\t            if (this._parent && !onlySelf) {\n\t                this._parent.markAsDirty({ onlySelf: onlySelf });\n\t            }\n\t        };\n\t        /**\n\t         *  Marks the control as `pristine`.\n\t          * *\n\t          * If the control has any children, it will also mark all children as `pristine`\n\t          * to maintain the model, and re-calculate the `pristine` status of all parent\n\t          * controls.\n\t         * @param {?=} __0\n\t         * @return {?}\n\t         */\n\t        AbstractControl.prototype.markAsPristine = function (_a) {\n\t            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n\t            this._pristine = true;\n\t            this._forEachChild(function (control) { control.markAsPristine({ onlySelf: true }); });\n\t            if (this._parent && !onlySelf) {\n\t                this._parent._updatePristine({ onlySelf: onlySelf });\n\t            }\n\t        };\n\t        /**\n\t         *  Marks the control as `pending`.\n\t         * @param {?=} __0\n\t         * @return {?}\n\t         */\n\t        AbstractControl.prototype.markAsPending = function (_a) {\n\t            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n\t            this._status = PENDING;\n\t            if (this._parent && !onlySelf) {\n\t                this._parent.markAsPending({ onlySelf: onlySelf });\n\t            }\n\t        };\n\t        /**\n\t         *  Disables the control. This means the control will be exempt from validation checks and\n\t          * excluded from the aggregate value of any parent. Its status is `DISABLED`.\n\t          * *\n\t          * If the control has children, all children will be disabled to maintain the model.\n\t         * @param {?=} __0\n\t         * @return {?}\n\t         */\n\t        AbstractControl.prototype.disable = function (_a) {\n\t            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n\t            this._status = DISABLED;\n\t            this._errors = null;\n\t            this._forEachChild(function (control) { control.disable({ onlySelf: true }); });\n\t            this._updateValue();\n\t            if (emitEvent !== false) {\n\t                this._valueChanges.emit(this._value);\n\t                this._statusChanges.emit(this._status);\n\t            }\n\t            this._updateAncestors(onlySelf);\n\t            this._onDisabledChange.forEach(function (changeFn) { return changeFn(true); });\n\t        };\n\t        /**\n\t         *  Enables the control. This means the control will be included in validation checks and\n\t          * the aggregate value of its parent. Its status is re-calculated based on its value and\n\t          * its validators.\n\t          * *\n\t          * If the control has children, all children will be enabled.\n\t         * @param {?=} __0\n\t         * @return {?}\n\t         */\n\t        AbstractControl.prototype.enable = function (_a) {\n\t            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n\t            this._status = VALID;\n\t            this._forEachChild(function (control) { control.enable({ onlySelf: true }); });\n\t            this.updateValueAndValidity({ onlySelf: true, emitEvent: emitEvent });\n\t            this._updateAncestors(onlySelf);\n\t            this._onDisabledChange.forEach(function (changeFn) { return changeFn(false); });\n\t        };\n\t        /**\n\t         * @param {?} onlySelf\n\t         * @return {?}\n\t         */\n\t        AbstractControl.prototype._updateAncestors = function (onlySelf) {\n\t            if (this._parent && !onlySelf) {\n\t                this._parent.updateValueAndValidity();\n\t                this._parent._updatePristine();\n\t                this._parent._updateTouched();\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} parent\n\t         * @return {?}\n\t         */\n\t        AbstractControl.prototype.setParent = function (parent) { this._parent = parent; };\n\t        /**\n\t         *  Sets the value of the control. Abstract method (implemented in sub-classes).\n\t         * @abstract\n\t         * @param {?} value\n\t         * @param {?=} options\n\t         * @return {?}\n\t         */\n\t        AbstractControl.prototype.setValue = function (value, options) { };\n\t        /**\n\t         *  Patches the value of the control. Abstract method (implemented in sub-classes).\n\t         * @abstract\n\t         * @param {?} value\n\t         * @param {?=} options\n\t         * @return {?}\n\t         */\n\t        AbstractControl.prototype.patchValue = function (value, options) { };\n\t        /**\n\t         *  Resets the control. Abstract method (implemented in sub-classes).\n\t         * @abstract\n\t         * @param {?=} value\n\t         * @param {?=} options\n\t         * @return {?}\n\t         */\n\t        AbstractControl.prototype.reset = function (value, options) { };\n\t        /**\n\t         *  Re-calculates the value and validation status of the control.\n\t          * *\n\t          * By default, it will also update the value and validity of its ancestors.\n\t         * @param {?=} __0\n\t         * @return {?}\n\t         */\n\t        AbstractControl.prototype.updateValueAndValidity = function (_a) {\n\t            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n\t            this._setInitialStatus();\n\t            this._updateValue();\n\t            if (this.enabled) {\n\t                this._errors = this._runValidator();\n\t                this._status = this._calculateStatus();\n\t                if (this._status === VALID || this._status === PENDING) {\n\t                    this._runAsyncValidator(emitEvent);\n\t                }\n\t            }\n\t            if (emitEvent !== false) {\n\t                this._valueChanges.emit(this._value);\n\t                this._statusChanges.emit(this._status);\n\t            }\n\t            if (this._parent && !onlySelf) {\n\t                this._parent.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n\t            }\n\t        };\n\t        /**\n\t         * @param {?=} __0\n\t         * @return {?}\n\t         */\n\t        AbstractControl.prototype._updateTreeValidity = function (_a) {\n\t            var emitEvent = (_a === void 0 ? { emitEvent: true } : _a).emitEvent;\n\t            this._forEachChild(function (ctrl) { return ctrl._updateTreeValidity({ emitEvent: emitEvent }); });\n\t            this.updateValueAndValidity({ onlySelf: true, emitEvent: emitEvent });\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        AbstractControl.prototype._setInitialStatus = function () { this._status = this._allControlsDisabled() ? DISABLED : VALID; };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        AbstractControl.prototype._runValidator = function () {\n\t            return this.validator ? this.validator(this) : null;\n\t        };\n\t        /**\n\t         * @param {?} emitEvent\n\t         * @return {?}\n\t         */\n\t        AbstractControl.prototype._runAsyncValidator = function (emitEvent) {\n\t            var _this = this;\n\t            if (this.asyncValidator) {\n\t                this._status = PENDING;\n\t                this._cancelExistingSubscription();\n\t                var /** @type {?} */ obs = toObservable(this.asyncValidator(this));\n\t                this._asyncValidationSubscription =\n\t                    obs.subscribe({ next: function (res) { return _this.setErrors(res, { emitEvent: emitEvent }); } });\n\t            }\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        AbstractControl.prototype._cancelExistingSubscription = function () {\n\t            if (this._asyncValidationSubscription) {\n\t                this._asyncValidationSubscription.unsubscribe();\n\t            }\n\t        };\n\t        /**\n\t         *  Sets errors on a form control.\n\t          * *\n\t          * This is used when validations are run manually by the user, rather than automatically.\n\t          * *\n\t          * Calling `setErrors` will also update the validity of the parent control.\n\t          * *\n\t          * ### Example\n\t          * *\n\t          * ```\n\t          * const login = new FormControl(\"someLogin\");\n\t          * login.setErrors({\n\t          * \"notUnique\": true\n\t          * });\n\t          * *\n\t          * expect(login.valid).toEqual(false);\n\t          * expect(login.errors).toEqual({\"notUnique\": true});\n\t          * *\n\t          * login.setValue(\"someOtherLogin\");\n\t          * *\n\t          * expect(login.valid).toEqual(true);\n\t          * ```\n\t         * @param {?} errors\n\t         * @param {?=} __1\n\t         * @return {?}\n\t         */\n\t        AbstractControl.prototype.setErrors = function (errors, _a) {\n\t            var emitEvent = (_a === void 0 ? {} : _a).emitEvent;\n\t            this._errors = errors;\n\t            this._updateControlsErrors(emitEvent !== false);\n\t        };\n\t        /**\n\t         *  Retrieves a child control given the control's name or path.\n\t          * *\n\t          * Paths can be passed in as an array or a string delimited by a dot.\n\t          * *\n\t          * To get a control nested within a `person` sub-group:\n\t          * *\n\t          * * `this.form.get('person.name');`\n\t          * *\n\t          * -OR-\n\t          * *\n\t          * * `this.form.get(['person', 'name']);`\n\t         * @param {?} path\n\t         * @return {?}\n\t         */\n\t        AbstractControl.prototype.get = function (path) { return _find(this, path, '.'); };\n\t        /**\n\t         *  Returns true if the control with the given path has the error specified. Otherwise\n\t          * returns null or undefined.\n\t          * *\n\t          * If no path is given, it checks for the error on the present control.\n\t         * @param {?} errorCode\n\t         * @param {?=} path\n\t         * @return {?}\n\t         */\n\t        AbstractControl.prototype.getError = function (errorCode, path) {\n\t            if (path === void 0) { path = null; }\n\t            var /** @type {?} */ control = path ? this.get(path) : this;\n\t            return control && control._errors ? control._errors[errorCode] : null;\n\t        };\n\t        /**\n\t         *  Returns true if the control with the given path has the error specified. Otherwise\n\t          * returns false.\n\t          * *\n\t          * If no path is given, it checks for the error on the present control.\n\t         * @param {?} errorCode\n\t         * @param {?=} path\n\t         * @return {?}\n\t         */\n\t        AbstractControl.prototype.hasError = function (errorCode, path) {\n\t            if (path === void 0) { path = null; }\n\t            return !!this.getError(errorCode, path);\n\t        };\n\t        Object.defineProperty(AbstractControl.prototype, \"root\", {\n\t            /**\n\t             *  Retrieves the top-level ancestor of this control.\n\t             * @return {?}\n\t             */\n\t            get: function () {\n\t                var /** @type {?} */ x = this;\n\t                while (x._parent) {\n\t                    x = x._parent;\n\t                }\n\t                return x;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @param {?} emitEvent\n\t         * @return {?}\n\t         */\n\t        AbstractControl.prototype._updateControlsErrors = function (emitEvent) {\n\t            this._status = this._calculateStatus();\n\t            if (emitEvent) {\n\t                this._statusChanges.emit(this._status);\n\t            }\n\t            if (this._parent) {\n\t                this._parent._updateControlsErrors(emitEvent);\n\t            }\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        AbstractControl.prototype._initObservables = function () {\n\t            this._valueChanges = new EventEmitter();\n\t            this._statusChanges = new EventEmitter();\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        AbstractControl.prototype._calculateStatus = function () {\n\t            if (this._allControlsDisabled())\n\t                return DISABLED;\n\t            if (this._errors)\n\t                return INVALID;\n\t            if (this._anyControlsHaveStatus(PENDING))\n\t                return PENDING;\n\t            if (this._anyControlsHaveStatus(INVALID))\n\t                return INVALID;\n\t            return VALID;\n\t        };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        AbstractControl.prototype._updateValue = function () { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} cb\n\t         * @return {?}\n\t         */\n\t        AbstractControl.prototype._forEachChild = function (cb) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} condition\n\t         * @return {?}\n\t         */\n\t        AbstractControl.prototype._anyControls = function (condition) { };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        AbstractControl.prototype._allControlsDisabled = function () { };\n\t        /**\n\t         * @param {?} status\n\t         * @return {?}\n\t         */\n\t        AbstractControl.prototype._anyControlsHaveStatus = function (status) {\n\t            return this._anyControls(function (control) { return control.status === status; });\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        AbstractControl.prototype._anyControlsDirty = function () {\n\t            return this._anyControls(function (control) { return control.dirty; });\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        AbstractControl.prototype._anyControlsTouched = function () {\n\t            return this._anyControls(function (control) { return control.touched; });\n\t        };\n\t        /**\n\t         * @param {?=} __0\n\t         * @return {?}\n\t         */\n\t        AbstractControl.prototype._updatePristine = function (_a) {\n\t            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n\t            this._pristine = !this._anyControlsDirty();\n\t            if (this._parent && !onlySelf) {\n\t                this._parent._updatePristine({ onlySelf: onlySelf });\n\t            }\n\t        };\n\t        /**\n\t         * @param {?=} __0\n\t         * @return {?}\n\t         */\n\t        AbstractControl.prototype._updateTouched = function (_a) {\n\t            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n\t            this._touched = this._anyControlsTouched();\n\t            if (this._parent && !onlySelf) {\n\t                this._parent._updateTouched({ onlySelf: onlySelf });\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} formState\n\t         * @return {?}\n\t         */\n\t        AbstractControl.prototype._isBoxedValue = function (formState) {\n\t            return typeof formState === 'object' && formState !== null &&\n\t                Object.keys(formState).length === 2 && 'value' in formState && 'disabled' in formState;\n\t        };\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        AbstractControl.prototype._registerOnCollectionChange = function (fn) { this._onCollectionChange = fn; };\n\t        return AbstractControl;\n\t    }());\n\t    /**\n\t     *  *\n\t      * It is one of the three fundamental building blocks of Angular forms, along with\n\t      * {@link FormGroup} and {@link FormArray}.\n\t      * *\n\t      * *\n\t      * When instantiating a {@link FormControl}, you can pass in an initial value as the\n\t      * first argument. Example:\n\t      * *\n\t      * ```ts\n\t      * const ctrl = new FormControl('some value');\n\t      * console.log(ctrl.value);     // 'some value'\n\t      * *```\n\t      * *\n\t      * You can also initialize the control with a form state object on instantiation,\n\t      * which includes both the value and whether or not the control is disabled.\n\t      * You can't use the value key without the disabled key; both are required\n\t      * to use this way of initialization.\n\t      * *\n\t      * ```ts\n\t      * const ctrl = new FormControl({value: 'n/a', disabled: true});\n\t      * console.log(ctrl.value);     // 'n/a'\n\t      * console.log(ctrl.status);   // 'DISABLED'\n\t      * ```\n\t      * *\n\t      * To include a sync validator (or an array of sync validators) with the control,\n\t      * pass it in as the second argument. Async validators are also supported, but\n\t      * have to be passed in separately as the third arg.\n\t      * *\n\t      * ```ts\n\t      * const ctrl = new FormControl('', Validators.required);\n\t      * console.log(ctrl.value);     // ''\n\t      * console.log(ctrl.status);   // 'INVALID'\n\t      * ```\n\t      * *\n\t      * See its superclass, {@link AbstractControl}, for more properties and methods.\n\t      * *\n\t      * * **npm package**: `@angular/forms`\n\t      * *\n\t     */\n\t    var FormControl = (function (_super) {\n\t        __extends$6(FormControl, _super);\n\t        /**\n\t         * @param {?=} formState\n\t         * @param {?=} validator\n\t         * @param {?=} asyncValidator\n\t         */\n\t        function FormControl(formState, validator, asyncValidator) {\n\t            if (formState === void 0) { formState = null; }\n\t            if (validator === void 0) { validator = null; }\n\t            if (asyncValidator === void 0) { asyncValidator = null; }\n\t            _super.call(this, coerceToValidator(validator), coerceToAsyncValidator(asyncValidator));\n\t            /** @internal */\n\t            this._onChange = [];\n\t            this._applyFormState(formState);\n\t            this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n\t            this._initObservables();\n\t        }\n\t        /**\n\t         *  Set the value of the form control to `value`.\n\t          * *\n\t          * If `onlySelf` is `true`, this change will only affect the validation of this `FormControl`\n\t          * and not its parent component. This defaults to false.\n\t          * *\n\t          * If `emitEvent` is `true`, this\n\t          * change will cause a `valueChanges` event on the `FormControl` to be emitted. This defaults\n\t          * to true (as it falls through to `updateValueAndValidity`).\n\t          * *\n\t          * If `emitModelToViewChange` is `true`, the view will be notified about the new value\n\t          * via an `onChange` event. This is the default behavior if `emitModelToViewChange` is not\n\t          * specified.\n\t          * *\n\t          * If `emitViewToModelChange` is `true`, an ngModelChange event will be fired to update the\n\t          * model.  This is the default behavior if `emitViewToModelChange` is not specified.\n\t         * @param {?} value\n\t         * @param {?=} __1\n\t         * @return {?}\n\t         */\n\t        FormControl.prototype.setValue = function (value, _a) {\n\t            var _this = this;\n\t            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent, emitModelToViewChange = _b.emitModelToViewChange, emitViewToModelChange = _b.emitViewToModelChange;\n\t            this._value = value;\n\t            if (this._onChange.length && emitModelToViewChange !== false) {\n\t                this._onChange.forEach(function (changeFn) { return changeFn(_this._value, emitViewToModelChange !== false); });\n\t            }\n\t            this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n\t        };\n\t        /**\n\t         *  Patches the value of a control.\n\t          * *\n\t          * This function is functionally the same as {@link FormControl.setValue} at this level.\n\t          * It exists for symmetry with {@link FormGroup.patchValue} on `FormGroups` and `FormArrays`,\n\t          * where it does behave differently.\n\t         * @param {?} value\n\t         * @param {?=} options\n\t         * @return {?}\n\t         */\n\t        FormControl.prototype.patchValue = function (value, options) {\n\t            if (options === void 0) { options = {}; }\n\t            this.setValue(value, options);\n\t        };\n\t        /**\n\t         *  Resets the form control. This means by default:\n\t          * *\n\t          * * it is marked as `pristine`\n\t          * * it is marked as `untouched`\n\t          * * value is set to null\n\t          * *\n\t          * You can also reset to a specific form state by passing through a standalone\n\t          * value or a form state object that contains both a value and a disabled state\n\t          * (these are the only two properties that cannot be calculated).\n\t          * *\n\t          * Ex:\n\t          * *\n\t          * ```ts\n\t          * this.control.reset('Nancy');\n\t          * *\n\t          * console.log(this.control.value);  // 'Nancy'\n\t          * ```\n\t          * *\n\t          * OR\n\t          * *\n\t          * ```\n\t          * this.control.reset({value: 'Nancy', disabled: true});\n\t          * *\n\t          * console.log(this.control.value);  // 'Nancy'\n\t          * console.log(this.control.status);  // 'DISABLED'\n\t          * ```\n\t         * @param {?=} formState\n\t         * @param {?=} __1\n\t         * @return {?}\n\t         */\n\t        FormControl.prototype.reset = function (formState, _a) {\n\t            if (formState === void 0) { formState = null; }\n\t            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n\t            this._applyFormState(formState);\n\t            this.markAsPristine({ onlySelf: onlySelf });\n\t            this.markAsUntouched({ onlySelf: onlySelf });\n\t            this.setValue(this._value, { onlySelf: onlySelf, emitEvent: emitEvent });\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        FormControl.prototype._updateValue = function () { };\n\t        /**\n\t         * @param {?} condition\n\t         * @return {?}\n\t         */\n\t        FormControl.prototype._anyControls = function (condition) { return false; };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        FormControl.prototype._allControlsDisabled = function () { return this.disabled; };\n\t        /**\n\t         *  Register a listener for change events.\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        FormControl.prototype.registerOnChange = function (fn) { this._onChange.push(fn); };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        FormControl.prototype._clearChangeFns = function () {\n\t            this._onChange = [];\n\t            this._onDisabledChange = [];\n\t            this._onCollectionChange = function () { };\n\t        };\n\t        /**\n\t         *  Register a listener for disabled events.\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        FormControl.prototype.registerOnDisabledChange = function (fn) {\n\t            this._onDisabledChange.push(fn);\n\t        };\n\t        /**\n\t         * @param {?} cb\n\t         * @return {?}\n\t         */\n\t        FormControl.prototype._forEachChild = function (cb) { };\n\t        /**\n\t         * @param {?} formState\n\t         * @return {?}\n\t         */\n\t        FormControl.prototype._applyFormState = function (formState) {\n\t            if (this._isBoxedValue(formState)) {\n\t                this._value = formState.value;\n\t                formState.disabled ? this.disable({ onlySelf: true, emitEvent: false }) :\n\t                    this.enable({ onlySelf: true, emitEvent: false });\n\t            }\n\t            else {\n\t                this._value = formState;\n\t            }\n\t        };\n\t        return FormControl;\n\t    }(AbstractControl));\n\t    /**\n\t     *  instances.\n\t      * *\n\t      * A `FormGroup` aggregates the values of each child {@link FormControl} into one object,\n\t      * with each control name as the key.  It calculates its status by reducing the statuses\n\t      * of its children. For example, if one of the controls in a group is invalid, the entire\n\t      * group becomes invalid.\n\t      * *\n\t      * `FormGroup` is one of the three fundamental building blocks used to define forms in Angular,\n\t      * along with {@link FormControl} and {@link FormArray}.\n\t      * *\n\t      * *\n\t      * When instantiating a {@link FormGroup}, pass in a collection of child controls as the first\n\t      * argument. The key for each child will be the name under which it is registered.\n\t      * *\n\t      * ### Example\n\t      * *\n\t      * ```\n\t      * const form = new FormGroup({\n\t      * first: new FormControl('Nancy', Validators.minLength(2)),\n\t      * last: new FormControl('Drew'),\n\t      * });\n\t      * *\n\t      * console.log(form.value);   // {first: 'Nancy', last; 'Drew'}\n\t      * console.log(form.status);  // 'VALID'\n\t      * ```\n\t      * *\n\t      * You can also include group-level validators as the second arg, or group-level async\n\t      * validators as the third arg. These come in handy when you want to perform validation\n\t      * that considers the value of more than one child control.\n\t      * *\n\t      * ### Example\n\t      * *\n\t      * ```\n\t      * const form = new FormGroup({\n\t      * password: new FormControl('', Validators.minLength(2)),\n\t      * passwordConfirm: new FormControl('', Validators.minLength(2)),\n\t      * }, passwordMatchValidator);\n\t      * *\n\t      * *\n\t      * function passwordMatchValidator(g: FormGroup) {\n\t      * return g.get('password').value === g.get('passwordConfirm').value\n\t      * ? null : {'mismatch': true};\n\t      * }\n\t      * ```\n\t      * *\n\t      * * **npm package**: `@angular/forms`\n\t      * *\n\t     */\n\t    var FormGroup = (function (_super) {\n\t        __extends$6(FormGroup, _super);\n\t        /**\n\t         * @param {?} controls\n\t         * @param {?=} validator\n\t         * @param {?=} asyncValidator\n\t         */\n\t        function FormGroup(controls, validator, asyncValidator) {\n\t            if (validator === void 0) { validator = null; }\n\t            if (asyncValidator === void 0) { asyncValidator = null; }\n\t            _super.call(this, validator, asyncValidator);\n\t            this.controls = controls;\n\t            this._initObservables();\n\t            this._setUpControls();\n\t            this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n\t        }\n\t        /**\n\t         *  Registers a control with the group's list of controls.\n\t          * *\n\t          * This method does not update value or validity of the control, so for\n\t          * most cases you'll want to use {@link FormGroup.addControl} instead.\n\t         * @param {?} name\n\t         * @param {?} control\n\t         * @return {?}\n\t         */\n\t        FormGroup.prototype.registerControl = function (name, control) {\n\t            if (this.controls[name])\n\t                return this.controls[name];\n\t            this.controls[name] = control;\n\t            control.setParent(this);\n\t            control._registerOnCollectionChange(this._onCollectionChange);\n\t            return control;\n\t        };\n\t        /**\n\t         *  Add a control to this group.\n\t         * @param {?} name\n\t         * @param {?} control\n\t         * @return {?}\n\t         */\n\t        FormGroup.prototype.addControl = function (name, control) {\n\t            this.registerControl(name, control);\n\t            this.updateValueAndValidity();\n\t            this._onCollectionChange();\n\t        };\n\t        /**\n\t         *  Remove a control from this group.\n\t         * @param {?} name\n\t         * @return {?}\n\t         */\n\t        FormGroup.prototype.removeControl = function (name) {\n\t            if (this.controls[name])\n\t                this.controls[name]._registerOnCollectionChange(function () { });\n\t            delete (this.controls[name]);\n\t            this.updateValueAndValidity();\n\t            this._onCollectionChange();\n\t        };\n\t        /**\n\t         *  Replace an existing control.\n\t         * @param {?} name\n\t         * @param {?} control\n\t         * @return {?}\n\t         */\n\t        FormGroup.prototype.setControl = function (name, control) {\n\t            if (this.controls[name])\n\t                this.controls[name]._registerOnCollectionChange(function () { });\n\t            delete (this.controls[name]);\n\t            if (control)\n\t                this.registerControl(name, control);\n\t            this.updateValueAndValidity();\n\t            this._onCollectionChange();\n\t        };\n\t        /**\n\t         *  Check whether there is an enabled control with the given name in the group.\n\t          * *\n\t          * It will return false for disabled controls. If you'd like to check for\n\t          * existence in the group only, use {@link AbstractControl.get} instead.\n\t         * @param {?} controlName\n\t         * @return {?}\n\t         */\n\t        FormGroup.prototype.contains = function (controlName) {\n\t            return this.controls.hasOwnProperty(controlName) && this.controls[controlName].enabled;\n\t        };\n\t        /**\n\t         *  Sets the value of the {@link FormGroup}. It accepts an object that matches\n\t          * the structure of the group, with control names as keys.\n\t          * *\n\t          * This method performs strict checks, so it will throw an error if you try\n\t          * to set the value of a control that doesn't exist or if you exclude the\n\t          * value of a control.\n\t          * *\n\t          * ### Example\n\t          * *\n\t          * ```\n\t          * const form = new FormGroup({\n\t          * first: new FormControl(),\n\t          * last: new FormControl()\n\t          * });\n\t          * console.log(form.value);   // {first: null, last: null}\n\t          * *\n\t          * form.setValue({first: 'Nancy', last: 'Drew'});\n\t          * console.log(form.value);   // {first: 'Nancy', last: 'Drew'}\n\t          * *\n\t          * ```\n\t         * @param {?} value\n\t         * @param {?=} __1\n\t         * @return {?}\n\t         */\n\t        FormGroup.prototype.setValue = function (value, _a) {\n\t            var _this = this;\n\t            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n\t            this._checkAllValuesPresent(value);\n\t            Object.keys(value).forEach(function (name) {\n\t                _this._throwIfControlMissing(name);\n\t                _this.controls[name].setValue(value[name], { onlySelf: true, emitEvent: emitEvent });\n\t            });\n\t            this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n\t        };\n\t        /**\n\t         *  Patches the value of the {@link FormGroup}. It accepts an object with control\n\t          * names as keys, and will do its best to match the values to the correct controls\n\t          * in the group.\n\t          * *\n\t          * It accepts both super-sets and sub-sets of the group without throwing an error.\n\t          * *\n\t          * ### Example\n\t          * *\n\t          * ```\n\t          * const form = new FormGroup({\n\t          * first: new FormControl(),\n\t          * last: new FormControl()\n\t          * });\n\t          * console.log(form.value);   // {first: null, last: null}\n\t          * *\n\t          * form.patchValue({first: 'Nancy'});\n\t          * console.log(form.value);   // {first: 'Nancy', last: null}\n\t          * *\n\t          * ```\n\t         * @param {?} value\n\t         * @param {?=} __1\n\t         * @return {?}\n\t         */\n\t        FormGroup.prototype.patchValue = function (value, _a) {\n\t            var _this = this;\n\t            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n\t            Object.keys(value).forEach(function (name) {\n\t                if (_this.controls[name]) {\n\t                    _this.controls[name].patchValue(value[name], { onlySelf: true, emitEvent: emitEvent });\n\t                }\n\t            });\n\t            this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n\t        };\n\t        /**\n\t         *  Resets the {@link FormGroup}. This means by default:\n\t          * *\n\t          * * The group and all descendants are marked `pristine`\n\t          * * The group and all descendants are marked `untouched`\n\t          * * The value of all descendants will be null or null maps\n\t          * *\n\t          * You can also reset to a specific form state by passing in a map of states\n\t          * that matches the structure of your form, with control names as keys. The state\n\t          * can be a standalone value or a form state object with both a value and a disabled\n\t          * status.\n\t          * *\n\t          * ### Example\n\t          * *\n\t          * ```ts\n\t          * this.form.reset({first: 'name', last: 'last name'});\n\t          * *\n\t          * console.log(this.form.value);  // {first: 'name', last: 'last name'}\n\t          * ```\n\t          * *\n\t          * - OR -\n\t          * *\n\t          * ```\n\t          * this.form.reset({\n\t          * first: {value: 'name', disabled: true},\n\t          * last: 'last'\n\t          * });\n\t          * *\n\t          * console.log(this.form.value);  // {first: 'name', last: 'last name'}\n\t          * console.log(this.form.get('first').status);  // 'DISABLED'\n\t          * ```\n\t         * @param {?=} value\n\t         * @param {?=} __1\n\t         * @return {?}\n\t         */\n\t        FormGroup.prototype.reset = function (value, _a) {\n\t            if (value === void 0) { value = {}; }\n\t            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n\t            this._forEachChild(function (control, name) {\n\t                control.reset(value[name], { onlySelf: true, emitEvent: emitEvent });\n\t            });\n\t            this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n\t            this._updatePristine({ onlySelf: onlySelf });\n\t            this._updateTouched({ onlySelf: onlySelf });\n\t        };\n\t        /**\n\t         *  The aggregate value of the {@link FormGroup}, including any disabled controls.\n\t          * *\n\t          * If you'd like to include all values regardless of disabled status, use this method.\n\t          * Otherwise, the `value` property is the best way to get the value of the group.\n\t         * @return {?}\n\t         */\n\t        FormGroup.prototype.getRawValue = function () {\n\t            return this._reduceChildren({}, function (acc, control, name) {\n\t                acc[name] = control.value;\n\t                return acc;\n\t            });\n\t        };\n\t        /**\n\t         * @param {?} name\n\t         * @return {?}\n\t         */\n\t        FormGroup.prototype._throwIfControlMissing = function (name) {\n\t            if (!Object.keys(this.controls).length) {\n\t                throw new Error(\"\\n        There are no form controls registered with this group yet.  If you're using ngModel,\\n        you may want to check next tick (e.g. use setTimeout).\\n      \");\n\t            }\n\t            if (!this.controls[name]) {\n\t                throw new Error(\"Cannot find form control with name: \" + name + \".\");\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} cb\n\t         * @return {?}\n\t         */\n\t        FormGroup.prototype._forEachChild = function (cb) {\n\t            var _this = this;\n\t            Object.keys(this.controls).forEach(function (k) { return cb(_this.controls[k], k); });\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        FormGroup.prototype._setUpControls = function () {\n\t            var _this = this;\n\t            this._forEachChild(function (control) {\n\t                control.setParent(_this);\n\t                control._registerOnCollectionChange(_this._onCollectionChange);\n\t            });\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        FormGroup.prototype._updateValue = function () { this._value = this._reduceValue(); };\n\t        /**\n\t         * @param {?} condition\n\t         * @return {?}\n\t         */\n\t        FormGroup.prototype._anyControls = function (condition) {\n\t            var _this = this;\n\t            var /** @type {?} */ res = false;\n\t            this._forEachChild(function (control, name) {\n\t                res = res || (_this.contains(name) && condition(control));\n\t            });\n\t            return res;\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        FormGroup.prototype._reduceValue = function () {\n\t            var _this = this;\n\t            return this._reduceChildren({}, function (acc, control, name) {\n\t                if (control.enabled || _this.disabled) {\n\t                    acc[name] = control.value;\n\t                }\n\t                return acc;\n\t            });\n\t        };\n\t        /**\n\t         * @param {?} initValue\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        FormGroup.prototype._reduceChildren = function (initValue, fn) {\n\t            var /** @type {?} */ res = initValue;\n\t            this._forEachChild(function (control, name) { res = fn(res, control, name); });\n\t            return res;\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        FormGroup.prototype._allControlsDisabled = function () {\n\t            for (var _i = 0, _a = Object.keys(this.controls); _i < _a.length; _i++) {\n\t                var controlName = _a[_i];\n\t                if (this.controls[controlName].enabled) {\n\t                    return false;\n\t                }\n\t            }\n\t            return Object.keys(this.controls).length > 0 || this.disabled;\n\t        };\n\t        /**\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        FormGroup.prototype._checkAllValuesPresent = function (value) {\n\t            this._forEachChild(function (control, name) {\n\t                if (value[name] === undefined) {\n\t                    throw new Error(\"Must supply a value for form control with name: '\" + name + \"'.\");\n\t                }\n\t            });\n\t        };\n\t        return FormGroup;\n\t    }(AbstractControl));\n\t    /**\n\t     *  instances.\n\t      * *\n\t      * A `FormArray` aggregates the values of each child {@link FormControl} into an array.\n\t      * It calculates its status by reducing the statuses of its children. For example, if one of\n\t      * the controls in a `FormArray` is invalid, the entire array becomes invalid.\n\t      * *\n\t      * `FormArray` is one of the three fundamental building blocks used to define forms in Angular,\n\t      * along with {@link FormControl} and {@link FormGroup}.\n\t      * *\n\t      * *\n\t      * When instantiating a {@link FormArray}, pass in an array of child controls as the first\n\t      * argument.\n\t      * *\n\t      * ### Example\n\t      * *\n\t      * ```\n\t      * const arr = new FormArray([\n\t      * new FormControl('Nancy', Validators.minLength(2)),\n\t      * new FormControl('Drew'),\n\t      * ]);\n\t      * *\n\t      * console.log(arr.value);   // ['Nancy', 'Drew']\n\t      * console.log(arr.status);  // 'VALID'\n\t      * ```\n\t      * *\n\t      * You can also include array-level validators as the second arg, or array-level async\n\t      * validators as the third arg. These come in handy when you want to perform validation\n\t      * that considers the value of more than one child control.\n\t      * *\n\t      * ### Adding or removing controls\n\t      * *\n\t      * To change the controls in the array, use the `push`, `insert`, or `removeAt` methods\n\t      * in `FormArray` itself. These methods ensure the controls are properly tracked in the\n\t      * form's hierarchy. Do not modify the array of `AbstractControl`s used to instantiate\n\t      * the `FormArray` directly, as that will result in strange and unexpected behavior such\n\t      * as broken change detection.\n\t      * *\n\t      * * **npm package**: `@angular/forms`\n\t      * *\n\t     */\n\t    var FormArray = (function (_super) {\n\t        __extends$6(FormArray, _super);\n\t        /**\n\t         * @param {?} controls\n\t         * @param {?=} validator\n\t         * @param {?=} asyncValidator\n\t         */\n\t        function FormArray(controls, validator, asyncValidator) {\n\t            if (validator === void 0) { validator = null; }\n\t            if (asyncValidator === void 0) { asyncValidator = null; }\n\t            _super.call(this, validator, asyncValidator);\n\t            this.controls = controls;\n\t            this._initObservables();\n\t            this._setUpControls();\n\t            this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n\t        }\n\t        /**\n\t         *  Get the {@link AbstractControl} at the given `index` in the array.\n\t         * @param {?} index\n\t         * @return {?}\n\t         */\n\t        FormArray.prototype.at = function (index) { return this.controls[index]; };\n\t        /**\n\t         *  Insert a new {@link AbstractControl} at the end of the array.\n\t         * @param {?} control\n\t         * @return {?}\n\t         */\n\t        FormArray.prototype.push = function (control) {\n\t            this.controls.push(control);\n\t            this._registerControl(control);\n\t            this.updateValueAndValidity();\n\t            this._onCollectionChange();\n\t        };\n\t        /**\n\t         *  Insert a new {@link AbstractControl} at the given `index` in the array.\n\t         * @param {?} index\n\t         * @param {?} control\n\t         * @return {?}\n\t         */\n\t        FormArray.prototype.insert = function (index, control) {\n\t            this.controls.splice(index, 0, control);\n\t            this._registerControl(control);\n\t            this.updateValueAndValidity();\n\t            this._onCollectionChange();\n\t        };\n\t        /**\n\t         *  Remove the control at the given `index` in the array.\n\t         * @param {?} index\n\t         * @return {?}\n\t         */\n\t        FormArray.prototype.removeAt = function (index) {\n\t            if (this.controls[index])\n\t                this.controls[index]._registerOnCollectionChange(function () { });\n\t            this.controls.splice(index, 1);\n\t            this.updateValueAndValidity();\n\t            this._onCollectionChange();\n\t        };\n\t        /**\n\t         *  Replace an existing control.\n\t         * @param {?} index\n\t         * @param {?} control\n\t         * @return {?}\n\t         */\n\t        FormArray.prototype.setControl = function (index, control) {\n\t            if (this.controls[index])\n\t                this.controls[index]._registerOnCollectionChange(function () { });\n\t            this.controls.splice(index, 1);\n\t            if (control) {\n\t                this.controls.splice(index, 0, control);\n\t                this._registerControl(control);\n\t            }\n\t            this.updateValueAndValidity();\n\t            this._onCollectionChange();\n\t        };\n\t        Object.defineProperty(FormArray.prototype, \"length\", {\n\t            /**\n\t             *  Length of the control array.\n\t             * @return {?}\n\t             */\n\t            get: function () { return this.controls.length; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         *  Sets the value of the {@link FormArray}. It accepts an array that matches\n\t          * the structure of the control.\n\t          * *\n\t          * This method performs strict checks, so it will throw an error if you try\n\t          * to set the value of a control that doesn't exist or if you exclude the\n\t          * value of a control.\n\t          * *\n\t          * ### Example\n\t          * *\n\t          * ```\n\t          * const arr = new FormArray([\n\t          * new FormControl(),\n\t          * new FormControl()\n\t          * ]);\n\t          * console.log(arr.value);   // [null, null]\n\t          * *\n\t          * arr.setValue(['Nancy', 'Drew']);\n\t          * console.log(arr.value);   // ['Nancy', 'Drew']\n\t          * ```\n\t         * @param {?} value\n\t         * @param {?=} __1\n\t         * @return {?}\n\t         */\n\t        FormArray.prototype.setValue = function (value, _a) {\n\t            var _this = this;\n\t            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n\t            this._checkAllValuesPresent(value);\n\t            value.forEach(function (newValue, index) {\n\t                _this._throwIfControlMissing(index);\n\t                _this.at(index).setValue(newValue, { onlySelf: true, emitEvent: emitEvent });\n\t            });\n\t            this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n\t        };\n\t        /**\n\t         *  Patches the value of the {@link FormArray}. It accepts an array that matches the\n\t          * structure of the control, and will do its best to match the values to the correct\n\t          * controls in the group.\n\t          * *\n\t          * It accepts both super-sets and sub-sets of the array without throwing an error.\n\t          * *\n\t          * ### Example\n\t          * *\n\t          * ```\n\t          * const arr = new FormArray([\n\t          * new FormControl(),\n\t          * new FormControl()\n\t          * ]);\n\t          * console.log(arr.value);   // [null, null]\n\t          * *\n\t          * arr.patchValue(['Nancy']);\n\t          * console.log(arr.value);   // ['Nancy', null]\n\t          * ```\n\t         * @param {?} value\n\t         * @param {?=} __1\n\t         * @return {?}\n\t         */\n\t        FormArray.prototype.patchValue = function (value, _a) {\n\t            var _this = this;\n\t            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n\t            value.forEach(function (newValue, index) {\n\t                if (_this.at(index)) {\n\t                    _this.at(index).patchValue(newValue, { onlySelf: true, emitEvent: emitEvent });\n\t                }\n\t            });\n\t            this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n\t        };\n\t        /**\n\t         *  Resets the {@link FormArray}. This means by default:\n\t          * *\n\t          * * The array and all descendants are marked `pristine`\n\t          * * The array and all descendants are marked `untouched`\n\t          * * The value of all descendants will be null or null maps\n\t          * *\n\t          * You can also reset to a specific form state by passing in an array of states\n\t          * that matches the structure of the control. The state can be a standalone value\n\t          * or a form state object with both a value and a disabled status.\n\t          * *\n\t          * ### Example\n\t          * *\n\t          * ```ts\n\t          * this.arr.reset(['name', 'last name']);\n\t          * *\n\t          * console.log(this.arr.value);  // ['name', 'last name']\n\t          * ```\n\t          * *\n\t          * - OR -\n\t          * *\n\t          * ```\n\t          * this.arr.reset([\n\t          * {value: 'name', disabled: true},\n\t          * 'last'\n\t          * ]);\n\t          * *\n\t          * console.log(this.arr.value);  // ['name', 'last name']\n\t          * console.log(this.arr.get(0).status);  // 'DISABLED'\n\t          * ```\n\t         * @param {?=} value\n\t         * @param {?=} __1\n\t         * @return {?}\n\t         */\n\t        FormArray.prototype.reset = function (value, _a) {\n\t            if (value === void 0) { value = []; }\n\t            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n\t            this._forEachChild(function (control, index) {\n\t                control.reset(value[index], { onlySelf: true, emitEvent: emitEvent });\n\t            });\n\t            this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n\t            this._updatePristine({ onlySelf: onlySelf });\n\t            this._updateTouched({ onlySelf: onlySelf });\n\t        };\n\t        /**\n\t         *  The aggregate value of the array, including any disabled controls.\n\t          * *\n\t          * If you'd like to include all values regardless of disabled status, use this method.\n\t          * Otherwise, the `value` property is the best way to get the value of the array.\n\t         * @return {?}\n\t         */\n\t        FormArray.prototype.getRawValue = function () { return this.controls.map(function (control) { return control.value; }); };\n\t        /**\n\t         * @param {?} index\n\t         * @return {?}\n\t         */\n\t        FormArray.prototype._throwIfControlMissing = function (index) {\n\t            if (!this.controls.length) {\n\t                throw new Error(\"\\n        There are no form controls registered with this array yet.  If you're using ngModel,\\n        you may want to check next tick (e.g. use setTimeout).\\n      \");\n\t            }\n\t            if (!this.at(index)) {\n\t                throw new Error(\"Cannot find form control at index \" + index);\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} cb\n\t         * @return {?}\n\t         */\n\t        FormArray.prototype._forEachChild = function (cb) {\n\t            this.controls.forEach(function (control, index) { cb(control, index); });\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        FormArray.prototype._updateValue = function () {\n\t            var _this = this;\n\t            this._value = this.controls.filter(function (control) { return control.enabled || _this.disabled; })\n\t                .map(function (control) { return control.value; });\n\t        };\n\t        /**\n\t         * @param {?} condition\n\t         * @return {?}\n\t         */\n\t        FormArray.prototype._anyControls = function (condition) {\n\t            return this.controls.some(function (control) { return control.enabled && condition(control); });\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        FormArray.prototype._setUpControls = function () {\n\t            var _this = this;\n\t            this._forEachChild(function (control) { return _this._registerControl(control); });\n\t        };\n\t        /**\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        FormArray.prototype._checkAllValuesPresent = function (value) {\n\t            this._forEachChild(function (control, i) {\n\t                if (value[i] === undefined) {\n\t                    throw new Error(\"Must supply a value for form control at index: \" + i + \".\");\n\t                }\n\t            });\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        FormArray.prototype._allControlsDisabled = function () {\n\t            for (var _i = 0, _a = this.controls; _i < _a.length; _i++) {\n\t                var control = _a[_i];\n\t                if (control.enabled)\n\t                    return false;\n\t            }\n\t            return this.controls.length > 0 || this.disabled;\n\t        };\n\t        /**\n\t         * @param {?} control\n\t         * @return {?}\n\t         */\n\t        FormArray.prototype._registerControl = function (control) {\n\t            control.setParent(this);\n\t            control._registerOnCollectionChange(this._onCollectionChange);\n\t        };\n\t        return FormArray;\n\t    }(AbstractControl));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$4 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var /** @type {?} */ formDirectiveProvider = {\n\t        provide: ControlContainer,\n\t        useExisting: _angular_core.forwardRef(function () { return NgForm; })\n\t    };\n\t    var /** @type {?} */ resolvedPromise = Promise.resolve(null);\n\t    /**\n\t     *  to track aggregate form value and validation status.\n\t      * *\n\t      * *\n\t      * As soon as you import the `FormsModule`, this directive becomes active by default on\n\t      * all `<form>` tags.  You don't need to add a special selector.\n\t      * *\n\t      * You can export the directive into a local template variable using `ngForm` as the key\n\t      * (ex: `#myForm=\"ngForm\"`). This is optional, but useful.  Many properties from the underlying\n\t      * {@link FormGroup} instance are duplicated on the directive itself, so a reference to it\n\t      * will give you access to the aggregate value and validity status of the form, as well as\n\t      * user interaction properties like `dirty` and `touched`.\n\t      * *\n\t      * To register child controls with the form, you'll want to use {@link NgModel} with a\n\t      * `name` attribute.  You can also use {@link NgModelGroup} if you'd like to create\n\t      * sub-groups within the form.\n\t      * *\n\t      * You can listen to the directive's `ngSubmit` event to be notified when the user has\n\t      * triggered a form submission. The `ngSubmit` event will be emitted with the original form\n\t      * submission event.\n\t      * *\n\t      * {@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n\t      * *\n\t      * * **npm package**: `@angular/forms`\n\t      * *\n\t      * * **NgModule**: `FormsModule`\n\t      * *\n\t      * @stable\n\t     */\n\t    var NgForm = (function (_super) {\n\t        __extends$4(NgForm, _super);\n\t        /**\n\t         * @param {?} validators\n\t         * @param {?} asyncValidators\n\t         */\n\t        function NgForm(validators, asyncValidators) {\n\t            _super.call(this);\n\t            this._submitted = false;\n\t            this.ngSubmit = new EventEmitter();\n\t            this.form =\n\t                new FormGroup({}, composeValidators(validators), composeAsyncValidators(asyncValidators));\n\t        }\n\t        Object.defineProperty(NgForm.prototype, \"submitted\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._submitted; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgForm.prototype, \"formDirective\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgForm.prototype, \"control\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this.form; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgForm.prototype, \"path\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return []; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgForm.prototype, \"controls\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this.form.controls; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @param {?} dir\n\t         * @return {?}\n\t         */\n\t        NgForm.prototype.addControl = function (dir) {\n\t            var _this = this;\n\t            resolvedPromise.then(function () {\n\t                var /** @type {?} */ container = _this._findContainer(dir.path);\n\t                dir._control = (container.registerControl(dir.name, dir.control));\n\t                setUpControl(dir.control, dir);\n\t                dir.control.updateValueAndValidity({ emitEvent: false });\n\t            });\n\t        };\n\t        /**\n\t         * @param {?} dir\n\t         * @return {?}\n\t         */\n\t        NgForm.prototype.getControl = function (dir) { return (this.form.get(dir.path)); };\n\t        /**\n\t         * @param {?} dir\n\t         * @return {?}\n\t         */\n\t        NgForm.prototype.removeControl = function (dir) {\n\t            var _this = this;\n\t            resolvedPromise.then(function () {\n\t                var /** @type {?} */ container = _this._findContainer(dir.path);\n\t                if (container) {\n\t                    container.removeControl(dir.name);\n\t                }\n\t            });\n\t        };\n\t        /**\n\t         * @param {?} dir\n\t         * @return {?}\n\t         */\n\t        NgForm.prototype.addFormGroup = function (dir) {\n\t            var _this = this;\n\t            resolvedPromise.then(function () {\n\t                var /** @type {?} */ container = _this._findContainer(dir.path);\n\t                var /** @type {?} */ group = new FormGroup({});\n\t                setUpFormContainer(group, dir);\n\t                container.registerControl(dir.name, group);\n\t                group.updateValueAndValidity({ emitEvent: false });\n\t            });\n\t        };\n\t        /**\n\t         * @param {?} dir\n\t         * @return {?}\n\t         */\n\t        NgForm.prototype.removeFormGroup = function (dir) {\n\t            var _this = this;\n\t            resolvedPromise.then(function () {\n\t                var /** @type {?} */ container = _this._findContainer(dir.path);\n\t                if (container) {\n\t                    container.removeControl(dir.name);\n\t                }\n\t            });\n\t        };\n\t        /**\n\t         * @param {?} dir\n\t         * @return {?}\n\t         */\n\t        NgForm.prototype.getFormGroup = function (dir) { return (this.form.get(dir.path)); };\n\t        /**\n\t         * @param {?} dir\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        NgForm.prototype.updateModel = function (dir, value) {\n\t            var _this = this;\n\t            resolvedPromise.then(function () {\n\t                var /** @type {?} */ ctrl = (_this.form.get(dir.path));\n\t                ctrl.setValue(value);\n\t            });\n\t        };\n\t        /**\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        NgForm.prototype.setValue = function (value) { this.control.setValue(value); };\n\t        /**\n\t         * @param {?} $event\n\t         * @return {?}\n\t         */\n\t        NgForm.prototype.onSubmit = function ($event) {\n\t            this._submitted = true;\n\t            this.ngSubmit.emit($event);\n\t            return false;\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        NgForm.prototype.onReset = function () { this.resetForm(); };\n\t        /**\n\t         * @param {?=} value\n\t         * @return {?}\n\t         */\n\t        NgForm.prototype.resetForm = function (value) {\n\t            if (value === void 0) { value = undefined; }\n\t            this.form.reset(value);\n\t            this._submitted = false;\n\t        };\n\t        /**\n\t         * @param {?} path\n\t         * @return {?}\n\t         */\n\t        NgForm.prototype._findContainer = function (path) {\n\t            path.pop();\n\t            return path.length ? (this.form.get(path)) : this.form;\n\t        };\n\t        NgForm.decorators = [\n\t            { type: _angular_core.Directive, args: [{\n\t                        selector: 'form:not([ngNoForm]):not([formGroup]),ngForm,[ngForm]',\n\t                        providers: [formDirectiveProvider],\n\t                        host: { '(submit)': 'onSubmit($event)', '(reset)': 'onReset()' },\n\t                        outputs: ['ngSubmit'],\n\t                        exportAs: 'ngForm'\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        NgForm.ctorParameters = function () { return [\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n\t        ]; };\n\t        return NgForm;\n\t    }(ControlContainer));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var /** @type {?} */ Examples = {\n\t        formControlName: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n      <input formControlName=\\\"firstName\\\">\\n    </div>\\n\\n    In your class:\\n\\n    this.myGroup = new FormGroup({\\n       firstName: new FormControl()\\n    });\",\n\t        formGroupName: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n       <div formGroupName=\\\"person\\\">\\n          <input formControlName=\\\"firstName\\\">\\n       </div>\\n    </div>\\n\\n    In your class:\\n\\n    this.myGroup = new FormGroup({\\n       person: new FormGroup({ firstName: new FormControl() })\\n    });\",\n\t        formArrayName: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n      <div formArrayName=\\\"cities\\\">\\n        <div *ngFor=\\\"let city of cityArray.controls; let i=index\\\">\\n          <input [formControlName]=\\\"i\\\">\\n        </div>\\n      </div>\\n    </div>\\n\\n    In your class:\\n\\n    this.cityArray = new FormArray([new FormControl('SF')]);\\n    this.myGroup = new FormGroup({\\n      cities: this.cityArray\\n    });\",\n\t        ngModelGroup: \"\\n    <form>\\n       <div ngModelGroup=\\\"person\\\">\\n          <input [(ngModel)]=\\\"person.name\\\" name=\\\"firstName\\\">\\n       </div>\\n    </form>\",\n\t        ngModelWithFormGroup: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n       <input formControlName=\\\"firstName\\\">\\n       <input [(ngModel)]=\\\"showMoreControls\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n    </div>\\n  \"\n\t    };\n\t\n\t    var TemplateDrivenErrors = (function () {\n\t        function TemplateDrivenErrors() {\n\t        }\n\t        /**\n\t         * @return {?}\n\t         */\n\t        TemplateDrivenErrors.modelParentException = function () {\n\t            throw new Error(\"\\n      ngModel cannot be used to register form controls with a parent formGroup directive.  Try using\\n      formGroup's partner directive \\\"formControlName\\\" instead.  Example:\\n\\n      \" + Examples.formControlName + \"\\n\\n      Or, if you'd like to avoid registering this form control, indicate that it's standalone in ngModelOptions:\\n\\n      Example:\\n\\n      \" + Examples.ngModelWithFormGroup);\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        TemplateDrivenErrors.formGroupNameException = function () {\n\t            throw new Error(\"\\n      ngModel cannot be used to register form controls with a parent formGroupName or formArrayName directive.\\n\\n      Option 1: Use formControlName instead of ngModel (reactive strategy):\\n\\n      \" + Examples.formGroupName + \"\\n\\n      Option 2:  Update ngModel's parent be ngModelGroup (template-driven strategy):\\n\\n      \" + Examples.ngModelGroup);\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        TemplateDrivenErrors.missingNameException = function () {\n\t            throw new Error(\"If ngModel is used within a form tag, either the name attribute must be set or the form\\n      control must be defined as 'standalone' in ngModelOptions.\\n\\n      Example 1: <input [(ngModel)]=\\\"person.firstName\\\" name=\\\"first\\\">\\n      Example 2: <input [(ngModel)]=\\\"person.firstName\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\");\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        TemplateDrivenErrors.modelGroupParentException = function () {\n\t            throw new Error(\"\\n      ngModelGroup cannot be used with a parent formGroup directive.\\n\\n      Option 1: Use formGroupName instead of ngModelGroup (reactive strategy):\\n\\n      \" + Examples.formGroupName + \"\\n\\n      Option 2:  Use a regular form tag instead of the formGroup directive (template-driven strategy):\\n\\n      \" + Examples.ngModelGroup);\n\t        };\n\t        return TemplateDrivenErrors;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$8 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var /** @type {?} */ modelGroupProvider = {\n\t        provide: ControlContainer,\n\t        useExisting: _angular_core.forwardRef(function () { return NgModelGroup; })\n\t    };\n\t    /**\n\t     *  *\n\t      * *\n\t      * This directive can only be used as a child of {@link NgForm} (or in other words,\n\t      * within `<form>` tags).\n\t      * *\n\t      * Use this directive if you'd like to create a sub-group within a form. This can\n\t      * come in handy if you want to validate a sub-group of your form separately from\n\t      * the rest of your form, or if some values in your domain model make more sense to\n\t      * consume together in a nested object.\n\t      * *\n\t      * Pass in the name you'd like this sub-group to have and it will become the key\n\t      * for the sub-group in the form's full value. You can also export the directive into\n\t      * a local template variable using `ngModelGroup` (ex: `#myGroup=\"ngModelGroup\"`).\n\t      * *\n\t      * {@example forms/ts/ngModelGroup/ng_model_group_example.ts region='Component'}\n\t      * *\n\t      * * **npm package**: `@angular/forms`\n\t      * *\n\t      * * **NgModule**: `FormsModule`\n\t      * *\n\t     */\n\t    var NgModelGroup = (function (_super) {\n\t        __extends$8(NgModelGroup, _super);\n\t        /**\n\t         * @param {?} parent\n\t         * @param {?} validators\n\t         * @param {?} asyncValidators\n\t         */\n\t        function NgModelGroup(parent, validators, asyncValidators) {\n\t            _super.call(this);\n\t            this._parent = parent;\n\t            this._validators = validators;\n\t            this._asyncValidators = asyncValidators;\n\t        }\n\t        /**\n\t         * @return {?}\n\t         */\n\t        NgModelGroup.prototype._checkParentType = function () {\n\t            if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm)) {\n\t                TemplateDrivenErrors.modelGroupParentException();\n\t            }\n\t        };\n\t        NgModelGroup.decorators = [\n\t            { type: _angular_core.Directive, args: [{ selector: '[ngModelGroup]', providers: [modelGroupProvider], exportAs: 'ngModelGroup' },] },\n\t        ];\n\t        /** @nocollapse */\n\t        NgModelGroup.ctorParameters = function () { return [\n\t            { type: ControlContainer, decorators: [{ type: _angular_core.Host }, { type: _angular_core.SkipSelf },] },\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n\t        ]; };\n\t        NgModelGroup.propDecorators = {\n\t            'name': [{ type: _angular_core.Input, args: ['ngModelGroup',] },],\n\t        };\n\t        return NgModelGroup;\n\t    }(AbstractFormGroupDirective));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$7 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var /** @type {?} */ formControlBinding = {\n\t        provide: NgControl,\n\t        useExisting: _angular_core.forwardRef(function () { return NgModel; })\n\t    };\n\t    /**\n\t     * `ngModel` forces an additional change detection run when its inputs change:\n\t     * E.g.:\n\t     * ```\n\t     * <div>{{myModel.valid}}</div>\n\t     * <input [(ngModel)]=\"myValue\" #myModel=\"ngModel\">\n\t     * ```\n\t     * I.e. `ngModel` can export itself on the element and then be used in the template.\n\t     * Normally, this would result in expressions before the `input` that use the exported directive\n\t     * to have and old value as they have been\n\t     * dirty checked before. As this is a very common case for `ngModel`, we added this second change\n\t     * detection run.\n\t     *\n\t     * Notes:\n\t     * - this is just one extra run no matter how many `ngModel` have been changed.\n\t     * - this is a general problem when using `exportAs` for directives!\n\t     */\n\t    var /** @type {?} */ resolvedPromise$1 = Promise.resolve(null);\n\t    /**\n\t     *  to a form control element.\n\t      * *\n\t      * The {@link FormControl} instance will track the value, user interaction, and\n\t      * validation status of the control and keep the view synced with the model. If used\n\t      * within a parent form, the directive will also register itself with the form as a child\n\t      * control.\n\t      * *\n\t      * *\n\t      * This directive can be used by itself or as part of a larger form. All you need is the\n\t      * `ngModel` selector to activate it.\n\t      * *\n\t      * It accepts a domain model as an optional {@link @Input}. If you have a one-way binding\n\t      * to `ngModel` with `[]` syntax, changing the value of the domain model in the component\n\t      * class will set the value in the view. If you have a two-way binding with `[()]` syntax\n\t      * (also known as 'banana-box syntax'), the value in the UI will always be synced back to\n\t      * the domain model in your class as well.\n\t      * *\n\t      * If you wish to inspect the properties of the associated {@link FormControl} (like\n\t      * validity state), you can also export the directive into a local template variable using\n\t      * `ngModel` as the key (ex: `#myVar=\"ngModel\"`). You can then access the control using the\n\t      * directive's `control` property, but most properties you'll need (like `valid` and `dirty`)\n\t      * will fall through to the control anyway, so you can access them directly. You can see a\n\t      * full list of properties directly available in {@link AbstractControlDirective}.\n\t      * *\n\t      * The following is an example of a simple standalone control using `ngModel`:\n\t      * *\n\t      * {@example forms/ts/simpleNgModel/simple_ng_model_example.ts region='Component'}\n\t      * *\n\t      * When using the `ngModel` within `<form>` tags, you'll also need to supply a `name` attribute\n\t      * so that the control can be registered with the parent form under that name.\n\t      * *\n\t      * It's worth noting that in the context of a parent form, you often can skip one-way or\n\t      * two-way binding because the parent form will sync the value for you. You can access\n\t      * its properties by exporting it into a local template variable using `ngForm` (ex:\n\t      * `#f=\"ngForm\"`). Then you can pass it where it needs to go on submit.\n\t      * *\n\t      * If you do need to populate initial values into your form, using a one-way binding for\n\t      * `ngModel` tends to be sufficient as long as you use the exported form's value rather\n\t      * than the domain model's value on submit.\n\t      * *\n\t      * Take a look at an example of using `ngModel` within a form:\n\t      * *\n\t      * {@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n\t      * *\n\t      * To see `ngModel` examples with different form control types, see:\n\t      * *\n\t      * * Radio buttons: {@link RadioControlValueAccessor}\n\t      * * Selects: {@link SelectControlValueAccessor}\n\t      * *\n\t      * **npm package**: `@angular/forms`\n\t      * *\n\t      * **NgModule**: `FormsModule`\n\t      * *\n\t      * @stable\n\t     */\n\t    var NgModel = (function (_super) {\n\t        __extends$7(NgModel, _super);\n\t        /**\n\t         * @param {?} parent\n\t         * @param {?} validators\n\t         * @param {?} asyncValidators\n\t         * @param {?} valueAccessors\n\t         */\n\t        function NgModel(parent, validators, asyncValidators, valueAccessors) {\n\t            _super.call(this);\n\t            /** @internal */\n\t            this._control = new FormControl();\n\t            /** @internal */\n\t            this._registered = false;\n\t            this.update = new EventEmitter();\n\t            this._parent = parent;\n\t            this._rawValidators = validators || [];\n\t            this._rawAsyncValidators = asyncValidators || [];\n\t            this.valueAccessor = selectValueAccessor(this, valueAccessors);\n\t        }\n\t        /**\n\t         * @param {?} changes\n\t         * @return {?}\n\t         */\n\t        NgModel.prototype.ngOnChanges = function (changes) {\n\t            this._checkForErrors();\n\t            if (!this._registered)\n\t                this._setUpControl();\n\t            if ('isDisabled' in changes) {\n\t                this._updateDisabled(changes);\n\t            }\n\t            if (isPropertyUpdated(changes, this.viewModel)) {\n\t                this._updateValue(this.model);\n\t                this.viewModel = this.model;\n\t            }\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        NgModel.prototype.ngOnDestroy = function () { this.formDirective && this.formDirective.removeControl(this); };\n\t        Object.defineProperty(NgModel.prototype, \"control\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._control; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgModel.prototype, \"path\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () {\n\t                return this._parent ? controlPath(this.name, this._parent) : [this.name];\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgModel.prototype, \"formDirective\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._parent ? this._parent.formDirective : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgModel.prototype, \"validator\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return composeValidators(this._rawValidators); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgModel.prototype, \"asyncValidator\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () {\n\t                return composeAsyncValidators(this._rawAsyncValidators);\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @param {?} newValue\n\t         * @return {?}\n\t         */\n\t        NgModel.prototype.viewToModelUpdate = function (newValue) {\n\t            this.viewModel = newValue;\n\t            this.update.emit(newValue);\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        NgModel.prototype._setUpControl = function () {\n\t            this._isStandalone() ? this._setUpStandalone() :\n\t                this.formDirective.addControl(this);\n\t            this._registered = true;\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        NgModel.prototype._isStandalone = function () {\n\t            return !this._parent || (this.options && this.options.standalone);\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        NgModel.prototype._setUpStandalone = function () {\n\t            setUpControl(this._control, this);\n\t            this._control.updateValueAndValidity({ emitEvent: false });\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        NgModel.prototype._checkForErrors = function () {\n\t            if (!this._isStandalone()) {\n\t                this._checkParentType();\n\t            }\n\t            this._checkName();\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        NgModel.prototype._checkParentType = function () {\n\t            if (!(this._parent instanceof NgModelGroup) &&\n\t                this._parent instanceof AbstractFormGroupDirective) {\n\t                TemplateDrivenErrors.formGroupNameException();\n\t            }\n\t            else if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm)) {\n\t                TemplateDrivenErrors.modelParentException();\n\t            }\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        NgModel.prototype._checkName = function () {\n\t            if (this.options && this.options.name)\n\t                this.name = this.options.name;\n\t            if (!this._isStandalone() && !this.name) {\n\t                TemplateDrivenErrors.missingNameException();\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        NgModel.prototype._updateValue = function (value) {\n\t            var _this = this;\n\t            resolvedPromise$1.then(function () { _this.control.setValue(value, { emitViewToModelChange: false }); });\n\t        };\n\t        /**\n\t         * @param {?} changes\n\t         * @return {?}\n\t         */\n\t        NgModel.prototype._updateDisabled = function (changes) {\n\t            var _this = this;\n\t            var /** @type {?} */ disabledValue = changes['isDisabled'].currentValue;\n\t            var /** @type {?} */ isDisabled = disabledValue === '' || (disabledValue && disabledValue !== 'false');\n\t            resolvedPromise$1.then(function () {\n\t                if (isDisabled && !_this.control.disabled) {\n\t                    _this.control.disable();\n\t                }\n\t                else if (!isDisabled && _this.control.disabled) {\n\t                    _this.control.enable();\n\t                }\n\t            });\n\t        };\n\t        NgModel.decorators = [\n\t            { type: _angular_core.Directive, args: [{\n\t                        selector: '[ngModel]:not([formControlName]):not([formControl])',\n\t                        providers: [formControlBinding],\n\t                        exportAs: 'ngModel'\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        NgModel.ctorParameters = function () { return [\n\t            { type: ControlContainer, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Host },] },\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALUE_ACCESSOR,] },] },\n\t        ]; };\n\t        NgModel.propDecorators = {\n\t            'name': [{ type: _angular_core.Input },],\n\t            'isDisabled': [{ type: _angular_core.Input, args: ['disabled',] },],\n\t            'model': [{ type: _angular_core.Input, args: ['ngModel',] },],\n\t            'options': [{ type: _angular_core.Input, args: ['ngModelOptions',] },],\n\t            'update': [{ type: _angular_core.Output, args: ['ngModelChange',] },],\n\t        };\n\t        return NgModel;\n\t    }(NgControl));\n\t\n\t    var ReactiveErrors = (function () {\n\t        function ReactiveErrors() {\n\t        }\n\t        /**\n\t         * @return {?}\n\t         */\n\t        ReactiveErrors.controlParentException = function () {\n\t            throw new Error(\"formControlName must be used with a parent formGroup directive.  You'll want to add a formGroup\\n       directive and pass it an existing FormGroup instance (you can create one in your class).\\n\\n      Example:\\n\\n      \" + Examples.formControlName);\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        ReactiveErrors.ngModelGroupException = function () {\n\t            throw new Error(\"formControlName cannot be used with an ngModelGroup parent. It is only compatible with parents\\n       that also have a \\\"form\\\" prefix: formGroupName, formArrayName, or formGroup.\\n\\n       Option 1:  Update the parent to be formGroupName (reactive form strategy)\\n\\n        \" + Examples.formGroupName + \"\\n\\n        Option 2: Use ngModel instead of formControlName (template-driven strategy)\\n\\n        \" + Examples.ngModelGroup);\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        ReactiveErrors.missingFormException = function () {\n\t            throw new Error(\"formGroup expects a FormGroup instance. Please pass one in.\\n\\n       Example:\\n\\n       \" + Examples.formControlName);\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        ReactiveErrors.groupParentException = function () {\n\t            throw new Error(\"formGroupName must be used with a parent formGroup directive.  You'll want to add a formGroup\\n      directive and pass it an existing FormGroup instance (you can create one in your class).\\n\\n      Example:\\n\\n      \" + Examples.formGroupName);\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        ReactiveErrors.arrayParentException = function () {\n\t            throw new Error(\"formArrayName must be used with a parent formGroup directive.  You'll want to add a formGroup\\n       directive and pass it an existing FormGroup instance (you can create one in your class).\\n\\n        Example:\\n\\n        \" + Examples.formArrayName);\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        ReactiveErrors.disabledAttrWarning = function () {\n\t            console.warn(\"\\n      It looks like you're using the disabled attribute with a reactive form directive. If you set disabled to true\\n      when you set up this control in your component class, the disabled attribute will actually be set in the DOM for\\n      you. We recommend using this approach to avoid 'changed after checked' errors.\\n       \\n      Example: \\n      form = new FormGroup({\\n        first: new FormControl({value: 'Nancy', disabled: true}, Validators.required),\\n        last: new FormControl('Drew', Validators.required)\\n      });\\n    \");\n\t        };\n\t        return ReactiveErrors;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$9 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var /** @type {?} */ formControlBinding$1 = {\n\t        provide: NgControl,\n\t        useExisting: _angular_core.forwardRef(function () { return FormControlDirective; })\n\t    };\n\t    /**\n\t     *  *\n\t      * In other words, this directive ensures that any values written to the {@link FormControl}\n\t      * instance programmatically will be written to the DOM element (model -> view). Conversely,\n\t      * any values written to the DOM element through user input will be reflected in the\n\t      * {@link FormControl} instance (view -> model).\n\t      * *\n\t      * *\n\t      * Use this directive if you'd like to create and manage a {@link FormControl} instance directly.\n\t      * Simply create a {@link FormControl}, save it to your component class, and pass it into the\n\t      * {@link FormControlDirective}.\n\t      * *\n\t      * This directive is designed to be used as a standalone control.  Unlike {@link FormControlName},\n\t      * it does not require that your {@link FormControl} instance be part of any parent\n\t      * {@link FormGroup}, and it won't be registered to any {@link FormGroupDirective} that\n\t      * exists above it.\n\t      * *\n\t      * **Get the value**: the `value` property is always synced and available on the\n\t      * {@link FormControl} instance. See a full list of available properties in\n\t      * {@link AbstractControl}.\n\t      * *\n\t      * **Set the value**: You can pass in an initial value when instantiating the {@link FormControl},\n\t      * or you can set it programmatically later using {@link AbstractControl.setValue} or\n\t      * {@link AbstractControl.patchValue}.\n\t      * *\n\t      * **Listen to value**: If you want to listen to changes in the value of the control, you can\n\t      * subscribe to the {@link AbstractControl.valueChanges} event.  You can also listen to\n\t      * {@link AbstractControl.statusChanges} to be notified when the validation status is\n\t      * re-calculated.\n\t      * *\n\t      * ### Example\n\t      * *\n\t      * {@example forms/ts/simpleFormControl/simple_form_control_example.ts region='Component'}\n\t      * *\n\t      * * **npm package**: `@angular/forms`\n\t      * *\n\t      * * **NgModule**: `ReactiveFormsModule`\n\t      * *\n\t      * @stable\n\t     */\n\t    var FormControlDirective = (function (_super) {\n\t        __extends$9(FormControlDirective, _super);\n\t        /**\n\t         * @param {?} validators\n\t         * @param {?} asyncValidators\n\t         * @param {?} valueAccessors\n\t         */\n\t        function FormControlDirective(validators, asyncValidators, valueAccessors) {\n\t            _super.call(this);\n\t            this.update = new EventEmitter();\n\t            this._rawValidators = validators || [];\n\t            this._rawAsyncValidators = asyncValidators || [];\n\t            this.valueAccessor = selectValueAccessor(this, valueAccessors);\n\t        }\n\t        Object.defineProperty(FormControlDirective.prototype, \"isDisabled\", {\n\t            /**\n\t             * @param {?} isDisabled\n\t             * @return {?}\n\t             */\n\t            set: function (isDisabled) { ReactiveErrors.disabledAttrWarning(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @param {?} changes\n\t         * @return {?}\n\t         */\n\t        FormControlDirective.prototype.ngOnChanges = function (changes) {\n\t            if (this._isControlChanged(changes)) {\n\t                setUpControl(this.form, this);\n\t                if (this.control.disabled && this.valueAccessor.setDisabledState) {\n\t                    this.valueAccessor.setDisabledState(true);\n\t                }\n\t                this.form.updateValueAndValidity({ emitEvent: false });\n\t            }\n\t            if (isPropertyUpdated(changes, this.viewModel)) {\n\t                this.form.setValue(this.model);\n\t                this.viewModel = this.model;\n\t            }\n\t        };\n\t        Object.defineProperty(FormControlDirective.prototype, \"path\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return []; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(FormControlDirective.prototype, \"validator\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return composeValidators(this._rawValidators); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(FormControlDirective.prototype, \"asyncValidator\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () {\n\t                return composeAsyncValidators(this._rawAsyncValidators);\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(FormControlDirective.prototype, \"control\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this.form; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @param {?} newValue\n\t         * @return {?}\n\t         */\n\t        FormControlDirective.prototype.viewToModelUpdate = function (newValue) {\n\t            this.viewModel = newValue;\n\t            this.update.emit(newValue);\n\t        };\n\t        /**\n\t         * @param {?} changes\n\t         * @return {?}\n\t         */\n\t        FormControlDirective.prototype._isControlChanged = function (changes) {\n\t            return changes.hasOwnProperty('form');\n\t        };\n\t        FormControlDirective.decorators = [\n\t            { type: _angular_core.Directive, args: [{ selector: '[formControl]', providers: [formControlBinding$1], exportAs: 'ngForm' },] },\n\t        ];\n\t        /** @nocollapse */\n\t        FormControlDirective.ctorParameters = function () { return [\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALUE_ACCESSOR,] },] },\n\t        ]; };\n\t        FormControlDirective.propDecorators = {\n\t            'form': [{ type: _angular_core.Input, args: ['formControl',] },],\n\t            'model': [{ type: _angular_core.Input, args: ['ngModel',] },],\n\t            'update': [{ type: _angular_core.Output, args: ['ngModelChange',] },],\n\t            'isDisabled': [{ type: _angular_core.Input, args: ['disabled',] },],\n\t        };\n\t        return FormControlDirective;\n\t    }(NgControl));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$11 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var /** @type {?} */ formDirectiveProvider$1 = {\n\t        provide: ControlContainer,\n\t        useExisting: _angular_core.forwardRef(function () { return FormGroupDirective; })\n\t    };\n\t    /**\n\t     *  *\n\t      * *\n\t      * This directive accepts an existing {@link FormGroup} instance. It will then use this\n\t      * {@link FormGroup} instance to match any child {@link FormControl}, {@link FormGroup},\n\t      * and {@link FormArray} instances to child {@link FormControlName}, {@link FormGroupName},\n\t      * and {@link FormArrayName} directives.\n\t      * *\n\t      * **Set value**: You can set the form's initial value when instantiating the\n\t      * {@link FormGroup}, or you can set it programmatically later using the {@link FormGroup}'s\n\t      * {@link AbstractControl.setValue} or {@link AbstractControl.patchValue} methods.\n\t      * *\n\t      * **Listen to value**: If you want to listen to changes in the value of the form, you can subscribe\n\t      * to the {@link FormGroup}'s {@link AbstractControl.valueChanges} event.  You can also listen to\n\t      * its {@link AbstractControl.statusChanges} event to be notified when the validation status is\n\t      * re-calculated.\n\t      * *\n\t      * Furthermore, you can listen to the directive's `ngSubmit` event to be notified when the user has\n\t      * triggered a form submission. The `ngSubmit` event will be emitted with the original form\n\t      * submission event.\n\t      * *\n\t      * ### Example\n\t      * *\n\t      * In this example, we create form controls for first name and last name.\n\t      * *\n\t      * {@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n\t      * *\n\t      * **npm package**: `@angular/forms`\n\t      * *\n\t      * **NgModule**: {@link ReactiveFormsModule}\n\t      * *\n\t      * @stable\n\t     */\n\t    var FormGroupDirective = (function (_super) {\n\t        __extends$11(FormGroupDirective, _super);\n\t        /**\n\t         * @param {?} _validators\n\t         * @param {?} _asyncValidators\n\t         */\n\t        function FormGroupDirective(_validators, _asyncValidators) {\n\t            _super.call(this);\n\t            this._validators = _validators;\n\t            this._asyncValidators = _asyncValidators;\n\t            this._submitted = false;\n\t            this.directives = [];\n\t            this.form = null;\n\t            this.ngSubmit = new EventEmitter();\n\t        }\n\t        /**\n\t         * @param {?} changes\n\t         * @return {?}\n\t         */\n\t        FormGroupDirective.prototype.ngOnChanges = function (changes) {\n\t            this._checkFormPresent();\n\t            if (changes.hasOwnProperty('form')) {\n\t                this._updateValidators();\n\t                this._updateDomValue();\n\t                this._updateRegistrations();\n\t            }\n\t        };\n\t        Object.defineProperty(FormGroupDirective.prototype, \"submitted\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._submitted; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(FormGroupDirective.prototype, \"formDirective\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(FormGroupDirective.prototype, \"control\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this.form; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(FormGroupDirective.prototype, \"path\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return []; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @param {?} dir\n\t         * @return {?}\n\t         */\n\t        FormGroupDirective.prototype.addControl = function (dir) {\n\t            var /** @type {?} */ ctrl = this.form.get(dir.path);\n\t            setUpControl(ctrl, dir);\n\t            ctrl.updateValueAndValidity({ emitEvent: false });\n\t            this.directives.push(dir);\n\t            return ctrl;\n\t        };\n\t        /**\n\t         * @param {?} dir\n\t         * @return {?}\n\t         */\n\t        FormGroupDirective.prototype.getControl = function (dir) { return (this.form.get(dir.path)); };\n\t        /**\n\t         * @param {?} dir\n\t         * @return {?}\n\t         */\n\t        FormGroupDirective.prototype.removeControl = function (dir) { ListWrapper.remove(this.directives, dir); };\n\t        /**\n\t         * @param {?} dir\n\t         * @return {?}\n\t         */\n\t        FormGroupDirective.prototype.addFormGroup = function (dir) {\n\t            var /** @type {?} */ ctrl = this.form.get(dir.path);\n\t            setUpFormContainer(ctrl, dir);\n\t            ctrl.updateValueAndValidity({ emitEvent: false });\n\t        };\n\t        /**\n\t         * @param {?} dir\n\t         * @return {?}\n\t         */\n\t        FormGroupDirective.prototype.removeFormGroup = function (dir) { };\n\t        /**\n\t         * @param {?} dir\n\t         * @return {?}\n\t         */\n\t        FormGroupDirective.prototype.getFormGroup = function (dir) { return (this.form.get(dir.path)); };\n\t        /**\n\t         * @param {?} dir\n\t         * @return {?}\n\t         */\n\t        FormGroupDirective.prototype.addFormArray = function (dir) {\n\t            var /** @type {?} */ ctrl = this.form.get(dir.path);\n\t            setUpFormContainer(ctrl, dir);\n\t            ctrl.updateValueAndValidity({ emitEvent: false });\n\t        };\n\t        /**\n\t         * @param {?} dir\n\t         * @return {?}\n\t         */\n\t        FormGroupDirective.prototype.removeFormArray = function (dir) { };\n\t        /**\n\t         * @param {?} dir\n\t         * @return {?}\n\t         */\n\t        FormGroupDirective.prototype.getFormArray = function (dir) { return (this.form.get(dir.path)); };\n\t        /**\n\t         * @param {?} dir\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        FormGroupDirective.prototype.updateModel = function (dir, value) {\n\t            var /** @type {?} */ ctrl = (this.form.get(dir.path));\n\t            ctrl.setValue(value);\n\t        };\n\t        /**\n\t         * @param {?} $event\n\t         * @return {?}\n\t         */\n\t        FormGroupDirective.prototype.onSubmit = function ($event) {\n\t            this._submitted = true;\n\t            this.ngSubmit.emit($event);\n\t            return false;\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        FormGroupDirective.prototype.onReset = function () { this.resetForm(); };\n\t        /**\n\t         * @param {?=} value\n\t         * @return {?}\n\t         */\n\t        FormGroupDirective.prototype.resetForm = function (value) {\n\t            if (value === void 0) { value = undefined; }\n\t            this.form.reset(value);\n\t            this._submitted = false;\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        FormGroupDirective.prototype._updateDomValue = function () {\n\t            var _this = this;\n\t            this.directives.forEach(function (dir) {\n\t                var /** @type {?} */ newCtrl = _this.form.get(dir.path);\n\t                if (dir._control !== newCtrl) {\n\t                    cleanUpControl(dir._control, dir);\n\t                    if (newCtrl)\n\t                        setUpControl(newCtrl, dir);\n\t                    dir._control = newCtrl;\n\t                }\n\t            });\n\t            this.form._updateTreeValidity({ emitEvent: false });\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        FormGroupDirective.prototype._updateRegistrations = function () {\n\t            var _this = this;\n\t            this.form._registerOnCollectionChange(function () { return _this._updateDomValue(); });\n\t            if (this._oldForm)\n\t                this._oldForm._registerOnCollectionChange(function () { });\n\t            this._oldForm = this.form;\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        FormGroupDirective.prototype._updateValidators = function () {\n\t            var /** @type {?} */ sync = composeValidators(this._validators);\n\t            this.form.validator = Validators.compose([this.form.validator, sync]);\n\t            var /** @type {?} */ async = composeAsyncValidators(this._asyncValidators);\n\t            this.form.asyncValidator = Validators.composeAsync([this.form.asyncValidator, async]);\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        FormGroupDirective.prototype._checkFormPresent = function () {\n\t            if (!this.form) {\n\t                ReactiveErrors.missingFormException();\n\t            }\n\t        };\n\t        FormGroupDirective.decorators = [\n\t            { type: _angular_core.Directive, args: [{\n\t                        selector: '[formGroup]',\n\t                        providers: [formDirectiveProvider$1],\n\t                        host: { '(submit)': 'onSubmit($event)', '(reset)': 'onReset()' },\n\t                        exportAs: 'ngForm'\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        FormGroupDirective.ctorParameters = function () { return [\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n\t        ]; };\n\t        FormGroupDirective.propDecorators = {\n\t            'form': [{ type: _angular_core.Input, args: ['formGroup',] },],\n\t            'ngSubmit': [{ type: _angular_core.Output },],\n\t        };\n\t        return FormGroupDirective;\n\t    }(ControlContainer));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$12 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var /** @type {?} */ formGroupNameProvider = {\n\t        provide: ControlContainer,\n\t        useExisting: _angular_core.forwardRef(function () { return FormGroupName; })\n\t    };\n\t    /**\n\t     *  *\n\t      * *\n\t      * This directive can only be used with a parent {@link FormGroupDirective} (selector:\n\t      * `[formGroup]`).\n\t      * *\n\t      * It accepts the string name of the nested {@link FormGroup} you want to link, and\n\t      * will look for a {@link FormGroup} registered with that name in the parent\n\t      * {@link FormGroup} instance you passed into {@link FormGroupDirective}.\n\t      * *\n\t      * Nested form groups can come in handy when you want to validate a sub-group of a\n\t      * form separately from the rest or when you'd like to group the values of certain\n\t      * controls into their own nested object.\n\t      * *\n\t      * **Access the group**: You can access the associated {@link FormGroup} using the\n\t      * {@link AbstractControl.get} method. Ex: `this.form.get('name')`.\n\t      * *\n\t      * You can also access individual controls within the group using dot syntax.\n\t      * Ex: `this.form.get('name.first')`\n\t      * *\n\t      * **Get the value**: the `value` property is always synced and available on the\n\t      * {@link FormGroup}. See a full list of available properties in {@link AbstractControl}.\n\t      * *\n\t      * **Set the value**: You can set an initial value for each child control when instantiating\n\t      * the {@link FormGroup}, or you can set it programmatically later using\n\t      * {@link AbstractControl.setValue} or {@link AbstractControl.patchValue}.\n\t      * *\n\t      * **Listen to value**: If you want to listen to changes in the value of the group, you can\n\t      * subscribe to the {@link AbstractControl.valueChanges} event.  You can also listen to\n\t      * {@link AbstractControl.statusChanges} to be notified when the validation status is\n\t      * re-calculated.\n\t      * *\n\t      * ### Example\n\t      * *\n\t      * {@example forms/ts/nestedFormGroup/nested_form_group_example.ts region='Component'}\n\t      * *\n\t      * * **npm package**: `@angular/forms`\n\t      * *\n\t      * * **NgModule**: `ReactiveFormsModule`\n\t      * *\n\t     */\n\t    var FormGroupName = (function (_super) {\n\t        __extends$12(FormGroupName, _super);\n\t        /**\n\t         * @param {?} parent\n\t         * @param {?} validators\n\t         * @param {?} asyncValidators\n\t         */\n\t        function FormGroupName(parent, validators, asyncValidators) {\n\t            _super.call(this);\n\t            this._parent = parent;\n\t            this._validators = validators;\n\t            this._asyncValidators = asyncValidators;\n\t        }\n\t        /**\n\t         * @return {?}\n\t         */\n\t        FormGroupName.prototype._checkParentType = function () {\n\t            if (_hasInvalidParent(this._parent)) {\n\t                ReactiveErrors.groupParentException();\n\t            }\n\t        };\n\t        FormGroupName.decorators = [\n\t            { type: _angular_core.Directive, args: [{ selector: '[formGroupName]', providers: [formGroupNameProvider] },] },\n\t        ];\n\t        /** @nocollapse */\n\t        FormGroupName.ctorParameters = function () { return [\n\t            { type: ControlContainer, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Host }, { type: _angular_core.SkipSelf },] },\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n\t        ]; };\n\t        FormGroupName.propDecorators = {\n\t            'name': [{ type: _angular_core.Input, args: ['formGroupName',] },],\n\t        };\n\t        return FormGroupName;\n\t    }(AbstractFormGroupDirective));\n\t    var /** @type {?} */ formArrayNameProvider = {\n\t        provide: ControlContainer,\n\t        useExisting: _angular_core.forwardRef(function () { return FormArrayName; })\n\t    };\n\t    /**\n\t     *  *\n\t      * *\n\t      * This directive is designed to be used with a parent {@link FormGroupDirective} (selector:\n\t      * `[formGroup]`).\n\t      * *\n\t      * It accepts the string name of the nested {@link FormArray} you want to link, and\n\t      * will look for a {@link FormArray} registered with that name in the parent\n\t      * {@link FormGroup} instance you passed into {@link FormGroupDirective}.\n\t      * *\n\t      * Nested form arrays can come in handy when you have a group of form controls but\n\t      * you're not sure how many there will be. Form arrays allow you to create new\n\t      * form controls dynamically.\n\t      * *\n\t      * **Access the array**: You can access the associated {@link FormArray} using the\n\t      * {@link AbstractControl.get} method on the parent {@link FormGroup}.\n\t      * Ex: `this.form.get('cities')`.\n\t      * *\n\t      * **Get the value**: the `value` property is always synced and available on the\n\t      * {@link FormArray}. See a full list of available properties in {@link AbstractControl}.\n\t      * *\n\t      * **Set the value**: You can set an initial value for each child control when instantiating\n\t      * the {@link FormArray}, or you can set the value programmatically later using the\n\t      * {@link FormArray}'s {@link AbstractControl.setValue} or {@link AbstractControl.patchValue}\n\t      * methods.\n\t      * *\n\t      * **Listen to value**: If you want to listen to changes in the value of the array, you can\n\t      * subscribe to the {@link FormArray}'s {@link AbstractControl.valueChanges} event.  You can also\n\t      * listen to its {@link AbstractControl.statusChanges} event to be notified when the validation\n\t      * status is re-calculated.\n\t      * *\n\t      * **Add new controls**: You can add new controls to the {@link FormArray} dynamically by\n\t      * calling its {@link FormArray.push} method.\n\t      * Ex: `this.form.get('cities').push(new FormControl());`\n\t      * *\n\t      * ### Example\n\t      * *\n\t      * {@example forms/ts/nestedFormArray/nested_form_array_example.ts region='Component'}\n\t      * *\n\t      * * **npm package**: `@angular/forms`\n\t      * *\n\t      * * **NgModule**: `ReactiveFormsModule`\n\t      * *\n\t     */\n\t    var FormArrayName = (function (_super) {\n\t        __extends$12(FormArrayName, _super);\n\t        /**\n\t         * @param {?} parent\n\t         * @param {?} validators\n\t         * @param {?} asyncValidators\n\t         */\n\t        function FormArrayName(parent, validators, asyncValidators) {\n\t            _super.call(this);\n\t            this._parent = parent;\n\t            this._validators = validators;\n\t            this._asyncValidators = asyncValidators;\n\t        }\n\t        /**\n\t         * @return {?}\n\t         */\n\t        FormArrayName.prototype.ngOnInit = function () {\n\t            this._checkParentType();\n\t            this.formDirective.addFormArray(this);\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        FormArrayName.prototype.ngOnDestroy = function () {\n\t            if (this.formDirective) {\n\t                this.formDirective.removeFormArray(this);\n\t            }\n\t        };\n\t        Object.defineProperty(FormArrayName.prototype, \"control\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this.formDirective.getFormArray(this); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(FormArrayName.prototype, \"formDirective\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () {\n\t                return this._parent ? (this._parent.formDirective) : null;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(FormArrayName.prototype, \"path\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return controlPath(this.name, this._parent); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(FormArrayName.prototype, \"validator\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return composeValidators(this._validators); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(FormArrayName.prototype, \"asyncValidator\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return composeAsyncValidators(this._asyncValidators); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @return {?}\n\t         */\n\t        FormArrayName.prototype._checkParentType = function () {\n\t            if (_hasInvalidParent(this._parent)) {\n\t                ReactiveErrors.arrayParentException();\n\t            }\n\t        };\n\t        FormArrayName.decorators = [\n\t            { type: _angular_core.Directive, args: [{ selector: '[formArrayName]', providers: [formArrayNameProvider] },] },\n\t        ];\n\t        /** @nocollapse */\n\t        FormArrayName.ctorParameters = function () { return [\n\t            { type: ControlContainer, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Host }, { type: _angular_core.SkipSelf },] },\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n\t        ]; };\n\t        FormArrayName.propDecorators = {\n\t            'name': [{ type: _angular_core.Input, args: ['formArrayName',] },],\n\t        };\n\t        return FormArrayName;\n\t    }(ControlContainer));\n\t    /**\n\t     * @param {?} parent\n\t     * @return {?}\n\t     */\n\t    function _hasInvalidParent(parent) {\n\t        return !(parent instanceof FormGroupName) && !(parent instanceof FormGroupDirective) &&\n\t            !(parent instanceof FormArrayName);\n\t    }\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$10 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var /** @type {?} */ controlNameBinding = {\n\t        provide: NgControl,\n\t        useExisting: _angular_core.forwardRef(function () { return FormControlName; })\n\t    };\n\t    /**\n\t     *  element by name.\n\t      * *\n\t      * In other words, this directive ensures that any values written to the {@link FormControl}\n\t      * instance programmatically will be written to the DOM element (model -> view). Conversely,\n\t      * any values written to the DOM element through user input will be reflected in the\n\t      * {@link FormControl} instance (view -> model).\n\t      * *\n\t      * *\n\t      * This directive is designed to be used with a parent {@link FormGroupDirective} (selector:\n\t      * `[formGroup]`).\n\t      * *\n\t      * It accepts the string name of the {@link FormControl} instance you want to\n\t      * link, and will look for a {@link FormControl} registered with that name in the\n\t      * closest {@link FormGroup} or {@link FormArray} above it.\n\t      * *\n\t      * **Access the control**: You can access the {@link FormControl} associated with\n\t      * this directive by using the {@link AbstractControl.get} method.\n\t      * Ex: `this.form.get('first');`\n\t      * *\n\t      * **Get value**: the `value` property is always synced and available on the {@link FormControl}.\n\t      * See a full list of available properties in {@link AbstractControl}.\n\t      * *\n\t      * **Set value**: You can set an initial value for the control when instantiating the\n\t      * {@link FormControl}, or you can set it programmatically later using\n\t      * {@link AbstractControl.setValue} or {@link AbstractControl.patchValue}.\n\t      * *\n\t      * **Listen to value**: If you want to listen to changes in the value of the control, you can\n\t      * subscribe to the {@link AbstractControl.valueChanges} event.  You can also listen to\n\t      * {@link AbstractControl.statusChanges} to be notified when the validation status is\n\t      * re-calculated.\n\t      * *\n\t      * ### Example\n\t      * *\n\t      * In this example, we create form controls for first name and last name.\n\t      * *\n\t      * {@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n\t      * *\n\t      * To see `formControlName` examples with different form control types, see:\n\t      * *\n\t      * * Radio buttons: {@link RadioControlValueAccessor}\n\t      * * Selects: {@link SelectControlValueAccessor}\n\t      * *\n\t      * **npm package**: `@angular/forms`\n\t      * *\n\t      * **NgModule**: {@link ReactiveFormsModule}\n\t      * *\n\t      * @stable\n\t     */\n\t    var FormControlName = (function (_super) {\n\t        __extends$10(FormControlName, _super);\n\t        /**\n\t         * @param {?} parent\n\t         * @param {?} validators\n\t         * @param {?} asyncValidators\n\t         * @param {?} valueAccessors\n\t         */\n\t        function FormControlName(parent, validators, asyncValidators, valueAccessors) {\n\t            _super.call(this);\n\t            this._added = false;\n\t            this.update = new EventEmitter();\n\t            this._parent = parent;\n\t            this._rawValidators = validators || [];\n\t            this._rawAsyncValidators = asyncValidators || [];\n\t            this.valueAccessor = selectValueAccessor(this, valueAccessors);\n\t        }\n\t        Object.defineProperty(FormControlName.prototype, \"isDisabled\", {\n\t            /**\n\t             * @param {?} isDisabled\n\t             * @return {?}\n\t             */\n\t            set: function (isDisabled) { ReactiveErrors.disabledAttrWarning(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @param {?} changes\n\t         * @return {?}\n\t         */\n\t        FormControlName.prototype.ngOnChanges = function (changes) {\n\t            if (!this._added)\n\t                this._setUpControl();\n\t            if (isPropertyUpdated(changes, this.viewModel)) {\n\t                this.viewModel = this.model;\n\t                this.formDirective.updateModel(this, this.model);\n\t            }\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        FormControlName.prototype.ngOnDestroy = function () {\n\t            if (this.formDirective) {\n\t                this.formDirective.removeControl(this);\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} newValue\n\t         * @return {?}\n\t         */\n\t        FormControlName.prototype.viewToModelUpdate = function (newValue) {\n\t            this.viewModel = newValue;\n\t            this.update.emit(newValue);\n\t        };\n\t        Object.defineProperty(FormControlName.prototype, \"path\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return controlPath(this.name, this._parent); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(FormControlName.prototype, \"formDirective\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._parent ? this._parent.formDirective : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(FormControlName.prototype, \"validator\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return composeValidators(this._rawValidators); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(FormControlName.prototype, \"asyncValidator\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () {\n\t                return composeAsyncValidators(this._rawAsyncValidators);\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(FormControlName.prototype, \"control\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._control; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @return {?}\n\t         */\n\t        FormControlName.prototype._checkParentType = function () {\n\t            if (!(this._parent instanceof FormGroupName) &&\n\t                this._parent instanceof AbstractFormGroupDirective) {\n\t                ReactiveErrors.ngModelGroupException();\n\t            }\n\t            else if (!(this._parent instanceof FormGroupName) && !(this._parent instanceof FormGroupDirective) &&\n\t                !(this._parent instanceof FormArrayName)) {\n\t                ReactiveErrors.controlParentException();\n\t            }\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        FormControlName.prototype._setUpControl = function () {\n\t            this._checkParentType();\n\t            this._control = this.formDirective.addControl(this);\n\t            if (this.control.disabled && this.valueAccessor.setDisabledState) {\n\t                this.valueAccessor.setDisabledState(true);\n\t            }\n\t            this._added = true;\n\t        };\n\t        FormControlName.decorators = [\n\t            { type: _angular_core.Directive, args: [{ selector: '[formControlName]', providers: [controlNameBinding] },] },\n\t        ];\n\t        /** @nocollapse */\n\t        FormControlName.ctorParameters = function () { return [\n\t            { type: ControlContainer, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Host }, { type: _angular_core.SkipSelf },] },\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALUE_ACCESSOR,] },] },\n\t        ]; };\n\t        FormControlName.propDecorators = {\n\t            'name': [{ type: _angular_core.Input, args: ['formControlName',] },],\n\t            'model': [{ type: _angular_core.Input, args: ['ngModel',] },],\n\t            'update': [{ type: _angular_core.Output, args: ['ngModelChange',] },],\n\t            'isDisabled': [{ type: _angular_core.Input, args: ['disabled',] },],\n\t        };\n\t        return FormControlName;\n\t    }(NgControl));\n\t\n\t    var /** @type {?} */ REQUIRED_VALIDATOR = {\n\t        provide: NG_VALIDATORS,\n\t        useExisting: _angular_core.forwardRef(function () { return RequiredValidator; }),\n\t        multi: true\n\t    };\n\t    /**\n\t     *  A Directive that adds the `required` validator to any controls marked with the\n\t      * `required` attribute, via the {@link NG_VALIDATORS} binding.\n\t      * *\n\t      * ### Example\n\t      * *\n\t      * ```\n\t      * <input name=\"fullName\" ngModel required>\n\t      * ```\n\t      * *\n\t     */\n\t    var RequiredValidator = (function () {\n\t        function RequiredValidator() {\n\t        }\n\t        Object.defineProperty(RequiredValidator.prototype, \"required\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._required; },\n\t            /**\n\t             * @param {?} value\n\t             * @return {?}\n\t             */\n\t            set: function (value) {\n\t                this._required = value != null && value !== false && \"\" + value !== 'false';\n\t                if (this._onChange)\n\t                    this._onChange();\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @param {?} c\n\t         * @return {?}\n\t         */\n\t        RequiredValidator.prototype.validate = function (c) {\n\t            return this.required ? Validators.required(c) : null;\n\t        };\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        RequiredValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n\t        RequiredValidator.decorators = [\n\t            { type: _angular_core.Directive, args: [{\n\t                        selector: '[required][formControlName],[required][formControl],[required][ngModel]',\n\t                        providers: [REQUIRED_VALIDATOR],\n\t                        host: { '[attr.required]': 'required ? \"\" : null' }\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        RequiredValidator.ctorParameters = function () { return []; };\n\t        RequiredValidator.propDecorators = {\n\t            'required': [{ type: _angular_core.Input },],\n\t        };\n\t        return RequiredValidator;\n\t    }());\n\t    /**\n\t     * Provider which adds {@link MinLengthValidator} to {@link NG_VALIDATORS}.\n\t     *\n\t     * ## Example:\n\t     *\n\t     * {@example common/forms/ts/validators/validators.ts region='min'}\n\t     */\n\t    var /** @type {?} */ MIN_LENGTH_VALIDATOR = {\n\t        provide: NG_VALIDATORS,\n\t        useExisting: _angular_core.forwardRef(function () { return MinLengthValidator; }),\n\t        multi: true\n\t    };\n\t    /**\n\t     *  A directive which installs the {@link MinLengthValidator} for any `formControlName`,\n\t      * `formControl`, or control with `ngModel` that also has a `minlength` attribute.\n\t      * *\n\t     */\n\t    var MinLengthValidator = (function () {\n\t        function MinLengthValidator() {\n\t        }\n\t        /**\n\t         * @param {?} changes\n\t         * @return {?}\n\t         */\n\t        MinLengthValidator.prototype.ngOnChanges = function (changes) {\n\t            if ('minlength' in changes) {\n\t                this._createValidator();\n\t                if (this._onChange)\n\t                    this._onChange();\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} c\n\t         * @return {?}\n\t         */\n\t        MinLengthValidator.prototype.validate = function (c) {\n\t            return this.minlength == null ? null : this._validator(c);\n\t        };\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        MinLengthValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        MinLengthValidator.prototype._createValidator = function () {\n\t            this._validator = Validators.minLength(parseInt(this.minlength, 10));\n\t        };\n\t        MinLengthValidator.decorators = [\n\t            { type: _angular_core.Directive, args: [{\n\t                        selector: '[minlength][formControlName],[minlength][formControl],[minlength][ngModel]',\n\t                        providers: [MIN_LENGTH_VALIDATOR],\n\t                        host: { '[attr.minlength]': 'minlength ? minlength : null' }\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        MinLengthValidator.ctorParameters = function () { return []; };\n\t        MinLengthValidator.propDecorators = {\n\t            'minlength': [{ type: _angular_core.Input },],\n\t        };\n\t        return MinLengthValidator;\n\t    }());\n\t    /**\n\t     * Provider which adds {@link MaxLengthValidator} to {@link NG_VALIDATORS}.\n\t     *\n\t     * ## Example:\n\t     *\n\t     * {@example common/forms/ts/validators/validators.ts region='max'}\n\t     */\n\t    var /** @type {?} */ MAX_LENGTH_VALIDATOR = {\n\t        provide: NG_VALIDATORS,\n\t        useExisting: _angular_core.forwardRef(function () { return MaxLengthValidator; }),\n\t        multi: true\n\t    };\n\t    /**\n\t     *  A directive which installs the {@link MaxLengthValidator} for any `formControlName,\n\t      * `formControl`,\n\t      * or control with `ngModel` that also has a `maxlength` attribute.\n\t      * *\n\t     */\n\t    var MaxLengthValidator = (function () {\n\t        function MaxLengthValidator() {\n\t        }\n\t        /**\n\t         * @param {?} changes\n\t         * @return {?}\n\t         */\n\t        MaxLengthValidator.prototype.ngOnChanges = function (changes) {\n\t            if ('maxlength' in changes) {\n\t                this._createValidator();\n\t                if (this._onChange)\n\t                    this._onChange();\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} c\n\t         * @return {?}\n\t         */\n\t        MaxLengthValidator.prototype.validate = function (c) {\n\t            return this.maxlength != null ? this._validator(c) : null;\n\t        };\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        MaxLengthValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        MaxLengthValidator.prototype._createValidator = function () {\n\t            this._validator = Validators.maxLength(parseInt(this.maxlength, 10));\n\t        };\n\t        MaxLengthValidator.decorators = [\n\t            { type: _angular_core.Directive, args: [{\n\t                        selector: '[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]',\n\t                        providers: [MAX_LENGTH_VALIDATOR],\n\t                        host: { '[attr.maxlength]': 'maxlength ? maxlength : null' }\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        MaxLengthValidator.ctorParameters = function () { return []; };\n\t        MaxLengthValidator.propDecorators = {\n\t            'maxlength': [{ type: _angular_core.Input },],\n\t        };\n\t        return MaxLengthValidator;\n\t    }());\n\t    var /** @type {?} */ PATTERN_VALIDATOR = {\n\t        provide: NG_VALIDATORS,\n\t        useExisting: _angular_core.forwardRef(function () { return PatternValidator; }),\n\t        multi: true\n\t    };\n\t    /**\n\t     *  A Directive that adds the `pattern` validator to any controls marked with the\n\t      * `pattern` attribute, via the {@link NG_VALIDATORS} binding. Uses attribute value\n\t      * as the regex to validate Control value against.  Follows pattern attribute\n\t      * semantics; i.e. regex must match entire Control value.\n\t      * *\n\t      * ### Example\n\t      * *\n\t      * ```\n\t      * <input [name]=\"fullName\" pattern=\"[a-zA-Z ]*\" ngModel>\n\t      * ```\n\t     */\n\t    var PatternValidator = (function () {\n\t        function PatternValidator() {\n\t        }\n\t        /**\n\t         * @param {?} changes\n\t         * @return {?}\n\t         */\n\t        PatternValidator.prototype.ngOnChanges = function (changes) {\n\t            if ('pattern' in changes) {\n\t                this._createValidator();\n\t                if (this._onChange)\n\t                    this._onChange();\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} c\n\t         * @return {?}\n\t         */\n\t        PatternValidator.prototype.validate = function (c) { return this._validator(c); };\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        PatternValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        PatternValidator.prototype._createValidator = function () { this._validator = Validators.pattern(this.pattern); };\n\t        PatternValidator.decorators = [\n\t            { type: _angular_core.Directive, args: [{\n\t                        selector: '[pattern][formControlName],[pattern][formControl],[pattern][ngModel]',\n\t                        providers: [PATTERN_VALIDATOR],\n\t                        host: { '[attr.pattern]': 'pattern ? pattern : null' }\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        PatternValidator.ctorParameters = function () { return []; };\n\t        PatternValidator.propDecorators = {\n\t            'pattern': [{ type: _angular_core.Input },],\n\t        };\n\t        return PatternValidator;\n\t    }());\n\t\n\t    /**\n\t     *  *\n\t      * It is essentially syntactic sugar that shortens the `new FormGroup()`,\n\t      * `new FormControl()`, and `new FormArray()` boilerplate that can build up in larger\n\t      * forms.\n\t      * *\n\t      * *\n\t      * To use, inject `FormBuilder` into your component class. You can then call its methods\n\t      * directly.\n\t      * *\n\t      * {@example forms/ts/formBuilder/form_builder_example.ts region='Component'}\n\t      * *\n\t      * * **npm package**: `@angular/forms`\n\t      * *\n\t      * * **NgModule**: {@link ReactiveFormsModule}\n\t      * *\n\t     */\n\t    var FormBuilder = (function () {\n\t        function FormBuilder() {\n\t        }\n\t        /**\n\t         *  Construct a new {@link FormGroup} with the given map of configuration.\n\t          * Valid keys for the `extra` parameter map are `validator` and `asyncValidator`.\n\t          * *\n\t          * See the {@link FormGroup} constructor for more details.\n\t         * @param {?} controlsConfig\n\t         * @param {?=} extra\n\t         * @return {?}\n\t         */\n\t        FormBuilder.prototype.group = function (controlsConfig, extra) {\n\t            if (extra === void 0) { extra = null; }\n\t            var /** @type {?} */ controls = this._reduceControls(controlsConfig);\n\t            var /** @type {?} */ validator = isPresent(extra) ? extra['validator'] : null;\n\t            var /** @type {?} */ asyncValidator = isPresent(extra) ? extra['asyncValidator'] : null;\n\t            return new FormGroup(controls, validator, asyncValidator);\n\t        };\n\t        /**\n\t         *  Construct a new {@link FormControl} with the given `formState`,`validator`, and\n\t          * `asyncValidator`.\n\t          * *\n\t          * `formState` can either be a standalone value for the form control or an object\n\t          * that contains both a value and a disabled status.\n\t          * *\n\t         * @param {?} formState\n\t         * @param {?=} validator\n\t         * @param {?=} asyncValidator\n\t         * @return {?}\n\t         */\n\t        FormBuilder.prototype.control = function (formState, validator, asyncValidator) {\n\t            if (validator === void 0) { validator = null; }\n\t            if (asyncValidator === void 0) { asyncValidator = null; }\n\t            return new FormControl(formState, validator, asyncValidator);\n\t        };\n\t        /**\n\t         *  Construct a {@link FormArray} from the given `controlsConfig` array of\n\t          * configuration, with the given optional `validator` and `asyncValidator`.\n\t         * @param {?} controlsConfig\n\t         * @param {?=} validator\n\t         * @param {?=} asyncValidator\n\t         * @return {?}\n\t         */\n\t        FormBuilder.prototype.array = function (controlsConfig, validator, asyncValidator) {\n\t            var _this = this;\n\t            if (validator === void 0) { validator = null; }\n\t            if (asyncValidator === void 0) { asyncValidator = null; }\n\t            var /** @type {?} */ controls = controlsConfig.map(function (c) { return _this._createControl(c); });\n\t            return new FormArray(controls, validator, asyncValidator);\n\t        };\n\t        /**\n\t         * @param {?} controlsConfig\n\t         * @return {?}\n\t         */\n\t        FormBuilder.prototype._reduceControls = function (controlsConfig) {\n\t            var _this = this;\n\t            var /** @type {?} */ controls = {};\n\t            Object.keys(controlsConfig).forEach(function (controlName) {\n\t                controls[controlName] = _this._createControl(controlsConfig[controlName]);\n\t            });\n\t            return controls;\n\t        };\n\t        /**\n\t         * @param {?} controlConfig\n\t         * @return {?}\n\t         */\n\t        FormBuilder.prototype._createControl = function (controlConfig) {\n\t            if (controlConfig instanceof FormControl || controlConfig instanceof FormGroup ||\n\t                controlConfig instanceof FormArray) {\n\t                return controlConfig;\n\t            }\n\t            else if (Array.isArray(controlConfig)) {\n\t                var /** @type {?} */ value = controlConfig[0];\n\t                var /** @type {?} */ validator = controlConfig.length > 1 ? controlConfig[1] : null;\n\t                var /** @type {?} */ asyncValidator = controlConfig.length > 2 ? controlConfig[2] : null;\n\t                return this.control(value, validator, asyncValidator);\n\t            }\n\t            else {\n\t                return this.control(controlConfig);\n\t            }\n\t        };\n\t        FormBuilder.decorators = [\n\t            { type: _angular_core.Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        FormBuilder.ctorParameters = function () { return []; };\n\t        return FormBuilder;\n\t    }());\n\t\n\t    /**\n\t     * @stable\n\t     */\n\t    var /** @type {?} */ VERSION = new _angular_core.Version('2.3.0');\n\t\n\t    var /** @type {?} */ SHARED_FORM_DIRECTIVES = [\n\t        NgSelectOption, NgSelectMultipleOption, DefaultValueAccessor, NumberValueAccessor,\n\t        RangeValueAccessor, CheckboxControlValueAccessor, SelectControlValueAccessor,\n\t        SelectMultipleControlValueAccessor, RadioControlValueAccessor, NgControlStatus,\n\t        NgControlStatusGroup, RequiredValidator, MinLengthValidator, MaxLengthValidator, PatternValidator\n\t    ];\n\t    var /** @type {?} */ TEMPLATE_DRIVEN_DIRECTIVES = [NgModel, NgModelGroup, NgForm];\n\t    var /** @type {?} */ REACTIVE_DRIVEN_DIRECTIVES = [FormControlDirective, FormGroupDirective, FormControlName, FormGroupName, FormArrayName];\n\t    /**\n\t     *  Internal module used for sharing directives between FormsModule and ReactiveFormsModule\n\t     */\n\t    var InternalFormsSharedModule = (function () {\n\t        function InternalFormsSharedModule() {\n\t        }\n\t        InternalFormsSharedModule.decorators = [\n\t            { type: _angular_core.NgModule, args: [{\n\t                        declarations: SHARED_FORM_DIRECTIVES,\n\t                        exports: SHARED_FORM_DIRECTIVES,\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        InternalFormsSharedModule.ctorParameters = function () { return []; };\n\t        return InternalFormsSharedModule;\n\t    }());\n\t\n\t    /**\n\t     *  The ng module for forms.\n\t     */\n\t    var FormsModule = (function () {\n\t        function FormsModule() {\n\t        }\n\t        FormsModule.decorators = [\n\t            { type: _angular_core.NgModule, args: [{\n\t                        declarations: TEMPLATE_DRIVEN_DIRECTIVES,\n\t                        providers: [RadioControlRegistry],\n\t                        exports: [InternalFormsSharedModule, TEMPLATE_DRIVEN_DIRECTIVES]\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        FormsModule.ctorParameters = function () { return []; };\n\t        return FormsModule;\n\t    }());\n\t    /**\n\t     *  The ng module for reactive forms.\n\t     */\n\t    var ReactiveFormsModule = (function () {\n\t        function ReactiveFormsModule() {\n\t        }\n\t        ReactiveFormsModule.decorators = [\n\t            { type: _angular_core.NgModule, args: [{\n\t                        declarations: [REACTIVE_DRIVEN_DIRECTIVES],\n\t                        providers: [FormBuilder, RadioControlRegistry],\n\t                        exports: [InternalFormsSharedModule, REACTIVE_DRIVEN_DIRECTIVES]\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        ReactiveFormsModule.ctorParameters = function () { return []; };\n\t        return ReactiveFormsModule;\n\t    }());\n\t\n\t    exports.AbstractControlDirective = AbstractControlDirective;\n\t    exports.AbstractFormGroupDirective = AbstractFormGroupDirective;\n\t    exports.CheckboxControlValueAccessor = CheckboxControlValueAccessor;\n\t    exports.ControlContainer = ControlContainer;\n\t    exports.NG_VALUE_ACCESSOR = NG_VALUE_ACCESSOR;\n\t    exports.DefaultValueAccessor = DefaultValueAccessor;\n\t    exports.NgControl = NgControl;\n\t    exports.NgControlStatus = NgControlStatus;\n\t    exports.NgControlStatusGroup = NgControlStatusGroup;\n\t    exports.NgForm = NgForm;\n\t    exports.NgModel = NgModel;\n\t    exports.NgModelGroup = NgModelGroup;\n\t    exports.RadioControlValueAccessor = RadioControlValueAccessor;\n\t    exports.FormControlDirective = FormControlDirective;\n\t    exports.FormControlName = FormControlName;\n\t    exports.FormGroupDirective = FormGroupDirective;\n\t    exports.FormArrayName = FormArrayName;\n\t    exports.FormGroupName = FormGroupName;\n\t    exports.NgSelectOption = NgSelectOption;\n\t    exports.SelectControlValueAccessor = SelectControlValueAccessor;\n\t    exports.SelectMultipleControlValueAccessor = SelectMultipleControlValueAccessor;\n\t    exports.MaxLengthValidator = MaxLengthValidator;\n\t    exports.MinLengthValidator = MinLengthValidator;\n\t    exports.PatternValidator = PatternValidator;\n\t    exports.RequiredValidator = RequiredValidator;\n\t    exports.FormBuilder = FormBuilder;\n\t    exports.AbstractControl = AbstractControl;\n\t    exports.FormArray = FormArray;\n\t    exports.FormControl = FormControl;\n\t    exports.FormGroup = FormGroup;\n\t    exports.NG_ASYNC_VALIDATORS = NG_ASYNC_VALIDATORS;\n\t    exports.NG_VALIDATORS = NG_VALIDATORS;\n\t    exports.Validators = Validators;\n\t    exports.VERSION = VERSION;\n\t    exports.FormsModule = FormsModule;\n\t    exports.ReactiveFormsModule = ReactiveFormsModule;\n\t\n\t}));\n\n/***/ },\n\n/***/ 30:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(2);\n\tvar common_1 = __webpack_require__(23);\n\tvar router_1 = __webpack_require__(31);\n\tvar ng2_ui_1 = __webpack_require__(61);\n\tvar AppComponent = (function () {\n\t    function AppComponent(router, location) {\n\t        var _this = this;\n\t        this.router = router;\n\t        this.location = location;\n\t        ng2_ui_1.Ng2MapComponent['apiUrl'] = \"https://maps.google.com/maps/api/js?key=AIzaSyCbMGRUwcqKjlYX4h4-P6t-xcDryRYLmCM\";\n\t        router.events.subscribe(function (event) {\n\t            _this.sendToGoogleAnalytics(event);\n\t        });\n\t    }\n\t    AppComponent.prototype.sendToGoogleAnalytics = function (event) {\n\t        if (event instanceof router_1.NavigationEnd) {\n\t            // When the route is '/', location.path actually returns ''.\n\t            var newRoute = this.location.path() || '/';\n\t            if (this.currentRoute != newRoute) {\n\t                //console.log('>>>>>>>>>>>>>>>>>>>> sending google analytics', 'send', 'pageview', newRoute);\n\t                window['ga']('send', 'pageview', newRoute);\n\t                this.currentRoute = newRoute;\n\t            }\n\t        }\n\t    };\n\t    return AppComponent;\n\t}());\n\tAppComponent = __decorate([\n\t    core_1.Component({\n\t        selector: 'my-app',\n\t        template: __webpack_require__(70)\n\t    }),\n\t    __metadata(\"design:paramtypes\", [router_1.Router,\n\t        common_1.Location])\n\t], AppComponent);\n\texports.AppComponent = AppComponent;\n\n\n/***/ },\n\n/***/ 61:\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function webpackUniversalModuleDefinition(root, factory) {\n\t\tif(true)\n\t\t\tmodule.exports = factory(__webpack_require__(2), __webpack_require__(25), __webpack_require__(22), __webpack_require__(29), __webpack_require__(62), __webpack_require__(23), __webpack_require__(3), __webpack_require__(63));\n\t\telse if(typeof define === 'function' && define.amd)\n\t\t\tdefine([\"@angular/core\", \"@angular/forms\", \"@angular/platform-browser\", \"@angular/http\", \"rxjs/add/operator/map\", \"@angular/common\", \"rxjs/Subject\", \"rxjs/add/operator/debounceTime\"], factory);\n\t\telse if(typeof exports === 'object')\n\t\t\texports[\"ng2-ui\"] = factory(require(\"@angular/core\"), require(\"@angular/forms\"), require(\"@angular/platform-browser\"), require(\"@angular/http\"), require(\"rxjs/add/operator/map\"), require(\"@angular/common\"), require(\"rxjs/Subject\"), require(\"rxjs/add/operator/debounceTime\"));\n\t\telse\n\t\t\troot[\"ng2-ui\"] = factory(root[\"@angular/core\"], root[\"@angular/forms\"], root[\"@angular/platform-browser\"], root[\"@angular/http\"], root[\"rxjs/add/operator/map\"], root[\"@angular/common\"], root[\"rxjs/Subject\"], root[\"rxjs/add/operator/debounceTime\"]);\n\t})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_6__, __WEBPACK_EXTERNAL_MODULE_7__, __WEBPACK_EXTERNAL_MODULE_8__, __WEBPACK_EXTERNAL_MODULE_11__, __WEBPACK_EXTERNAL_MODULE_12__) {\n\treturn /******/ (function(modules) { // webpackBootstrap\n\t/******/ \t// The module cache\n\t/******/ \tvar installedModules = {};\n\t/******/\n\t/******/ \t// The require function\n\t/******/ \tfunction __webpack_require__(moduleId) {\n\t/******/\n\t/******/ \t\t// Check if module is in cache\n\t/******/ \t\tif(installedModules[moduleId])\n\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\t/******/\n\t/******/ \t\t// Create a new module (and put it into the cache)\n\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t/******/ \t\t\texports: {},\n\t/******/ \t\t\tid: moduleId,\n\t/******/ \t\t\tloaded: false\n\t/******/ \t\t};\n\t/******/\n\t/******/ \t\t// Execute the module function\n\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t/******/\n\t/******/ \t\t// Flag the module as loaded\n\t/******/ \t\tmodule.loaded = true;\n\t/******/\n\t/******/ \t\t// Return the exports of the module\n\t/******/ \t\treturn module.exports;\n\t/******/ \t}\n\t/******/\n\t/******/\n\t/******/ \t// expose the modules object (__webpack_modules__)\n\t/******/ \t__webpack_require__.m = modules;\n\t/******/\n\t/******/ \t// expose the module cache\n\t/******/ \t__webpack_require__.c = installedModules;\n\t/******/\n\t/******/ \t// __webpack_public_path__\n\t/******/ \t__webpack_require__.p = \"\";\n\t/******/\n\t/******/ \t// Load entry module and return exports\n\t/******/ \treturn __webpack_require__(0);\n\t/******/ })\n\t/************************************************************************/\n\t/******/ ([\n\t/* 0 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar ng2_ui_module_1 = __webpack_require__(1);\n\t\texports.Ng2ScrollableDirective = ng2_ui_module_1.Ng2ScrollableDirective;\n\t\texports.Ng2MessagePopupComponent = ng2_ui_module_1.Ng2MessagePopupComponent;\n\t\texports.Ng2PopupComponent = ng2_ui_module_1.Ng2PopupComponent;\n\t\texports.Ng2OverlayManager = ng2_ui_module_1.Ng2OverlayManager;\n\t\texports.Ng2MapComponent = ng2_ui_module_1.Ng2MapComponent;\n\t\texports.Ng2UIModule = ng2_ui_module_1.Ng2UIModule;\n\t\texports.Ng2MapModule = ng2_ui_module_1.Ng2MapModule;\n\t\n\t\n\t/***/ },\n\t/* 1 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar core_1 = __webpack_require__(2);\n\t\tvar forms_1 = __webpack_require__(3);\n\t\tvar platform_browser_1 = __webpack_require__(4);\n\t\tvar ng2_auto_complete_1 = __webpack_require__(5);\n\t\tvar ng2_datetime_picker_1 = __webpack_require__(9);\n\t\tvar ng2_map_1 = __webpack_require__(10);\n\t\texports.Ng2MapModule = ng2_map_1.Ng2MapModule;\n\t\tvar ng2_popup_1 = __webpack_require__(13);\n\t\tvar ng2_menu_1 = __webpack_require__(14);\n\t\tvar ng2_parallax_scroll_1 = __webpack_require__(15);\n\t\tvar ng2_sticky_1 = __webpack_require__(16);\n\t\tvar ng2_tab_1 = __webpack_require__(17);\n\t\tvar ng2_tooltip_overlay_1 = __webpack_require__(18);\n\t\tvar ng2_ui_sortable_1 = __webpack_require__(19);\n\t\tvar ng2_overlay_1 = __webpack_require__(20);\n\t\tvar ng2_scrollable_1 = __webpack_require__(21);\n\t\tvar ng2_collapsable_1 = __webpack_require__(22);\n\t\tvar ng2_infinite_list_1 = __webpack_require__(23);\n\t\tvar ng2_overlay_2 = __webpack_require__(20);\n\t\texports.Ng2OverlayManager = ng2_overlay_2.Ng2OverlayManager;\n\t\tvar ng2_scrollable_2 = __webpack_require__(21);\n\t\texports.Ng2ScrollableDirective = ng2_scrollable_2.Ng2ScrollableDirective;\n\t\tvar ng2_popup_2 = __webpack_require__(13);\n\t\texports.Ng2MessagePopupComponent = ng2_popup_2.Ng2MessagePopupComponent;\n\t\texports.Ng2PopupComponent = ng2_popup_2.Ng2PopupComponent;\n\t\tvar ng2_map_2 = __webpack_require__(10);\n\t\texports.Ng2MapComponent = ng2_map_2.Ng2MapComponent;\n\t\tvar Ng2UIModule = (function () {\n\t\t    function Ng2UIModule() {\n\t\t    }\n\t\t    return Ng2UIModule;\n\t\t}());\n\t\tNg2UIModule = __decorate([\n\t\t    core_1.NgModule({\n\t\t        imports: [platform_browser_1.BrowserModule, forms_1.FormsModule],\n\t\t        exports: [\n\t\t            ng2_auto_complete_1.Ng2AutoCompleteModule,\n\t\t            ng2_datetime_picker_1.Ng2DatetimePickerModule,\n\t\t            ng2_map_1.Ng2MapModule,\n\t\t            ng2_infinite_list_1.Ng2InfiniteListModule,\n\t\t            ng2_menu_1.Ng2MenuModule,\n\t\t            ng2_parallax_scroll_1.Ng2ParallaxScrollModule,\n\t\t            ng2_popup_1.Ng2PopupModule,\n\t\t            ng2_sticky_1.Ng2StickyModule,\n\t\t            ng2_tab_1.Ng2TabModule,\n\t\t            ng2_scrollable_1.Ng2ScrollableModule,\n\t\t            ng2_tooltip_overlay_1.Ng2TooltipOverlayModule,\n\t\t            ng2_overlay_1.Ng2OverlayModule,\n\t\t            ng2_ui_sortable_1.Ng2SortableModule,\n\t\t            ng2_collapsable_1.Ng2CollapsableModule\n\t\t        ],\n\t\t        providers: [ng2_overlay_2.Ng2OverlayManager]\n\t\t    })\n\t\t], Ng2UIModule);\n\t\texports.Ng2UIModule = Ng2UIModule;\n\t\n\t\n\t/***/ },\n\t/* 2 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\t\n\t/***/ },\n\t/* 3 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\t\n\t/***/ },\n\t/* 4 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\t\n\t/***/ },\n\t/* 5 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t(function webpackUniversalModuleDefinition(root, factory) {\n\t\t\tif(true)\n\t\t\t\tmodule.exports = factory(__webpack_require__(2), __webpack_require__(6), __webpack_require__(7), __webpack_require__(8), __webpack_require__(3));\n\t\t\telse if(typeof define === 'function' && define.amd)\n\t\t\t\tdefine([\"@angular/core\", \"@angular/http\", \"rxjs/add/operator/map\", \"@angular/common\", \"@angular/forms\"], factory);\n\t\t\telse if(typeof exports === 'object')\n\t\t\t\texports[\"ng2-auto-complete\"] = factory(require(\"@angular/core\"), require(\"@angular/http\"), require(\"rxjs/add/operator/map\"), require(\"@angular/common\"), require(\"@angular/forms\"));\n\t\t\telse\n\t\t\t\troot[\"ng2-auto-complete\"] = factory(root[\"@angular/core\"], root[\"@angular/http\"], root[\"rxjs/add/operator/map\"], root[\"@angular/common\"], root[\"@angular/forms\"]);\n\t\t})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_6__, __WEBPACK_EXTERNAL_MODULE_7__) {\n\t\treturn /******/ (function(modules) { // webpackBootstrap\n\t\t/******/ \t// The module cache\n\t\t/******/ \tvar installedModules = {};\n\t\t/******/\n\t\t/******/ \t// The require function\n\t\t/******/ \tfunction __webpack_require__(moduleId) {\n\t\t/******/\n\t\t/******/ \t\t// Check if module is in cache\n\t\t/******/ \t\tif(installedModules[moduleId])\n\t\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\t\t/******/\n\t\t/******/ \t\t// Create a new module (and put it into the cache)\n\t\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t\t/******/ \t\t\texports: {},\n\t\t/******/ \t\t\tid: moduleId,\n\t\t/******/ \t\t\tloaded: false\n\t\t/******/ \t\t};\n\t\t/******/\n\t\t/******/ \t\t// Execute the module function\n\t\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t\t/******/\n\t\t/******/ \t\t// Flag the module as loaded\n\t\t/******/ \t\tmodule.loaded = true;\n\t\t/******/\n\t\t/******/ \t\t// Return the exports of the module\n\t\t/******/ \t\treturn module.exports;\n\t\t/******/ \t}\n\t\t/******/\n\t\t/******/\n\t\t/******/ \t// expose the modules object (__webpack_modules__)\n\t\t/******/ \t__webpack_require__.m = modules;\n\t\t/******/\n\t\t/******/ \t// expose the module cache\n\t\t/******/ \t__webpack_require__.c = installedModules;\n\t\t/******/\n\t\t/******/ \t// __webpack_public_path__\n\t\t/******/ \t__webpack_require__.p = \"\";\n\t\t/******/\n\t\t/******/ \t// Load entry module and return exports\n\t\t/******/ \treturn __webpack_require__(0);\n\t\t/******/ })\n\t\t/************************************************************************/\n\t\t/******/ ([\n\t\t/* 0 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar ng2_auto_complete_1 = __webpack_require__(1);\n\t\t\texports.Ng2AutoComplete = ng2_auto_complete_1.Ng2AutoComplete;\n\t\t\tvar ng2_auto_complete_module_1 = __webpack_require__(5);\n\t\t\texports.Ng2AutoCompleteModule = ng2_auto_complete_module_1.Ng2AutoCompleteModule;\n\t\t\tvar ng2_auto_complete_component_1 = __webpack_require__(8);\n\t\t\texports.Ng2AutoCompleteComponent = ng2_auto_complete_component_1.Ng2AutoCompleteComponent;\n\t\t\tvar ng2_auto_complete_directive_1 = __webpack_require__(9);\n\t\t\texports.Ng2AutoCompleteDirective = ng2_auto_complete_directive_1.Ng2AutoCompleteDirective;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 1 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t};\n\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t};\n\t\t\tvar __param = (this && this.__param) || function (paramIndex, decorator) {\n\t\t\t    return function (target, key) { decorator(target, key, paramIndex); }\n\t\t\t};\n\t\t\tvar core_1 = __webpack_require__(2);\n\t\t\tvar http_1 = __webpack_require__(3);\n\t\t\t__webpack_require__(4);\n\t\t\t/**\n\t\t\t * provides auto-complete related utility functions\n\t\t\t */\n\t\t\tvar Ng2AutoComplete = (function () {\n\t\t\t    function Ng2AutoComplete(http) {\n\t\t\t        this.http = http;\n\t\t\t        // ...\n\t\t\t    }\n\t\t\t    Ng2AutoComplete.prototype.filter = function (list, keyword) {\n\t\t\t        return list.filter(function (el) {\n\t\t\t            var objStr = JSON.stringify(el).toLowerCase();\n\t\t\t            keyword = keyword.toLowerCase();\n\t\t\t            //console.log(objStr, keyword, objStr.indexOf(keyword) !== -1);\n\t\t\t            return objStr.indexOf(keyword) !== -1;\n\t\t\t        });\n\t\t\t    };\n\t\t\t    /**\n\t\t\t     * return remote data from the given source and options, and data path\n\t\t\t     */\n\t\t\t    Ng2AutoComplete.prototype.getRemoteData = function (keyword) {\n\t\t\t        var _this = this;\n\t\t\t        if (typeof this.source !== 'string') {\n\t\t\t            throw \"Invalid type of source, must be a string. e.g. http://www.google.com?q=:my_keyword\";\n\t\t\t        }\n\t\t\t        else if (!this.http) {\n\t\t\t            throw \"Http is required.\";\n\t\t\t        }\n\t\t\t        var matches = this.source.match(/:[a-zA-Z_]+/);\n\t\t\t        if (matches === null) {\n\t\t\t            throw \"Replacement word is missing.\";\n\t\t\t        }\n\t\t\t        var replacementWord = matches[0];\n\t\t\t        var url = this.source.replace(replacementWord, keyword);\n\t\t\t        return this.http.get(url)\n\t\t\t            .map(function (resp) { return resp.json(); })\n\t\t\t            .map(function (resp) {\n\t\t\t            var list = resp.data || resp;\n\t\t\t            if (_this.pathToData) {\n\t\t\t                var paths = _this.pathToData.split(\".\");\n\t\t\t                paths.forEach(function (prop) { return list = list[prop]; });\n\t\t\t            }\n\t\t\t            return list;\n\t\t\t        });\n\t\t\t    };\n\t\t\t    ;\n\t\t\t    Ng2AutoComplete = __decorate([\n\t\t\t        core_1.Injectable(),\n\t\t\t        __param(0, core_1.Optional()), \n\t\t\t        __metadata('design:paramtypes', [http_1.Http])\n\t\t\t    ], Ng2AutoComplete);\n\t\t\t    return Ng2AutoComplete;\n\t\t\t}());\n\t\t\texports.Ng2AutoComplete = Ng2AutoComplete;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 2 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\t\t\n\t\t/***/ },\n\t\t/* 3 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\t\t\n\t\t/***/ },\n\t\t/* 4 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\t\t\n\t\t/***/ },\n\t\t/* 5 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t};\n\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t};\n\t\t\tvar core_1 = __webpack_require__(2);\n\t\t\tvar common_1 = __webpack_require__(6);\n\t\t\tvar forms_1 = __webpack_require__(7);\n\t\t\tvar ng2_auto_complete_component_1 = __webpack_require__(8);\n\t\t\tvar ng2_auto_complete_directive_1 = __webpack_require__(9);\n\t\t\tvar ng2_auto_complete_1 = __webpack_require__(1);\n\t\t\tvar Ng2AutoCompleteModule = (function () {\n\t\t\t    function Ng2AutoCompleteModule() {\n\t\t\t    }\n\t\t\t    Ng2AutoCompleteModule.forRoot = function () {\n\t\t\t        return {\n\t\t\t            ngModule: Ng2AutoCompleteModule,\n\t\t\t            providers: [ng2_auto_complete_1.Ng2AutoComplete]\n\t\t\t        };\n\t\t\t    };\n\t\t\t    Ng2AutoCompleteModule = __decorate([\n\t\t\t        core_1.NgModule({\n\t\t\t            imports: [common_1.CommonModule, forms_1.FormsModule],\n\t\t\t            declarations: [ng2_auto_complete_component_1.Ng2AutoCompleteComponent, ng2_auto_complete_directive_1.Ng2AutoCompleteDirective],\n\t\t\t            exports: [ng2_auto_complete_component_1.Ng2AutoCompleteComponent, ng2_auto_complete_directive_1.Ng2AutoCompleteDirective],\n\t\t\t            entryComponents: [ng2_auto_complete_component_1.Ng2AutoCompleteComponent]\n\t\t\t        }), \n\t\t\t        __metadata('design:paramtypes', [])\n\t\t\t    ], Ng2AutoCompleteModule);\n\t\t\t    return Ng2AutoCompleteModule;\n\t\t\t}());\n\t\t\texports.Ng2AutoCompleteModule = Ng2AutoCompleteModule;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 6 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_6__;\n\t\t\n\t\t/***/ },\n\t\t/* 7 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_7__;\n\t\t\n\t\t/***/ },\n\t\t/* 8 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t};\n\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t};\n\t\t\tvar core_1 = __webpack_require__(2);\n\t\t\tvar ng2_auto_complete_1 = __webpack_require__(1);\n\t\t\t/**\n\t\t\t * show a selected date in monthly calendar\n\t\t\t * Each filteredList item has the following property in addition to data itself\n\t\t\t *   1. displayValue as string e.g. Allen Kim\n\t\t\t *   2. dataValue as any e.g.\n\t\t\t */\n\t\t\tvar Ng2AutoCompleteComponent = (function () {\n\t\t\t    /**\n\t\t\t     * constructor\n\t\t\t     */\n\t\t\t    function Ng2AutoCompleteComponent(elementRef, autoComplete) {\n\t\t\t        var _this = this;\n\t\t\t        this.autoComplete = autoComplete;\n\t\t\t        this.minChars = 0;\n\t\t\t        this.loadingText = \"Loading\";\n\t\t\t        this.showInputTag = true;\n\t\t\t        this.showDropdownOnInit = false;\n\t\t\t        this.valueSelected = new core_1.EventEmitter();\n\t\t\t        this.inputChanged = new core_1.EventEmitter();\n\t\t\t        this.dropdownVisible = false;\n\t\t\t        this.isLoading = false;\n\t\t\t        this.filteredList = [];\n\t\t\t        this.minCharsEntered = false;\n\t\t\t        this.itemIndex = 0;\n\t\t\t        this.reloadListInDelay = function (evt) {\n\t\t\t            var delayMs = _this.isSrcArr() ? 10 : 500;\n\t\t\t            var keyword = evt.target.value;\n\t\t\t            // executing after user stopped typing\n\t\t\t            _this.delay(function () { return _this.reloadList(keyword); }, delayMs);\n\t\t\t            _this.inputChanged.emit(keyword);\n\t\t\t        };\n\t\t\t        this.inputElKeyHandler = function (evt) {\n\t\t\t            var totalNumItem = _this.filteredList.length;\n\t\t\t            switch (evt.keyCode) {\n\t\t\t                case 27:\n\t\t\t                    //this.hideDropdownList();\n\t\t\t                    break;\n\t\t\t                case 38:\n\t\t\t                    _this.itemIndex = (totalNumItem + _this.itemIndex - 1) % totalNumItem;\n\t\t\t                    break;\n\t\t\t                case 40:\n\t\t\t                    _this.dropdownVisible = true;\n\t\t\t                    _this.itemIndex = (totalNumItem + _this.itemIndex + 1) % totalNumItem;\n\t\t\t                    break;\n\t\t\t                case 13:\n\t\t\t                    if (_this.filteredList.length > 0) {\n\t\t\t                        _this.selectOne(_this.filteredList[_this.itemIndex]);\n\t\t\t                    }\n\t\t\t                    evt.preventDefault();\n\t\t\t                    break;\n\t\t\t            }\n\t\t\t        };\n\t\t\t        this.delay = (function () {\n\t\t\t            var timer = 0;\n\t\t\t            return function (callback, ms) {\n\t\t\t                clearTimeout(timer);\n\t\t\t                timer = setTimeout(callback, ms);\n\t\t\t            };\n\t\t\t        })();\n\t\t\t        this.el = elementRef.nativeElement;\n\t\t\t    }\n\t\t\t    Ng2AutoCompleteComponent.prototype.isSrcArr = function () {\n\t\t\t        return (this.source.constructor.name === \"Array\");\n\t\t\t    };\n\t\t\t    /**\n\t\t\t     * user enters into input el, shows list to select, then select one\n\t\t\t     */\n\t\t\t    Ng2AutoCompleteComponent.prototype.ngOnInit = function () {\n\t\t\t        var _this = this;\n\t\t\t        this.autoComplete.source = this.source;\n\t\t\t        this.autoComplete.pathToData = this.pathToData;\n\t\t\t        setTimeout(function () {\n\t\t\t            if (_this.autoCompleteInput) {\n\t\t\t                _this.autoCompleteInput.nativeElement.focus();\n\t\t\t            }\n\t\t\t            if (_this.showDropdownOnInit) {\n\t\t\t                _this.showDropdownList({ target: { value: '' } });\n\t\t\t            }\n\t\t\t        });\n\t\t\t    };\n\t\t\t    Ng2AutoCompleteComponent.prototype.showDropdownList = function (event) {\n\t\t\t        this.dropdownVisible = true;\n\t\t\t        this.reloadList(event.target.value);\n\t\t\t    };\n\t\t\t    Ng2AutoCompleteComponent.prototype.hideDropdownList = function () {\n\t\t\t        this.dropdownVisible = false;\n\t\t\t    };\n\t\t\t    Ng2AutoCompleteComponent.prototype.reloadList = function (keyword) {\n\t\t\t        var _this = this;\n\t\t\t        this.filteredList = [];\n\t\t\t        if (keyword.length < (this.minChars || 0)) {\n\t\t\t            this.minCharsEntered = false;\n\t\t\t            return;\n\t\t\t        }\n\t\t\t        else {\n\t\t\t            this.minCharsEntered = true;\n\t\t\t        }\n\t\t\t        if (this.isSrcArr()) {\n\t\t\t            this.isLoading = false;\n\t\t\t            this.filteredList = this.autoComplete.filter(this.source, keyword);\n\t\t\t            if (this.maxNumList) {\n\t\t\t                this.filteredList = this.filteredList.slice(0, this.maxNumList);\n\t\t\t            }\n\t\t\t        }\n\t\t\t        else {\n\t\t\t            this.isLoading = true;\n\t\t\t            if (typeof this.source === \"function\") {\n\t\t\t                // custom function that returns observable\n\t\t\t                this.source(keyword).subscribe(function (resp) {\n\t\t\t                    if (_this.pathToData) {\n\t\t\t                        var paths = _this.pathToData.split(\".\");\n\t\t\t                        paths.forEach(function (prop) { return resp = resp[prop]; });\n\t\t\t                    }\n\t\t\t                    _this.filteredList = resp;\n\t\t\t                    if (_this.maxNumList) {\n\t\t\t                        _this.filteredList = _this.filteredList.slice(0, _this.maxNumList);\n\t\t\t                    }\n\t\t\t                }, function (error) { return null; }, function () { return _this.isLoading = false; } // complete\n\t\t\t                );\n\t\t\t            }\n\t\t\t            else {\n\t\t\t                // remote source\n\t\t\t                this.autoComplete.getRemoteData(keyword).subscribe(function (resp) {\n\t\t\t                    _this.filteredList = resp;\n\t\t\t                    if (_this.maxNumList) {\n\t\t\t                        _this.filteredList = _this.filteredList.slice(0, _this.maxNumList);\n\t\t\t                    }\n\t\t\t                }, function (error) { return null; }, function () { return _this.isLoading = false; } // complete\n\t\t\t                );\n\t\t\t            }\n\t\t\t        }\n\t\t\t    };\n\t\t\t    Ng2AutoCompleteComponent.prototype.selectOne = function (data) {\n\t\t\t        this.valueSelected.emit(data);\n\t\t\t    };\n\t\t\t    ;\n\t\t\t    Ng2AutoCompleteComponent.prototype.getFormattedList = function (data) {\n\t\t\t        var formatted;\n\t\t\t        var formatter = this.listFormatter || '(id) value';\n\t\t\t        if (typeof formatter === 'function') {\n\t\t\t            formatted = formatter.apply(this, [data]);\n\t\t\t        }\n\t\t\t        else if (typeof data !== 'object') {\n\t\t\t            formatted = data;\n\t\t\t        }\n\t\t\t        else if (typeof formatter === 'string') {\n\t\t\t            formatted = formatter;\n\t\t\t            var matches = formatter.match(/[a-zA-Z0-9_\\$]+/g);\n\t\t\t            if (matches && typeof data !== 'string') {\n\t\t\t                matches.forEach(function (key) {\n\t\t\t                    formatted = formatted.replace(key, data[key]);\n\t\t\t                });\n\t\t\t            }\n\t\t\t        }\n\t\t\t        return formatted;\n\t\t\t    };\n\t\t\t    Object.defineProperty(Ng2AutoCompleteComponent.prototype, \"emptyList\", {\n\t\t\t        get: function () {\n\t\t\t            return !(this.isLoading ||\n\t\t\t                (this.minCharsEntered && !this.isLoading && !this.filteredList.length) ||\n\t\t\t                (this.filteredList.length));\n\t\t\t        },\n\t\t\t        enumerable: true,\n\t\t\t        configurable: true\n\t\t\t    });\n\t\t\t    __decorate([\n\t\t\t        core_1.Input(\"list-formatter\"), \n\t\t\t        __metadata('design:type', Function)\n\t\t\t    ], Ng2AutoCompleteComponent.prototype, \"listFormatter\", void 0);\n\t\t\t    __decorate([\n\t\t\t        core_1.Input(\"source\"), \n\t\t\t        __metadata('design:type', Object)\n\t\t\t    ], Ng2AutoCompleteComponent.prototype, \"source\", void 0);\n\t\t\t    __decorate([\n\t\t\t        core_1.Input(\"path-to-data\"), \n\t\t\t        __metadata('design:type', String)\n\t\t\t    ], Ng2AutoCompleteComponent.prototype, \"pathToData\", void 0);\n\t\t\t    __decorate([\n\t\t\t        core_1.Input(\"min-chars\"), \n\t\t\t        __metadata('design:type', Number)\n\t\t\t    ], Ng2AutoCompleteComponent.prototype, \"minChars\", void 0);\n\t\t\t    __decorate([\n\t\t\t        core_1.Input(\"placeholder\"), \n\t\t\t        __metadata('design:type', String)\n\t\t\t    ], Ng2AutoCompleteComponent.prototype, \"placeholder\", void 0);\n\t\t\t    __decorate([\n\t\t\t        core_1.Input(\"blank-option-text\"), \n\t\t\t        __metadata('design:type', String)\n\t\t\t    ], Ng2AutoCompleteComponent.prototype, \"blankOptionText\", void 0);\n\t\t\t    __decorate([\n\t\t\t        core_1.Input(\"no-match-found-text\"), \n\t\t\t        __metadata('design:type', String)\n\t\t\t    ], Ng2AutoCompleteComponent.prototype, \"noMatchFoundText\", void 0);\n\t\t\t    __decorate([\n\t\t\t        core_1.Input(\"accept-user-input\"), \n\t\t\t        __metadata('design:type', Boolean)\n\t\t\t    ], Ng2AutoCompleteComponent.prototype, \"acceptUserInput\", void 0);\n\t\t\t    __decorate([\n\t\t\t        core_1.Input(\"loading-text\"), \n\t\t\t        __metadata('design:type', String)\n\t\t\t    ], Ng2AutoCompleteComponent.prototype, \"loadingText\", void 0);\n\t\t\t    __decorate([\n\t\t\t        core_1.Input(\"max-num-list\"), \n\t\t\t        __metadata('design:type', Number)\n\t\t\t    ], Ng2AutoCompleteComponent.prototype, \"maxNumList\", void 0);\n\t\t\t    __decorate([\n\t\t\t        core_1.Input(\"show-input-tag\"), \n\t\t\t        __metadata('design:type', Boolean)\n\t\t\t    ], Ng2AutoCompleteComponent.prototype, \"showInputTag\", void 0);\n\t\t\t    __decorate([\n\t\t\t        core_1.Input(\"show-dropdown-on-init\"), \n\t\t\t        __metadata('design:type', Boolean)\n\t\t\t    ], Ng2AutoCompleteComponent.prototype, \"showDropdownOnInit\", void 0);\n\t\t\t    __decorate([\n\t\t\t        core_1.Output(), \n\t\t\t        __metadata('design:type', Object)\n\t\t\t    ], Ng2AutoCompleteComponent.prototype, \"valueSelected\", void 0);\n\t\t\t    __decorate([\n\t\t\t        core_1.Output(), \n\t\t\t        __metadata('design:type', Object)\n\t\t\t    ], Ng2AutoCompleteComponent.prototype, \"inputChanged\", void 0);\n\t\t\t    __decorate([\n\t\t\t        core_1.ViewChild('autoCompleteInput'), \n\t\t\t        __metadata('design:type', core_1.ElementRef)\n\t\t\t    ], Ng2AutoCompleteComponent.prototype, \"autoCompleteInput\", void 0);\n\t\t\t    Ng2AutoCompleteComponent = __decorate([\n\t\t\t        core_1.Component({\n\t\t\t            selector: \"ng2-auto-complete\",\n\t\t\t            template: \"\\n  <div class=\\\"ng2-auto-complete\\\">\\n\\n    <!-- keyword input -->\\n    <input *ngIf=\\\"showInputTag\\\"\\n           #autoCompleteInput class=\\\"keyword\\\"\\n           placeholder=\\\"{{placeholder}}\\\"\\n           (focus)=\\\"showDropdownList($event)\\\"\\n           (blur)=\\\"hideDropdownList()\\\"\\n           (keydown)=\\\"inputElKeyHandler($event)\\\"\\n           (input)=\\\"reloadListInDelay($event)\\\"\\n           [(ngModel)]=\\\"keyword\\\" />\\n\\n    <!-- dropdown that user can select -->\\n    <ul *ngIf=\\\"dropdownVisible\\\" [class.empty]=\\\"emptyList\\\">\\n      <li *ngIf=\\\"isLoading\\\" class=\\\"loading\\\">{{loadingText}}</li>\\n      <li *ngIf=\\\"minCharsEntered && !isLoading && !filteredList.length\\\"\\n           (mousedown)=\\\"selectOne('')\\\"\\n           class=\\\"blank-item\\\">{{noMatchFoundText || 'No Result Found'}}</li>\\n      <li *ngIf=\\\"blankOptionText && filteredList.length\\\"\\n          (mousedown)=\\\"selectOne('')\\\"\\n          class=\\\"blank-item\\\">{{blankOptionText}}</li>\\n      <li class=\\\"item\\\"\\n          *ngFor=\\\"let item of filteredList; let i=index\\\"\\n          (mousedown)=\\\"selectOne(item)\\\"\\n          [ngClass]=\\\"{selected: i === itemIndex}\\\"\\n          [innerHtml]=\\\"getFormattedList(item)\\\">\\n      </li>\\n    </ul>\\n\\n  </div>\",\n\t\t\t            providers: [ng2_auto_complete_1.Ng2AutoComplete],\n\t\t\t            styles: [\"\\n  @keyframes slideDown {\\n    0% {\\n      transform:  translateY(-10px);\\n    }\\n    100% {\\n      transform: translateY(0px);\\n    }\\n  }\\n  .ng2-auto-complete {\\n    background-color: transparent;\\n  }\\n  .ng2-auto-complete > input {\\n    outline: none;\\n    border: 0;\\n    padding: 2px; \\n    box-sizing: border-box;\\n    background-clip: content-box;\\n  }\\n\\n  .ng2-auto-complete > ul {\\n    background-color: #fff;\\n    margin: 0;\\n    width : 100%;\\n    overflow-y: auto;\\n    list-style-type: none;\\n    padding: 0;\\n    border: 1px solid #ccc;\\n    box-sizing: border-box;\\n    animation: slideDown 0.1s;\\n  }\\n  .ng2-auto-complete > ul.empty {\\n    display: none;\\n  }\\n\\n  .ng2-auto-complete > ul li {\\n    padding: 2px 5px;\\n    border-bottom: 1px solid #eee;\\n  }\\n\\n  .ng2-auto-complete > ul li.selected {\\n    background-color: #ccc;\\n  }\\n\\n  .ng2-auto-complete > ul li:last-child {\\n    border-bottom: none;\\n  }\\n\\n  .ng2-auto-complete > ul li:hover {\\n    background-color: #ccc;\\n  }\"\n\t\t\t            ],\n\t\t\t            encapsulation: core_1.ViewEncapsulation.None\n\t\t\t        }), \n\t\t\t        __metadata('design:paramtypes', [core_1.ElementRef, ng2_auto_complete_1.Ng2AutoComplete])\n\t\t\t    ], Ng2AutoCompleteComponent);\n\t\t\t    return Ng2AutoCompleteComponent;\n\t\t\t}());\n\t\t\texports.Ng2AutoCompleteComponent = Ng2AutoCompleteComponent;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 9 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t};\n\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t};\n\t\t\tvar __param = (this && this.__param) || function (paramIndex, decorator) {\n\t\t\t    return function (target, key) { decorator(target, key, paramIndex); }\n\t\t\t};\n\t\t\tvar core_1 = __webpack_require__(2);\n\t\t\tvar ng2_auto_complete_component_1 = __webpack_require__(8);\n\t\t\tvar forms_1 = __webpack_require__(7);\n\t\t\t/**\n\t\t\t * display auto-complete section with input and dropdown list when it is clicked\n\t\t\t */\n\t\t\tvar Ng2AutoCompleteDirective = (function () {\n\t\t\t    function Ng2AutoCompleteDirective(resolver, renderer, viewContainerRef, parentForm) {\n\t\t\t        var _this = this;\n\t\t\t        this.resolver = resolver;\n\t\t\t        this.renderer = renderer;\n\t\t\t        this.viewContainerRef = viewContainerRef;\n\t\t\t        this.parentForm = parentForm;\n\t\t\t        this.loadingText = \"Loading\";\n\t\t\t        this.ngModelChange = new core_1.EventEmitter();\n\t\t\t        this.valueChanged = new core_1.EventEmitter();\n\t\t\t        //show auto-complete list below the current element\n\t\t\t        this.showAutoCompleteDropdown = function (event) {\n\t\t\t            var factory = _this.resolver.resolveComponentFactory(ng2_auto_complete_component_1.Ng2AutoCompleteComponent);\n\t\t\t            _this.componentRef = _this.viewContainerRef.createComponent(factory);\n\t\t\t            var component = _this.componentRef.instance;\n\t\t\t            component.showInputTag = false; //Do NOT display autocomplete input tag separately\n\t\t\t            component.pathToData = _this.pathToData;\n\t\t\t            component.minChars = _this.minChars;\n\t\t\t            component.source = _this.source;\n\t\t\t            component.placeholder = _this.autoCompletePlaceholder;\n\t\t\t            component.acceptUserInput = _this.acceptUserInput;\n\t\t\t            component.maxNumList = parseInt(_this.maxNumList, 10);\n\t\t\t            component.loadingText = _this.loadingText;\n\t\t\t            component.listFormatter = _this.listFormatter;\n\t\t\t            component.blankOptionText = _this.blankOptionText;\n\t\t\t            component.noMatchFoundText = _this.noMatchFoundText;\n\t\t\t            component.valueSelected.subscribe(_this.selectNewValue);\n\t\t\t            component.inputChanged.subscribe(_this.componentInputChanged);\n\t\t\t            _this.acDropdownEl = _this.componentRef.location.nativeElement;\n\t\t\t            _this.acDropdownEl.style.display = \"none\";\n\t\t\t            // if this element is not an input tag, move dropdown after input tag\n\t\t\t            // so that it displays correctly\n\t\t\t            if (_this.el.tagName !== \"INPUT\" && _this.acDropdownEl) {\n\t\t\t                _this.inputEl.parentElement.insertBefore(_this.acDropdownEl, _this.inputEl.nextSibling);\n\t\t\t            }\n\t\t\t            setTimeout(function () {\n\t\t\t                component.reloadList(_this.inputEl.value);\n\t\t\t                _this.styleAutoCompleteDropdown();\n\t\t\t                component.dropdownVisible = true;\n\t\t\t            });\n\t\t\t        };\n\t\t\t        this.hideAutoCompleteDropdown = function (event) {\n\t\t\t            if (_this.componentRef) {\n\t\t\t                _this.componentRef.destroy();\n\t\t\t                _this.componentRef = undefined;\n\t\t\t            }\n\t\t\t        };\n\t\t\t        this.styleAutoCompleteDropdown = function () {\n\t\t\t            if (_this.componentRef) {\n\t\t\t                var component = _this.componentRef.instance;\n\t\t\t                /* setting width/height auto complete */\n\t\t\t                var thisElBCR = _this.el.getBoundingClientRect();\n\t\t\t                var thisInputElBCR = _this.inputEl.getBoundingClientRect();\n\t\t\t                var closeToBottom = thisInputElBCR.bottom + 100 > window.innerHeight;\n\t\t\t                _this.acDropdownEl.style.width = thisInputElBCR.width + \"px\";\n\t\t\t                _this.acDropdownEl.style.position = \"absolute\";\n\t\t\t                _this.acDropdownEl.style.zIndex = \"1\";\n\t\t\t                _this.acDropdownEl.style.left = \"0\";\n\t\t\t                _this.acDropdownEl.style.display = \"inline-block\";\n\t\t\t                if (closeToBottom) {\n\t\t\t                    _this.acDropdownEl.style.bottom = thisInputElBCR.height + \"px\";\n\t\t\t                }\n\t\t\t                else {\n\t\t\t                    _this.acDropdownEl.style.top = thisInputElBCR.height + \"px\";\n\t\t\t                }\n\t\t\t            }\n\t\t\t        };\n\t\t\t        this.componentInputChanged = function (val) {\n\t\t\t            if (_this.acceptUserInput !== false) {\n\t\t\t                _this.inputEl.value = val;\n\t\t\t                if ((_this.parentForm && _this.formControlName) || _this.extFormControl) {\n\t\t\t                    _this.formControl.patchValue(val);\n\t\t\t                }\n\t\t\t                (val !== _this.ngModel) && _this.ngModelChange.emit(val);\n\t\t\t                _this.valueChanged.emit(val);\n\t\t\t            }\n\t\t\t        };\n\t\t\t        this.selectNewValue = function (item) {\n\t\t\t            // make displayable value\n\t\t\t            if (item && typeof item === \"object\") {\n\t\t\t                item = _this.addToStringFunction(item);\n\t\t\t            }\n\t\t\t            _this.inputEl && (_this.inputEl.value = '' + item);\n\t\t\t            // make return value\n\t\t\t            var val = item;\n\t\t\t            if (_this.selectValueOf && item[_this.selectValueOf]) {\n\t\t\t                val = item[_this.selectValueOf];\n\t\t\t            }\n\t\t\t            if ((_this.parentForm && _this.formControlName) || _this.extFormControl) {\n\t\t\t                if (!!val) {\n\t\t\t                    _this.formControl.patchValue(val);\n\t\t\t                }\n\t\t\t            }\n\t\t\t            (val !== _this.ngModel) && _this.ngModelChange.emit(val);\n\t\t\t            _this.valueChanged.emit(val);\n\t\t\t            _this.hideAutoCompleteDropdown();\n\t\t\t        };\n\t\t\t        this.keydownEventHandler = function (evt) {\n\t\t\t            if (_this.componentRef) {\n\t\t\t                var component = _this.componentRef.instance;\n\t\t\t                component.inputElKeyHandler(evt);\n\t\t\t            }\n\t\t\t        };\n\t\t\t        this.inputEventHandler = function (evt) {\n\t\t\t            if (_this.componentRef) {\n\t\t\t                var component = _this.componentRef.instance;\n\t\t\t                component.dropdownVisible = true;\n\t\t\t                component.reloadListInDelay(evt);\n\t\t\t            }\n\t\t\t            else {\n\t\t\t                _this.showAutoCompleteDropdown();\n\t\t\t            }\n\t\t\t        };\n\t\t\t        this.el = this.viewContainerRef.element.nativeElement;\n\t\t\t    }\n\t\t\t    Ng2AutoCompleteDirective.prototype.ngOnInit = function () {\n\t\t\t        // wrap this element with <div class=\"ng2-auto-complete\">\n\t\t\t        this.wrapperEl = document.createElement(\"div\");\n\t\t\t        this.wrapperEl.className = \"ng2-auto-complete-wrapper\";\n\t\t\t        this.wrapperEl.style.position = \"relative\";\n\t\t\t        this.el.parentElement.insertBefore(this.wrapperEl, this.el.nextSibling);\n\t\t\t        this.wrapperEl.appendChild(this.el);\n\t\t\t        //Check if we were supplied with a [formControlName] and it is inside a [form]\n\t\t\t        //else check if we are supplied with a [FormControl] regardless if it is inside a [form] tag\n\t\t\t        if (this.parentForm && this.formControlName) {\n\t\t\t            if (this.parentForm['form']) {\n\t\t\t                this.formControl = this.parentForm['form'].get(this.formControlName);\n\t\t\t            }\n\t\t\t            else if (this.parentForm instanceof forms_1.FormGroupName) {\n\t\t\t                this.formControl = this.parentForm.control.controls[this.formControlName];\n\t\t\t            }\n\t\t\t        }\n\t\t\t        else if (this.extFormControl) {\n\t\t\t            this.formControl = this.extFormControl;\n\t\t\t        }\n\t\t\t        // apply toString() method for the object\n\t\t\t        if (!!this.ngModel) {\n\t\t\t            this.selectNewValue(this.ngModel);\n\t\t\t        }\n\t\t\t        else if (!!this.formControl && this.formControl.value) {\n\t\t\t            this.selectNewValue(this.formControl.value[this.displayPropertyName]);\n\t\t\t        }\n\t\t\t        // when somewhere else clicked, hide this autocomplete\n\t\t\t        //document.addEventListener(\"click\", this.hideAutoCompleteDropdown);\n\t\t\t    };\n\t\t\t    Ng2AutoCompleteDirective.prototype.ngAfterViewInit = function () {\n\t\t\t        // if this element is not an input tag, move dropdown after input tag\n\t\t\t        // so that it displays correctly\n\t\t\t        this.inputEl = this.el.tagName === \"INPUT\" ?\n\t\t\t            this.el : this.el.querySelector(\"input\");\n\t\t\t        this.inputEl.addEventListener('focus', this.showAutoCompleteDropdown);\n\t\t\t        this.inputEl.addEventListener('blur', this.hideAutoCompleteDropdown);\n\t\t\t        this.inputEl.addEventListener('keydown', this.keydownEventHandler);\n\t\t\t        this.inputEl.addEventListener('input', this.inputEventHandler);\n\t\t\t    };\n\t\t\t    Ng2AutoCompleteDirective.prototype.ngOnDestroy = function () {\n\t\t\t        if (this.componentRef) {\n\t\t\t            this.componentRef.instance.valueSelected.unsubscribe();\n\t\t\t            this.componentRef.instance.inputChanged.unsubscribe();\n\t\t\t        }\n\t\t\t        //document.removeEventListener(\"click\", this.hideAutoCompleteDropdown);\n\t\t\t    };\n\t\t\t    Ng2AutoCompleteDirective.prototype.ngOnChanges = function (changes) {\n\t\t\t        if (changes['ngModel']) {\n\t\t\t            this.ngModel = this.addToStringFunction(changes['ngModel'].currentValue);\n\t\t\t        }\n\t\t\t    };\n\t\t\t    Ng2AutoCompleteDirective.prototype.addToStringFunction = function (val) {\n\t\t\t        if (val && typeof val === \"object\") {\n\t\t\t            var displayVal_1;\n\t\t\t            if (this.displayPropertyName) {\n\t\t\t                displayVal_1 = val[this.displayPropertyName];\n\t\t\t            }\n\t\t\t            else if (this.listFormatter) {\n\t\t\t                displayVal_1 = val[this.listFormatter];\n\t\t\t            }\n\t\t\t            else {\n\t\t\t                displayVal_1 = val.value;\n\t\t\t            }\n\t\t\t            val.toString = function () {\n\t\t\t                return displayVal_1;\n\t\t\t            };\n\t\t\t        }\n\t\t\t        return val;\n\t\t\t    };\n\t\t\t    __decorate([\n\t\t\t        core_1.Input(\"auto-complete-placeholder\"), \n\t\t\t        __metadata('design:type', String)\n\t\t\t    ], Ng2AutoCompleteDirective.prototype, \"autoCompletePlaceholder\", void 0);\n\t\t\t    __decorate([\n\t\t\t        core_1.Input(\"source\"), \n\t\t\t        __metadata('design:type', Object)\n\t\t\t    ], Ng2AutoCompleteDirective.prototype, \"source\", void 0);\n\t\t\t    __decorate([\n\t\t\t        core_1.Input(\"path-to-data\"), \n\t\t\t        __metadata('design:type', String)\n\t\t\t    ], Ng2AutoCompleteDirective.prototype, \"pathToData\", void 0);\n\t\t\t    __decorate([\n\t\t\t        core_1.Input(\"min-chars\"), \n\t\t\t        __metadata('design:type', Number)\n\t\t\t    ], Ng2AutoCompleteDirective.prototype, \"minChars\", void 0);\n\t\t\t    __decorate([\n\t\t\t        core_1.Input(\"display-property-name\"), \n\t\t\t        __metadata('design:type', String)\n\t\t\t    ], Ng2AutoCompleteDirective.prototype, \"displayPropertyName\", void 0);\n\t\t\t    __decorate([\n\t\t\t        core_1.Input(\"accept-user-input\"), \n\t\t\t        __metadata('design:type', Boolean)\n\t\t\t    ], Ng2AutoCompleteDirective.prototype, \"acceptUserInput\", void 0);\n\t\t\t    __decorate([\n\t\t\t        core_1.Input(\"max-num-list\"), \n\t\t\t        __metadata('design:type', String)\n\t\t\t    ], Ng2AutoCompleteDirective.prototype, \"maxNumList\", void 0);\n\t\t\t    __decorate([\n\t\t\t        core_1.Input(\"select-value-of\"), \n\t\t\t        __metadata('design:type', String)\n\t\t\t    ], Ng2AutoCompleteDirective.prototype, \"selectValueOf\", void 0);\n\t\t\t    __decorate([\n\t\t\t        core_1.Input(\"list-formatter\"), \n\t\t\t        __metadata('design:type', Object)\n\t\t\t    ], Ng2AutoCompleteDirective.prototype, \"listFormatter\", void 0);\n\t\t\t    __decorate([\n\t\t\t        core_1.Input(\"loading-text\"), \n\t\t\t        __metadata('design:type', String)\n\t\t\t    ], Ng2AutoCompleteDirective.prototype, \"loadingText\", void 0);\n\t\t\t    __decorate([\n\t\t\t        core_1.Input(\"blank-option-text\"), \n\t\t\t        __metadata('design:type', String)\n\t\t\t    ], Ng2AutoCompleteDirective.prototype, \"blankOptionText\", void 0);\n\t\t\t    __decorate([\n\t\t\t        core_1.Input(\"no-match-found-text\"), \n\t\t\t        __metadata('design:type', String)\n\t\t\t    ], Ng2AutoCompleteDirective.prototype, \"noMatchFoundText\", void 0);\n\t\t\t    __decorate([\n\t\t\t        core_1.Input(), \n\t\t\t        __metadata('design:type', String)\n\t\t\t    ], Ng2AutoCompleteDirective.prototype, \"ngModel\", void 0);\n\t\t\t    __decorate([\n\t\t\t        core_1.Input('formControlName'), \n\t\t\t        __metadata('design:type', String)\n\t\t\t    ], Ng2AutoCompleteDirective.prototype, \"formControlName\", void 0);\n\t\t\t    __decorate([\n\t\t\t        core_1.Input('formControl'), \n\t\t\t        __metadata('design:type', forms_1.FormControl)\n\t\t\t    ], Ng2AutoCompleteDirective.prototype, \"extFormControl\", void 0);\n\t\t\t    __decorate([\n\t\t\t        core_1.Output(), \n\t\t\t        __metadata('design:type', Object)\n\t\t\t    ], Ng2AutoCompleteDirective.prototype, \"ngModelChange\", void 0);\n\t\t\t    __decorate([\n\t\t\t        core_1.Output(), \n\t\t\t        __metadata('design:type', Object)\n\t\t\t    ], Ng2AutoCompleteDirective.prototype, \"valueChanged\", void 0);\n\t\t\t    Ng2AutoCompleteDirective = __decorate([\n\t\t\t        core_1.Directive({\n\t\t\t            selector: \"[auto-complete], [ng2-auto-complete]\"\n\t\t\t        }),\n\t\t\t        __param(3, core_1.Optional()),\n\t\t\t        __param(3, core_1.Host()),\n\t\t\t        __param(3, core_1.SkipSelf()), \n\t\t\t        __metadata('design:paramtypes', [core_1.ComponentFactoryResolver, core_1.Renderer, core_1.ViewContainerRef, forms_1.ControlContainer])\n\t\t\t    ], Ng2AutoCompleteDirective);\n\t\t\t    return Ng2AutoCompleteDirective;\n\t\t\t}());\n\t\t\texports.Ng2AutoCompleteDirective = Ng2AutoCompleteDirective;\n\t\t\n\t\t\n\t\t/***/ }\n\t\t/******/ ])\n\t\t});\n\t\t;\n\t\t//# sourceMappingURL=ng2-auto-complete.umd.js.map\n\t\n\t/***/ },\n\t/* 6 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_6__;\n\t\n\t/***/ },\n\t/* 7 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_7__;\n\t\n\t/***/ },\n\t/* 8 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_8__;\n\t\n\t/***/ },\n\t/* 9 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t(function webpackUniversalModuleDefinition(root, factory) {\n\t\t\tif(true)\n\t\t\t\tmodule.exports = factory(__webpack_require__(2), __webpack_require__(3), __webpack_require__(8));\n\t\t\telse if(typeof define === 'function' && define.amd)\n\t\t\t\tdefine([\"@angular/core\", \"@angular/forms\", \"@angular/common\"], factory);\n\t\t\telse if(typeof exports === 'object')\n\t\t\t\texports[\"ng2-datetime-picker\"] = factory(require(\"@angular/core\"), require(\"@angular/forms\"), require(\"@angular/common\"));\n\t\t\telse\n\t\t\t\troot[\"ng2-datetime-picker\"] = factory(root[\"@angular/core\"], root[\"@angular/forms\"], root[\"@angular/common\"]);\n\t\t})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_7__) {\n\t\treturn /******/ (function(modules) { // webpackBootstrap\n\t\t/******/ \t// The module cache\n\t\t/******/ \tvar installedModules = {};\n\t\t/******/\n\t\t/******/ \t// The require function\n\t\t/******/ \tfunction __webpack_require__(moduleId) {\n\t\t/******/\n\t\t/******/ \t\t// Check if module is in cache\n\t\t/******/ \t\tif(installedModules[moduleId])\n\t\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\t\t/******/\n\t\t/******/ \t\t// Create a new module (and put it into the cache)\n\t\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t\t/******/ \t\t\texports: {},\n\t\t/******/ \t\t\tid: moduleId,\n\t\t/******/ \t\t\tloaded: false\n\t\t/******/ \t\t};\n\t\t/******/\n\t\t/******/ \t\t// Execute the module function\n\t\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t\t/******/\n\t\t/******/ \t\t// Flag the module as loaded\n\t\t/******/ \t\tmodule.loaded = true;\n\t\t/******/\n\t\t/******/ \t\t// Return the exports of the module\n\t\t/******/ \t\treturn module.exports;\n\t\t/******/ \t}\n\t\t/******/\n\t\t/******/\n\t\t/******/ \t// expose the modules object (__webpack_modules__)\n\t\t/******/ \t__webpack_require__.m = modules;\n\t\t/******/\n\t\t/******/ \t// expose the module cache\n\t\t/******/ \t__webpack_require__.c = installedModules;\n\t\t/******/\n\t\t/******/ \t// __webpack_public_path__\n\t\t/******/ \t__webpack_require__.p = \"\";\n\t\t/******/\n\t\t/******/ \t// Load entry module and return exports\n\t\t/******/ \treturn __webpack_require__(0);\n\t\t/******/ })\n\t\t/************************************************************************/\n\t\t/******/ ([\n\t\t/* 0 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar ng2_datetime_1 = __webpack_require__(1);\n\t\t\texports.Ng2Datetime = ng2_datetime_1.Ng2Datetime;\n\t\t\tvar ng2_datetime_picker_component_1 = __webpack_require__(3);\n\t\t\texports.Ng2DatetimePickerComponent = ng2_datetime_picker_component_1.Ng2DatetimePickerComponent;\n\t\t\tvar ng2_datetime_picker_directive_1 = __webpack_require__(4);\n\t\t\texports.Ng2DatetimePickerDirective = ng2_datetime_picker_directive_1.Ng2DatetimePickerDirective;\n\t\t\tvar ng2_datetime_picker_module_1 = __webpack_require__(6);\n\t\t\texports.Ng2DatetimePickerModule = ng2_datetime_picker_module_1.Ng2DatetimePickerModule;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 1 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t};\n\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t};\n\t\t\tvar core_1 = __webpack_require__(2);\n\t\t\t/**\n\t\t\t * Static variables that you can override\n\t\t\t *   1. days.           default 1,2,....31\n\t\t\t *   2. daysOfWeek,     default Sunday, Monday, .....\n\t\t\t *   3. firstDayOfWeek, default 0 as in Sunday\n\t\t\t *   4. months,         default January, February\n\t\t\t *   5. formatDate(d)   default returns YYYY-MM-DD HH:MM\n\t\t\t *   6. parseDate(str)  default returns date from YYYY-MM-DD HH:MM\n\t\t\t */\n\t\t\tvar Ng2Datetime = (function () {\n\t\t\t    function Ng2Datetime() {\n\t\t\t    }\n\t\t\t    Ng2Datetime.formatDate = function (d, format, dateOnly) {\n\t\t\t        var ret;\n\t\t\t        if (d && !format) {\n\t\t\t            // return d.toLocaleString('en-us', hash); // IE11 does not understand this\n\t\t\t            var pad0 = function (number) { return (\"0\" + number).slice(-2); };\n\t\t\t            ret = d.getFullYear() + '-' + pad0(d.getMonth() + 1) + '-' + pad0(d.getDate());\n\t\t\t            ret += dateOnly ? '' : ' ' + pad0(d.getHours()) + ':' + pad0(d.getMinutes());\n\t\t\t            return ret;\n\t\t\t        }\n\t\t\t        else if (d && moment) {\n\t\t\t            return moment(d).format(format);\n\t\t\t        }\n\t\t\t        else {\n\t\t\t            return '';\n\t\t\t        }\n\t\t\t    };\n\t\t\t    Ng2Datetime.parseDate = function (dateStr, parseFormat, dateFormat) {\n\t\t\t        if (typeof moment === 'undefined') {\n\t\t\t            dateStr = Ng2Datetime.removeTimezone(dateStr);\n\t\t\t            dateStr = dateStr + Ng2Datetime.addDSTOffset(dateStr);\n\t\t\t            return Ng2Datetime.parseFromDefaultFormat(dateStr);\n\t\t\t        }\n\t\t\t        else if (dateFormat || parseFormat) {\n\t\t\t            // try parse using each format because changing format programmatically calls this twice,\n\t\t\t            // once with string in parse format and once in date format\n\t\t\t            var formats = [];\n\t\t\t            if (parseFormat) {\n\t\t\t                formats.push(parseFormat);\n\t\t\t            }\n\t\t\t            if (dateFormat) {\n\t\t\t                formats.push(dateFormat);\n\t\t\t            }\n\t\t\t            var m = moment(dateStr, formats);\n\t\t\t            var date = m.toDate();\n\t\t\t            if (!m.isValid()) {\n\t\t\t                date = moment(dateStr, moment.ISO_8601).toDate(); // parse as ISO format\n\t\t\t            }\n\t\t\t            return date;\n\t\t\t        }\n\t\t\t        else {\n\t\t\t            var date = moment(dateStr, 'YYYY-MM-DD HH:mm').toDate();\n\t\t\t            return date;\n\t\t\t        }\n\t\t\t    };\n\t\t\t    //remove timezone\n\t\t\t    Ng2Datetime.removeTimezone = function (dateStr) {\n\t\t\t        // if no time is given, add 00:00:00 at the end\n\t\t\t        var matches = dateStr.match(/[0-9]{2}:/);\n\t\t\t        dateStr += matches ? '' : ' 00:00:00';\n\t\t\t        return dateStr.replace(/([0-9]{2}-[0-9]{2})-([0-9]{4})/, '$2-$1') //mm-dd-yyyy to yyyy-mm-dd\n\t\t\t            .replace(/([\\/-][0-9]{2,4})\\ ([0-9]{2}\\:[0-9]{2}\\:)/, '$1T$2') //reformat for FF\n\t\t\t            .replace(/EDT|EST|CDT|CST|MDT|PDT|PST|UT|GMT/g, '') //remove timezone\n\t\t\t            .replace(/\\s*\\(\\)\\s*/, '') //remove timezone\n\t\t\t            .replace(/[\\-\\+][0-9]{2}:?[0-9]{2}$/, '') //remove timezone\n\t\t\t            .replace(/000Z$/, '00'); //remove timezone\n\t\t\t    };\n\t\t\t    Ng2Datetime.addDSTOffset = function (dateStr) {\n\t\t\t        var date = Ng2Datetime.parseFromDefaultFormat(dateStr);\n\t\t\t        var jan = new Date(date.getFullYear(), 0, 1);\n\t\t\t        var jul = new Date(date.getFullYear(), 6, 1);\n\t\t\t        var stdTimezoneOffset = Math.max(jan.getTimezoneOffset(), jul.getTimezoneOffset());\n\t\t\t        var isDST = date.getTimezoneOffset() < stdTimezoneOffset;\n\t\t\t        var offset = isDST ? stdTimezoneOffset - 60 : stdTimezoneOffset;\n\t\t\t        var diff = offset >= 0 ? '-' : '+';\n\t\t\t        offset = Math.abs(offset);\n\t\t\t        return diff +\n\t\t\t            ('0' + (offset / 60)).slice(-2) + ':' +\n\t\t\t            ('0' + (offset % 60)).slice(-2);\n\t\t\t    };\n\t\t\t    ;\n\t\t\t    Ng2Datetime.parseFromDefaultFormat = function (dateStr) {\n\t\t\t        var tmp = dateStr.split(/[\\+\\-:\\ T]/); // split by dash, colon or space\n\t\t\t        return new Date(parseInt(tmp[0], 10), parseInt(tmp[1], 10) - 1, parseInt(tmp[2], 10), parseInt(tmp[3] || '0', 10), parseInt(tmp[4] || '0', 10), parseInt(tmp[5] || '0', 10));\n\t\t\t    };\n\t\t\t    Ng2Datetime.prototype.getMonthData = function (year, month) {\n\t\t\t        year = month > 11 ? year + 1 :\n\t\t\t            month < 0 ? year - 1 : year;\n\t\t\t        month = (month + 12) % 12;\n\t\t\t        var firstDayOfMonth = new Date(year, month, 1);\n\t\t\t        var lastDayOfMonth = new Date(year, month + 1, 0);\n\t\t\t        var lastDayOfPreviousMonth = new Date(year, month, 0);\n\t\t\t        var daysInMonth = lastDayOfMonth.getDate();\n\t\t\t        var daysInLastMonth = lastDayOfPreviousMonth.getDate();\n\t\t\t        var dayOfWeek = firstDayOfMonth.getDay();\n\t\t\t        // Ensure there are always leading days to give context\n\t\t\t        var leadingDays = (dayOfWeek - Ng2Datetime.firstDayOfWeek + 7) % 7 || 7;\n\t\t\t        var trailingDays = Ng2Datetime.days.slice(0, 6 * 7 - (leadingDays + daysInMonth));\n\t\t\t        if (trailingDays.length > 7) {\n\t\t\t            trailingDays = trailingDays.slice(0, trailingDays.length - 7);\n\t\t\t        }\n\t\t\t        var localizedDaysOfWeek = Ng2Datetime.daysOfWeek\n\t\t\t            .concat(Ng2Datetime.daysOfWeek)\n\t\t\t            .splice(Ng2Datetime.firstDayOfWeek, 7);\n\t\t\t        var monthData = {\n\t\t\t            year: year,\n\t\t\t            month: month,\n\t\t\t            weekends: Ng2Datetime.weekends,\n\t\t\t            firstDayOfWeek: Ng2Datetime.firstDayOfWeek,\n\t\t\t            fullName: Ng2Datetime.months[month].fullName,\n\t\t\t            shortName: Ng2Datetime.months[month].shortName,\n\t\t\t            localizedDaysOfWeek: localizedDaysOfWeek,\n\t\t\t            days: Ng2Datetime.days.slice(0, daysInMonth),\n\t\t\t            leadingDays: Ng2Datetime.days.slice(-leadingDays - (31 - daysInLastMonth), daysInLastMonth),\n\t\t\t            trailingDays: trailingDays\n\t\t\t        };\n\t\t\t        return monthData;\n\t\t\t    };\n\t\t\t    Ng2Datetime.days = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31];\n\t\t\t    Ng2Datetime.weekends = [0, 6];\n\t\t\t    Ng2Datetime.daysOfWeek = typeof moment === 'undefined' ? [\n\t\t\t        { fullName: 'Sunday', shortName: 'Su' },\n\t\t\t        { fullName: 'Monday', shortName: 'Mo' },\n\t\t\t        { fullName: 'Tuesday', shortName: 'Tu' },\n\t\t\t        { fullName: 'Wednesday', shortName: 'We' },\n\t\t\t        { fullName: 'Thursday', shortName: 'Th' },\n\t\t\t        { fullName: 'Friday', shortName: 'Fr' },\n\t\t\t        { fullName: 'Saturday', shortName: 'Sa' }\n\t\t\t    ] : moment.weekdays().map(function (el, index) {\n\t\t\t        return {\n\t\t\t            fullName: el,\n\t\t\t            shortName: moment.weekdaysShort()[index].substr(0, 2)\n\t\t\t        };\n\t\t\t    });\n\t\t\t    Ng2Datetime.firstDayOfWeek = typeof moment === 'undefined' ? 0 : moment.localeData().firstDayOfWeek();\n\t\t\t    Ng2Datetime.months = typeof moment === 'undefined' ? [\n\t\t\t        { fullName: 'January', shortName: 'Jan' },\n\t\t\t        { fullName: 'February', shortName: 'Feb' },\n\t\t\t        { fullName: 'March', shortName: 'Mar' },\n\t\t\t        { fullName: 'April', shortName: 'Apr' },\n\t\t\t        { fullName: 'May', shortName: 'May' },\n\t\t\t        { fullName: 'June', shortName: 'Jun' },\n\t\t\t        { fullName: 'July', shortName: 'Jul' },\n\t\t\t        { fullName: 'August', shortName: 'Aug' },\n\t\t\t        { fullName: 'September', shortName: 'Sep' },\n\t\t\t        { fullName: 'October', shortName: 'Oct' },\n\t\t\t        { fullName: 'November', shortName: 'Nov' },\n\t\t\t        { fullName: 'December', shortName: 'Dec' }\n\t\t\t    ] : moment.months().map(function (el, index) {\n\t\t\t        return {\n\t\t\t            fullName: el,\n\t\t\t            shortName: moment['monthsShort']()[index]\n\t\t\t        };\n\t\t\t    });\n\t\t\t    Ng2Datetime = __decorate([\n\t\t\t        core_1.Injectable(), \n\t\t\t        __metadata('design:paramtypes', [])\n\t\t\t    ], Ng2Datetime);\n\t\t\t    return Ng2Datetime;\n\t\t\t}());\n\t\t\texports.Ng2Datetime = Ng2Datetime;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 2 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\t\t\n\t\t/***/ },\n\t\t/* 3 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t};\n\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t};\n\t\t\tvar core_1 = __webpack_require__(2);\n\t\t\tvar ng2_datetime_1 = __webpack_require__(1);\n\t\t\t//@TODO\n\t\t\t// . display currently selected day\n\t\t\t/**\n\t\t\t * show a selected date in monthly calendar\n\t\t\t */\n\t\t\tvar Ng2DatetimePickerComponent = (function () {\n\t\t\t    function Ng2DatetimePickerComponent(elementRef, ng2Datetime, cdRef) {\n\t\t\t        this.ng2Datetime = ng2Datetime;\n\t\t\t        this.cdRef = cdRef;\n\t\t\t        this.minuteStep = 1;\n\t\t\t        this.selected$ = new core_1.EventEmitter();\n\t\t\t        this.closing$ = new core_1.EventEmitter();\n\t\t\t        this.el = elementRef.nativeElement;\n\t\t\t    }\n\t\t\t    Object.defineProperty(Ng2DatetimePickerComponent.prototype, \"year\", {\n\t\t\t        // public ngAfterViewInit ():void {\n\t\t\t        //   let stopPropagation = (e: Event) => e.stopPropagation();\n\t\t\t        //   if (!this.dateOnly) {\n\t\t\t        //     this.hours.nativeElement.addEventListener('keyup', stopPropagation);\n\t\t\t        //     this.hours.nativeElement.addEventListener('mousedown', stopPropagation);\n\t\t\t        //     this.minutes.nativeElement.addEventListener('keyup', stopPropagation);\n\t\t\t        //     this.minutes.nativeElement.addEventListener('mousedown', stopPropagation);\n\t\t\t        //   }\n\t\t\t        // }\n\t\t\t        get: function () {\n\t\t\t            return this.selectedDate.getFullYear();\n\t\t\t        },\n\t\t\t        set: function (year) { },\n\t\t\t        enumerable: true,\n\t\t\t        configurable: true\n\t\t\t    });\n\t\t\t    Object.defineProperty(Ng2DatetimePickerComponent.prototype, \"month\", {\n\t\t\t        get: function () {\n\t\t\t            return this.selectedDate.getMonth();\n\t\t\t        },\n\t\t\t        set: function (month) { },\n\t\t\t        enumerable: true,\n\t\t\t        configurable: true\n\t\t\t    });\n\t\t\t    Object.defineProperty(Ng2DatetimePickerComponent.prototype, \"day\", {\n\t\t\t        get: function () {\n\t\t\t            return this.selectedDate.getDate();\n\t\t\t        },\n\t\t\t        set: function (day) { },\n\t\t\t        enumerable: true,\n\t\t\t        configurable: true\n\t\t\t    });\n\t\t\t    Object.defineProperty(Ng2DatetimePickerComponent.prototype, \"today\", {\n\t\t\t        get: function () {\n\t\t\t            var dt = new Date();\n\t\t\t            dt.setHours(0);\n\t\t\t            dt.setMinutes(0);\n\t\t\t            dt.setSeconds(0);\n\t\t\t            dt.setMilliseconds(0);\n\t\t\t            return dt;\n\t\t\t        },\n\t\t\t        set: function (today) { },\n\t\t\t        enumerable: true,\n\t\t\t        configurable: true\n\t\t\t    });\n\t\t\t    Ng2DatetimePickerComponent.prototype.isWeekend = function (dayNum, month) {\n\t\t\t        if (typeof month === 'undefined') {\n\t\t\t            return ng2_datetime_1.Ng2Datetime.weekends.indexOf(dayNum % 7) !== -1; //weekday index\n\t\t\t        }\n\t\t\t        else {\n\t\t\t            var weekday = this.toDate(dayNum, month).getDay();\n\t\t\t            return ng2_datetime_1.Ng2Datetime.weekends.indexOf(weekday) !== -1;\n\t\t\t        }\n\t\t\t    };\n\t\t\t    Ng2DatetimePickerComponent.prototype.ngOnInit = function () {\n\t\t\t        this.selectedDate = this.defaultValue || new Date();\n\t\t\t        // set hour and minute using moment if available to avoid having Javascript change timezones\n\t\t\t        if (typeof moment === 'undefined') {\n\t\t\t            this.hour = this.selectedDate.getHours();\n\t\t\t            this.minute = this.selectedDate.getMinutes();\n\t\t\t        }\n\t\t\t        else {\n\t\t\t            var m = moment(this.selectedDate);\n\t\t\t            this.hour = m.hours();\n\t\t\t            this.minute = m.minute();\n\t\t\t        }\n\t\t\t        this.monthData = this.ng2Datetime.getMonthData(this.year, this.month);\n\t\t\t    };\n\t\t\t    Ng2DatetimePickerComponent.prototype.toDate = function (day, month) {\n\t\t\t        return new Date(this.monthData.year, month || this.monthData.month, day);\n\t\t\t    };\n\t\t\t    Ng2DatetimePickerComponent.prototype.toDateOnly = function (date) {\n\t\t\t        return new Date(date.getFullYear(), date.getMonth(), date.getDate(), 0, 0, 0, 0);\n\t\t\t    };\n\t\t\t    Ng2DatetimePickerComponent.prototype.selectCurrentTime = function () {\n\t\t\t        this.hour = (new Date()).getHours();\n\t\t\t        this.minute = (new Date()).getMinutes();\n\t\t\t        this.selectDateTime();\n\t\t\t    };\n\t\t\t    /**\n\t\t\t     * set the selected date and close it when closeOnSelect is true\n\t\t\t     * @param date {Date}\n\t\t\t     */\n\t\t\t    Ng2DatetimePickerComponent.prototype.selectDateTime = function (date) {\n\t\t\t        var _this = this;\n\t\t\t        this.selectedDate = date || this.selectedDate;\n\t\t\t        if (this.isDateDisabled(this.selectedDate)) {\n\t\t\t            return false;\n\t\t\t        }\n\t\t\t        // editing hours and minutes via javascript date methods causes date to lose timezone info,\n\t\t\t        // so edit using moment if available\n\t\t\t        var hour = parseInt('' + this.hour || '0', 10);\n\t\t\t        var minute = parseInt('' + this.minute || '0', 10);\n\t\t\t        if (typeof moment !== 'undefined') {\n\t\t\t            // here selected date has a time of 00:00 in local time,\n\t\t\t            // so build moment by getting year/month/day separately\n\t\t\t            // to avoid it saving as a day earlier\n\t\t\t            var m = moment([this.selectedDate.getFullYear(), this.selectedDate.getMonth(), this.selectedDate.getDate()]);\n\t\t\t            m.hours(hour);\n\t\t\t            m.minutes(minute);\n\t\t\t            this.selectedDate = m.toDate();\n\t\t\t        }\n\t\t\t        else {\n\t\t\t            this.selectedDate.setHours(hour);\n\t\t\t            this.selectedDate.setMinutes(minute);\n\t\t\t        }\n\t\t\t        this.selectedDate.toString = function () {\n\t\t\t            return ng2_datetime_1.Ng2Datetime.formatDate(_this.selectedDate, _this.dateFormat, _this.dateOnly);\n\t\t\t        };\n\t\t\t        this.selected$.emit(this.selectedDate);\n\t\t\t    };\n\t\t\t    ;\n\t\t\t    /**\n\t\t\t     * show prev/next month calendar\n\t\t\t     */\n\t\t\t    Ng2DatetimePickerComponent.prototype.updateMonthData = function (num) {\n\t\t\t        this.monthData = this.ng2Datetime.getMonthData(this.monthData.year, this.monthData.month + num);\n\t\t\t    };\n\t\t\t    Ng2DatetimePickerComponent.prototype.isDateDisabled = function (date) {\n\t\t\t        var dateInTime = date.getTime();\n\t\t\t        this.disabledDatesInTime =\n\t\t\t            this.disabledDatesInTime || (this.disabledDates || []).map(function (d) { return d.getTime(); });\n\t\t\t        if (this.minDate && (dateInTime < this.minDate.getTime())) {\n\t\t\t            return true;\n\t\t\t        }\n\t\t\t        else if (this.maxDate && (dateInTime > this.maxDate.getTime())) {\n\t\t\t            return true;\n\t\t\t        }\n\t\t\t        else if (this.disabledDatesInTime.indexOf(dateInTime) >= 0) {\n\t\t\t            return true;\n\t\t\t        }\n\t\t\t        return false;\n\t\t\t    };\n\t\t\t    Ng2DatetimePickerComponent.prototype.close = function () {\n\t\t\t        this.closing$.emit(true);\n\t\t\t    };\n\t\t\t    __decorate([\n\t\t\t        core_1.Input('date-format'), \n\t\t\t        __metadata('design:type', String)\n\t\t\t    ], Ng2DatetimePickerComponent.prototype, \"dateFormat\", void 0);\n\t\t\t    __decorate([\n\t\t\t        core_1.Input('date-only'), \n\t\t\t        __metadata('design:type', Boolean)\n\t\t\t    ], Ng2DatetimePickerComponent.prototype, \"dateOnly\", void 0);\n\t\t\t    __decorate([\n\t\t\t        core_1.Input('time-only'), \n\t\t\t        __metadata('design:type', Boolean)\n\t\t\t    ], Ng2DatetimePickerComponent.prototype, \"timeOnly\", void 0);\n\t\t\t    __decorate([\n\t\t\t        core_1.Input('selected-date'), \n\t\t\t        __metadata('design:type', Date)\n\t\t\t    ], Ng2DatetimePickerComponent.prototype, \"selectedDate\", void 0);\n\t\t\t    __decorate([\n\t\t\t        core_1.Input('hour'), \n\t\t\t        __metadata('design:type', Number)\n\t\t\t    ], Ng2DatetimePickerComponent.prototype, \"hour\", void 0);\n\t\t\t    __decorate([\n\t\t\t        core_1.Input('minute'), \n\t\t\t        __metadata('design:type', Number)\n\t\t\t    ], Ng2DatetimePickerComponent.prototype, \"minute\", void 0);\n\t\t\t    __decorate([\n\t\t\t        core_1.Input('minuteStep'), \n\t\t\t        __metadata('design:type', Number)\n\t\t\t    ], Ng2DatetimePickerComponent.prototype, \"minuteStep\", void 0);\n\t\t\t    __decorate([\n\t\t\t        core_1.Input('default-value'), \n\t\t\t        __metadata('design:type', Date)\n\t\t\t    ], Ng2DatetimePickerComponent.prototype, \"defaultValue\", void 0);\n\t\t\t    __decorate([\n\t\t\t        core_1.Input('min-date'), \n\t\t\t        __metadata('design:type', Date)\n\t\t\t    ], Ng2DatetimePickerComponent.prototype, \"minDate\", void 0);\n\t\t\t    __decorate([\n\t\t\t        core_1.Input('max-date'), \n\t\t\t        __metadata('design:type', Date)\n\t\t\t    ], Ng2DatetimePickerComponent.prototype, \"maxDate\", void 0);\n\t\t\t    __decorate([\n\t\t\t        core_1.Input('min-hour'), \n\t\t\t        __metadata('design:type', Number)\n\t\t\t    ], Ng2DatetimePickerComponent.prototype, \"minHour\", void 0);\n\t\t\t    __decorate([\n\t\t\t        core_1.Input('max-hour'), \n\t\t\t        __metadata('design:type', Number)\n\t\t\t    ], Ng2DatetimePickerComponent.prototype, \"maxHour\", void 0);\n\t\t\t    __decorate([\n\t\t\t        core_1.Input('disabled-dates'), \n\t\t\t        __metadata('design:type', Array)\n\t\t\t    ], Ng2DatetimePickerComponent.prototype, \"disabledDates\", void 0);\n\t\t\t    __decorate([\n\t\t\t        core_1.Input('show-close-button'), \n\t\t\t        __metadata('design:type', Boolean)\n\t\t\t    ], Ng2DatetimePickerComponent.prototype, \"showCloseButton\", void 0);\n\t\t\t    __decorate([\n\t\t\t        core_1.Output('selected$'), \n\t\t\t        __metadata('design:type', core_1.EventEmitter)\n\t\t\t    ], Ng2DatetimePickerComponent.prototype, \"selected$\", void 0);\n\t\t\t    __decorate([\n\t\t\t        core_1.Output('closing$'), \n\t\t\t        __metadata('design:type', core_1.EventEmitter)\n\t\t\t    ], Ng2DatetimePickerComponent.prototype, \"closing$\", void 0);\n\t\t\t    __decorate([\n\t\t\t        core_1.ViewChild('hours'), \n\t\t\t        __metadata('design:type', core_1.ElementRef)\n\t\t\t    ], Ng2DatetimePickerComponent.prototype, \"hours\", void 0);\n\t\t\t    __decorate([\n\t\t\t        core_1.ViewChild('minutes'), \n\t\t\t        __metadata('design:type', core_1.ElementRef)\n\t\t\t    ], Ng2DatetimePickerComponent.prototype, \"minutes\", void 0);\n\t\t\t    Ng2DatetimePickerComponent = __decorate([\n\t\t\t        core_1.Component({\n\t\t\t            providers: [ng2_datetime_1.Ng2Datetime],\n\t\t\t            selector: 'ng2-datetime-picker',\n\t\t\t            template: \"\\n<div class=\\\"ng2-datetime-picker\\\">\\n  <div class=\\\"close-button\\\" *ngIf=\\\"showCloseButton\\\" (click)=\\\"close()\\\"></div>\\n  \\n  <!-- Month - Year  -->\\n  <div class=\\\"month\\\" *ngIf=\\\"!timeOnly\\\">\\n    <b class=\\\"prev_next prev\\\" (click)=\\\"updateMonthData(-12)\\\">&laquo;</b>\\n    <b class=\\\"prev_next prev\\\" (click)=\\\"updateMonthData(-1)\\\">&lsaquo;</b>\\n     <span title=\\\"{{monthData?.fullName}}\\\">\\n           {{monthData?.shortName}}\\n     </span>\\n    {{monthData.year}}\\n    <b class=\\\"prev_next next\\\" (click)=\\\"updateMonthData(+12)\\\">&raquo;</b>\\n    <b class=\\\"prev_next next\\\" (click)=\\\"updateMonthData(+1)\\\">&rsaquo;</b>\\n  </div>\\n\\n  <!-- Date -->\\n  <div class=\\\"days\\\" *ngIf=\\\"!timeOnly\\\">\\n\\n    <!-- Su Mo Tu We Th Fr Sa -->\\n    <div class=\\\"day-of-week\\\"\\n         *ngFor=\\\"let dayOfWeek of monthData.localizedDaysOfWeek; let ndx=index\\\"\\n         [class.weekend]=\\\"isWeekend(ndx + monthData.firstDayOfWeek)\\\"\\n         title=\\\"{{dayOfWeek.fullName}}\\\">\\n      {{dayOfWeek.shortName}}\\n    </div>\\n\\n    <!-- Fill up blank days for this month -->\\n    <div *ngIf=\\\"monthData.leadingDays.length < 7\\\">\\n      <div class=\\\"day\\\"\\n          (click)=\\\"updateMonthData(-1)\\\"\\n           *ngFor=\\\"let dayNum of monthData.leadingDays\\\">\\n        {{dayNum}}\\n      </div>\\n    </div>\\n\\n    <div class=\\\"day\\\"\\n         *ngFor=\\\"let dayNum of monthData.days\\\"\\n         (click)=\\\"selectDateTime(toDate(dayNum))\\\"\\n         title=\\\"{{monthData.year}}-{{monthData.month+1}}-{{dayNum}}\\\"\\n         [ngClass]=\\\"{\\n           selectable: !isDateDisabled(toDate(dayNum)),\\n           selected: toDate(dayNum).getTime() === toDateOnly(selectedDate).getTime(),\\n           today: toDate(dayNum).getTime() === today.getTime(),\\n           weekend: isWeekend(dayNum, monthData.month)\\n         }\\\">\\n      {{dayNum}}\\n    </div>\\n\\n    <!-- Fill up blank days for this month -->\\n    <div *ngIf=\\\"monthData.trailingDays.length < 7\\\">\\n      <div class=\\\"day\\\"\\n           (click)=\\\"updateMonthData(+1)\\\"\\n           *ngFor=\\\"let dayNum of monthData.trailingDays\\\">\\n        {{dayNum}}\\n      </div>\\n    </div>\\n  </div>\\n\\n  <!-- Time -->\\n  <div class=\\\"time\\\" id=\\\"time\\\" *ngIf=\\\"!dateOnly\\\">\\n    <div class=\\\"select-current-time\\\" (click)=\\\"selectCurrentTime()\\\"></div>\\n    <label class=\\\"timeLabel\\\">Time:</label>\\n    <span class=\\\"timeValue\\\">\\n      {{(\\\"0\\\"+hour).slice(-2)}} : {{(\\\"0\\\"+minute).slice(-2)}}\\n    </span><br/>\\n    <label class=\\\"hourLabel\\\">Hour:</label>\\n    <input #hours class=\\\"hourInput\\\"\\n           tabindex=\\\"90000\\\"\\n           (change)=\\\"selectDateTime()\\\"\\n           type=\\\"range\\\"\\n           min=\\\"{{minHour || 0}}\\\"\\n           max=\\\"{{maxHour || 23}}\\\"\\n           [(ngModel)]=\\\"hour\\\" />\\n    <label class=\\\"minutesLabel\\\">Min:</label>\\n    <input #minutes class=\\\"minutesInput\\\"\\n           tabindex=\\\"90000\\\"\\n           step=\\\"{{minuteStep}}\\\"\\n           (change)=\\\"selectDateTime()\\\"\\n           type=\\\"range\\\" min=\\\"0\\\" max=\\\"59\\\" range=\\\"10\\\" [(ngModel)]=\\\"minute\\\"/>\\n  </div>\\n</div>\\n  \",\n\t\t\t            styles: [\n\t\t\t                \"\\n @keyframes slideDown {\\n  0% {\\n    transform:  translateY(-10px);\\n  }\\n  100% {\\n    transform: translateY(0px);\\n  }\\n}\\n\\n.ng2-datetime-picker-wrapper {\\n  position: relative;\\n}\\n\\n.ng2-datetime-picker {\\n  color: #333;\\n  outline-width: 0;\\n  font: normal 14px sans-serif;\\n  border: 1px solid #ddd;\\n  display: inline-block;\\n  background: #fff;\\n  animation: slideDown 0.1s ease-in-out;\\n  animation-fill-mode: both;\\n}\\n.ng2-datetime-picker .close-button:before {\\n  content: 'X';\\n  position: absolute;\\n  padding: 0 5px;\\n  cursor: pointer;\\n  color: #ff0000;\\n  right: 0;\\n  z-index: 1;\\n}\\n.ng2-datetime-picker > .month {\\n  text-align: center;\\n  line-height: 22px;\\n  padding: 10px;\\n  background: #fcfcfc;\\n  text-transform: uppercase;\\n  font-weight: bold;\\n  border-bottom: 1px solid #ddd;\\n  position: relative;\\n}\\n.ng2-datetime-picker > .month > .prev_next {\\n  color: #555;\\n  display: block;\\n  font: normal 24px sans-serif;\\n  outline: none;\\n  background: transparent;\\n  border: none;\\n  cursor: pointer;\\n  width: 15px;\\n  text-align: center;\\n}\\n.ng2-datetime-picker > .month > .prev_next:hover {\\n  background-color: #333;\\n  color: #fff;\\n}\\n.ng2-datetime-picker > .month > .prev_next.prev {\\n  float: left;\\n}\\n.ng2-datetime-picker > .month > .prev_next.next {\\n  float: right;\\n}\\n.ng2-datetime-picker > .days {\\n  width: 210px; /* 30 x 7 */\\n  margin: 10px;\\n  text-align: center;\\n}\\n.ng2-datetime-picker > .days .day-of-week,\\n.ng2-datetime-picker > .days .day {\\n  box-sizing: border-box;\\n  -moz-box-sizing: border-box;\\n  border: 1px solid transparent;\\n  width: 30px;\\n  line-height: 28px;\\n  float: left;\\n}\\n.ng2-datetime-picker > .days .day-of-week {\\n  font-weight: bold;\\n}\\n.ng2-datetime-picker > .days .day-of-week.weekend {\\n  color: #ccc;\\n  background-color: inherit;\\n}\\n.ng2-datetime-picker > .days .day:not(.selectable) {\\n  color: #ccc;\\n  cursor: default;\\n}\\n.ng2-datetime-picker > .days .weekend {\\n  color: #ccc;\\n  background-color: #eee;\\n}\\n.ng2-datetime-picker > .days .day.selectable  {\\n  cursor: pointer;\\n}\\n.ng2-datetime-picker > .days .day.selected {\\n  background: gray;\\n  color: #fff;\\n}\\n.ng2-datetime-picker > .days .day:not(.selected).selectable:hover {\\n  background: #eee;\\n}\\n.ng2-datetime-picker > .days:after {\\n  content: '';\\n  display: block;\\n  clear: left;\\n  height: 0;\\n}\\n.ng2-datetime-picker .time {\\n  position: relative;\\n}\\n.ng2-datetime-picker .select-current-time:before {\\n  content: 'current time';\\n  position: absolute;\\n  top: 1em;\\n  right: 5px;\\n  z-index: 1;\\n  cursor: pointer;\\n  color: #0000ff;\\n}\\n.ng2-datetime-picker .hourLabel,\\n.ng2-datetime-picker .minutesLabel {\\n  display: inline-block;\\n  width: 40px;\\n  text-align: right;\\n}\\n.ng2-datetime-picker input[type=range] {\\n  width: 200px;\\n}\\n  \"\n\t\t\t            ],\n\t\t\t            encapsulation: core_1.ViewEncapsulation.None\n\t\t\t        }), \n\t\t\t        __metadata('design:paramtypes', [core_1.ElementRef, ng2_datetime_1.Ng2Datetime, core_1.ChangeDetectorRef])\n\t\t\t    ], Ng2DatetimePickerComponent);\n\t\t\t    return Ng2DatetimePickerComponent;\n\t\t\t}());\n\t\t\texports.Ng2DatetimePickerComponent = Ng2DatetimePickerComponent;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 4 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t};\n\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t};\n\t\t\tvar __param = (this && this.__param) || function (paramIndex, decorator) {\n\t\t\t    return function (target, key) { decorator(target, key, paramIndex); }\n\t\t\t};\n\t\t\tvar core_1 = __webpack_require__(2);\n\t\t\tvar forms_1 = __webpack_require__(5);\n\t\t\tvar ng2_datetime_picker_component_1 = __webpack_require__(3);\n\t\t\tvar ng2_datetime_1 = __webpack_require__(1);\n\t\t\tNumber.isInteger = Number.isInteger || function (value) {\n\t\t\t    return typeof value === \"number\" &&\n\t\t\t        isFinite(value) &&\n\t\t\t        Math.floor(value) === value;\n\t\t\t};\n\t\t\tNumber.isNaN = Number.isNaN || function (value) {\n\t\t\t    return value !== value;\n\t\t\t};\n\t\t\t/**\n\t\t\t * If the given string is not a valid date, it defaults back to today\n\t\t\t */\n\t\t\tvar Ng2DatetimePickerDirective = (function () {\n\t\t\t    function Ng2DatetimePickerDirective(resolver, viewContainerRef, parent) {\n\t\t\t        var _this = this;\n\t\t\t        this.resolver = resolver;\n\t\t\t        this.viewContainerRef = viewContainerRef;\n\t\t\t        this.parent = parent;\n\t\t\t        this.ngModelChange = new core_1.EventEmitter();\n\t\t\t        this.valueChanged = new core_1.EventEmitter();\n\t\t\t        /* input element string value is changed */\n\t\t\t        this.inputElValueChanged = function (date) {\n\t\t\t            _this.setInputElDateValue(date);\n\t\t\t            _this.el.value = date.toString();\n\t\t\t            if (_this.ctrl) {\n\t\t\t                _this.ctrl.patchValue(_this.el.value);\n\t\t\t            }\n\t\t\t            _this.ngModel = _this.el['dateValue'];\n\t\t\t            if (_this.ngModel) {\n\t\t\t                _this.ngModel.toString = function () { return _this.el.value; };\n\t\t\t                _this.ngModelChange.emit(_this.ngModel);\n\t\t\t            }\n\t\t\t        };\n\t\t\t        //show datetimePicker element below the current element\n\t\t\t        this.showDatetimePicker = function (event) {\n\t\t\t            if (_this.componentRef) {\n\t\t\t                return;\n\t\t\t            }\n\t\t\t            var factory = _this.resolver.resolveComponentFactory(ng2_datetime_picker_component_1.Ng2DatetimePickerComponent);\n\t\t\t            _this.componentRef = _this.viewContainerRef.createComponent(factory);\n\t\t\t            _this.ng2DatetimePickerEl = _this.componentRef.location.nativeElement;\n\t\t\t            _this.ng2DatetimePickerEl.addEventListener('mousedown', function (event) {\n\t\t\t                _this.clickedDatetimePicker = true;\n\t\t\t            });\n\t\t\t            _this.ng2DatetimePickerEl.addEventListener('mouseup', function (event) {\n\t\t\t                _this.clickedDatetimePicker = false;\n\t\t\t            });\n\t\t\t            var component = _this.componentRef.instance;\n\t\t\t            component.defaultValue = _this.defaultValue || _this.el['dateValue'];\n\t\t\t            component.dateFormat = _this.dateFormat;\n\t\t\t            component.dateOnly = _this.dateOnly;\n\t\t\t            component.timeOnly = _this.timeOnly;\n\t\t\t            component.minuteStep = _this.minuteStep;\n\t\t\t            component.minDate = _this.minDate;\n\t\t\t            component.maxDate = _this.maxDate;\n\t\t\t            component.minHour = _this.minHour;\n\t\t\t            component.maxHour = _this.maxHour;\n\t\t\t            component.disabledDates = _this.disabledDates;\n\t\t\t            component.showCloseButton = _this.closeOnSelect === \"false\";\n\t\t\t            _this.styleDatetimePicker();\n\t\t\t            component.selected$.subscribe(_this.dateSelected);\n\t\t\t            component.closing$.subscribe(function () {\n\t\t\t                _this.hideDatetimePicker();\n\t\t\t            });\n\t\t\t            //Hack not to fire tab keyup event\n\t\t\t            // this.justShown = true;\n\t\t\t            // setTimeout(() => this.justShown = false, 100);\n\t\t\t        };\n\t\t\t        this.dateSelected = function (date) {\n\t\t\t            _this.el.tagName === 'INPUT' && _this.inputElValueChanged(date);\n\t\t\t            _this.valueChanged.emit(date);\n\t\t\t            _this.closeOnSelect !== \"false\" && _this.hideDatetimePicker();\n\t\t\t        };\n\t\t\t        this.hideDatetimePicker = function (event) {\n\t\t\t            if (_this.clickedDatetimePicker) {\n\t\t\t                return false;\n\t\t\t            }\n\t\t\t            else {\n\t\t\t                _this.componentRef.destroy();\n\t\t\t                _this.componentRef = undefined;\n\t\t\t            }\n\t\t\t            event && event.stopPropagation();\n\t\t\t        };\n\t\t\t        this.keyEventListener = function (e) {\n\t\t\t            // if (e.keyCode === 27 || e.keyCode === 9 || e.keyCode === 13) { //ESC, TAB, ENTER keys\n\t\t\t            //   if (!this.justShown) {\n\t\t\t            //     this.hideDatetimePicker();\n\t\t\t            //   }\n\t\t\t            // }\n\t\t\t        };\n\t\t\t        this.el = this.viewContainerRef.element.nativeElement;\n\t\t\t    }\n\t\t\t    /**\n\t\t\t     * convert defaultValue, minDate, maxDate, minHour, and maxHour to proper types\n\t\t\t     */\n\t\t\t    Ng2DatetimePickerDirective.prototype.normalizeInput = function () {\n\t\t\t        if (this.defaultValue && typeof this.defaultValue === 'string') {\n\t\t\t            var d = ng2_datetime_1.Ng2Datetime.parseDate(this.defaultValue);\n\t\t\t            this.defaultValue = Number.isNaN(d.getTime()) ? new Date() : d;\n\t\t\t        }\n\t\t\t        if (this.minDate && typeof this.minDate == 'string') {\n\t\t\t            var d = ng2_datetime_1.Ng2Datetime.parseDate(this.minDate);\n\t\t\t            this.minDate = Number.isNaN(d.getTime()) ? new Date() : d;\n\t\t\t        }\n\t\t\t        if (this.maxDate && typeof this.maxDate == 'string') {\n\t\t\t            var d = ng2_datetime_1.Ng2Datetime.parseDate(this.minDate);\n\t\t\t            this.maxDate = Number.isNaN(d.getTime()) ? new Date() : d;\n\t\t\t        }\n\t\t\t        if (this.minHour) {\n\t\t\t            if (this.minHour instanceof Date) {\n\t\t\t                this.minHour = this.minHour.getHours();\n\t\t\t            }\n\t\t\t            else {\n\t\t\t                var hour = Number(this.minHour.toString());\n\t\t\t                if (!Number.isInteger(hour) || hour > 23 || hour < 0) {\n\t\t\t                    this.minHour = undefined;\n\t\t\t                }\n\t\t\t            }\n\t\t\t        }\n\t\t\t        if (this.maxHour) {\n\t\t\t            if (this.maxHour instanceof Date) {\n\t\t\t                this.maxHour = this.maxHour.getHours();\n\t\t\t            }\n\t\t\t            else {\n\t\t\t                var hour = Number(this.maxHour.toString());\n\t\t\t                if (!Number.isInteger(hour) || hour > 23 || hour < 0) {\n\t\t\t                    this.maxHour = undefined;\n\t\t\t                }\n\t\t\t            }\n\t\t\t        }\n\t\t\t    };\n\t\t\t    Ng2DatetimePickerDirective.prototype.ngOnInit = function () {\n\t\t\t        var _this = this;\n\t\t\t        if (this.parent && this.formControlName) {\n\t\t\t            if (this.parent[\"form\"]) {\n\t\t\t                this.ctrl = this.parent[\"form\"].get(this.formControlName);\n\t\t\t            }\n\t\t\t            else if (this.parent[\"name\"]) {\n\t\t\t                var formDir = this.parent.formDirective;\n\t\t\t                if (formDir instanceof forms_1.FormGroupDirective && formDir.form.get(this.parent[\"name\"])) {\n\t\t\t                    this.ctrl = formDir.form.get(this.parent[\"name\"]).get(this.formControlName);\n\t\t\t                }\n\t\t\t            }\n\t\t\t            if (this.ctrl) {\n\t\t\t                this.sub = this.ctrl.valueChanges.subscribe(function (date) {\n\t\t\t                    _this.setInputElDateValue(date);\n\t\t\t                    _this.updateDatepicker();\n\t\t\t                });\n\t\t\t            }\n\t\t\t        }\n\t\t\t        this.normalizeInput();\n\t\t\t        //wrap this element with a <div> tag, so that we can position dynamic element correctly\n\t\t\t        var wrapper = document.createElement(\"div\");\n\t\t\t        wrapper.className = 'ng2-datetime-picker-wrapper';\n\t\t\t        this.el.parentElement.insertBefore(wrapper, this.el.nextSibling);\n\t\t\t        wrapper.appendChild(this.el);\n\t\t\t        // add a click listener to document, so that it can hide when others clicked\n\t\t\t        // document.body.addEventListener('click', this.hideDatetimePicker);\n\t\t\t        // this.el.addEventListener('keyup', this.keyEventListener);\n\t\t\t        if (this.ngModel && this.ngModel.getTime) {\n\t\t\t            this.ngModel.toString = function () { return ng2_datetime_1.Ng2Datetime.formatDate(_this.ngModel, _this.dateFormat, _this.dateOnly); };\n\t\t\t        }\n\t\t\t        setTimeout(function () {\n\t\t\t            if (_this.el.tagName === 'INPUT') {\n\t\t\t                _this.inputElValueChanged(_this.el.value); //set this.el.dateValue and reformat this.el.value\n\t\t\t            }\n\t\t\t            if (_this.ctrl) {\n\t\t\t                _this.ctrl.markAsPristine();\n\t\t\t            }\n\t\t\t        });\n\t\t\t    };\n\t\t\t    Ng2DatetimePickerDirective.prototype.ngAfterViewInit = function () {\n\t\t\t        // if this element is not an input tag, move dropdown after input tag\n\t\t\t        // so that it displays correctly\n\t\t\t        this.inputEl = this.el.tagName === \"INPUT\" ?\n\t\t\t            this.el : this.el.querySelector(\"input\");\n\t\t\t        if (this.inputEl) {\n\t\t\t            this.inputEl.addEventListener('focus', this.showDatetimePicker);\n\t\t\t            this.inputEl.addEventListener('blur', this.hideDatetimePicker);\n\t\t\t        }\n\t\t\t    };\n\t\t\t    Ng2DatetimePickerDirective.prototype.ngOnChanges = function (changes) {\n\t\t\t        var date;\n\t\t\t        if (changes && changes['ngModel']) {\n\t\t\t            date = changes['ngModel'].currentValue;\n\t\t\t        }\n\t\t\t        this.setInputElDateValue(date);\n\t\t\t        this.updateDatepicker();\n\t\t\t    };\n\t\t\t    Ng2DatetimePickerDirective.prototype.updateDatepicker = function () {\n\t\t\t        if (this.componentRef) {\n\t\t\t            var component = this.componentRef.instance;\n\t\t\t            component.defaultValue = this.el['dateValue'];\n\t\t\t        }\n\t\t\t    };\n\t\t\t    Ng2DatetimePickerDirective.prototype.setInputElDateValue = function (date) {\n\t\t\t        if (typeof date === 'string' && date) {\n\t\t\t            this.el['dateValue'] = this.getDate(date);\n\t\t\t        }\n\t\t\t        else if (typeof date === 'object') {\n\t\t\t            this.el['dateValue'] = date;\n\t\t\t        }\n\t\t\t        else if (typeof date === 'undefined') {\n\t\t\t            this.el['dateValue'] = null;\n\t\t\t        }\n\t\t\t        if (this.ctrl) {\n\t\t\t            this.ctrl.markAsDirty();\n\t\t\t        }\n\t\t\t    };\n\t\t\t    Ng2DatetimePickerDirective.prototype.ngOnDestroy = function () {\n\t\t\t        if (this.sub) {\n\t\t\t            this.sub.unsubscribe();\n\t\t\t        }\n\t\t\t        // document.body.removeEventListener('click', this.hideDatetimePicker);\n\t\t\t    };\n\t\t\t    Ng2DatetimePickerDirective.prototype.elementIn = function (el, containerEl) {\n\t\t\t        while (el = el.parentNode) {\n\t\t\t            if (el === containerEl)\n\t\t\t                return true;\n\t\t\t        }\n\t\t\t        return false;\n\t\t\t    };\n\t\t\t    Ng2DatetimePickerDirective.prototype.styleDatetimePicker = function () {\n\t\t\t        var _this = this;\n\t\t\t        // setting position, width, and height of auto complete dropdown\n\t\t\t        var thisElBCR = this.el.getBoundingClientRect();\n\t\t\t        this.ng2DatetimePickerEl.style.width = thisElBCR.width + 'px';\n\t\t\t        this.ng2DatetimePickerEl.style.position = 'absolute';\n\t\t\t        this.ng2DatetimePickerEl.style.zIndex = '1000';\n\t\t\t        this.ng2DatetimePickerEl.style.left = '0';\n\t\t\t        this.ng2DatetimePickerEl.style.transition = 'height 0.3s ease-in';\n\t\t\t        this.ng2DatetimePickerEl.style.visibility = 'hidden';\n\t\t\t        setTimeout(function () {\n\t\t\t            var thisElBcr = _this.el.getBoundingClientRect();\n\t\t\t            var ng2DatetimePickerElBcr = _this.ng2DatetimePickerEl.getBoundingClientRect();\n\t\t\t            if (thisElBcr.bottom + ng2DatetimePickerElBcr.height > window.innerHeight) {\n\t\t\t                _this.ng2DatetimePickerEl.style.bottom =\n\t\t\t                    (thisElBcr.bottom - window.innerHeight + 15) + 'px';\n\t\t\t            }\n\t\t\t            else {\n\t\t\t                // otherwise, show below\n\t\t\t                _this.ng2DatetimePickerEl.style.top = thisElBcr.height + 'px';\n\t\t\t            }\n\t\t\t            _this.ng2DatetimePickerEl.style.visibility = 'visible';\n\t\t\t        });\n\t\t\t    };\n\t\t\t    ;\n\t\t\t    Ng2DatetimePickerDirective.prototype.getDate = function (arg) {\n\t\t\t        var date = arg;\n\t\t\t        if (typeof arg === 'string') {\n\t\t\t            date = ng2_datetime_1.Ng2Datetime.parseDate(arg, this.parseFormat, this.dateFormat);\n\t\t\t        }\n\t\t\t        return date;\n\t\t\t    };\n\t\t\t    __decorate([\n\t\t\t        core_1.Input('date-format'), \n\t\t\t        __metadata('design:type', String)\n\t\t\t    ], Ng2DatetimePickerDirective.prototype, \"dateFormat\", void 0);\n\t\t\t    __decorate([\n\t\t\t        core_1.Input('parse-format'), \n\t\t\t        __metadata('design:type', String)\n\t\t\t    ], Ng2DatetimePickerDirective.prototype, \"parseFormat\", void 0);\n\t\t\t    __decorate([\n\t\t\t        core_1.Input('date-only'), \n\t\t\t        __metadata('design:type', Boolean)\n\t\t\t    ], Ng2DatetimePickerDirective.prototype, \"dateOnly\", void 0);\n\t\t\t    __decorate([\n\t\t\t        core_1.Input('time-only'), \n\t\t\t        __metadata('design:type', Boolean)\n\t\t\t    ], Ng2DatetimePickerDirective.prototype, \"timeOnly\", void 0);\n\t\t\t    __decorate([\n\t\t\t        core_1.Input('close-on-select'), \n\t\t\t        __metadata('design:type', String)\n\t\t\t    ], Ng2DatetimePickerDirective.prototype, \"closeOnSelect\", void 0);\n\t\t\t    __decorate([\n\t\t\t        core_1.Input('default-value'), \n\t\t\t        __metadata('design:type', Object)\n\t\t\t    ], Ng2DatetimePickerDirective.prototype, \"defaultValue\", void 0);\n\t\t\t    __decorate([\n\t\t\t        core_1.Input('minute-step'), \n\t\t\t        __metadata('design:type', Number)\n\t\t\t    ], Ng2DatetimePickerDirective.prototype, \"minuteStep\", void 0);\n\t\t\t    __decorate([\n\t\t\t        core_1.Input('min-date'), \n\t\t\t        __metadata('design:type', Object)\n\t\t\t    ], Ng2DatetimePickerDirective.prototype, \"minDate\", void 0);\n\t\t\t    __decorate([\n\t\t\t        core_1.Input('max-date'), \n\t\t\t        __metadata('design:type', Object)\n\t\t\t    ], Ng2DatetimePickerDirective.prototype, \"maxDate\", void 0);\n\t\t\t    __decorate([\n\t\t\t        core_1.Input('min-hour'), \n\t\t\t        __metadata('design:type', Object)\n\t\t\t    ], Ng2DatetimePickerDirective.prototype, \"minHour\", void 0);\n\t\t\t    __decorate([\n\t\t\t        core_1.Input('max-hour'), \n\t\t\t        __metadata('design:type', Object)\n\t\t\t    ], Ng2DatetimePickerDirective.prototype, \"maxHour\", void 0);\n\t\t\t    __decorate([\n\t\t\t        core_1.Input('disabled-dates'), \n\t\t\t        __metadata('design:type', Array)\n\t\t\t    ], Ng2DatetimePickerDirective.prototype, \"disabledDates\", void 0);\n\t\t\t    __decorate([\n\t\t\t        core_1.Input(), \n\t\t\t        __metadata('design:type', String)\n\t\t\t    ], Ng2DatetimePickerDirective.prototype, \"formControlName\", void 0);\n\t\t\t    __decorate([\n\t\t\t        core_1.Input('ngModel'), \n\t\t\t        __metadata('design:type', Object)\n\t\t\t    ], Ng2DatetimePickerDirective.prototype, \"ngModel\", void 0);\n\t\t\t    __decorate([\n\t\t\t        core_1.Output('ngModelChange'), \n\t\t\t        __metadata('design:type', Object)\n\t\t\t    ], Ng2DatetimePickerDirective.prototype, \"ngModelChange\", void 0);\n\t\t\t    __decorate([\n\t\t\t        core_1.Output('valueChanged'), \n\t\t\t        __metadata('design:type', Object)\n\t\t\t    ], Ng2DatetimePickerDirective.prototype, \"valueChanged\", void 0);\n\t\t\t    Ng2DatetimePickerDirective = __decorate([\n\t\t\t        core_1.Directive({\n\t\t\t            selector: '[ng2-datetime-picker]',\n\t\t\t            providers: [ng2_datetime_1.Ng2Datetime]\n\t\t\t        }),\n\t\t\t        __param(2, core_1.Optional()),\n\t\t\t        __param(2, core_1.Host()),\n\t\t\t        __param(2, core_1.SkipSelf()), \n\t\t\t        __metadata('design:paramtypes', [core_1.ComponentFactoryResolver, core_1.ViewContainerRef, forms_1.ControlContainer])\n\t\t\t    ], Ng2DatetimePickerDirective);\n\t\t\t    return Ng2DatetimePickerDirective;\n\t\t\t}());\n\t\t\texports.Ng2DatetimePickerDirective = Ng2DatetimePickerDirective;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 5 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\t\t\n\t\t/***/ },\n\t\t/* 6 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t};\n\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t};\n\t\t\tvar core_1 = __webpack_require__(2);\n\t\t\tvar forms_1 = __webpack_require__(5);\n\t\t\tvar common_1 = __webpack_require__(7);\n\t\t\tvar ng2_datetime_1 = __webpack_require__(1);\n\t\t\tvar ng2_datetime_picker_component_1 = __webpack_require__(3);\n\t\t\tvar ng2_datetime_picker_directive_1 = __webpack_require__(4);\n\t\t\tvar Ng2DatetimePickerModule = (function () {\n\t\t\t    function Ng2DatetimePickerModule() {\n\t\t\t    }\n\t\t\t    Ng2DatetimePickerModule = __decorate([\n\t\t\t        core_1.NgModule({\n\t\t\t            imports: [common_1.CommonModule, forms_1.FormsModule],\n\t\t\t            declarations: [ng2_datetime_picker_component_1.Ng2DatetimePickerComponent, ng2_datetime_picker_directive_1.Ng2DatetimePickerDirective],\n\t\t\t            exports: [ng2_datetime_picker_component_1.Ng2DatetimePickerComponent, ng2_datetime_picker_directive_1.Ng2DatetimePickerDirective],\n\t\t\t            entryComponents: [ng2_datetime_picker_component_1.Ng2DatetimePickerComponent],\n\t\t\t            providers: [ng2_datetime_1.Ng2Datetime]\n\t\t\t        }), \n\t\t\t        __metadata('design:paramtypes', [])\n\t\t\t    ], Ng2DatetimePickerModule);\n\t\t\t    return Ng2DatetimePickerModule;\n\t\t\t}());\n\t\t\texports.Ng2DatetimePickerModule = Ng2DatetimePickerModule;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 7 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_7__;\n\t\t\n\t\t/***/ }\n\t\t/******/ ])\n\t\t});\n\t\t;\n\t\t//# sourceMappingURL=ng2-datetime-picker.umd.js.map\n\t\n\t/***/ },\n\t/* 10 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t(function webpackUniversalModuleDefinition(root, factory) {\n\t\t\tif(true)\n\t\t\t\tmodule.exports = factory(__webpack_require__(2), __webpack_require__(11), __webpack_require__(12), __webpack_require__(8));\n\t\t\telse if(typeof define === 'function' && define.amd)\n\t\t\t\tdefine([\"@angular/core\", \"rxjs/Subject\", \"rxjs/add/operator/debounceTime\", \"@angular/common\"], factory);\n\t\t\telse if(typeof exports === 'object')\n\t\t\t\texports[\"ng2-map\"] = factory(require(\"@angular/core\"), require(\"rxjs/Subject\"), require(\"rxjs/add/operator/debounceTime\"), require(\"@angular/common\"));\n\t\t\telse\n\t\t\t\troot[\"ng2-map\"] = factory(root[\"@angular/core\"], root[\"rxjs/Subject\"], root[\"rxjs/add/operator/debounceTime\"], root[\"@angular/common\"]);\n\t\t})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_8__, __WEBPACK_EXTERNAL_MODULE_12__, __WEBPACK_EXTERNAL_MODULE_29__) {\n\t\treturn /******/ (function(modules) { // webpackBootstrap\n\t\t/******/ \t// The module cache\n\t\t/******/ \tvar installedModules = {};\n\t\t/******/\n\t\t/******/ \t// The require function\n\t\t/******/ \tfunction __webpack_require__(moduleId) {\n\t\t/******/\n\t\t/******/ \t\t// Check if module is in cache\n\t\t/******/ \t\tif(installedModules[moduleId])\n\t\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\t\t/******/\n\t\t/******/ \t\t// Create a new module (and put it into the cache)\n\t\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t\t/******/ \t\t\texports: {},\n\t\t/******/ \t\t\tid: moduleId,\n\t\t/******/ \t\t\tloaded: false\n\t\t/******/ \t\t};\n\t\t/******/\n\t\t/******/ \t\t// Execute the module function\n\t\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t\t/******/\n\t\t/******/ \t\t// Flag the module as loaded\n\t\t/******/ \t\tmodule.loaded = true;\n\t\t/******/\n\t\t/******/ \t\t// Return the exports of the module\n\t\t/******/ \t\treturn module.exports;\n\t\t/******/ \t}\n\t\t/******/\n\t\t/******/\n\t\t/******/ \t// expose the modules object (__webpack_modules__)\n\t\t/******/ \t__webpack_require__.m = modules;\n\t\t/******/\n\t\t/******/ \t// expose the module cache\n\t\t/******/ \t__webpack_require__.c = installedModules;\n\t\t/******/\n\t\t/******/ \t// __webpack_public_path__\n\t\t/******/ \t__webpack_require__.p = \"\";\n\t\t/******/\n\t\t/******/ \t// Load entry module and return exports\n\t\t/******/ \treturn __webpack_require__(0);\n\t\t/******/ })\n\t\t/************************************************************************/\n\t\t/******/ ([\n\t\t/* 0 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar bicycling_layer_1 = __webpack_require__(1);\n\t\t\texports.BicyclingLayer = bicycling_layer_1.BicyclingLayer;\n\t\t\tvar navigator_geolocation_1 = __webpack_require__(9);\n\t\t\texports.NavigatorGeolocation = navigator_geolocation_1.NavigatorGeolocation;\n\t\t\tvar option_builder_1 = __webpack_require__(5);\n\t\t\texports.OptionBuilder = option_builder_1.OptionBuilder;\n\t\t\tvar config_1 = __webpack_require__(10);\n\t\t\texports.NG_MAP_CONFIG_TOKEN = config_1.NG_MAP_CONFIG_TOKEN;\n\t\t\tvar ng2_map_component_1 = __webpack_require__(4);\n\t\t\texports.Ng2MapComponent = ng2_map_component_1.Ng2MapComponent;\n\t\t\tvar info_window_1 = __webpack_require__(13);\n\t\t\texports.InfoWindow = info_window_1.InfoWindow;\n\t\t\tvar circle_1 = __webpack_require__(14);\n\t\t\texports.Circle = circle_1.Circle;\n\t\t\tvar data_layer_1 = __webpack_require__(15);\n\t\t\texports.DataLayer = data_layer_1.DataLayer;\n\t\t\tvar directions_renderer_1 = __webpack_require__(16);\n\t\t\texports.DirectionsRenderer = directions_renderer_1.DirectionsRenderer;\n\t\t\tvar drawing_manager_1 = __webpack_require__(17);\n\t\t\texports.DrawingManager = drawing_manager_1.DrawingManager;\n\t\t\tvar geo_coder_1 = __webpack_require__(7);\n\t\t\texports.GeoCoder = geo_coder_1.GeoCoder;\n\t\t\tvar ground_overlay_1 = __webpack_require__(18);\n\t\t\texports.GroundOverlay = ground_overlay_1.GroundOverlay;\n\t\t\tvar heatmap_layer_1 = __webpack_require__(19);\n\t\t\texports.HeatmapLayer = heatmap_layer_1.HeatmapLayer;\n\t\t\tvar kml_layer_1 = __webpack_require__(20);\n\t\t\texports.KmlLayer = kml_layer_1.KmlLayer;\n\t\t\tvar marker_1 = __webpack_require__(21);\n\t\t\texports.Marker = marker_1.Marker;\n\t\t\tvar ng2_map_1 = __webpack_require__(11);\n\t\t\texports.Ng2Map = ng2_map_1.Ng2Map;\n\t\t\tvar places_auto_complete_1 = __webpack_require__(22);\n\t\t\texports.PlacesAutoComplete = places_auto_complete_1.PlacesAutoComplete;\n\t\t\tvar polygon_1 = __webpack_require__(23);\n\t\t\texports.Polygon = polygon_1.Polygon;\n\t\t\tvar polyline_1 = __webpack_require__(24);\n\t\t\texports.Polyline = polyline_1.Polyline;\n\t\t\tvar street_view_panorama_1 = __webpack_require__(25);\n\t\t\texports.StreetViewPanorama = street_view_panorama_1.StreetViewPanorama;\n\t\t\tvar traffic_layer_1 = __webpack_require__(26);\n\t\t\texports.TrafficLayer = traffic_layer_1.TrafficLayer;\n\t\t\tvar transit_layer_1 = __webpack_require__(27);\n\t\t\texports.TransitLayer = transit_layer_1.TransitLayer;\n\t\t\tvar ng2_map_module_1 = __webpack_require__(28);\n\t\t\texports.Ng2MapModule = ng2_map_module_1.Ng2MapModule;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 1 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar __extends = (this && this.__extends) || function (d, b) {\n\t\t\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t\t\t    function __() { this.constructor = d; }\n\t\t\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t\t\t};\n\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t};\n\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t};\n\t\t\tvar core_1 = __webpack_require__(2);\n\t\t\tvar base_map_directive_1 = __webpack_require__(3);\n\t\t\tvar ng2_map_component_1 = __webpack_require__(4);\n\t\t\tvar INPUTS = [];\n\t\t\tvar OUTPUTS = [];\n\t\t\tvar BicyclingLayer = (function (_super) {\n\t\t\t    __extends(BicyclingLayer, _super);\n\t\t\t    function BicyclingLayer(ng2MapComp) {\n\t\t\t        _super.call(this, ng2MapComp, 'BicyclingLayer', INPUTS, OUTPUTS);\n\t\t\t    }\n\t\t\t    BicyclingLayer = __decorate([\n\t\t\t        core_1.Directive({\n\t\t\t            selector: 'ng2-map > bicycling-layer',\n\t\t\t            inputs: INPUTS,\n\t\t\t            outputs: OUTPUTS,\n\t\t\t        }), \n\t\t\t        __metadata('design:paramtypes', [ng2_map_component_1.Ng2MapComponent])\n\t\t\t    ], BicyclingLayer);\n\t\t\t    return BicyclingLayer;\n\t\t\t}(base_map_directive_1.BaseMapDirective));\n\t\t\texports.BicyclingLayer = BicyclingLayer;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 2 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\t\t\n\t\t/***/ },\n\t\t/* 3 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t};\n\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t};\n\t\t\tvar core_1 = __webpack_require__(2);\n\t\t\tvar BaseMapDirective = (function () {\n\t\t\t    function BaseMapDirective(ng2MapComponent, mapObjectName, inputs, outputs) {\n\t\t\t        var _this = this;\n\t\t\t        this.ng2MapComponent = ng2MapComponent;\n\t\t\t        this.mapObjectName = mapObjectName;\n\t\t\t        this.inputs = inputs;\n\t\t\t        this.outputs = outputs;\n\t\t\t        this.initialized$ = new core_1.EventEmitter();\n\t\t\t        this._subscriptions = [];\n\t\t\t        this.ng2Map = this.ng2MapComponent['ng2Map'];\n\t\t\t        this.optionBuilder = this.ng2MapComponent['optionBuilder'];\n\t\t\t        // all outputs must be initialized\n\t\t\t        this.outputs.forEach(function (output) { return _this[output] = new core_1.EventEmitter(); });\n\t\t\t        this.mapObjectName = mapObjectName;\n\t\t\t    }\n\t\t\t    // Initialize this map object when map is ready\n\t\t\t    BaseMapDirective.prototype.ngOnInit = function () {\n\t\t\t        var _this = this;\n\t\t\t        if (this.ng2MapComponent.mapIdledOnce) {\n\t\t\t            this.initialize();\n\t\t\t        }\n\t\t\t        else {\n\t\t\t            this.ng2MapComponent.mapReady$.subscribe(function (map) { return _this.initialize(); });\n\t\t\t        }\n\t\t\t    };\n\t\t\t    // only called when map is ready\n\t\t\t    BaseMapDirective.prototype.initialize = function () {\n\t\t\t        this.objectOptions = this.optionBuilder.googlizeAllInputs(this.inputs, this);\n\t\t\t        // will be set after geocoded\n\t\t\t        typeof this.objectOptions.position === 'string' && (delete this.objectOptions.position);\n\t\t\t        typeof this.objectOptions.center === 'string' && (delete this.objectOptions.center);\n\t\t\t        // noinspection TypeScriptUnresolvedFunction\n\t\t\t        if (this.libraryName) {\n\t\t\t            this.mapObject = new google.maps[this.libraryName][this.mapObjectName](this.objectOptions);\n\t\t\t        }\n\t\t\t        else {\n\t\t\t            this.mapObject = new google.maps[this.mapObjectName](this.objectOptions);\n\t\t\t        }\n\t\t\t        this.mapObject.setMap(this.ng2MapComponent.map);\n\t\t\t        this.mapObject['mapObjectName'] = this.mapObjectName;\n\t\t\t        this.mapObject['ng2MapComponent'] = this.ng2MapComponent;\n\t\t\t        // set google events listeners and emits to this outputs listeners\n\t\t\t        this.ng2Map.setObjectEvents(this.outputs, this, 'mapObject');\n\t\t\t        this.ng2MapComponent.addToMapObjectGroup(this.mapObjectName, this.mapObject);\n\t\t\t        this.initialized$.emit(this.mapObject);\n\t\t\t    };\n\t\t\t    // When input is changed, update object too.\n\t\t\t    // e.g., when map center is changed by user, update center on the map\n\t\t\t    BaseMapDirective.prototype.ngOnChanges = function (changes) {\n\t\t\t        this.ng2Map.updateGoogleObject(this.mapObject, changes);\n\t\t\t    };\n\t\t\t    // When destroyed, remove event listener, and delete this object to prevent memory leak\n\t\t\t    BaseMapDirective.prototype.ngOnDestroy = function () {\n\t\t\t        var _this = this;\n\t\t\t        this._subscriptions.map(function (subscription) { return subscription.unsubscribe(); });\n\t\t\t        this.ng2MapComponent.removeFromMapObjectGroup(this.mapObjectName, this.mapObject);\n\t\t\t        if (this.mapObject) {\n\t\t\t            this.outputs.forEach(function (output) { return google.maps.event.clearListeners(_this.mapObject, output); });\n\t\t\t            this.mapObject['setMap'](null);\n\t\t\t            delete this.mapObject;\n\t\t\t        }\n\t\t\t    };\n\t\t\t    __decorate([\n\t\t\t        core_1.Output(), \n\t\t\t        __metadata('design:type', core_1.EventEmitter)\n\t\t\t    ], BaseMapDirective.prototype, \"initialized$\", void 0);\n\t\t\t    return BaseMapDirective;\n\t\t\t}());\n\t\t\texports.BaseMapDirective = BaseMapDirective;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 4 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t};\n\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t};\n\t\t\tvar __param = (this && this.__param) || function (paramIndex, decorator) {\n\t\t\t    return function (target, key) { decorator(target, key, paramIndex); }\n\t\t\t};\n\t\t\tvar core_1 = __webpack_require__(2);\n\t\t\tvar option_builder_1 = __webpack_require__(5);\n\t\t\tvar navigator_geolocation_1 = __webpack_require__(9);\n\t\t\tvar config_1 = __webpack_require__(10);\n\t\t\tvar geo_coder_1 = __webpack_require__(7);\n\t\t\tvar ng2_map_1 = __webpack_require__(11);\n\t\t\tvar Subject_1 = __webpack_require__(8);\n\t\t\t__webpack_require__(12);\n\t\t\tvar util_1 = __webpack_require__(6);\n\t\t\tvar INPUTS = [\n\t\t\t    'backgroundColor', 'center', 'disableDefaultUI', 'disableDoubleClickZoom', 'draggable', 'draggableCursor',\n\t\t\t    'draggingCursor', 'heading', 'keyboardShortcuts', 'mapMaker', 'mapTypeControl', 'mapTypeId', 'maxZoom', 'minZoom',\n\t\t\t    'noClear', 'overviewMapControl', 'panControl', 'panControlOptions', 'rotateControl', 'scaleControl', 'scrollwheel',\n\t\t\t    'streetView', 'styles', 'tilt', 'zoom', 'streetViewControl', 'zoomControl', 'mapTypeControlOptions',\n\t\t\t    'overviewMapControlOptions', 'rotateControlOptions', 'scaleControlOptions', 'streetViewControlOptions',\n\t\t\t    'options',\n\t\t\t    // ng2-map-specific inputs\n\t\t\t    'geoFallbackCenter'\n\t\t\t];\n\t\t\tvar OUTPUTS = [\n\t\t\t    'bounds_changed', 'center_changed', 'click', 'dblclick', 'drag', 'dragend', 'dragstart', 'heading_changed', 'idle',\n\t\t\t    'typeid_changed', 'mousemove', 'mouseout', 'mouseover', 'projection_changed', 'resize', 'rightclick',\n\t\t\t    'tilesloaded', 'tile_changed', 'zoom_changed',\n\t\t\t    // to avoid DOM event conflicts\n\t\t\t    'mapClick', 'mapMouseover', 'mapMouseout', 'mapMousemove', 'mapDrag', 'mapDragend', 'mapDragstart'\n\t\t\t];\n\t\t\tvar Ng2MapComponent = (function () {\n\t\t\t    function Ng2MapComponent(optionBuilder, elementRef, zone, geolocation, geoCoder, ng2Map, config) {\n\t\t\t        var _this = this;\n\t\t\t        this.optionBuilder = optionBuilder;\n\t\t\t        this.elementRef = elementRef;\n\t\t\t        this.zone = zone;\n\t\t\t        this.geolocation = geolocation;\n\t\t\t        this.geoCoder = geoCoder;\n\t\t\t        this.ng2Map = ng2Map;\n\t\t\t        this.config = config;\n\t\t\t        this.mapReady$ = new core_1.EventEmitter();\n\t\t\t        this.mapOptions = {};\n\t\t\t        this.inputChanges$ = new Subject_1.Subject();\n\t\t\t        // map objects by group\n\t\t\t        this.infoWindows = {};\n\t\t\t        // map has been fully initialized\n\t\t\t        this.mapIdledOnce = false;\n\t\t\t        window['ng2MapRef'] = { zone: this.zone, componentFn: function () { return _this.initializeMap(); }, map: null };\n\t\t\t        if (typeof google === 'undefined' || typeof google.maps === 'undefined' || !google.maps.Map) {\n\t\t\t            this.mapInitPath = 1;\n\t\t\t            this.addGoogleMapsApi();\n\t\t\t        }\n\t\t\t        // all outputs needs to be initialized,\n\t\t\t        // http://stackoverflow.com/questions/37765519/angular2-directive-cannot-read-property-subscribe-of-undefined-with-outputs\n\t\t\t        OUTPUTS.forEach(function (output) { return _this[output] = new core_1.EventEmitter(); });\n\t\t\t    }\n\t\t\t    Ng2MapComponent.prototype.ngAfterViewInit = function () {\n\t\t\t        if (this.mapInitPath !== 1) {\n\t\t\t            this.initializeMap();\n\t\t\t        }\n\t\t\t    };\n\t\t\t    Ng2MapComponent.prototype.ngOnChanges = function (changes) {\n\t\t\t        this.inputChanges$.next(changes);\n\t\t\t    };\n\t\t\t    Ng2MapComponent.prototype.addGoogleMapsApi = function () {\n\t\t\t        window['initNg2Map'] = function () {\n\t\t\t            window['ng2MapRef'].zone.run(function () { window['ng2MapRef'].componentFn(); });\n\t\t\t        };\n\t\t\t        if ((!window['google'] || !window['google']['maps']) && !document.querySelector('#ng2-map-api')) {\n\t\t\t            var script = document.createElement('script');\n\t\t\t            script.id = 'ng2-map-api';\n\t\t\t            // script.src = \"https://maps.google.com/maps/api/js?callback=initNg2Map\";\n\t\t\t            var apiUrl = this.config.apiUrl || 'https://maps.google.com/maps/api/js';\n\t\t\t            apiUrl += apiUrl.indexOf('?') !== -1 ? '&' : '?';\n\t\t\t            script.src = apiUrl + 'callback=initNg2Map';\n\t\t\t            document.querySelector('body').appendChild(script);\n\t\t\t        }\n\t\t\t    };\n\t\t\t    Ng2MapComponent.prototype.initializeMap = function () {\n\t\t\t        var _this = this;\n\t\t\t        this.el = this.elementRef.nativeElement.querySelector('.google-map');\n\t\t\t        this.mapOptions = this.optionBuilder.googlizeAllInputs(INPUTS, this);\n\t\t\t        this.mapOptions.zoom = this.mapOptions.zoom || 15;\n\t\t\t        typeof this.mapOptions.center === 'string' && (delete this.mapOptions.center);\n\t\t\t        this.map = new google.maps.Map(this.el, this.mapOptions);\n\t\t\t        this.map['mapObjectName'] = 'Ng2MapComponent';\n\t\t\t        if (!this.mapOptions.center) {\n\t\t\t            this.setCenter();\n\t\t\t        }\n\t\t\t        // set google events listeners and emits to this outputs listeners\n\t\t\t        this.ng2Map.setObjectEvents(OUTPUTS, this, 'map');\n\t\t\t        this.map.addListener('idle', function () {\n\t\t\t            if (!_this.mapIdledOnce) {\n\t\t\t                _this.mapReady$.emit(_this.map);\n\t\t\t                _this.mapIdledOnce = true;\n\t\t\t            }\n\t\t\t        });\n\t\t\t        // update map when input changes\n\t\t\t        this.inputChanges$\n\t\t\t            .debounceTime(1000)\n\t\t\t            .subscribe(function (changes) { return _this.ng2Map.updateGoogleObject(_this.map, changes); });\n\t\t\t        // expose map object for test and debugging on window\n\t\t\t        window['ng2MapRef'].map = this.map;\n\t\t\t    };\n\t\t\t    Ng2MapComponent.prototype.setCenter = function () {\n\t\t\t        var _this = this;\n\t\t\t        if (!this['center']) {\n\t\t\t            this.geolocation.getCurrentPosition().subscribe(function (position) {\n\t\t\t                var latLng = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);\n\t\t\t                _this.map.setCenter(latLng);\n\t\t\t            }, function (error) {\n\t\t\t                console.error(error);\n\t\t\t                _this.map.setCenter(_this.mapOptions['geoFallbackCenter'] || new google.maps.LatLng(0, 0));\n\t\t\t            });\n\t\t\t        }\n\t\t\t        else if (typeof this['center'] === 'string') {\n\t\t\t            this.geoCoder.geocode({ address: this['center'] }).subscribe(function (results) {\n\t\t\t                _this.map.setCenter(results[0].geometry.location);\n\t\t\t            }, function (error) {\n\t\t\t                _this.map.setCenter(_this.mapOptions['geoFallbackCenter'] || new google.maps.LatLng(0, 0));\n\t\t\t            });\n\t\t\t        }\n\t\t\t    };\n\t\t\t    Ng2MapComponent.prototype.openInfoWindow = function (id, anchor, data) {\n\t\t\t        this.infoWindows[id].open(anchor, data);\n\t\t\t    };\n\t\t\t    Ng2MapComponent.prototype.ngOnDestroy = function () {\n\t\t\t        var _this = this;\n\t\t\t        if (this.el) {\n\t\t\t            OUTPUTS.forEach(function (output) { return google.maps.event.clearListeners(_this.map, output); });\n\t\t\t        }\n\t\t\t    };\n\t\t\t    // map.markers, map.circles, map.heatmapLayers.. etc\n\t\t\t    Ng2MapComponent.prototype.addToMapObjectGroup = function (mapObjectName, mapObject) {\n\t\t\t        var groupName = util_1.toCamelCase(mapObjectName.toLowerCase()) + 's'; // e.g. markers\n\t\t\t        this.map[groupName] = this.map[groupName] || [];\n\t\t\t        this.map[groupName].push(mapObject);\n\t\t\t    };\n\t\t\t    Ng2MapComponent.prototype.removeFromMapObjectGroup = function (mapObjectName, mapObject) {\n\t\t\t        var groupName = util_1.toCamelCase(mapObjectName.toLowerCase()) + 's'; // e.g. markers\n\t\t\t        var index = this.map[groupName].indexOf(mapObject);\n\t\t\t        (index > -1) && this.map[groupName].splice(index, 1);\n\t\t\t    };\n\t\t\t    __decorate([\n\t\t\t        core_1.Output(), \n\t\t\t        __metadata('design:type', core_1.EventEmitter)\n\t\t\t    ], Ng2MapComponent.prototype, \"mapReady$\", void 0);\n\t\t\t    Ng2MapComponent = __decorate([\n\t\t\t        core_1.Component({\n\t\t\t            selector: 'ng2-map',\n\t\t\t            providers: [ng2_map_1.Ng2Map, option_builder_1.OptionBuilder, geo_coder_1.GeoCoder, navigator_geolocation_1.NavigatorGeolocation],\n\t\t\t            styles: [\"\\n    ng2-map {display: block; height: 300px;}\\n    .google-map {width: 100%; height: 100%}\\n  \"],\n\t\t\t            inputs: INPUTS,\n\t\t\t            outputs: OUTPUTS,\n\t\t\t            encapsulation: core_1.ViewEncapsulation.None,\n\t\t\t            template: \"\\n    <div class=\\\"google-map\\\"></div>\\n    <ng-content></ng-content>\\n  \",\n\t\t\t        }),\n\t\t\t        __param(6, core_1.Inject(config_1.NG_MAP_CONFIG_TOKEN)), \n\t\t\t        __metadata('design:paramtypes', [option_builder_1.OptionBuilder, core_1.ElementRef, core_1.NgZone, navigator_geolocation_1.NavigatorGeolocation, geo_coder_1.GeoCoder, ng2_map_1.Ng2Map, Object])\n\t\t\t    ], Ng2MapComponent);\n\t\t\t    return Ng2MapComponent;\n\t\t\t}());\n\t\t\texports.Ng2MapComponent = Ng2MapComponent;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 5 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t};\n\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t};\n\t\t\tvar core_1 = __webpack_require__(2);\n\t\t\tvar util_1 = __webpack_require__(6);\n\t\t\tvar geo_coder_1 = __webpack_require__(7);\n\t\t\t/**\n\t\t\t * change any object to google object options\n\t\t\t * e.g. [1,2] -> new google.maps.LatLng(1,2);\n\t\t\t */\n\t\t\tvar OptionBuilder = (function () {\n\t\t\t    function OptionBuilder(geoCoder) {\n\t\t\t        this.geoCoder = geoCoder;\n\t\t\t    }\n\t\t\t    OptionBuilder.prototype.googlizeAllInputs = function (definedInputs, userInputs) {\n\t\t\t        var _this = this;\n\t\t\t        var options = {};\n\t\t\t        // if options given from user, only take options and ignore other inputs\n\t\t\t        if (userInputs.options) {\n\t\t\t            options = userInputs.options;\n\t\t\t            if (!this.onlyOptionsGiven(definedInputs, userInputs)) {\n\t\t\t                console.error('when \"options\" are used, other options are ignored');\n\t\t\t            }\n\t\t\t        }\n\t\t\t        else {\n\t\t\t            definedInputs.forEach(function (input) {\n\t\t\t                if (userInputs[input] !== undefined) {\n\t\t\t                    options[input] = _this.googlize(userInputs[input], { key: input });\n\t\t\t                }\n\t\t\t            });\n\t\t\t        }\n\t\t\t        return options;\n\t\t\t    };\n\t\t\t    OptionBuilder.prototype.googlizeMultiple = function (inputs, options) {\n\t\t\t        options = options || {};\n\t\t\t        for (var key in inputs) {\n\t\t\t            var val = inputs[key];\n\t\t\t            // (non-strings are fully converted)\n\t\t\t            if (typeof val !== 'string') {\n\t\t\t                options[key] = val;\n\t\t\t            } // sometimes '0' needed to stay as it is\n\t\t\t            else if (!(options['doNotConverStringToNumber'] && val.match(/^[0-9]+$/))) {\n\t\t\t                options[key] = this.googlize(val, { key: key });\n\t\t\t            }\n\t\t\t        } // for(var key in attrs)\n\t\t\t        return options;\n\t\t\t    };\n\t\t\t    OptionBuilder.prototype.googlize = function (input, options) {\n\t\t\t        options = options || {};\n\t\t\t        var output = input;\n\t\t\t        if (typeof input === 'string') {\n\t\t\t            if (input === 'false') {\n\t\t\t                output = false;\n\t\t\t            }\n\t\t\t            else if (input === '0') {\n\t\t\t                output = 0;\n\t\t\t            }\n\t\t\t            else {\n\t\t\t                output =\n\t\t\t                    // -> googlize -> getJsonParsed -> googlizeMultiple -> googlize until all elements are parsed\n\t\t\t                    this.getJSONParsed(input, options)\n\t\t\t                        || this.getAnyMapObject(input)\n\t\t\t                        || this.getAnyMapConstant(input, options)\n\t\t\t                        || this.getDateObject(input)\n\t\t\t                        || input;\n\t\t\t            }\n\t\t\t        }\n\t\t\t        if (output instanceof Array) {\n\t\t\t            if (options['key'] === 'bounds') {\n\t\t\t                output = new google.maps.LatLngBounds(output[0], output[1]);\n\t\t\t            }\n\t\t\t            else if (options['key'] === 'icons') {\n\t\t\t                output = this.getMapIcons(output);\n\t\t\t            }\n\t\t\t            else if (options['key'] === 'position' || options['key'].match(/^geoFallback/)) {\n\t\t\t                output = this.getLatLng(output);\n\t\t\t            }\n\t\t\t        }\n\t\t\t        else if (options['key'] && output instanceof Object) {\n\t\t\t            if (options['key'] === 'icon') {\n\t\t\t                output = this.getMarkerIcon(output);\n\t\t\t            }\n\t\t\t            else if (options['key'].match(/ControlOptions$/)) {\n\t\t\t                output = this.getMapControlOption(output);\n\t\t\t            }\n\t\t\t        }\n\t\t\t        //delete keys only for processing, not used by google\n\t\t\t        delete output['doNotConverStringToNumber'];\n\t\t\t        delete output['key'];\n\t\t\t        return output;\n\t\t\t    };\n\t\t\t    OptionBuilder.prototype.getLatLng = function (input) {\n\t\t\t        var output;\n\t\t\t        if (input[0].constructor === Array) {\n\t\t\t            output = input.map(function (el) { return new google.maps.LatLng(el[0], el[1]); });\n\t\t\t        }\n\t\t\t        else if (!isNaN(parseFloat(input[0])) && isFinite(input[0])) {\n\t\t\t            output = new google.maps.LatLng(input[0], input[1]);\n\t\t\t        }\n\t\t\t        return output;\n\t\t\t    };\n\t\t\t    OptionBuilder.prototype.getJSONParsed = function (input, options) {\n\t\t\t        var output;\n\t\t\t        try {\n\t\t\t            output = util_1.getJSON(input);\n\t\t\t            if (output instanceof Array) {\n\t\t\t                // [{a:1}] : not lat/lng ones\n\t\t\t                if (output[0].constructor !== Object) {\n\t\t\t                    output = this.getLatLng(output);\n\t\t\t                }\n\t\t\t            }\n\t\t\t            else if (output === Object(output)) {\n\t\t\t                // check for nested hashes and convert to Google API options\n\t\t\t                var newOptions = options;\n\t\t\t                newOptions['doNotConverStringToNumber'] = true;\n\t\t\t                output = this.googlizeMultiple(output, newOptions);\n\t\t\t            }\n\t\t\t        }\n\t\t\t        catch (e) {\n\t\t\t        }\n\t\t\t        return output;\n\t\t\t    };\n\t\t\t    OptionBuilder.prototype.getAnyMapObject = function (input) {\n\t\t\t        var output;\n\t\t\t        if (input.match(/^[A-Z][a-zA-Z0-9]+\\(.*\\)$/)) {\n\t\t\t            try {\n\t\t\t                var exp = 'new google.maps.' + input;\n\t\t\t                output = Function(\"return new google.maps.\" + input + \";\")();\n\t\t\t            }\n\t\t\t            catch (e) { }\n\t\t\t        }\n\t\t\t        return output;\n\t\t\t    };\n\t\t\t    OptionBuilder.prototype.getAnyMapConstant = function (input, options) {\n\t\t\t        var output;\n\t\t\t        if (input.match(/^([A-Z][a-zA-Z0-9]+)\\.([A-Z]+)$/)) {\n\t\t\t            try {\n\t\t\t                var matches = input.match(/^([A-Z][a-zA-Z0-9]+)\\.([A-Z]+)$/);\n\t\t\t                output = google.maps[matches[1]][matches[2]];\n\t\t\t            }\n\t\t\t            catch (e) { }\n\t\t\t        }\n\t\t\t        else if (input.match(/^[A-Z]+$/)) {\n\t\t\t            try {\n\t\t\t                var capitalizedKey = options['key'].charAt(0).toUpperCase() +\n\t\t\t                    options['key'].slice(1);\n\t\t\t                output = google.maps[capitalizedKey][input];\n\t\t\t            }\n\t\t\t            catch (e) { }\n\t\t\t        }\n\t\t\t        return output;\n\t\t\t    };\n\t\t\t    /**\n\t\t\t     * streetviewControl, panControl, etc, not a general control\n\t\t\t     */\n\t\t\t    OptionBuilder.prototype.getMapControlOption = function (controlOptions) {\n\t\t\t        var newControlOptions = controlOptions;\n\t\t\t        for (var key in newControlOptions) {\n\t\t\t            if (newControlOptions[key]) {\n\t\t\t                var value = newControlOptions[key];\n\t\t\t                if (typeof value === 'string') {\n\t\t\t                    value = value.toUpperCase();\n\t\t\t                }\n\t\t\t                else if (key === 'mapTypeIds') {\n\t\t\t                    value = value.map(function (str) {\n\t\t\t                        if (str.match(/^[A-Z]+$/)) {\n\t\t\t                            return google.maps.MapTypeId[str.toUpperCase()];\n\t\t\t                        }\n\t\t\t                        else {\n\t\t\t                            return str;\n\t\t\t                        }\n\t\t\t                    });\n\t\t\t                }\n\t\t\t                if (key === 'style') {\n\t\t\t                    var objName = key.replace(/Options$/, '') + 'Style';\n\t\t\t                    newControlOptions[key] = google.maps[objName][value];\n\t\t\t                }\n\t\t\t                else if (key === 'position') {\n\t\t\t                    newControlOptions[key] = google.maps.ControlPosition[value];\n\t\t\t                }\n\t\t\t                else {\n\t\t\t                    newControlOptions[key] = value;\n\t\t\t                }\n\t\t\t            }\n\t\t\t        }\n\t\t\t        return newControlOptions;\n\t\t\t    };\n\t\t\t    OptionBuilder.prototype.getDateObject = function (input) {\n\t\t\t        var output;\n\t\t\t        if (input.match(/^(\\d{4}\\-\\d\\d\\-\\d\\d([tT][\\d:\\.]*)?)([zZ]|([+\\-])(\\d\\d):?(\\d\\d))?$/)) {\n\t\t\t            try {\n\t\t\t                output = new Date(input);\n\t\t\t            }\n\t\t\t            catch (e) { }\n\t\t\t        }\n\t\t\t        return output;\n\t\t\t    };\n\t\t\t    OptionBuilder.prototype.getMapIcons = function (input) {\n\t\t\t        return input.map(function (el) {\n\t\t\t            if (el.icon.path.match(/^[A-Z_]+$/)) {\n\t\t\t                el.icon.path = google.maps.SymbolPath[el.icon.path];\n\t\t\t            }\n\t\t\t            return el;\n\t\t\t        });\n\t\t\t    };\n\t\t\t    OptionBuilder.prototype.getMarkerIcon = function (input) {\n\t\t\t        var output = input;\n\t\t\t        if (('' + output.path).match(/^[A-Z_]+$/)) {\n\t\t\t            output.path = google.maps.SymbolPath[output.path];\n\t\t\t        }\n\t\t\t        for (var key in output) {\n\t\t\t            var arr = output[key];\n\t\t\t            if (key === 'anchor' || key === 'origin' || key === 'labelOrigin') {\n\t\t\t                output[key] = new google.maps.Point(arr[0], arr[1]);\n\t\t\t            }\n\t\t\t            else if (key === 'size' || key === 'scaledSize') {\n\t\t\t                output[key] = new google.maps.Size(arr[0], arr[1]);\n\t\t\t            }\n\t\t\t        }\n\t\t\t        return output;\n\t\t\t    };\n\t\t\t    OptionBuilder.prototype.onlyOptionsGiven = function (definedInputs, userInputs) {\n\t\t\t        for (var i = 0; i < definedInputs.length; i++) {\n\t\t\t            var input = definedInputs[i];\n\t\t\t            if (input !== 'options' && typeof userInputs[input] !== 'undefined') {\n\t\t\t                return false;\n\t\t\t            }\n\t\t\t        }\n\t\t\t        return true;\n\t\t\t    };\n\t\t\t    OptionBuilder = __decorate([\n\t\t\t        core_1.Injectable(), \n\t\t\t        __metadata('design:paramtypes', [geo_coder_1.GeoCoder])\n\t\t\t    ], OptionBuilder);\n\t\t\t    return OptionBuilder;\n\t\t\t}());\n\t\t\texports.OptionBuilder = OptionBuilder;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 6 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\t/**\n\t\t\t * return json string from json-like string\n\t\t\t */\n\t\t\tvar jsonize = function (str) {\n\t\t\t    try {\n\t\t\t        JSON.parse(str);\n\t\t\t        return str;\n\t\t\t    }\n\t\t\t    catch (e) {\n\t\t\t        return str\n\t\t\t            .replace(/([\\$\\w]+)\\s*:/g, // wrap keys without double quote\n\t\t\t        function (_, $1) {\n\t\t\t            return '\"' + $1 + '\":';\n\t\t\t        })\n\t\t\t            .replace(/'([^']+)'/g, // replacing single quote to double quote\n\t\t\t        function (_, $1) {\n\t\t\t            return '\"' + $1 + '\"';\n\t\t\t        });\n\t\t\t    }\n\t\t\t};\n\t\t\texports.jsonize = jsonize;\n\t\t\t/**\n\t\t\t * Returns string to an object by using JSON.parse()\n\t\t\t */\n\t\t\tvar getJSON = function (input) {\n\t\t\t    if (typeof input === 'string') {\n\t\t\t        var re = /^[\\+\\-]?[0-9\\.]+,[ ]*\\ ?[\\+\\-]?[0-9\\.]+$/; // lat,lng\n\t\t\t        if (input.match(re)) {\n\t\t\t            input = '[' + input + ']';\n\t\t\t        }\n\t\t\t        return JSON.parse(jsonize(input));\n\t\t\t    }\n\t\t\t    else {\n\t\t\t        return input;\n\t\t\t    }\n\t\t\t};\n\t\t\texports.getJSON = getJSON;\n\t\t\t/* tslint:enable */\n\t\t\t/**\n\t\t\t * Returns camel-cased from string 'Foo Bar' to 'fooBar'\n\t\t\t */\n\t\t\tvar toCamelCase = function (str) {\n\t\t\t    return str.replace(/(?:^\\w|[A-Z]|\\b\\w)/g, function (letter, index) {\n\t\t\t        return index == 0 ? letter.toLowerCase() : letter.toUpperCase();\n\t\t\t    }).replace(/\\s+/g, '');\n\t\t\t};\n\t\t\texports.toCamelCase = toCamelCase;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 7 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t};\n\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t};\n\t\t\tvar core_1 = __webpack_require__(2);\n\t\t\tvar Subject_1 = __webpack_require__(8);\n\t\t\t/**\n\t\t\t *   Provides [defered/promise API](https://docs.angularjs.org/api/ng/service/$q)\n\t\t\t *   service for Google Geocoder service\n\t\t\t */\n\t\t\tvar GeoCoder = (function () {\n\t\t\t    function GeoCoder() {\n\t\t\t    }\n\t\t\t    GeoCoder.prototype.geocode = function (options) {\n\t\t\t        var geocode$ = new Subject_1.Subject();\n\t\t\t        var geocoder = new google.maps.Geocoder();\n\t\t\t        geocoder.geocode(options, function (results, status) {\n\t\t\t            if (status === google.maps.GeocoderStatus.OK) {\n\t\t\t                geocode$.next(results);\n\t\t\t            }\n\t\t\t            else {\n\t\t\t                geocode$.error(results);\n\t\t\t            }\n\t\t\t        });\n\t\t\t        return geocode$;\n\t\t\t    };\n\t\t\t    ;\n\t\t\t    GeoCoder = __decorate([\n\t\t\t        core_1.Injectable(), \n\t\t\t        __metadata('design:paramtypes', [])\n\t\t\t    ], GeoCoder);\n\t\t\t    return GeoCoder;\n\t\t\t}());\n\t\t\texports.GeoCoder = GeoCoder;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 8 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_8__;\n\t\t\n\t\t/***/ },\n\t\t/* 9 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t};\n\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t};\n\t\t\tvar core_1 = __webpack_require__(2);\n\t\t\tvar Subject_1 = __webpack_require__(8);\n\t\t\t/**\n\t\t\t *  service for navigator.geolocation methods\n\t\t\t */\n\t\t\tvar NavigatorGeolocation = (function () {\n\t\t\t    function NavigatorGeolocation() {\n\t\t\t    }\n\t\t\t    NavigatorGeolocation.prototype.getCurrentPosition = function (geoLocationOptions) {\n\t\t\t        geoLocationOptions = geoLocationOptions || { timeout: 5000 };\n\t\t\t        var getCurrentPosition$ = new Subject_1.Subject();\n\t\t\t        if (navigator.geolocation) {\n\t\t\t            navigator.geolocation.getCurrentPosition(function (position) { return getCurrentPosition$.next(position); }, function (evt) { return getCurrentPosition$.error(evt); }, geoLocationOptions);\n\t\t\t        }\n\t\t\t        else {\n\t\t\t            getCurrentPosition$.error('Browser Geolocation service failed.');\n\t\t\t        }\n\t\t\t        return getCurrentPosition$;\n\t\t\t    };\n\t\t\t    ;\n\t\t\t    NavigatorGeolocation = __decorate([\n\t\t\t        core_1.Injectable(), \n\t\t\t        __metadata('design:paramtypes', [])\n\t\t\t    ], NavigatorGeolocation);\n\t\t\t    return NavigatorGeolocation;\n\t\t\t}());\n\t\t\texports.NavigatorGeolocation = NavigatorGeolocation;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 10 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar core_1 = __webpack_require__(2);\n\t\t\texports.NG_MAP_CONFIG_TOKEN = new core_1.OpaqueToken('NG_MAP_CONFIG_TOKEN');\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 11 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t};\n\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t};\n\t\t\tvar core_1 = __webpack_require__(2);\n\t\t\tvar option_builder_1 = __webpack_require__(5);\n\t\t\tvar geo_coder_1 = __webpack_require__(7);\n\t\t\t/**\n\t\t\t * collection of map instance-related properties and methods\n\t\t\t */\n\t\t\tvar Ng2Map = (function () {\n\t\t\t    function Ng2Map(geoCoder, optionBuilder) {\n\t\t\t        var _this = this;\n\t\t\t        this.geoCoder = geoCoder;\n\t\t\t        this.optionBuilder = optionBuilder;\n\t\t\t        this.updateGoogleObject = function (object, changes) {\n\t\t\t            var val, currentValue, setMethodName;\n\t\t\t            if (object) {\n\t\t\t                for (var key in changes) {\n\t\t\t                    setMethodName = \"set\" + key.replace(/^[a-z]/, function (x) { return x.toUpperCase(); });\n\t\t\t                    currentValue = changes[key].currentValue;\n\t\t\t                    if (['position', 'center'].indexOf(key) !== -1 && typeof currentValue === 'string') {\n\t\t\t                        //To preserve setMethod name in Observable callback, wrap it as a function, then execute\n\t\t\t                        (function (setMethodName) {\n\t\t\t                            _this.geoCoder.geocode({ address: currentValue }).subscribe(function (results) {\n\t\t\t                                object[setMethodName](results[0].geometry.location);\n\t\t\t                            });\n\t\t\t                        })(setMethodName);\n\t\t\t                    }\n\t\t\t                    else {\n\t\t\t                        val = _this.optionBuilder.googlize(currentValue);\n\t\t\t                        object[setMethodName](val);\n\t\t\t                    }\n\t\t\t                }\n\t\t\t            }\n\t\t\t        };\n\t\t\t    }\n\t\t\t    Ng2Map.prototype.setObjectEvents = function (definedEvents, thisObj, prefix) {\n\t\t\t        definedEvents.forEach(function (definedEvent) {\n\t\t\t            var eventName = definedEvent\n\t\t\t                .replace(/([A-Z])/g, function ($1) { return (\"_\" + $1.toLowerCase()); }) //positionChanged -> position_changed\n\t\t\t                .replace(/^map_/, ''); //map_click -> click  to avoid DOM conflicts\n\t\t\t            thisObj[prefix].addListener(eventName, function (event) {\n\t\t\t                var param = event ? event : {};\n\t\t\t                param.target = this;\n\t\t\t                thisObj[definedEvent].emit(param);\n\t\t\t            });\n\t\t\t        });\n\t\t\t    };\n\t\t\t    Ng2Map = __decorate([\n\t\t\t        core_1.Injectable(), \n\t\t\t        __metadata('design:paramtypes', [geo_coder_1.GeoCoder, option_builder_1.OptionBuilder])\n\t\t\t    ], Ng2Map);\n\t\t\t    return Ng2Map;\n\t\t\t}());\n\t\t\texports.Ng2Map = Ng2Map;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 12 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_12__;\n\t\t\n\t\t/***/ },\n\t\t/* 13 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t};\n\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t};\n\t\t\tvar core_1 = __webpack_require__(2);\n\t\t\tvar Subject_1 = __webpack_require__(8);\n\t\t\t__webpack_require__(12);\n\t\t\tvar ng2_map_1 = __webpack_require__(11);\n\t\t\tvar ng2_map_component_1 = __webpack_require__(4);\n\t\t\tvar INPUTS = [\n\t\t\t    'content', 'disableAutoPan', 'maxWidth', 'pixelOffset', 'position', 'zIndex', 'options'\n\t\t\t];\n\t\t\tvar OUTPUTS = [\n\t\t\t    'closeclick', 'content_changed', 'domready', 'position_changed', 'zindex_changed'\n\t\t\t];\n\t\t\tvar InfoWindow = (function () {\n\t\t\t    function InfoWindow(ng2MapComponent, elementRef, ng2Map) {\n\t\t\t        var _this = this;\n\t\t\t        this.ng2MapComponent = ng2MapComponent;\n\t\t\t        this.elementRef = elementRef;\n\t\t\t        this.ng2Map = ng2Map;\n\t\t\t        this.objectOptions = {};\n\t\t\t        this.inputChanges$ = new Subject_1.Subject();\n\t\t\t        this.initialized$ = new core_1.EventEmitter();\n\t\t\t        this.elementRef.nativeElement.style.display = 'none';\n\t\t\t        OUTPUTS.forEach(function (output) { return _this[output] = new core_1.EventEmitter(); });\n\t\t\t    }\n\t\t\t    // Initialize this map object when map is ready\n\t\t\t    InfoWindow.prototype.ngOnInit = function () {\n\t\t\t        var _this = this;\n\t\t\t        if (this.ng2MapComponent.mapIdledOnce) {\n\t\t\t            this.initialize();\n\t\t\t        }\n\t\t\t        else {\n\t\t\t            this.ng2MapComponent.mapReady$.subscribe(function (map) { return _this.initialize(); });\n\t\t\t        }\n\t\t\t    };\n\t\t\t    InfoWindow.prototype.ngOnChanges = function (changes) {\n\t\t\t        this.inputChanges$.next(changes);\n\t\t\t    };\n\t\t\t    // called when map is ready\n\t\t\t    InfoWindow.prototype.initialize = function () {\n\t\t\t        var _this = this;\n\t\t\t        this.template = this.elementRef.nativeElement.innerHTML;\n\t\t\t        this.objectOptions = this.ng2MapComponent.optionBuilder.googlizeAllInputs(INPUTS, this);\n\t\t\t        this.infoWindow = new google.maps.InfoWindow(this.objectOptions);\n\t\t\t        this.infoWindow['mapObjectName'] = 'InfoWindow';\n\t\t\t        // register infoWindow ids to Ng2Map, so that it can be opened by id\n\t\t\t        this.el = this.elementRef.nativeElement;\n\t\t\t        if (this.el.id) {\n\t\t\t            this.ng2MapComponent.infoWindows[this.el.id] = this;\n\t\t\t        }\n\t\t\t        else {\n\t\t\t            console.error('An InfoWindow must have an id. e.g. id=\"detail\"');\n\t\t\t        }\n\t\t\t        // set google events listeners and emits to this outputs listeners\n\t\t\t        this.ng2Map.setObjectEvents(OUTPUTS, this, 'infoWindow');\n\t\t\t        // update object when input changes\n\t\t\t        this.inputChanges$\n\t\t\t            .debounceTime(1000)\n\t\t\t            .subscribe(function (changes) { return _this.ng2Map.updateGoogleObject(_this.infoWindow, changes); });\n\t\t\t        this.ng2MapComponent.addToMapObjectGroup('InfoWindow', this.infoWindow);\n\t\t\t        this.initialized$.emit(this.infoWindow);\n\t\t\t    };\n\t\t\t    InfoWindow.prototype.open = function (anchor, data) {\n\t\t\t        var html = this.template;\n\t\t\t        for (var key in data) {\n\t\t\t            this[key] = data[key];\n\t\t\t            html = html.replace(\"[[\" + key + \"]]\", data[key]);\n\t\t\t        }\n\t\t\t        // set content and open it\n\t\t\t        this.infoWindow.setContent(html);\n\t\t\t        this.infoWindow.open(this.ng2MapComponent.map, anchor);\n\t\t\t    };\n\t\t\t    InfoWindow.prototype.ngOnDestroy = function () {\n\t\t\t        var _this = this;\n\t\t\t        if (this.infoWindow) {\n\t\t\t            OUTPUTS.forEach(function (output) { return google.maps.event.clearListeners(_this.infoWindow, output); });\n\t\t\t            delete this.infoWindow;\n\t\t\t        }\n\t\t\t    };\n\t\t\t    InfoWindow = __decorate([\n\t\t\t        core_1.Component({\n\t\t\t            selector: 'ng2-map > info-window',\n\t\t\t            inputs: INPUTS,\n\t\t\t            outputs: OUTPUTS,\n\t\t\t            template: \"<ng-content></ng-content>\",\n\t\t\t        }), \n\t\t\t        __metadata('design:paramtypes', [ng2_map_component_1.Ng2MapComponent, core_1.ElementRef, ng2_map_1.Ng2Map])\n\t\t\t    ], InfoWindow);\n\t\t\t    return InfoWindow;\n\t\t\t}());\n\t\t\texports.InfoWindow = InfoWindow;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 14 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar __extends = (this && this.__extends) || function (d, b) {\n\t\t\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t\t\t    function __() { this.constructor = d; }\n\t\t\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t\t\t};\n\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t};\n\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t};\n\t\t\tvar core_1 = __webpack_require__(2);\n\t\t\tvar base_map_directive_1 = __webpack_require__(3);\n\t\t\tvar ng2_map_component_1 = __webpack_require__(4);\n\t\t\tvar INPUTS = [\n\t\t\t    'center', 'clickable', 'draggable', 'editable', 'fillColor', 'fillOpacity', 'map', 'radius',\n\t\t\t    'strokeColor', 'strokeOpacity', 'strokePosition', 'strokeWeight', 'visible', 'zIndex', 'options',\n\t\t\t    //ng2-map specific inputs\n\t\t\t    'geoFallbackCenter'\n\t\t\t];\n\t\t\tvar OUTPUTS = [\n\t\t\t    'centerChanged', 'click', 'dblclick', 'drag', 'dragend', 'dragstart',\n\t\t\t    'mousedown', 'mousemove', 'mouseout', 'mouseover', 'mouseup', 'radiusChanged', 'rightclick',\n\t\t\t];\n\t\t\tvar Circle = (function (_super) {\n\t\t\t    __extends(Circle, _super);\n\t\t\t    function Circle(ng2MapComp) {\n\t\t\t        _super.call(this, ng2MapComp, 'Circle', INPUTS, OUTPUTS);\n\t\t\t        this.ng2MapComp = ng2MapComp;\n\t\t\t        this.objectOptions = {};\n\t\t\t    }\n\t\t\t    Circle.prototype.initialize = function () {\n\t\t\t        _super.prototype.initialize.call(this);\n\t\t\t        this.setCenter();\n\t\t\t    };\n\t\t\t    Circle.prototype.setCenter = function () {\n\t\t\t        var _this = this;\n\t\t\t        if (!this['center']) {\n\t\t\t            this._subscriptions.push(this.ng2MapComp.geolocation.getCurrentPosition().subscribe(function (center) {\n\t\t\t                var latLng = new google.maps.LatLng(center.coords.latitude, center.coords.longitude);\n\t\t\t                _this.mapObject.setCenter(latLng);\n\t\t\t            }, function (error) {\n\t\t\t                console.error(error);\n\t\t\t                _this.mapObject.setCenter(_this.objectOptions['geoFallbackCenter'] || new google.maps.LatLng(0, 0));\n\t\t\t            }));\n\t\t\t        }\n\t\t\t        else if (typeof this['center'] === 'string') {\n\t\t\t            this._subscriptions.push(this.ng2MapComp.geoCoder.geocode({ address: this['center'] }).subscribe(function (results) {\n\t\t\t                _this.mapObject.setCenter(results[0].geometry.location);\n\t\t\t            }, function (error) {\n\t\t\t                console.error(error);\n\t\t\t                _this.mapObject.setCenter(_this.objectOptions['geoFallbackCenter'] || new google.maps.LatLng(0, 0));\n\t\t\t            }));\n\t\t\t        }\n\t\t\t    };\n\t\t\t    Circle = __decorate([\n\t\t\t        core_1.Directive({\n\t\t\t            selector: 'ng2-map>circle, ng2-map>map-circle',\n\t\t\t            inputs: INPUTS,\n\t\t\t            outputs: OUTPUTS,\n\t\t\t        }), \n\t\t\t        __metadata('design:paramtypes', [ng2_map_component_1.Ng2MapComponent])\n\t\t\t    ], Circle);\n\t\t\t    return Circle;\n\t\t\t}(base_map_directive_1.BaseMapDirective));\n\t\t\texports.Circle = Circle;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 15 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar __extends = (this && this.__extends) || function (d, b) {\n\t\t\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t\t\t    function __() { this.constructor = d; }\n\t\t\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t\t\t};\n\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t};\n\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t};\n\t\t\tvar core_1 = __webpack_require__(2);\n\t\t\tvar base_map_directive_1 = __webpack_require__(3);\n\t\t\tvar ng2_map_component_1 = __webpack_require__(4);\n\t\t\tvar INPUTS = ['controlPosition', 'controls', 'drawingMode', 'featureFactory', 'style', 'geoJson'];\n\t\t\tvar OUTPUTS = [\n\t\t\t    'addfeature', 'click', 'dblclick', 'mousedown', 'mouseout', 'mouseover',\n\t\t\t    'mouseup', 'removefeature', 'removeproperty', 'rightclick', 'setgeometry', 'setproperty'\n\t\t\t];\n\t\t\tvar DataLayer = (function (_super) {\n\t\t\t    __extends(DataLayer, _super);\n\t\t\t    function DataLayer(ng2MapComponent) {\n\t\t\t        _super.call(this, ng2MapComponent, 'Data', INPUTS, OUTPUTS);\n\t\t\t    }\n\t\t\t    // only called when map is ready\n\t\t\t    DataLayer.prototype.initialize = function () {\n\t\t\t        if (this['geoJson']) {\n\t\t\t            this.ng2MapComponent.map.data.loadGeoJson(this['geoJson']);\n\t\t\t        }\n\t\t\t        else {\n\t\t\t            this.objectOptions = this.optionBuilder.googlizeAllInputs(this.inputs, this);\n\t\t\t            this.ng2MapComponent.map.data.add(this.objectOptions);\n\t\t\t        }\n\t\t\t        // unlike others, data belongs to map. e.g., map.data.loadGeoJson(), map.data.add()\n\t\t\t        this.mapObject = this.ng2MapComponent.map.data;\n\t\t\t        // set google events listeners and emits to this outputs listeners\n\t\t\t        this.ng2Map.setObjectEvents(this.outputs, this, 'mapObject');\n\t\t\t        this.ng2MapComponent.addToMapObjectGroup(this.mapObjectName, this.mapObject);\n\t\t\t        this.initialized$.emit(this.mapObject);\n\t\t\t    };\n\t\t\t    DataLayer = __decorate([\n\t\t\t        core_1.Directive({\n\t\t\t            selector: 'ng2-map > data-layer',\n\t\t\t            inputs: INPUTS,\n\t\t\t            outputs: OUTPUTS,\n\t\t\t        }), \n\t\t\t        __metadata('design:paramtypes', [ng2_map_component_1.Ng2MapComponent])\n\t\t\t    ], DataLayer);\n\t\t\t    return DataLayer;\n\t\t\t}(base_map_directive_1.BaseMapDirective));\n\t\t\texports.DataLayer = DataLayer;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 16 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar __extends = (this && this.__extends) || function (d, b) {\n\t\t\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t\t\t    function __() { this.constructor = d; }\n\t\t\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t\t\t};\n\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t};\n\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t};\n\t\t\tvar core_1 = __webpack_require__(2);\n\t\t\tvar base_map_directive_1 = __webpack_require__(3);\n\t\t\tvar ng2_map_component_1 = __webpack_require__(4);\n\t\t\tvar navigator_geolocation_1 = __webpack_require__(9);\n\t\t\tvar INPUTS = [\n\t\t\t    'directions', 'draggable', 'hideRouteList', 'infoWindow', 'panel', 'markerOptions',\n\t\t\t    'polylineOptions', 'preserveViewport', 'routeIndex', 'suppressBicyclingLayer',\n\t\t\t    'suppressInfoWindows', 'suppressMarkers', 'suppressPolylines'\n\t\t\t];\n\t\t\tvar OUTPUTS = ['directions_changed'];\n\t\t\tvar DirectionsRenderer = (function (_super) {\n\t\t\t    __extends(DirectionsRenderer, _super);\n\t\t\t    function DirectionsRenderer(ng2MapComponent, geolocation) {\n\t\t\t        _super.call(this, ng2MapComponent, 'DirectionsRenderer', INPUTS, OUTPUTS);\n\t\t\t        this.geolocation = geolocation;\n\t\t\t    }\n\t\t\t    // only called when map is ready\n\t\t\t    DirectionsRenderer.prototype.initialize = function () {\n\t\t\t        this.objectOptions = this.optionBuilder.googlizeAllInputs(this.inputs, this);\n\t\t\t        if (typeof this.objectOptions['panel'] === 'string') {\n\t\t\t            this.objectOptions['panel'] = document.querySelector(this.objectOptions['panel']);\n\t\t\t        }\n\t\t\t        this.directionsService = new google.maps.DirectionsService();\n\t\t\t        this.directionsRenderer = new google.maps.DirectionsRenderer(this.objectOptions);\n\t\t\t        this.directionsRenderer.setMap(this.ng2MapComponent.map);\n\t\t\t        // set google events listeners and emidirectionsRenderer to this outputs listeners\n\t\t\t        this.showDirections(this.directionsRequest);\n\t\t\t        this.ng2Map.setObjectEvents(this.outputs, this, 'directionsRenderer');\n\t\t\t        this.ng2MapComponent.addToMapObjectGroup(this.mapObjectName, this.mapObject);\n\t\t\t        this.initialized$.emit(this.directionsRenderer);\n\t\t\t    };\n\t\t\t    DirectionsRenderer.prototype.ngOnChanges = function (changes) {\n\t\t\t        var newOptions = {};\n\t\t\t        for (var key in changes) {\n\t\t\t            if (this.inputs.indexOf(key) !== -1) {\n\t\t\t                newOptions[key] = this.optionBuilder.googlize(changes[key].currentValue);\n\t\t\t            }\n\t\t\t        }\n\t\t\t        if (changes['directionsRequest'] && this.directionsRenderer) {\n\t\t\t            this.directionsService && this.showDirections(this.directionsRequest);\n\t\t\t        }\n\t\t\t    };\n\t\t\t    DirectionsRenderer.prototype.showDirections = function (directionsRequest) {\n\t\t\t        var _this = this;\n\t\t\t        this.directionsService.route(directionsRequest, function (response, status) {\n\t\t\t            if (status == google.maps.DirectionsStatus.OK) {\n\t\t\t                _this.directionsRenderer.setDirections(response);\n\t\t\t            }\n\t\t\t            else {\n\t\t\t                console.error('Directions request failed due to ' + status);\n\t\t\t            }\n\t\t\t        });\n\t\t\t    };\n\t\t\t    __decorate([\n\t\t\t        core_1.Input('directions-request'), \n\t\t\t        __metadata('design:type', Object)\n\t\t\t    ], DirectionsRenderer.prototype, \"directionsRequest\", void 0);\n\t\t\t    DirectionsRenderer = __decorate([\n\t\t\t        core_1.Directive({\n\t\t\t            selector: 'ng2-map > directions-renderer',\n\t\t\t            inputs: INPUTS,\n\t\t\t            outputs: OUTPUTS,\n\t\t\t        }), \n\t\t\t        __metadata('design:paramtypes', [ng2_map_component_1.Ng2MapComponent, navigator_geolocation_1.NavigatorGeolocation])\n\t\t\t    ], DirectionsRenderer);\n\t\t\t    return DirectionsRenderer;\n\t\t\t}(base_map_directive_1.BaseMapDirective));\n\t\t\texports.DirectionsRenderer = DirectionsRenderer;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 17 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar __extends = (this && this.__extends) || function (d, b) {\n\t\t\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t\t\t    function __() { this.constructor = d; }\n\t\t\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t\t\t};\n\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t};\n\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t};\n\t\t\tvar core_1 = __webpack_require__(2);\n\t\t\tvar base_map_directive_1 = __webpack_require__(3);\n\t\t\tvar ng2_map_component_1 = __webpack_require__(4);\n\t\t\tvar INPUTS = [\n\t\t\t    'options',\n\t\t\t    'circleOptions', 'drawingControl', 'drawingControlOptions', 'drawingMode',\n\t\t\t    'map', 'markerOptions', 'polygonOptions', 'polylineOptions', 'rectangleOptions'\n\t\t\t];\n\t\t\tvar OUTPUTS = [\n\t\t\t    'circlecomplete', 'markercomplete', 'overlaycomplete',\n\t\t\t    'polygoncomplete', 'polylinecomplete', 'rectanglecomplete'\n\t\t\t];\n\t\t\tvar DrawingManager = (function (_super) {\n\t\t\t    __extends(DrawingManager, _super);\n\t\t\t    function DrawingManager(ng2MapComp) {\n\t\t\t        _super.call(this, ng2MapComp, 'DrawingManager', INPUTS, OUTPUTS);\n\t\t\t        this.libraryName = 'drawing';\n\t\t\t    }\n\t\t\t    DrawingManager = __decorate([\n\t\t\t        core_1.Directive({\n\t\t\t            selector: 'ng2-map > drawing-manager',\n\t\t\t            inputs: INPUTS,\n\t\t\t            outputs: OUTPUTS,\n\t\t\t        }), \n\t\t\t        __metadata('design:paramtypes', [ng2_map_component_1.Ng2MapComponent])\n\t\t\t    ], DrawingManager);\n\t\t\t    return DrawingManager;\n\t\t\t}(base_map_directive_1.BaseMapDirective));\n\t\t\texports.DrawingManager = DrawingManager;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 18 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar __extends = (this && this.__extends) || function (d, b) {\n\t\t\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t\t\t    function __() { this.constructor = d; }\n\t\t\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t\t\t};\n\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t};\n\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t};\n\t\t\tvar core_1 = __webpack_require__(2);\n\t\t\tvar base_map_directive_1 = __webpack_require__(3);\n\t\t\tvar ng2_map_component_1 = __webpack_require__(4);\n\t\t\tvar INPUTS = ['url', 'bounds', 'clickable', 'opacity'];\n\t\t\tvar OUTPUTS = ['click', 'dblclick'];\n\t\t\tvar GroundOverlay = (function (_super) {\n\t\t\t    __extends(GroundOverlay, _super);\n\t\t\t    function GroundOverlay(ng2MapComp) {\n\t\t\t        _super.call(this, ng2MapComp, 'GroundOverlay', INPUTS, OUTPUTS);\n\t\t\t        this.objectOptions = {};\n\t\t\t    }\n\t\t\t    // re-declaring initialize function. called when map is ready\n\t\t\t    GroundOverlay.prototype.initialize = function () {\n\t\t\t        // url, bounds are not the options of GroundOverlay\n\t\t\t        this.objectOptions = this.optionBuilder.googlizeAllInputs(['clickable', 'opacity'], this);\n\t\t\t        // noinspection TypeScriptUnresolvedFunction\n\t\t\t        this.mapObject = new google.maps.GroundOverlay(this['url'], this['bounds'], this.objectOptions);\n\t\t\t        this.mapObject.setMap(this.ng2MapComponent.map);\n\t\t\t        this.mapObject['mapObjectName'] = this.mapObjectName;\n\t\t\t        // set google events listeners and emits to this outputs listeners\n\t\t\t        this.ng2Map.setObjectEvents(this.outputs, this, 'mapObject');\n\t\t\t        this.ng2MapComponent.addToMapObjectGroup(this.mapObjectName, this.mapObject);\n\t\t\t        this.initialized$.emit(this.mapObject);\n\t\t\t    };\n\t\t\t    GroundOverlay = __decorate([\n\t\t\t        core_1.Directive({\n\t\t\t            selector: 'ng2-map > ground-overlay',\n\t\t\t            inputs: INPUTS,\n\t\t\t            outputs: OUTPUTS,\n\t\t\t        }), \n\t\t\t        __metadata('design:paramtypes', [ng2_map_component_1.Ng2MapComponent])\n\t\t\t    ], GroundOverlay);\n\t\t\t    return GroundOverlay;\n\t\t\t}(base_map_directive_1.BaseMapDirective));\n\t\t\texports.GroundOverlay = GroundOverlay;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 19 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar __extends = (this && this.__extends) || function (d, b) {\n\t\t\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t\t\t    function __() { this.constructor = d; }\n\t\t\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t\t\t};\n\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t};\n\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t};\n\t\t\tvar core_1 = __webpack_require__(2);\n\t\t\tvar base_map_directive_1 = __webpack_require__(3);\n\t\t\tvar ng2_map_component_1 = __webpack_require__(4);\n\t\t\tvar INPUTS = ['data', 'dissipating', 'gradient', 'maxIntensity', 'opacity', 'radius', 'options'];\n\t\t\tvar OUTPUTS = [];\n\t\t\tvar HeatmapLayer = (function (_super) {\n\t\t\t    __extends(HeatmapLayer, _super);\n\t\t\t    function HeatmapLayer(ng2MapComp) {\n\t\t\t        _super.call(this, ng2MapComp, 'HeatmapLayer', INPUTS, OUTPUTS);\n\t\t\t        this.libraryName = 'visualization';\n\t\t\t    }\n\t\t\t    HeatmapLayer = __decorate([\n\t\t\t        core_1.Directive({\n\t\t\t            selector: 'ng2-map > heatmap-layer',\n\t\t\t            inputs: INPUTS,\n\t\t\t            outputs: OUTPUTS,\n\t\t\t        }), \n\t\t\t        __metadata('design:paramtypes', [ng2_map_component_1.Ng2MapComponent])\n\t\t\t    ], HeatmapLayer);\n\t\t\t    return HeatmapLayer;\n\t\t\t}(base_map_directive_1.BaseMapDirective));\n\t\t\texports.HeatmapLayer = HeatmapLayer;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 20 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar __extends = (this && this.__extends) || function (d, b) {\n\t\t\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t\t\t    function __() { this.constructor = d; }\n\t\t\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t\t\t};\n\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t};\n\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t};\n\t\t\tvar core_1 = __webpack_require__(2);\n\t\t\tvar base_map_directive_1 = __webpack_require__(3);\n\t\t\tvar ng2_map_component_1 = __webpack_require__(4);\n\t\t\tvar INPUTS = ['clickable', 'preserveViewport', 'screenOverlays', 'suppressInfoWindows', 'url', 'zIndex', 'options'];\n\t\t\tvar OUTPUTS = ['click', 'defaultviewport_changed', 'status_changed'];\n\t\t\tvar KmlLayer = (function (_super) {\n\t\t\t    __extends(KmlLayer, _super);\n\t\t\t    function KmlLayer(ng2MapComp) {\n\t\t\t        _super.call(this, ng2MapComp, 'KmlLayer', INPUTS, OUTPUTS);\n\t\t\t    }\n\t\t\t    KmlLayer = __decorate([\n\t\t\t        core_1.Directive({\n\t\t\t            selector: 'ng2-map > kml-layer',\n\t\t\t            inputs: INPUTS,\n\t\t\t            outputs: OUTPUTS,\n\t\t\t        }), \n\t\t\t        __metadata('design:paramtypes', [ng2_map_component_1.Ng2MapComponent])\n\t\t\t    ], KmlLayer);\n\t\t\t    return KmlLayer;\n\t\t\t}(base_map_directive_1.BaseMapDirective));\n\t\t\texports.KmlLayer = KmlLayer;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 21 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar __extends = (this && this.__extends) || function (d, b) {\n\t\t\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t\t\t    function __() { this.constructor = d; }\n\t\t\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t\t\t};\n\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t};\n\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t};\n\t\t\tvar core_1 = __webpack_require__(2);\n\t\t\tvar base_map_directive_1 = __webpack_require__(3);\n\t\t\tvar ng2_map_component_1 = __webpack_require__(4);\n\t\t\tvar INPUTS = [\n\t\t\t    'anchorPoint', 'animation', 'clickable', 'cursor', 'draggable', 'icon', 'label', 'opacity',\n\t\t\t    'optimized', 'place', 'position', 'shape', 'title', 'visible', 'zIndex', 'options',\n\t\t\t    //ng2-map specific inputs\n\t\t\t    'geoFallbackPosition'\n\t\t\t];\n\t\t\tvar OUTPUTS = [\n\t\t\t    'animationChanged', 'click', 'clickableChanged', 'cursorChanged', 'dblclick', 'drag', 'dragend', 'draggableChanged',\n\t\t\t    'dragstart', 'flatChanged', 'iconChanged', 'mousedown', 'mouseout', 'mouseover', 'mouseup', 'positionChanged', 'rightclick',\n\t\t\t    'shapeChanged', 'titleChanged', 'visibleChanged', 'zindexChanged'\n\t\t\t];\n\t\t\tvar Marker = (function (_super) {\n\t\t\t    __extends(Marker, _super);\n\t\t\t    function Marker(ng2MapComp) {\n\t\t\t        _super.call(this, ng2MapComp, 'Marker', INPUTS, OUTPUTS);\n\t\t\t        this.ng2MapComp = ng2MapComp;\n\t\t\t        this.objectOptions = {};\n\t\t\t    }\n\t\t\t    Marker.prototype.initialize = function () {\n\t\t\t        _super.prototype.initialize.call(this);\n\t\t\t        this.setPosition();\n\t\t\t    };\n\t\t\t    Marker.prototype.setPosition = function () {\n\t\t\t        var _this = this;\n\t\t\t        if (!this['position']) {\n\t\t\t            this._subscriptions.push(this.ng2MapComp.geolocation.getCurrentPosition().subscribe(function (position) {\n\t\t\t                var latLng = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);\n\t\t\t                _this.mapObject.setPosition(latLng);\n\t\t\t            }, function (error) {\n\t\t\t                console.error(error);\n\t\t\t                _this.mapObject.setPosition(_this.objectOptions['geoFallbackPosition'] || new google.maps.LatLng(0, 0));\n\t\t\t            }));\n\t\t\t        }\n\t\t\t        else if (typeof this['position'] === 'string') {\n\t\t\t            this._subscriptions.push(this.ng2MapComp.geoCoder.geocode({ address: this['position'] }).subscribe(function (results) {\n\t\t\t                _this.mapObject.setPosition(results[0].geometry.location);\n\t\t\t            }, function (error) {\n\t\t\t                console.error(error);\n\t\t\t                _this.mapObject.setPosition(_this.objectOptions['geoFallbackPosition'] || new google.maps.LatLng(0, 0));\n\t\t\t            }));\n\t\t\t        }\n\t\t\t    };\n\t\t\t    Marker = __decorate([\n\t\t\t        core_1.Directive({\n\t\t\t            selector: 'ng2-map > marker',\n\t\t\t            inputs: INPUTS,\n\t\t\t            outputs: OUTPUTS,\n\t\t\t        }), \n\t\t\t        __metadata('design:paramtypes', [ng2_map_component_1.Ng2MapComponent])\n\t\t\t    ], Marker);\n\t\t\t    return Marker;\n\t\t\t}(base_map_directive_1.BaseMapDirective));\n\t\t\texports.Marker = Marker;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 22 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t};\n\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t};\n\t\t\tvar core_1 = __webpack_require__(2);\n\t\t\tvar option_builder_1 = __webpack_require__(5);\n\t\t\tvar ng2_map_component_1 = __webpack_require__(4);\n\t\t\tvar PlacesAutoComplete = (function () {\n\t\t\t    function PlacesAutoComplete(optionBuilder, elementRef) {\n\t\t\t        var _this = this;\n\t\t\t        this.optionBuilder = optionBuilder;\n\t\t\t        this.elementRef = elementRef;\n\t\t\t        this.place_changed = new core_1.EventEmitter();\n\t\t\t        this.initialized$ = new core_1.EventEmitter();\n\t\t\t        // only called when map is ready\n\t\t\t        this.initialize = function () {\n\t\t\t            _this.objectOptions =\n\t\t\t                _this.optionBuilder.googlizeAllInputs(['bounds', 'componentRestrictions', 'types'], _this);\n\t\t\t            _this.autocomplete = new google.maps.places.Autocomplete(_this.elementRef.nativeElement, _this.objectOptions);\n\t\t\t            _this.autocomplete.addListener('place_changed', function (place) { return _this.place_changed.emit(); });\n\t\t\t            _this.initialized$.emit(_this.autocomplete);\n\t\t\t        };\n\t\t\t        if (typeof google === 'undefined' || typeof google.maps === 'undefined' || !google.maps.Map) {\n\t\t\t            this.addGoogleMapsApi();\n\t\t\t        }\n\t\t\t        else {\n\t\t\t            this.initialize();\n\t\t\t        }\n\t\t\t    }\n\t\t\t    PlacesAutoComplete.prototype.addGoogleMapsApi = function () {\n\t\t\t        window['initializePlacesAutoComplete'] = this.initialize;\n\t\t\t        if ((!window['google'] || !window['google']['maps']) && !document.querySelector('#ng2-map-api')) {\n\t\t\t            var script = document.createElement('script');\n\t\t\t            script.id = 'ng2-map-api';\n\t\t\t            // script.src = \"https://maps.google.com/maps/api/js?callback=initNg2Map\";\n\t\t\t            var apiUrl = ng2_map_component_1.Ng2MapComponent['apiUrl'] || 'https://maps.google.com/maps/api/js';\n\t\t\t            apiUrl += apiUrl.indexOf('?') ? '&' : '?';\n\t\t\t            script.src = apiUrl + 'callback=initializePlacesAutoComplete';\n\t\t\t            document.querySelector('body').appendChild(script);\n\t\t\t        }\n\t\t\t    };\n\t\t\t    __decorate([\n\t\t\t        core_1.Input('bounds'), \n\t\t\t        __metadata('design:type', Object)\n\t\t\t    ], PlacesAutoComplete.prototype, \"bounds\", void 0);\n\t\t\t    __decorate([\n\t\t\t        core_1.Input('componentRestrictions'), \n\t\t\t        __metadata('design:type', Object)\n\t\t\t    ], PlacesAutoComplete.prototype, \"componentRestrictions\", void 0);\n\t\t\t    __decorate([\n\t\t\t        core_1.Input('types'), \n\t\t\t        __metadata('design:type', Array)\n\t\t\t    ], PlacesAutoComplete.prototype, \"types\", void 0);\n\t\t\t    __decorate([\n\t\t\t        core_1.Output('place_changed'), \n\t\t\t        __metadata('design:type', core_1.EventEmitter)\n\t\t\t    ], PlacesAutoComplete.prototype, \"place_changed\", void 0);\n\t\t\t    __decorate([\n\t\t\t        core_1.Output('initialized$'), \n\t\t\t        __metadata('design:type', core_1.EventEmitter)\n\t\t\t    ], PlacesAutoComplete.prototype, \"initialized$\", void 0);\n\t\t\t    PlacesAutoComplete = __decorate([\n\t\t\t        core_1.Directive({\n\t\t\t            selector: '[places-auto-complete]'\n\t\t\t        }), \n\t\t\t        __metadata('design:paramtypes', [option_builder_1.OptionBuilder, core_1.ElementRef])\n\t\t\t    ], PlacesAutoComplete);\n\t\t\t    return PlacesAutoComplete;\n\t\t\t}());\n\t\t\texports.PlacesAutoComplete = PlacesAutoComplete;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 23 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar __extends = (this && this.__extends) || function (d, b) {\n\t\t\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t\t\t    function __() { this.constructor = d; }\n\t\t\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t\t\t};\n\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t};\n\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t};\n\t\t\tvar core_1 = __webpack_require__(2);\n\t\t\tvar base_map_directive_1 = __webpack_require__(3);\n\t\t\tvar ng2_map_component_1 = __webpack_require__(4);\n\t\t\tvar INPUTS = [\n\t\t\t    'clickable', 'draggable', 'editable', 'fillColor', 'fillOpacity', 'geodesic', 'paths',\n\t\t\t    'strokeColor', 'strokeOpacity', 'strokePosition', 'strokeWeight', 'visible', 'zIndex', 'options',\n\t\t\t];\n\t\t\tvar OUTPUTS = [\n\t\t\t    'click', 'dblclick', 'drag', 'dragend', 'dragstart', 'mousedown',\n\t\t\t    'mousemove', 'mouseout', 'mouseover', 'mouseup', 'rightclick',\n\t\t\t];\n\t\t\tvar Polygon = (function (_super) {\n\t\t\t    __extends(Polygon, _super);\n\t\t\t    function Polygon(ng2MapComp) {\n\t\t\t        _super.call(this, ng2MapComp, 'Polygon', INPUTS, OUTPUTS);\n\t\t\t    }\n\t\t\t    Polygon = __decorate([\n\t\t\t        core_1.Directive({\n\t\t\t            selector: 'ng2-map>polygon, ng2-map>map-polygon',\n\t\t\t            inputs: INPUTS,\n\t\t\t            outputs: OUTPUTS,\n\t\t\t        }), \n\t\t\t        __metadata('design:paramtypes', [ng2_map_component_1.Ng2MapComponent])\n\t\t\t    ], Polygon);\n\t\t\t    return Polygon;\n\t\t\t}(base_map_directive_1.BaseMapDirective));\n\t\t\texports.Polygon = Polygon;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 24 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar __extends = (this && this.__extends) || function (d, b) {\n\t\t\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t\t\t    function __() { this.constructor = d; }\n\t\t\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t\t\t};\n\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t};\n\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t};\n\t\t\tvar core_1 = __webpack_require__(2);\n\t\t\tvar base_map_directive_1 = __webpack_require__(3);\n\t\t\tvar ng2_map_component_1 = __webpack_require__(4);\n\t\t\tvar INPUTS = [\n\t\t\t    'clickable', 'draggable', 'editable', 'geodesic', 'icons', 'path', 'strokeColor',\n\t\t\t    'strokeOpacity', 'strokeWeight', 'visible', 'zIndex', 'options'\n\t\t\t];\n\t\t\tvar OUTPUTS = [\n\t\t\t    'click', 'dblclick', 'drag', 'dragend', 'dragstart', 'mousedown',\n\t\t\t    'mousemove', 'mouseout', 'mouseover', 'mouseup', 'rightclick'\n\t\t\t];\n\t\t\tvar Polyline = (function (_super) {\n\t\t\t    __extends(Polyline, _super);\n\t\t\t    function Polyline(ng2MapComp) {\n\t\t\t        _super.call(this, ng2MapComp, 'Polyline', INPUTS, OUTPUTS);\n\t\t\t    }\n\t\t\t    Polyline = __decorate([\n\t\t\t        core_1.Directive({\n\t\t\t            selector: 'ng2-map > polyline',\n\t\t\t            inputs: INPUTS,\n\t\t\t            outputs: OUTPUTS,\n\t\t\t        }), \n\t\t\t        __metadata('design:paramtypes', [ng2_map_component_1.Ng2MapComponent])\n\t\t\t    ], Polyline);\n\t\t\t    return Polyline;\n\t\t\t}(base_map_directive_1.BaseMapDirective));\n\t\t\texports.Polyline = Polyline;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 25 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar __extends = (this && this.__extends) || function (d, b) {\n\t\t\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t\t\t    function __() { this.constructor = d; }\n\t\t\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t\t\t};\n\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t};\n\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t};\n\t\t\tvar core_1 = __webpack_require__(2);\n\t\t\tvar base_map_directive_1 = __webpack_require__(3);\n\t\t\tvar ng2_map_component_1 = __webpack_require__(4);\n\t\t\tvar INPUTS = [\n\t\t\t    'selector', 'options',\n\t\t\t    'addressControl', 'addressControlOptions', 'clickToGo', 'disableDefaultUI', 'disableDoubleClickZoom',\n\t\t\t    'enableCloseButton', 'fullscreenControl', 'fullscreenControlOptions', 'imageDateControl', 'linksControl',\n\t\t\t    'motionTracking', 'motionTrackingControl', 'panControl', 'panControlOptions', 'pano',\n\t\t\t    'position', 'pov', 'scrollwheel', 'showRoadLabels', 'visible', 'zoomControl', 'zoomControlOptions'\n\t\t\t];\n\t\t\tvar OUTPUTS = [\n\t\t\t    'closeclick', 'pano_changed', 'position_changed', 'pov_changed', 'resize', 'status_changed',\n\t\t\t    'visible_changed', 'zoom_changed'\n\t\t\t];\n\t\t\tvar StreetViewPanorama = (function (_super) {\n\t\t\t    __extends(StreetViewPanorama, _super);\n\t\t\t    function StreetViewPanorama(ng2MapComp) {\n\t\t\t        _super.call(this, ng2MapComp, 'StreetViewPanorama', INPUTS, OUTPUTS);\n\t\t\t    }\n\t\t\t    // only called when map is ready\n\t\t\t    StreetViewPanorama.prototype.initialize = function () {\n\t\t\t        this.objectOptions = this.optionBuilder.googlizeAllInputs(this.inputs, this);\n\t\t\t        var element;\n\t\t\t        if (this.objectOptions.selector) {\n\t\t\t            //noinspection TypeScriptValidateTypes\n\t\t\t            element = document.querySelector(this['selector']);\n\t\t\t            delete this.objectOptions.selector;\n\t\t\t        }\n\t\t\t        else {\n\t\t\t            element = this.ng2MapComponent.el;\n\t\t\t        }\n\t\t\t        // will be set after geocoded\n\t\t\t        typeof this.objectOptions.position === 'string' && (delete this.objectOptions.position);\n\t\t\t        this.mapObject = new google.maps[this.mapObjectName](element, this.objectOptions);\n\t\t\t        this.mapObject['mapObjectName'] = this.mapObjectName;\n\t\t\t        this.mapObject['ng2MapComponent'] = this.ng2MapComponent;\n\t\t\t        // set google events listeners and emits to this outputs listeners\n\t\t\t        this.ng2Map.setObjectEvents(this.outputs, this, 'mapObject');\n\t\t\t        this.ng2MapComponent.addToMapObjectGroup(this.mapObjectName, this.mapObject);\n\t\t\t        this.initialized$.emit(this.mapObject);\n\t\t\t    };\n\t\t\t    // When destroyed, remove event listener, and delete this object to prevent memory leak\n\t\t\t    StreetViewPanorama.prototype.ngOnDestroy = function () {\n\t\t\t        var _this = this;\n\t\t\t        if (this.ng2MapComponent.el) {\n\t\t\t            OUTPUTS.forEach(function (output) { return google.maps.event.clearListeners(_this.mapObject, output); });\n\t\t\t        }\n\t\t\t    };\n\t\t\t    StreetViewPanorama = __decorate([\n\t\t\t        core_1.Directive({\n\t\t\t            selector: 'ng2-map > street-view-panorama',\n\t\t\t            inputs: INPUTS,\n\t\t\t            outputs: OUTPUTS,\n\t\t\t        }), \n\t\t\t        __metadata('design:paramtypes', [ng2_map_component_1.Ng2MapComponent])\n\t\t\t    ], StreetViewPanorama);\n\t\t\t    return StreetViewPanorama;\n\t\t\t}(base_map_directive_1.BaseMapDirective));\n\t\t\texports.StreetViewPanorama = StreetViewPanorama;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 26 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar __extends = (this && this.__extends) || function (d, b) {\n\t\t\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t\t\t    function __() { this.constructor = d; }\n\t\t\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t\t\t};\n\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t};\n\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t};\n\t\t\tvar core_1 = __webpack_require__(2);\n\t\t\tvar base_map_directive_1 = __webpack_require__(3);\n\t\t\tvar ng2_map_component_1 = __webpack_require__(4);\n\t\t\tvar INPUTS = ['autoRefresh', 'options'];\n\t\t\tvar OUTPUTS = [];\n\t\t\tvar TrafficLayer = (function (_super) {\n\t\t\t    __extends(TrafficLayer, _super);\n\t\t\t    function TrafficLayer(ng2MapComp) {\n\t\t\t        _super.call(this, ng2MapComp, 'TrafficLayer', INPUTS, OUTPUTS);\n\t\t\t    }\n\t\t\t    TrafficLayer = __decorate([\n\t\t\t        core_1.Directive({\n\t\t\t            selector: 'ng2-map > traffic-layer',\n\t\t\t            inputs: INPUTS,\n\t\t\t            outputs: OUTPUTS,\n\t\t\t        }), \n\t\t\t        __metadata('design:paramtypes', [ng2_map_component_1.Ng2MapComponent])\n\t\t\t    ], TrafficLayer);\n\t\t\t    return TrafficLayer;\n\t\t\t}(base_map_directive_1.BaseMapDirective));\n\t\t\texports.TrafficLayer = TrafficLayer;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 27 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar __extends = (this && this.__extends) || function (d, b) {\n\t\t\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t\t\t    function __() { this.constructor = d; }\n\t\t\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t\t\t};\n\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t};\n\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t};\n\t\t\tvar core_1 = __webpack_require__(2);\n\t\t\tvar base_map_directive_1 = __webpack_require__(3);\n\t\t\tvar ng2_map_component_1 = __webpack_require__(4);\n\t\t\tvar INPUTS = [];\n\t\t\tvar OUTPUTS = [];\n\t\t\tvar TransitLayer = (function (_super) {\n\t\t\t    __extends(TransitLayer, _super);\n\t\t\t    function TransitLayer(ng2MapComp) {\n\t\t\t        _super.call(this, ng2MapComp, 'TransitLayer', INPUTS, OUTPUTS);\n\t\t\t    }\n\t\t\t    TransitLayer = __decorate([\n\t\t\t        core_1.Directive({\n\t\t\t            selector: 'ng2-map > transit-layer',\n\t\t\t            inputs: INPUTS,\n\t\t\t            outputs: OUTPUTS,\n\t\t\t        }), \n\t\t\t        __metadata('design:paramtypes', [ng2_map_component_1.Ng2MapComponent])\n\t\t\t    ], TransitLayer);\n\t\t\t    return TransitLayer;\n\t\t\t}(base_map_directive_1.BaseMapDirective));\n\t\t\texports.TransitLayer = TransitLayer;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 28 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t};\n\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t};\n\t\t\tvar core_1 = __webpack_require__(2);\n\t\t\tvar common_1 = __webpack_require__(29);\n\t\t\tvar option_builder_1 = __webpack_require__(5);\n\t\t\tvar geo_coder_1 = __webpack_require__(7);\n\t\t\tvar navigator_geolocation_1 = __webpack_require__(9);\n\t\t\tvar config_1 = __webpack_require__(10);\n\t\t\tvar ng2_map_component_1 = __webpack_require__(4);\n\t\t\tvar info_window_1 = __webpack_require__(13);\n\t\t\tvar custom_marker_1 = __webpack_require__(30);\n\t\t\tvar bicycling_layer_1 = __webpack_require__(1);\n\t\t\tvar circle_1 = __webpack_require__(14);\n\t\t\tvar data_layer_1 = __webpack_require__(15);\n\t\t\tvar directions_renderer_1 = __webpack_require__(16);\n\t\t\tvar drawing_manager_1 = __webpack_require__(17);\n\t\t\tvar ground_overlay_1 = __webpack_require__(18);\n\t\t\tvar heatmap_layer_1 = __webpack_require__(19);\n\t\t\tvar kml_layer_1 = __webpack_require__(20);\n\t\t\tvar marker_1 = __webpack_require__(21);\n\t\t\tvar ng2_map_1 = __webpack_require__(11);\n\t\t\tvar places_auto_complete_1 = __webpack_require__(22);\n\t\t\tvar polygon_1 = __webpack_require__(23);\n\t\t\tvar polyline_1 = __webpack_require__(24);\n\t\t\tvar street_view_panorama_1 = __webpack_require__(25);\n\t\t\tvar traffic_layer_1 = __webpack_require__(26);\n\t\t\tvar transit_layer_1 = __webpack_require__(27);\n\t\t\tvar COMPONENTS_DIRECTIVES = [\n\t\t\t    ng2_map_component_1.Ng2MapComponent, info_window_1.InfoWindow,\n\t\t\t    marker_1.Marker, circle_1.Circle, custom_marker_1.CustomMarker, polygon_1.Polygon, info_window_1.InfoWindow, polyline_1.Polyline, ground_overlay_1.GroundOverlay,\n\t\t\t    transit_layer_1.TransitLayer, traffic_layer_1.TrafficLayer, heatmap_layer_1.HeatmapLayer, bicycling_layer_1.BicyclingLayer, kml_layer_1.KmlLayer, data_layer_1.DataLayer,\n\t\t\t    street_view_panorama_1.StreetViewPanorama, places_auto_complete_1.PlacesAutoComplete, directions_renderer_1.DirectionsRenderer,\n\t\t\t    drawing_manager_1.DrawingManager,\n\t\t\t];\n\t\t\tvar Ng2MapModule = (function () {\n\t\t\t    function Ng2MapModule() {\n\t\t\t    }\n\t\t\t    Ng2MapModule.forRoot = function (config) {\n\t\t\t        if (config === void 0) { config = {}; }\n\t\t\t        return {\n\t\t\t            ngModule: Ng2MapModule,\n\t\t\t            providers: [\n\t\t\t                { provide: config_1.NG_MAP_CONFIG_TOKEN, useValue: config },\n\t\t\t                geo_coder_1.GeoCoder,\n\t\t\t                navigator_geolocation_1.NavigatorGeolocation,\n\t\t\t                ng2_map_1.Ng2Map,\n\t\t\t                option_builder_1.OptionBuilder,\n\t\t\t            ],\n\t\t\t        };\n\t\t\t    };\n\t\t\t    Ng2MapModule = __decorate([\n\t\t\t        core_1.NgModule({\n\t\t\t            imports: [common_1.CommonModule],\n\t\t\t            declarations: COMPONENTS_DIRECTIVES,\n\t\t\t            exports: [COMPONENTS_DIRECTIVES],\n\t\t\t        }), \n\t\t\t        __metadata('design:paramtypes', [])\n\t\t\t    ], Ng2MapModule);\n\t\t\t    return Ng2MapModule;\n\t\t\t}());\n\t\t\texports.Ng2MapModule = Ng2MapModule;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 29 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_29__;\n\t\t\n\t\t/***/ },\n\t\t/* 30 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar __extends = (this && this.__extends) || function (d, b) {\n\t\t\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t\t\t    function __() { this.constructor = d; }\n\t\t\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t\t\t};\n\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t};\n\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t};\n\t\t\tvar core_1 = __webpack_require__(2);\n\t\t\tvar Subject_1 = __webpack_require__(8);\n\t\t\tvar ng2_map_1 = __webpack_require__(11);\n\t\t\tvar ng2_map_component_1 = __webpack_require__(4);\n\t\t\tvar INPUTS = [\n\t\t\t    'position'\n\t\t\t];\n\t\t\tvar OUTPUTS = [\n\t\t\t    'animationChanged', 'click', 'clickableChanged', 'cursorChanged', 'dblclick', 'drag', 'dragend', 'draggableChanged',\n\t\t\t    'dragstart', 'flatChanged', 'iconChanged', 'mousedown', 'mouseout', 'mouseover', 'mouseup', 'positionChanged', 'rightclick',\n\t\t\t    'shapeChanged', 'titleChanged', 'visibleChanged', 'zindexChanged',\n\t\t\t    //to avoid DOM event conflicts\n\t\t\t    'map_click', 'map_mouseover', 'map_mouseout', 'map_mouseup', 'map_mousedown', 'map_drag', 'map_dragend'\n\t\t\t];\n\t\t\t/**\n\t\t\t * Wrapper to a create extend OverlayView at runtime, only after google maps is loaded.\n\t\t\t * Otherwise throws a google is unknown error.\n\t\t\t */\n\t\t\tfunction getCustomMarkerOverlayView(htmlEl, position) {\n\t\t\t    var CustomMarkerOverlayView = (function (_super) {\n\t\t\t        __extends(CustomMarkerOverlayView, _super);\n\t\t\t        function CustomMarkerOverlayView(htmlEl, position) {\n\t\t\t            _super.call(this);\n\t\t\t            this.visible = true;\n\t\t\t            this.htmlEl = htmlEl;\n\t\t\t            this.position = position;\n\t\t\t        }\n\t\t\t        CustomMarkerOverlayView.prototype.onAdd = function () {\n\t\t\t            this.getPanes().overlayMouseTarget.appendChild(this.htmlEl);\n\t\t\t            // required for correct display inside google maps container\n\t\t\t            this.htmlEl.style.position = 'absolute';\n\t\t\t        };\n\t\t\t        CustomMarkerOverlayView.prototype.draw = function () {\n\t\t\t            this.setPosition(this.position);\n\t\t\t            this.setZIndex(this.zIndex);\n\t\t\t            this.setVisible(this.visible);\n\t\t\t        };\n\t\t\t        CustomMarkerOverlayView.prototype.onRemove = function () {\n\t\t\t            //\n\t\t\t        };\n\t\t\t        CustomMarkerOverlayView.prototype.setPosition = function (position) {\n\t\t\t            var _this = this;\n\t\t\t            var _setPosition = function (latLng) {\n\t\t\t                var posPixel = _this.getProjection().fromLatLngToDivPixel(latLng);\n\t\t\t                var x = Math.round(posPixel.x - (_this.htmlEl.offsetWidth / 2));\n\t\t\t                var y = Math.round(posPixel.y - (_this.htmlEl.offsetHeight / 2));\n\t\t\t                _this.htmlEl.style.left = x + 'px';\n\t\t\t                _this.htmlEl.style.top = y + 'px';\n\t\t\t                _this.htmlEl.style.visibility = 'visible';\n\t\t\t            };\n\t\t\t            if (typeof position === 'string') {\n\t\t\t                // geocode it\n\t\t\t                var geocoder = new google.maps.Geocoder();\n\t\t\t                geocoder.geocode({ address: position }, function (results, status) {\n\t\t\t                    if (status === google.maps.GeocoderStatus.OK) {\n\t\t\t                        _setPosition(results[0].geometry.location);\n\t\t\t                    }\n\t\t\t                    else {\n\t\t\t                    }\n\t\t\t                });\n\t\t\t            }\n\t\t\t            else {\n\t\t\t                // assume array format [lat, lng]\n\t\t\t                var latLng = new google.maps.LatLng(position[0], position[1]);\n\t\t\t                _setPosition(latLng);\n\t\t\t            }\n\t\t\t        };\n\t\t\t        CustomMarkerOverlayView.prototype.setZIndex = function (zIndex) {\n\t\t\t            zIndex && (this.zIndex = zIndex); /* jshint ignore:line */\n\t\t\t            this.htmlEl.style.zIndex = this.zIndex;\n\t\t\t        };\n\t\t\t        CustomMarkerOverlayView.prototype.setVisible = function (visible) {\n\t\t\t            this.htmlEl.style.display = visible ? 'inline-block' : 'none';\n\t\t\t            this.visible = visible;\n\t\t\t        };\n\t\t\t        ;\n\t\t\t        return CustomMarkerOverlayView;\n\t\t\t    }(google.maps.OverlayView));\n\t\t\t    return new CustomMarkerOverlayView(htmlEl, position);\n\t\t\t}\n\t\t\tvar CustomMarker = (function () {\n\t\t\t    function CustomMarker(ng2MapComponent, elementRef, ng2Map) {\n\t\t\t        var _this = this;\n\t\t\t        this.ng2MapComponent = ng2MapComponent;\n\t\t\t        this.elementRef = elementRef;\n\t\t\t        this.ng2Map = ng2Map;\n\t\t\t        this.inputChanges$ = new Subject_1.Subject();\n\t\t\t        this.initialized$ = new core_1.EventEmitter();\n\t\t\t        this.elementRef.nativeElement.style.display = 'none';\n\t\t\t        OUTPUTS.forEach(function (output) { return _this[output] = new core_1.EventEmitter(); });\n\t\t\t    }\n\t\t\t    // Initialize this map object when map is ready\n\t\t\t    CustomMarker.prototype.ngOnInit = function () {\n\t\t\t        var _this = this;\n\t\t\t        if (this.ng2MapComponent.mapIdledOnce) {\n\t\t\t            this.initialize();\n\t\t\t        }\n\t\t\t        else {\n\t\t\t            this.ng2MapComponent.mapReady$.subscribe(function (map) { return _this.initialize(); });\n\t\t\t        }\n\t\t\t    };\n\t\t\t    CustomMarker.prototype.ngOnChanges = function (changes) {\n\t\t\t        this.inputChanges$.next(changes);\n\t\t\t    };\n\t\t\t    CustomMarker.prototype.ngOnDestroy = function () {\n\t\t\t        var _this = this;\n\t\t\t        this.ng2MapComponent.removeFromMapObjectGroup('CustomMarker', this.mapObject);\n\t\t\t        if (this.mapObject) {\n\t\t\t            OUTPUTS.forEach(function (output) { return google.maps.event.clearListeners(_this.mapObject, output); });\n\t\t\t            this.mapObject.setMap(null);\n\t\t\t            delete this.mapObject;\n\t\t\t        }\n\t\t\t    };\n\t\t\t    CustomMarker.prototype.initialize = function () {\n\t\t\t        var _this = this;\n\t\t\t        this.el = this.elementRef.nativeElement;\n\t\t\t        this.mapObject = getCustomMarkerOverlayView(this.el, this['position']);\n\t\t\t        this.mapObject.setMap(this.ng2MapComponent.map);\n\t\t\t        // set google events listeners and emits to this outputs listeners\n\t\t\t        this.ng2Map.setObjectEvents(OUTPUTS, this, 'mapObject');\n\t\t\t        // update object when input changes\n\t\t\t        this.inputChanges$\n\t\t\t            .debounceTime(1000)\n\t\t\t            .subscribe(function (changes) { return _this.ng2Map.updateGoogleObject(_this.mapObject, changes); });\n\t\t\t        this.ng2MapComponent.addToMapObjectGroup('CustomMarker', this.mapObject);\n\t\t\t        this.initialized$.emit(this.mapObject);\n\t\t\t    };\n\t\t\t    CustomMarker = __decorate([\n\t\t\t        core_1.Component({\n\t\t\t            selector: 'ng2-map > custom-marker',\n\t\t\t            inputs: INPUTS,\n\t\t\t            outputs: OUTPUTS,\n\t\t\t            template: \"\\n    <ng-content></ng-content>\\n  \",\n\t\t\t        }), \n\t\t\t        __metadata('design:paramtypes', [ng2_map_component_1.Ng2MapComponent, core_1.ElementRef, ng2_map_1.Ng2Map])\n\t\t\t    ], CustomMarker);\n\t\t\t    return CustomMarker;\n\t\t\t}());\n\t\t\texports.CustomMarker = CustomMarker;\n\t\t\n\t\t\n\t\t/***/ }\n\t\t/******/ ])\n\t\t});\n\t\t;\n\t\t//# sourceMappingURL=ng2-map.umd.js.map\n\t\n\t/***/ },\n\t/* 11 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_11__;\n\t\n\t/***/ },\n\t/* 12 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_12__;\n\t\n\t/***/ },\n\t/* 13 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t(function webpackUniversalModuleDefinition(root, factory) {\n\t\t\tif(true)\n\t\t\t\tmodule.exports = factory(__webpack_require__(2), __webpack_require__(3), __webpack_require__(8));\n\t\t\telse if(typeof define === 'function' && define.amd)\n\t\t\t\tdefine([\"@angular/core\", \"@angular/forms\", \"@angular/common\"], factory);\n\t\t\telse if(typeof exports === 'object')\n\t\t\t\texports[\"ng2-popup\"] = factory(require(\"@angular/core\"), require(\"@angular/forms\"), require(\"@angular/common\"));\n\t\t\telse\n\t\t\t\troot[\"ng2-popup\"] = factory(root[\"@angular/core\"], root[\"@angular/forms\"], root[\"@angular/common\"]);\n\t\t})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__) {\n\t\treturn /******/ (function(modules) { // webpackBootstrap\n\t\t/******/ \t// The module cache\n\t\t/******/ \tvar installedModules = {};\n\t\t/******/\n\t\t/******/ \t// The require function\n\t\t/******/ \tfunction __webpack_require__(moduleId) {\n\t\t/******/\n\t\t/******/ \t\t// Check if module is in cache\n\t\t/******/ \t\tif(installedModules[moduleId])\n\t\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\t\t/******/\n\t\t/******/ \t\t// Create a new module (and put it into the cache)\n\t\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t\t/******/ \t\t\texports: {},\n\t\t/******/ \t\t\tid: moduleId,\n\t\t/******/ \t\t\tloaded: false\n\t\t/******/ \t\t};\n\t\t/******/\n\t\t/******/ \t\t// Execute the module function\n\t\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t\t/******/\n\t\t/******/ \t\t// Flag the module as loaded\n\t\t/******/ \t\tmodule.loaded = true;\n\t\t/******/\n\t\t/******/ \t\t// Return the exports of the module\n\t\t/******/ \t\treturn module.exports;\n\t\t/******/ \t}\n\t\t/******/\n\t\t/******/\n\t\t/******/ \t// expose the modules object (__webpack_modules__)\n\t\t/******/ \t__webpack_require__.m = modules;\n\t\t/******/\n\t\t/******/ \t// expose the module cache\n\t\t/******/ \t__webpack_require__.c = installedModules;\n\t\t/******/\n\t\t/******/ \t// __webpack_public_path__\n\t\t/******/ \t__webpack_require__.p = \"\";\n\t\t/******/\n\t\t/******/ \t// Load entry module and return exports\n\t\t/******/ \treturn __webpack_require__(0);\n\t\t/******/ })\n\t\t/************************************************************************/\n\t\t/******/ ([\n\t\t/* 0 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar ng2_popup_component_1 = __webpack_require__(1);\n\t\t\texports.Ng2PopupComponent = ng2_popup_component_1.Ng2PopupComponent;\n\t\t\tvar ng2_message_popup_component_1 = __webpack_require__(6);\n\t\t\texports.Ng2MessagePopupComponent = ng2_message_popup_component_1.Ng2MessagePopupComponent;\n\t\t\tvar ng2_popup_module_1 = __webpack_require__(7);\n\t\t\texports.Ng2PopupModule = ng2_popup_module_1.Ng2PopupModule;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 1 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t};\n\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t};\n\t\t\tvar core_1 = __webpack_require__(2);\n\t\t\tvar ng2_overlay_1 = __webpack_require__(3);\n\t\t\tvar Ng2PopupComponent = (function () {\n\t\t\t    function Ng2PopupComponent(componentResolver, overlayManager) {\n\t\t\t        this.componentResolver = componentResolver;\n\t\t\t        this.overlayManager = overlayManager;\n\t\t\t    }\n\t\t\t    Ng2PopupComponent.prototype.ngAfterViewInit = function () {\n\t\t\t        var overlayEl = this.marker.element.nativeElement.parentElement.parentElement;\n\t\t\t        var overlay = new ng2_overlay_1.Ng2Overlay(overlayEl, {\n\t\t\t            id: 'ng2-popup-overlay',\n\t\t\t            windowOverlay: true,\n\t\t\t            position: 'center center'\n\t\t\t        });\n\t\t\t        this.overlayManager.register(overlay);\n\t\t\t    };\n\t\t\t    Ng2PopupComponent.prototype.open = function (component, options) {\n\t\t\t        this.close();\n\t\t\t        this.opened = true;\n\t\t\t        this.classNames = options.classNames;\n\t\t\t        this.closeButton = options.closeButton;\n\t\t\t        var factory = this.componentResolver.resolveComponentFactory(component);\n\t\t\t        var componentRef = this.marker.createComponent(factory);\n\t\t\t        componentRef.instance.popupOptions = options;\n\t\t\t        componentRef.instance.popup = this;\n\t\t\t        this.overlayManager.open('ng2-popup-overlay', null); //(id, event)\n\t\t\t    };\n\t\t\t    Ng2PopupComponent.prototype.close = function () {\n\t\t\t        this.opened = false;\n\t\t\t        this.overlayManager.close('ng2-popup-overlay');\n\t\t\t        try {\n\t\t\t            this.marker.remove();\n\t\t\t        }\n\t\t\t        catch (e) { }\n\t\t\t    };\n\t\t\t    return Ng2PopupComponent;\n\t\t\t}());\n\t\t\t__decorate([\n\t\t\t    core_1.ViewChild('marker', { read: core_1.ViewContainerRef }),\n\t\t\t    __metadata(\"design:type\", Object)\n\t\t\t], Ng2PopupComponent.prototype, \"marker\", void 0);\n\t\t\tNg2PopupComponent = __decorate([\n\t\t\t    core_1.Component({\n\t\t\t        selector: 'ng2-popup',\n\t\t\t        directives: [ng2_overlay_1.Ng2OverlayDirective],\n\t\t\t        providers: [ng2_overlay_1.Ng2OverlayManager],\n\t\t\t        template: \"\\n    <div id=\\\"ng2-popup-overlay\\\"> <!-- <-- this is overlay -->\\n      <div class=\\\"popup-container {{classNames}}\\\" [ngClass]=\\\"{opened: opened}\\\">\\n        <div *ngIf=\\\"closeButton != false\\\" class=\\\"close-popup\\\" (click)=\\\"close()\\\">x</div>\\n        <div class=\\\"marker\\\" #marker></div> <!-- to position popup component -->\\n        <!-- popup component will be here -->\\n      </div>\\n    </div>\\n  \",\n\t\t\t        styles: [\"\\n    .popup-container { \\n      background: #fff;\\n      border: 1px solid #ccc;\\n      box-shadow: 0 5px 15px rgba(0,0,0,.5);\\n      border-radius: 5px;\\n      width: 600px;\\n      display: none;\\n    }\\n    .popup-container.opened { \\n      display: block;\\n    }\\n    .close-popup {\\n      font-family: \\\"Helvetica Neue\\\", Helvetica, Arial, sans-serif;\\n      float: right; \\n      cursor: pointer; \\n      font-size: 21px;\\n      line-height: 1;\\n      text-shadow: 0 1px 0 #fff;\\n      opacity: 0.2;\\n      padding: 10px;\\n    }\\n    /*.marker ~ * { display:block; background: #fff}*/\\n    .popup-container.small { width: 300px}\\n    .popup-container.large { width: 900px}\\n  \"],\n\t\t\t        encapsulation: core_1.ViewEncapsulation.None\n\t\t\t    }),\n\t\t\t    __metadata(\"design:paramtypes\", [core_1.ComponentFactoryResolver,\n\t\t\t        ng2_overlay_1.Ng2OverlayManager])\n\t\t\t], Ng2PopupComponent);\n\t\t\texports.Ng2PopupComponent = Ng2PopupComponent;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 2 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\t\t\n\t\t/***/ },\n\t\t/* 3 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t(function webpackUniversalModuleDefinition(root, factory) {\n\t\t\t\tif(true)\n\t\t\t\t\tmodule.exports = factory(__webpack_require__(2), __webpack_require__(4), __webpack_require__(5));\n\t\t\t\telse if(typeof define === 'function' && define.amd)\n\t\t\t\t\tdefine([\"@angular/core\", \"@angular/forms\", \"@angular/common\"], factory);\n\t\t\t\telse if(typeof exports === 'object')\n\t\t\t\t\texports[\"ng2-overlay\"] = factory(require(\"@angular/core\"), require(\"@angular/forms\"), require(\"@angular/common\"));\n\t\t\t\telse\n\t\t\t\t\troot[\"ng2-overlay\"] = factory(root[\"@angular/core\"], root[\"@angular/forms\"], root[\"@angular/common\"]);\n\t\t\t})(this, function(__WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_7__, __WEBPACK_EXTERNAL_MODULE_8__) {\n\t\t\treturn /******/ (function(modules) { // webpackBootstrap\n\t\t\t/******/ \t// The module cache\n\t\t\t/******/ \tvar installedModules = {};\n\t\t\t/******/\n\t\t\t/******/ \t// The require function\n\t\t\t/******/ \tfunction __webpack_require__(moduleId) {\n\t\t\t/******/\n\t\t\t/******/ \t\t// Check if module is in cache\n\t\t\t/******/ \t\tif(installedModules[moduleId])\n\t\t\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\t\t\t/******/\n\t\t\t/******/ \t\t// Create a new module (and put it into the cache)\n\t\t\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t\t\t/******/ \t\t\texports: {},\n\t\t\t/******/ \t\t\tid: moduleId,\n\t\t\t/******/ \t\t\tloaded: false\n\t\t\t/******/ \t\t};\n\t\t\t/******/\n\t\t\t/******/ \t\t// Execute the module function\n\t\t\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t\t\t/******/\n\t\t\t/******/ \t\t// Flag the module as loaded\n\t\t\t/******/ \t\tmodule.loaded = true;\n\t\t\t/******/\n\t\t\t/******/ \t\t// Return the exports of the module\n\t\t\t/******/ \t\treturn module.exports;\n\t\t\t/******/ \t}\n\t\t\t/******/\n\t\t\t/******/\n\t\t\t/******/ \t// expose the modules object (__webpack_modules__)\n\t\t\t/******/ \t__webpack_require__.m = modules;\n\t\t\t/******/\n\t\t\t/******/ \t// expose the module cache\n\t\t\t/******/ \t__webpack_require__.c = installedModules;\n\t\t\t/******/\n\t\t\t/******/ \t// __webpack_public_path__\n\t\t\t/******/ \t__webpack_require__.p = \"\";\n\t\t\t/******/\n\t\t\t/******/ \t// Load entry module and return exports\n\t\t\t/******/ \treturn __webpack_require__(0);\n\t\t\t/******/ })\n\t\t\t/************************************************************************/\n\t\t\t/******/ ([\n\t\t\t/* 0 */\n\t\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\t\n\t\t\t\t\"use strict\";\n\t\t\t\tvar ng2_overlay_1 = __webpack_require__(1);\n\t\t\t\texports.Ng2Overlay = ng2_overlay_1.Ng2Overlay;\n\t\t\t\tvar ng2_overlay_manager_1 = __webpack_require__(3);\n\t\t\t\texports.Ng2OverlayManager = ng2_overlay_manager_1.Ng2OverlayManager;\n\t\t\t\tvar ng2_overlay_directive_1 = __webpack_require__(5);\n\t\t\t\texports.Ng2OverlayDirective = ng2_overlay_directive_1.Ng2OverlayDirective;\n\t\t\t\tvar ng2_overlay_module_1 = __webpack_require__(6);\n\t\t\t\texports.Ng2OverlayModule = ng2_overlay_module_1.Ng2OverlayModule;\n\t\t\t\n\t\t\t\n\t\t\t/***/ },\n\t\t\t/* 1 */\n\t\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\t\n\t\t\t\t\"use strict\";\n\t\t\t\tvar ng2_util_1 = __webpack_require__(2);\n\t\t\t\tvar Ng2Overlay = (function () {\n\t\t\t\t    function Ng2Overlay(el, options) {\n\t\t\t\t        options = options || {};\n\t\t\t\t        this.id = options.id;\n\t\t\t\t        this.type = options.type;\n\t\t\t\t        if (!this.id) {\n\t\t\t\t            throw \"Invalid overlay id\";\n\t\t\t\t        }\n\t\t\t\t        this.element = el; // overlay wrapper element with table dsplay\n\t\t\t\t        this.windowOverlay = options.windowOverlay;\n\t\t\t\t        this.position = this.getPositionProperty(options.position || 'center center');\n\t\t\t\t    }\n\t\t\t\t    Ng2Overlay.prototype.positionIt = function (event) {\n\t\t\t\t        if (this.position.inside) {\n\t\t\t\t            this.positionItInside(this.position);\n\t\t\t\t        }\n\t\t\t\t        else {\n\t\t\t\t            this.positionItOutside(this.position, event);\n\t\t\t\t        }\n\t\t\t\t    };\n\t\t\t\t    Ng2Overlay.prototype.getPositionProperty = function (positionStr) {\n\t\t\t\t        var position = {}, inside;\n\t\t\t\t        var _a = positionStr.split(' '), vertical = _a[0], horizontal = _a[1], insideStr = _a[2];\n\t\t\t\t        horizontal = horizontal || 'center';\n\t\t\t\t        vertical = vertical || 'center';\n\t\t\t\t        inside = (insideStr !== 'outside' || this.windowOverlay);\n\t\t\t\t        position.horizontal = Ng2Overlay[horizontal.toUpperCase()];\n\t\t\t\t        position.vertical = Ng2Overlay[vertical.toUpperCase()];\n\t\t\t\t        position.inside = inside;\n\t\t\t\t        return position;\n\t\t\t\t    };\n\t\t\t\t    Ng2Overlay.prototype.positionItInside = function (position) {\n\t\t\t\t        this.element.style.display = 'flex';\n\t\t\t\t        //top / left positioning\n\t\t\t\t        if (this.windowOverlay) {\n\t\t\t\t            this.element.style.position = 'fixed';\n\t\t\t\t            //works as blocker\n\t\t\t\t            Object.assign(this.element.style, {\n\t\t\t\t                backgroundColor: 'rgba(0,0,0,0.2)',\n\t\t\t\t                top: '0', left: '0', bottom: '0', right: '0',\n\t\t\t\t                width: '100%', height: '100%'\n\t\t\t\t            });\n\t\t\t\t        }\n\t\t\t\t        else {\n\t\t\t\t            //adjust top/left to match to parentElement\n\t\t\t\t            var parentEl = this.element.parentElement;\n\t\t\t\t            //works as a blocker\n\t\t\t\t            Object.assign(this.element.style, {\n\t\t\t\t                position: 'absolute',\n\t\t\t\t                // backgroundColor: 'transparent',\n\t\t\t\t                backgroundColor: 'rgba(0,0,0,0.2)',\n\t\t\t\t                top: parentEl.offsetTop + 'px',\n\t\t\t\t                left: parentEl.offsetLeft + 'px',\n\t\t\t\t                width: parentEl.offsetWidth + 'px',\n\t\t\t\t                height: parentEl.offsetHeight + 'px'\n\t\t\t\t            });\n\t\t\t\t        }\n\t\t\t\t        ;\n\t\t\t\t        //horizontal position\n\t\t\t\t        switch (position.horizontal) {\n\t\t\t\t            case Ng2Overlay.LEFT:\n\t\t\t\t                this.element.style.justifyContent = 'flex-start';\n\t\t\t\t                break;\n\t\t\t\t            case Ng2Overlay.CENTER:\n\t\t\t\t                this.element.style.justifyContent = 'center';\n\t\t\t\t                break;\n\t\t\t\t            case Ng2Overlay.RIGHT:\n\t\t\t\t                this.element.style.justifyContent = 'flex-end';\n\t\t\t\t                break;\n\t\t\t\t        }\n\t\t\t\t        //vertical position\n\t\t\t\t        switch (position.vertical) {\n\t\t\t\t            case Ng2Overlay.LEFT:\n\t\t\t\t                this.element.style.alignItems = 'flex-start';\n\t\t\t\t                break;\n\t\t\t\t            case Ng2Overlay.CENTER:\n\t\t\t\t            case Ng2Overlay.MIDDLE:\n\t\t\t\t                this.element.style.alignItems = 'center';\n\t\t\t\t                break;\n\t\t\t\t            case Ng2Overlay.RIGHT:\n\t\t\t\t                this.element.style.alignItems = 'flex-end';\n\t\t\t\t                break;\n\t\t\t\t        }\n\t\t\t\t    };\n\t\t\t\t    Ng2Overlay.prototype.positionItOutside = function (position, event) {\n\t\t\t\t        //adjust top/left to match to parentElement\n\t\t\t\t        var parentEl = this.element.parentElement;\n\t\t\t\t        //works as guide line?\n\t\t\t\t        Object.assign(this.element.style, {\n\t\t\t\t            position: 'absolute',\n\t\t\t\t            pointerEvents: 'none',\n\t\t\t\t            top: parentEl.offsetTop + 'px',\n\t\t\t\t            left: parentEl.offsetLeft + 'px',\n\t\t\t\t            width: parentEl.offsetWidth + 'px',\n\t\t\t\t            height: parentEl.offsetHeight + 'px'\n\t\t\t\t        });\n\t\t\t\t        this.element.style.display = 'block';\n\t\t\t\t        var elToPosition = (this.element.children[0]);\n\t\t\t\t        elToPosition.style.position = 'absolute';\n\t\t\t\t        elToPosition.style.pointerEvents = 'auto';\n\t\t\t\t        switch (position.vertical) {\n\t\t\t\t            case Ng2Overlay.TOP:\n\t\t\t\t                elToPosition.style.bottom = this.element.offsetHeight + 'px';\n\t\t\t\t                break;\n\t\t\t\t            case Ng2Overlay.BOTTOM:\n\t\t\t\t                elToPosition.style.top = this.element.offsetHeight + 'px';\n\t\t\t\t                break;\n\t\t\t\t            case Ng2Overlay.LEFT:\n\t\t\t\t                elToPosition.style.right = this.element.offsetWidth + 'px';\n\t\t\t\t                break;\n\t\t\t\t            case Ng2Overlay.RIGHT:\n\t\t\t\t                elToPosition.style.left = this.element.offsetWidth + 'px';\n\t\t\t\t                break;\n\t\t\t\t        }\n\t\t\t\t        switch (position.horizontal) {\n\t\t\t\t            case Ng2Overlay.CENTER:\n\t\t\t\t                elToPosition.style.left = (this.element.offsetWidth - elToPosition.offsetWidth) / 2 + 'px';\n\t\t\t\t                break;\n\t\t\t\t            case Ng2Overlay.LEFT:\n\t\t\t\t                elToPosition.style.left = '0';\n\t\t\t\t                break;\n\t\t\t\t            case Ng2Overlay.RIGHT:\n\t\t\t\t                elToPosition.style.right = '0';\n\t\t\t\t                break;\n\t\t\t\t            case Ng2Overlay.TOP:\n\t\t\t\t                elToPosition.style.top = '0';\n\t\t\t\t                break;\n\t\t\t\t            case Ng2Overlay.BOTTOM:\n\t\t\t\t                elToPosition.style.bottom = '0';\n\t\t\t\t                break;\n\t\t\t\t            case Ng2Overlay.CURSOR:\n\t\t\t\t                var mousePos = ng2_util_1.Ng2Util.getMousePositionInElement(event, this.element);\n\t\t\t\t                if ((mousePos.x + elToPosition.offsetWidth) > this.element.offsetWidth) {\n\t\t\t\t                    elToPosition.style.left = (this.element.offsetWidth - elToPosition.offsetWidth - 5) + 'px';\n\t\t\t\t                }\n\t\t\t\t                else if (mousePos.x < elToPosition.offsetWidth / 2) {\n\t\t\t\t                    elToPosition.style.left = '0px';\n\t\t\t\t                }\n\t\t\t\t                else {\n\t\t\t\t                    elToPosition.style.left = mousePos.x - elToPosition.offsetWidth / 2 + 'px';\n\t\t\t\t                }\n\t\t\t\t                break;\n\t\t\t\t        }\n\t\t\t\t    };\n\t\t\t\t    Ng2Overlay.TOP = 11;\n\t\t\t\t    Ng2Overlay.MIDDLE = 12;\n\t\t\t\t    Ng2Overlay.BOTTOM = 13;\n\t\t\t\t    Ng2Overlay.LEFT = 21;\n\t\t\t\t    Ng2Overlay.CENTER = 22;\n\t\t\t\t    Ng2Overlay.RIGHT = 23;\n\t\t\t\t    Ng2Overlay.CURSOR = 31;\n\t\t\t\t    return Ng2Overlay;\n\t\t\t\t}());\n\t\t\t\texports.Ng2Overlay = Ng2Overlay;\n\t\t\t\n\t\t\t\n\t\t\t/***/ },\n\t\t\t/* 2 */\n\t\t\t/***/ function(module, exports) {\n\t\t\t\n\t\t\t\t\"use strict\";\n\t\t\t\tvar Ng2Util = (function () {\n\t\t\t\t    function Ng2Util() {\n\t\t\t\t    }\n\t\t\t\t    Ng2Util.getDocumentPosition = function (oElement) {\n\t\t\t\t        var posX = 0, posY = 0;\n\t\t\t\t        if (oElement.offsetParent) {\n\t\t\t\t            for (; oElement; oElement = oElement.offsetParent) {\n\t\t\t\t                posX += oElement.offsetLeft;\n\t\t\t\t                posY += oElement.offsetTop;\n\t\t\t\t            }\n\t\t\t\t            return { x: posX, y: posY };\n\t\t\t\t        }\n\t\t\t\t        else {\n\t\t\t\t            return { x: oElement['x'], y: oElement['y'] };\n\t\t\t\t        }\n\t\t\t\t    };\n\t\t\t\t    Ng2Util.getMousePositionInElement = function (evt, element) {\n\t\t\t\t        evt = evt || window.event;\n\t\t\t\t        var posX = 0, posY = 0;\n\t\t\t\t        var elPos = this.getDocumentPosition(element);\n\t\t\t\t        if (evt.pageX || evt.pageY) {\n\t\t\t\t            posX = evt.pageX;\n\t\t\t\t            posY = evt.pageY;\n\t\t\t\t        }\n\t\t\t\t        else if (evt.clientX || evt.clientY) {\n\t\t\t\t            posX = evt.clientX +\n\t\t\t\t                document.body.scrollLeft +\n\t\t\t\t                document.documentElement.scrollLeft;\n\t\t\t\t            posY = evt.clientY +\n\t\t\t\t                document.body.scrollTop +\n\t\t\t\t                document.documentElement.scrollTop;\n\t\t\t\t        }\n\t\t\t\t        return {\n\t\t\t\t            x: posX - elPos.x,\n\t\t\t\t            y: posY - elPos.y\n\t\t\t\t        };\n\t\t\t\t    };\n\t\t\t\t    return Ng2Util;\n\t\t\t\t}());\n\t\t\t\texports.Ng2Util = Ng2Util;\n\t\t\t\n\t\t\t\n\t\t\t/***/ },\n\t\t\t/* 3 */\n\t\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\t\n\t\t\t\t\"use strict\";\n\t\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t\t};\n\t\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t\t};\n\t\t\t\tvar core_1 = __webpack_require__(4);\n\t\t\t\tvar Ng2OverlayManager = (function () {\n\t\t\t\t    function Ng2OverlayManager() {\n\t\t\t\t    }\n\t\t\t\t    Ng2OverlayManager.prototype.register = function (overlay) {\n\t\t\t\t        Ng2OverlayManager.overlays[overlay.id] = overlay;\n\t\t\t\t        // console.log('overlay.register, OverlayManager.overlays', OverlayManager.overlays);\n\t\t\t\t    };\n\t\t\t\t    Ng2OverlayManager.prototype.open = function (arg, event) {\n\t\t\t\t        var overlay = typeof arg === 'string' ? Ng2OverlayManager.overlays[arg] : arg;\n\t\t\t\t        if (!overlay.opened) {\n\t\t\t\t            overlay.positionIt(event);\n\t\t\t\t            overlay.opened = true;\n\t\t\t\t        }\n\t\t\t\t    };\n\t\t\t\t    Ng2OverlayManager.prototype.close = function (arg) {\n\t\t\t\t        var overlay = typeof arg === 'string' ? Ng2OverlayManager.overlays[arg] : arg;\n\t\t\t\t        overlay.element.style.display = 'none';\n\t\t\t\t        overlay.opened = false;\n\t\t\t\t    };\n\t\t\t\t    //list of overlay objects\n\t\t\t\t    Ng2OverlayManager.overlays = {};\n\t\t\t\t    Ng2OverlayManager = __decorate([\n\t\t\t\t        core_1.Injectable(), \n\t\t\t\t        __metadata('design:paramtypes', [])\n\t\t\t\t    ], Ng2OverlayManager);\n\t\t\t\t    return Ng2OverlayManager;\n\t\t\t\t}());\n\t\t\t\texports.Ng2OverlayManager = Ng2OverlayManager;\n\t\t\t\n\t\t\t\n\t\t\t/***/ },\n\t\t\t/* 4 */\n\t\t\t/***/ function(module, exports) {\n\t\t\t\n\t\t\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\t\t\t\n\t\t\t/***/ },\n\t\t\t/* 5 */\n\t\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\t\n\t\t\t\t\"use strict\";\n\t\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t\t};\n\t\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t\t};\n\t\t\t\tvar core_1 = __webpack_require__(4);\n\t\t\t\tvar ng2_overlay_manager_1 = __webpack_require__(3);\n\t\t\t\tvar ng2_overlay_1 = __webpack_require__(1);\n\t\t\t\tvar Ng2OverlayDirective = (function () {\n\t\t\t\t    function Ng2OverlayDirective(viewContainerRef, overlayManager) {\n\t\t\t\t        this.viewContainerRef = viewContainerRef;\n\t\t\t\t        this.overlayManager = overlayManager;\n\t\t\t\t        this.el = this.viewContainerRef.element.nativeElement;\n\t\t\t\t    }\n\t\t\t\t    Ng2OverlayDirective.prototype.ngAfterViewInit = function () {\n\t\t\t\t        this.wrapItWithOverlayTag();\n\t\t\t\t        this.registerToOverlayManager();\n\t\t\t\t    };\n\t\t\t\t    Ng2OverlayDirective.prototype.wrapItWithOverlayTag = function () {\n\t\t\t\t        //console.log('wrapped overlay directive element with <ng2-overlay>');\n\t\t\t\t        this.overlayEl = document.createElement('ng2-overlay');\n\t\t\t\t        this.overlayEl.style.display = 'none';\n\t\t\t\t        this.el.parentElement.insertBefore(this.overlayEl, this.el.nextSibling);\n\t\t\t\t        this.overlayEl.appendChild(this.el);\n\t\t\t\t    };\n\t\t\t\t    //create Overlay object,  then register this element to overlayManager\n\t\t\t\t    Ng2OverlayDirective.prototype.registerToOverlayManager = function () {\n\t\t\t\t        var positionStr = this.overlayPosition;\n\t\t\t\t        var overlay = new ng2_overlay_1.Ng2Overlay(this.overlayEl, {\n\t\t\t\t            id: this.el.id,\n\t\t\t\t            windowOverlay: this.overlayOf == \"window\",\n\t\t\t\t            position: positionStr\n\t\t\t\t        });\n\t\t\t\t        //console.log('registering overlay', overlay);\n\t\t\t\t        this.overlayManager.register(overlay);\n\t\t\t\t    };\n\t\t\t\t    __decorate([\n\t\t\t\t        core_1.Input('ng2-overlay-of'), \n\t\t\t\t        __metadata('design:type', String)\n\t\t\t\t    ], Ng2OverlayDirective.prototype, \"overlayOf\", void 0);\n\t\t\t\t    __decorate([\n\t\t\t\t        core_1.Input('ng2-overlay-position'), \n\t\t\t\t        __metadata('design:type', String)\n\t\t\t\t    ], Ng2OverlayDirective.prototype, \"overlayPosition\", void 0);\n\t\t\t\t    Ng2OverlayDirective = __decorate([\n\t\t\t\t        core_1.Directive({\n\t\t\t\t            selector: '[ng2-overlay], [ng2-overlay-of], [ng2-overlay-position]',\n\t\t\t\t        }), \n\t\t\t\t        __metadata('design:paramtypes', [core_1.ViewContainerRef, ng2_overlay_manager_1.Ng2OverlayManager])\n\t\t\t\t    ], Ng2OverlayDirective);\n\t\t\t\t    return Ng2OverlayDirective;\n\t\t\t\t}());\n\t\t\t\texports.Ng2OverlayDirective = Ng2OverlayDirective;\n\t\t\t\n\t\t\t\n\t\t\t/***/ },\n\t\t\t/* 6 */\n\t\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\t\n\t\t\t\t\"use strict\";\n\t\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t\t};\n\t\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t\t};\n\t\t\t\tvar core_1 = __webpack_require__(4);\n\t\t\t\tvar forms_1 = __webpack_require__(7);\n\t\t\t\tvar common_1 = __webpack_require__(8);\n\t\t\t\tvar ng2_overlay_manager_1 = __webpack_require__(3);\n\t\t\t\tvar ng2_overlay_directive_1 = __webpack_require__(5);\n\t\t\t\tvar Ng2OverlayModule = (function () {\n\t\t\t\t    function Ng2OverlayModule() {\n\t\t\t\t    }\n\t\t\t\t    Ng2OverlayModule = __decorate([\n\t\t\t\t        core_1.NgModule({\n\t\t\t\t            imports: [common_1.CommonModule, forms_1.FormsModule],\n\t\t\t\t            declarations: [ng2_overlay_directive_1.Ng2OverlayDirective],\n\t\t\t\t            providers: [ng2_overlay_manager_1.Ng2OverlayManager],\n\t\t\t\t            exports: [ng2_overlay_directive_1.Ng2OverlayDirective]\n\t\t\t\t        }), \n\t\t\t\t        __metadata('design:paramtypes', [])\n\t\t\t\t    ], Ng2OverlayModule);\n\t\t\t\t    return Ng2OverlayModule;\n\t\t\t\t}());\n\t\t\t\texports.Ng2OverlayModule = Ng2OverlayModule;\n\t\t\t\t;\n\t\t\t\n\t\t\t\n\t\t\t/***/ },\n\t\t\t/* 7 */\n\t\t\t/***/ function(module, exports) {\n\t\t\t\n\t\t\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_7__;\n\t\t\t\n\t\t\t/***/ },\n\t\t\t/* 8 */\n\t\t\t/***/ function(module, exports) {\n\t\t\t\n\t\t\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_8__;\n\t\t\t\n\t\t\t/***/ }\n\t\t\t/******/ ])\n\t\t\t});\n\t\t\t;\n\t\t\t//# sourceMappingURL=ng2-overlay.umd.js.map\n\t\t\n\t\t/***/ },\n\t\t/* 4 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\t\t\n\t\t/***/ },\n\t\t/* 5 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\t\t\n\t\t/***/ },\n\t\t/* 6 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t};\n\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t};\n\t\t\tvar core_1 = __webpack_require__(2);\n\t\t\tvar Ng2MessagePopupComponent = (function () {\n\t\t\t    function Ng2MessagePopupComponent() {\n\t\t\t    }\n\t\t\t    return Ng2MessagePopupComponent;\n\t\t\t}());\n\t\t\tNg2MessagePopupComponent = __decorate([\n\t\t\t    core_1.Component({\n\t\t\t        selector: 'ng2-message-popup',\n\t\t\t        template: \"\\n    <div>\\n      <div class=\\\"popup-header\\\">{{popupOptions.title}}</div>\\n      <div class=\\\"popup-body\\\">{{popupOptions.message}}</div>\\n      <div class=\\\"popup-footer\\\" *ngIf=\\\"popupOptions.buttons\\\">\\n        <button *ngIf=\\\"popupOptions.buttons.OK\\\"\\n          (click)=\\\"popupOptions.buttons.OK()\\\">Ok</button>\\n        <button *ngIf=\\\"popupOptions.buttons.CANCEL\\\"\\n          (click)=\\\"popupOptions.buttons.CANCEL()\\\">Cancel</button>\\n      </div>\\n    </div>\\n  \",\n\t\t\t        encapsulation: core_1.ViewEncapsulation.None,\n\t\t\t        styles: [\"\\n    .popup-header, .popup-body, .popup-footer {\\n      padding: 15px;\\n      text-align: center;\\n    }\\n    .popup-header  {\\n      font-weight: bold;\\n      font-size: 18px;\\n      border-bottom: 1px solid #ccc;\\n    }\\n  \"]\n\t\t\t    }),\n\t\t\t    __metadata(\"design:paramtypes\", [])\n\t\t\t], Ng2MessagePopupComponent);\n\t\t\texports.Ng2MessagePopupComponent = Ng2MessagePopupComponent;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 7 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t};\n\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t};\n\t\t\tvar core_1 = __webpack_require__(2);\n\t\t\tvar forms_1 = __webpack_require__(4);\n\t\t\tvar common_1 = __webpack_require__(5);\n\t\t\tvar ng2_overlay_1 = __webpack_require__(3);\n\t\t\tvar ng2_popup_component_1 = __webpack_require__(1);\n\t\t\texports.Ng2PopupComponent = ng2_popup_component_1.Ng2PopupComponent;\n\t\t\tvar ng2_message_popup_component_1 = __webpack_require__(6);\n\t\t\texports.Ng2MessagePopupComponent = ng2_message_popup_component_1.Ng2MessagePopupComponent;\n\t\t\tvar Ng2PopupModule = (function () {\n\t\t\t    function Ng2PopupModule() {\n\t\t\t    }\n\t\t\t    return Ng2PopupModule;\n\t\t\t}());\n\t\t\tNg2PopupModule = __decorate([\n\t\t\t    core_1.NgModule({\n\t\t\t        imports: [common_1.CommonModule, forms_1.FormsModule, ng2_overlay_1.Ng2OverlayModule],\n\t\t\t        declarations: [ng2_message_popup_component_1.Ng2MessagePopupComponent, ng2_popup_component_1.Ng2PopupComponent],\n\t\t\t        exports: [ng2_message_popup_component_1.Ng2MessagePopupComponent, ng2_popup_component_1.Ng2PopupComponent],\n\t\t\t        entryComponents: [ng2_message_popup_component_1.Ng2MessagePopupComponent]\n\t\t\t    }),\n\t\t\t    __metadata(\"design:paramtypes\", [])\n\t\t\t], Ng2PopupModule);\n\t\t\texports.Ng2PopupModule = Ng2PopupModule;\n\t\t\n\t\t\n\t\t/***/ }\n\t\t/******/ ])\n\t\t});\n\t\t;\n\t\t//# sourceMappingURL=ng2-popup.umd.js.map\n\t\n\t/***/ },\n\t/* 14 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t(function webpackUniversalModuleDefinition(root, factory) {\n\t\t\tif(true)\n\t\t\t\tmodule.exports = factory(__webpack_require__(2), __webpack_require__(3), __webpack_require__(4));\n\t\t\telse if(typeof define === 'function' && define.amd)\n\t\t\t\tdefine([\"@angular/core\", \"@angular/forms\", \"@angular/platform-browser\"], factory);\n\t\t\telse if(typeof exports === 'object')\n\t\t\t\texports[\"ng2-menu\"] = factory(require(\"@angular/core\"), require(\"@angular/forms\"), require(\"@angular/platform-browser\"));\n\t\t\telse\n\t\t\t\troot[\"ng2-menu\"] = factory(root[\"@angular/core\"], root[\"@angular/forms\"], root[\"@angular/platform-browser\"]);\n\t\t})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__) {\n\t\treturn /******/ (function(modules) { // webpackBootstrap\n\t\t/******/ \t// The module cache\n\t\t/******/ \tvar installedModules = {};\n\t\t/******/\n\t\t/******/ \t// The require function\n\t\t/******/ \tfunction __webpack_require__(moduleId) {\n\t\t/******/\n\t\t/******/ \t\t// Check if module is in cache\n\t\t/******/ \t\tif(installedModules[moduleId])\n\t\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\t\t/******/\n\t\t/******/ \t\t// Create a new module (and put it into the cache)\n\t\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t\t/******/ \t\t\texports: {},\n\t\t/******/ \t\t\tid: moduleId,\n\t\t/******/ \t\t\tloaded: false\n\t\t/******/ \t\t};\n\t\t/******/\n\t\t/******/ \t\t// Execute the module function\n\t\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t\t/******/\n\t\t/******/ \t\t// Flag the module as loaded\n\t\t/******/ \t\tmodule.loaded = true;\n\t\t/******/\n\t\t/******/ \t\t// Return the exports of the module\n\t\t/******/ \t\treturn module.exports;\n\t\t/******/ \t}\n\t\t/******/\n\t\t/******/\n\t\t/******/ \t// expose the modules object (__webpack_modules__)\n\t\t/******/ \t__webpack_require__.m = modules;\n\t\t/******/\n\t\t/******/ \t// expose the module cache\n\t\t/******/ \t__webpack_require__.c = installedModules;\n\t\t/******/\n\t\t/******/ \t// __webpack_public_path__\n\t\t/******/ \t__webpack_require__.p = \"\";\n\t\t/******/\n\t\t/******/ \t// Load entry module and return exports\n\t\t/******/ \treturn __webpack_require__(0);\n\t\t/******/ })\n\t\t/************************************************************************/\n\t\t/******/ ([\n\t\t/* 0 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar ng2_menu_directive_1 = __webpack_require__(1);\n\t\t\texports.Ng2MenuDirective = ng2_menu_directive_1.Ng2MenuDirective;\n\t\t\tvar ng2_menu_module_1 = __webpack_require__(3);\n\t\t\texports.Ng2MenuModule = ng2_menu_module_1.Ng2MenuModule;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 1 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t};\n\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t};\n\t\t\tvar core_1 = __webpack_require__(2);\n\t\t\tvar Ng2MenuDirective = (function () {\n\t\t\t    function Ng2MenuDirective(viewContainerRef) {\n\t\t\t        this.viewContainerRef = viewContainerRef;\n\t\t\t        this.el = this.viewContainerRef.element.nativeElement;\n\t\t\t        this.el.parentElement.style.position = 'relative';\n\t\t\t        this.el.parentElement.className += ' has-ng2-menu';\n\t\t\t    }\n\t\t\t    Ng2MenuDirective.prototype.ngAfterViewInit = function () {\n\t\t\t        var _this = this;\n\t\t\t        this.el.parentElement.addEventListener('mouseover', function (event) {\n\t\t\t            _this.el.parentElement.className += \" active\";\n\t\t\t            _this.el.style.position = \"absolute\";\n\t\t\t            if (_this.el.parentElement.offsetWidth) {\n\t\t\t                _this.setPosition();\n\t\t\t            }\n\t\t\t            else {\n\t\t\t                setTimeout(function () { return _this.setPosition(); });\n\t\t\t            }\n\t\t\t        });\n\t\t\t        this.el.parentElement.addEventListener('mouseout', function (event) {\n\t\t\t            _this.el.parentElement.className = _this.el.parentElement.className.replace(/\\s?active/, '');\n\t\t\t        });\n\t\t\t    };\n\t\t\t    Ng2MenuDirective.prototype.setPosition = function () {\n\t\t\t        if (this.position === \"bottom\") {\n\t\t\t            this.el.style.left = \"0\";\n\t\t\t            this.el.style.top = this.el.parentElement.offsetHeight - 1 + 'px';\n\t\t\t        }\n\t\t\t        else if (this.position === \"top\") {\n\t\t\t            this.el.style.left = \"0\";\n\t\t\t            this.el.style.bottom = this.el.parentElement.offsetHeight - 1 + 'px';\n\t\t\t        }\n\t\t\t        else if (this.position === \"right\") {\n\t\t\t            this.el.style.left = this.el.parentElement.offsetWidth - 1 + 'px';\n\t\t\t            this.el.style.top = \"0\";\n\t\t\t        }\n\t\t\t        else if (this.position === \"left\") {\n\t\t\t            this.el.style.right = this.el.parentElement.offsetWidth - 1 + 'px';\n\t\t\t            this.el.style.top = \"0\";\n\t\t\t        }\n\t\t\t    };\n\t\t\t    return Ng2MenuDirective;\n\t\t\t}());\n\t\t\t__decorate([\n\t\t\t    core_1.Input('ng2-menu'),\n\t\t\t    __metadata(\"design:type\", String)\n\t\t\t], Ng2MenuDirective.prototype, \"position\", void 0);\n\t\t\tNg2MenuDirective = __decorate([\n\t\t\t    core_1.Directive({\n\t\t\t        selector: '[ng2-menu]'\n\t\t\t    }),\n\t\t\t    __metadata(\"design:paramtypes\", [core_1.ViewContainerRef])\n\t\t\t], Ng2MenuDirective);\n\t\t\texports.Ng2MenuDirective = Ng2MenuDirective;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 2 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\t\t\n\t\t/***/ },\n\t\t/* 3 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t};\n\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t};\n\t\t\tvar core_1 = __webpack_require__(2);\n\t\t\tvar forms_1 = __webpack_require__(4);\n\t\t\tvar platform_browser_1 = __webpack_require__(5);\n\t\t\tvar ng2_menu_directive_1 = __webpack_require__(1);\n\t\t\tvar Ng2MenuModule = (function () {\n\t\t\t    function Ng2MenuModule() {\n\t\t\t    }\n\t\t\t    return Ng2MenuModule;\n\t\t\t}());\n\t\t\tNg2MenuModule = __decorate([\n\t\t\t    core_1.NgModule({\n\t\t\t        imports: [platform_browser_1.BrowserModule, forms_1.FormsModule],\n\t\t\t        declarations: [ng2_menu_directive_1.Ng2MenuDirective],\n\t\t\t        exports: [ng2_menu_directive_1.Ng2MenuDirective]\n\t\t\t    }),\n\t\t\t    __metadata(\"design:paramtypes\", [])\n\t\t\t], Ng2MenuModule);\n\t\t\texports.Ng2MenuModule = Ng2MenuModule;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 4 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\t\t\n\t\t/***/ },\n\t\t/* 5 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\t\t\n\t\t/***/ }\n\t\t/******/ ])\n\t\t});\n\t\t;\n\t\t//# sourceMappingURL=ng2-menu.umd.js.map\n\t\n\t/***/ },\n\t/* 15 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t(function webpackUniversalModuleDefinition(root, factory) {\n\t\t\tif(true)\n\t\t\t\tmodule.exports = factory(__webpack_require__(2), __webpack_require__(3), __webpack_require__(8));\n\t\t\telse if(typeof define === 'function' && define.amd)\n\t\t\t\tdefine([\"@angular/core\", \"@angular/forms\", \"@angular/common\"], factory);\n\t\t\telse if(typeof exports === 'object')\n\t\t\t\texports[\"ng2-parallax-scroll\"] = factory(require(\"@angular/core\"), require(\"@angular/forms\"), require(\"@angular/common\"));\n\t\t\telse\n\t\t\t\troot[\"ng2-parallax-scroll\"] = factory(root[\"@angular/core\"], root[\"@angular/forms\"], root[\"@angular/common\"]);\n\t\t})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__) {\n\t\treturn /******/ (function(modules) { // webpackBootstrap\n\t\t/******/ \t// The module cache\n\t\t/******/ \tvar installedModules = {};\n\t\t/******/\n\t\t/******/ \t// The require function\n\t\t/******/ \tfunction __webpack_require__(moduleId) {\n\t\t/******/\n\t\t/******/ \t\t// Check if module is in cache\n\t\t/******/ \t\tif(installedModules[moduleId])\n\t\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\t\t/******/\n\t\t/******/ \t\t// Create a new module (and put it into the cache)\n\t\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t\t/******/ \t\t\texports: {},\n\t\t/******/ \t\t\tid: moduleId,\n\t\t/******/ \t\t\tloaded: false\n\t\t/******/ \t\t};\n\t\t/******/\n\t\t/******/ \t\t// Execute the module function\n\t\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t\t/******/\n\t\t/******/ \t\t// Flag the module as loaded\n\t\t/******/ \t\tmodule.loaded = true;\n\t\t/******/\n\t\t/******/ \t\t// Return the exports of the module\n\t\t/******/ \t\treturn module.exports;\n\t\t/******/ \t}\n\t\t/******/\n\t\t/******/\n\t\t/******/ \t// expose the modules object (__webpack_modules__)\n\t\t/******/ \t__webpack_require__.m = modules;\n\t\t/******/\n\t\t/******/ \t// expose the module cache\n\t\t/******/ \t__webpack_require__.c = installedModules;\n\t\t/******/\n\t\t/******/ \t// __webpack_public_path__\n\t\t/******/ \t__webpack_require__.p = \"\";\n\t\t/******/\n\t\t/******/ \t// Load entry module and return exports\n\t\t/******/ \treturn __webpack_require__(0);\n\t\t/******/ })\n\t\t/************************************************************************/\n\t\t/******/ ([\n\t\t/* 0 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar ng2_parallax_scroll_directive_1 = __webpack_require__(1);\n\t\t\texports.Ng2ParallaxScrollDirective = ng2_parallax_scroll_directive_1.Ng2ParallaxScrollDirective;\n\t\t\tvar ng2_parallax_scroll_module_1 = __webpack_require__(3);\n\t\t\texports.Ng2ParallaxScrollModule = ng2_parallax_scroll_module_1.Ng2ParallaxScrollModule;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 1 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t};\n\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t};\n\t\t\tvar core_1 = __webpack_require__(2);\n\t\t\tvar Ng2ParallaxScrollDirective = (function () {\n\t\t\t    function Ng2ParallaxScrollDirective(viewContainer) {\n\t\t\t        this.viewContainer = viewContainer;\n\t\t\t        this.el = this.viewContainer.element.nativeElement;\n\t\t\t    }\n\t\t\t    Ng2ParallaxScrollDirective.prototype.ngAfterViewInit = function () {\n\t\t\t        var _this = this;\n\t\t\t        this.img = this.el.querySelector(\"img\");\n\t\t\t        this.img.onload = function () {\n\t\t\t            _this.imgOrgWidth = _this.imgOrgWidth || _this.img.offsetWidth;\n\t\t\t            _this.imgOrgHeight = _this.imgOrgHeight || _this.img.offsetHeight;\n\t\t\t            console.log(_this.img.offsetWidth, _this.img.offsetHeight, _this.img.width, _this.img.height);\n\t\t\t            _this.setParallaxImage();\n\t\t\t            _this.updateParallaxImage();\n\t\t\t            window.addEventListener('scroll', function () {\n\t\t\t                _this.updateParallaxImage();\n\t\t\t            });\n\t\t\t            window.addEventListener('resize', function () {\n\t\t\t                _this.setParallaxImage();\n\t\t\t                _this.updateParallaxImage();\n\t\t\t            });\n\t\t\t        };\n\t\t\t    };\n\t\t\t    Ng2ParallaxScrollDirective.prototype.setParallaxImage = function () {\n\t\t\t        //set img style\n\t\t\t        var imgSize = this.imgOrgWidth > this.el.offsetWidth ?\n\t\t\t            { width: this.el.offsetWidth + 'px' } : { height: this.el.offsetHeight * 1.5 + 'px' };\n\t\t\t        Object.assign(this.img.style, {\n\t\t\t            display: 'block', position: 'absolute', bottom: 0, left: 0\n\t\t\t        }, imgSize);\n\t\t\t        // set container style\n\t\t\t        Object.assign(this.el.style, {\n\t\t\t            position: 'relative', overflow: 'hidden'\n\t\t\t        });\n\t\t\t        // wrap image with a div, then set style\n\t\t\t        var imgWrapperEl = this.el.querySelector('.parallax-img-wrapper');\n\t\t\t        if (!imgWrapperEl) {\n\t\t\t            imgWrapperEl = document.createElement('div');\n\t\t\t            imgWrapperEl.className = 'parallax-img-wrapper';\n\t\t\t            imgWrapperEl.appendChild(this.img);\n\t\t\t            this.el.appendChild(imgWrapperEl);\n\t\t\t        }\n\t\t\t        Object.assign(imgWrapperEl.style, {\n\t\t\t            position: 'absolute', top: 0, left: 0, right: 0, bottom: 0, zIndex: -1\n\t\t\t        });\n\t\t\t    };\n\t\t\t    Ng2ParallaxScrollDirective.prototype.updateParallaxImage = function () {\n\t\t\t        var elRect = this.el.getBoundingClientRect();\n\t\t\t        var imgRect = this.img.getBoundingClientRect();\n\t\t\t        var imgDist = imgRect.height - elRect.height;\n\t\t\t        var bottom = this.el.offsetTop + elRect.height;\n\t\t\t        var top = this.el.offsetTop;\n\t\t\t        var scrollTop = document.body.scrollTop;\n\t\t\t        var windowBottom = scrollTop + window.innerHeight;\n\t\t\t        var percentScrolled = (windowBottom - top) / (elRect.height + window.innerHeight);\n\t\t\t        //console.log(imgDist, percentScrolled, imgDist * percentScrolled);\n\t\t\t        var parallax = Math.round((imgDist * percentScrolled));\n\t\t\t        if ((bottom > scrollTop) && (top < (scrollTop + window.innerHeight))) {\n\t\t\t            this.img.style.bottom = parallax * -1 + 'px';\n\t\t\t        }\n\t\t\t    };\n\t\t\t    return Ng2ParallaxScrollDirective;\n\t\t\t}());\n\t\t\tNg2ParallaxScrollDirective = __decorate([\n\t\t\t    core_1.Directive({\n\t\t\t        selector: '[ng2-parallax], ng2-parallax'\n\t\t\t    }),\n\t\t\t    __metadata(\"design:paramtypes\", [core_1.ViewContainerRef])\n\t\t\t], Ng2ParallaxScrollDirective);\n\t\t\texports.Ng2ParallaxScrollDirective = Ng2ParallaxScrollDirective;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 2 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\t\t\n\t\t/***/ },\n\t\t/* 3 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t};\n\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t};\n\t\t\tvar core_1 = __webpack_require__(2);\n\t\t\tvar forms_1 = __webpack_require__(4);\n\t\t\tvar common_1 = __webpack_require__(5);\n\t\t\tvar ng2_parallax_scroll_directive_1 = __webpack_require__(1);\n\t\t\tvar Ng2ParallaxScrollModule = (function () {\n\t\t\t    function Ng2ParallaxScrollModule() {\n\t\t\t    }\n\t\t\t    return Ng2ParallaxScrollModule;\n\t\t\t}());\n\t\t\tNg2ParallaxScrollModule = __decorate([\n\t\t\t    core_1.NgModule({\n\t\t\t        imports: [common_1.CommonModule, forms_1.FormsModule],\n\t\t\t        declarations: [ng2_parallax_scroll_directive_1.Ng2ParallaxScrollDirective],\n\t\t\t        exports: [ng2_parallax_scroll_directive_1.Ng2ParallaxScrollDirective]\n\t\t\t    }),\n\t\t\t    __metadata(\"design:paramtypes\", [])\n\t\t\t], Ng2ParallaxScrollModule);\n\t\t\texports.Ng2ParallaxScrollModule = Ng2ParallaxScrollModule;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 4 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\t\t\n\t\t/***/ },\n\t\t/* 5 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\t\t\n\t\t/***/ }\n\t\t/******/ ])\n\t\t});\n\t\t;\n\t\t//# sourceMappingURL=ng2-parallax-scroll.umd.js.map\n\t\n\t/***/ },\n\t/* 16 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t(function webpackUniversalModuleDefinition(root, factory) {\n\t\t\tif(true)\n\t\t\t\tmodule.exports = factory(__webpack_require__(2), __webpack_require__(3), __webpack_require__(8));\n\t\t\telse if(typeof define === 'function' && define.amd)\n\t\t\t\tdefine([\"@angular/core\", \"@angular/forms\", \"@angular/common\"], factory);\n\t\t\telse if(typeof exports === 'object')\n\t\t\t\texports[\"ng2-sticky\"] = factory(require(\"@angular/core\"), require(\"@angular/forms\"), require(\"@angular/common\"));\n\t\t\telse\n\t\t\t\troot[\"ng2-sticky\"] = factory(root[\"@angular/core\"], root[\"@angular/forms\"], root[\"@angular/common\"]);\n\t\t})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_6__) {\n\t\treturn /******/ (function(modules) { // webpackBootstrap\n\t\t/******/ \t// The module cache\n\t\t/******/ \tvar installedModules = {};\n\t\t/******/\n\t\t/******/ \t// The require function\n\t\t/******/ \tfunction __webpack_require__(moduleId) {\n\t\t/******/\n\t\t/******/ \t\t// Check if module is in cache\n\t\t/******/ \t\tif(installedModules[moduleId])\n\t\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\t\t/******/\n\t\t/******/ \t\t// Create a new module (and put it into the cache)\n\t\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t\t/******/ \t\t\texports: {},\n\t\t/******/ \t\t\tid: moduleId,\n\t\t/******/ \t\t\tloaded: false\n\t\t/******/ \t\t};\n\t\t/******/\n\t\t/******/ \t\t// Execute the module function\n\t\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t\t/******/\n\t\t/******/ \t\t// Flag the module as loaded\n\t\t/******/ \t\tmodule.loaded = true;\n\t\t/******/\n\t\t/******/ \t\t// Return the exports of the module\n\t\t/******/ \t\treturn module.exports;\n\t\t/******/ \t}\n\t\t/******/\n\t\t/******/\n\t\t/******/ \t// expose the modules object (__webpack_modules__)\n\t\t/******/ \t__webpack_require__.m = modules;\n\t\t/******/\n\t\t/******/ \t// expose the module cache\n\t\t/******/ \t__webpack_require__.c = installedModules;\n\t\t/******/\n\t\t/******/ \t// __webpack_public_path__\n\t\t/******/ \t__webpack_require__.p = \"\";\n\t\t/******/\n\t\t/******/ \t// Load entry module and return exports\n\t\t/******/ \treturn __webpack_require__(0);\n\t\t/******/ })\n\t\t/************************************************************************/\n\t\t/******/ ([\n\t\t/* 0 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar ng2_sticky_directive_1 = __webpack_require__(1);\n\t\t\texports.Ng2StickyDirective = ng2_sticky_directive_1.Ng2StickyDirective;\n\t\t\tvar ng2_sticky_module_1 = __webpack_require__(4);\n\t\t\texports.Ng2StickyModule = ng2_sticky_module_1.Ng2StickyModule;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 1 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t'use strict';\n\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t};\n\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t};\n\t\t\tvar core_1 = __webpack_require__(2);\n\t\t\tvar ng2_utils_1 = __webpack_require__(3);\n\t\t\tvar Ng2StickyDirective = (function () {\n\t\t\t    function Ng2StickyDirective(el) {\n\t\t\t        var _this = this;\n\t\t\t        this.stickyOffsetTop = 0;\n\t\t\t        this.scrollHandler = function () {\n\t\t\t            // let elRect: ClientRect = this.el.getBoundingClientRect();\n\t\t\t            var parentRect = _this.el.parentElement.getBoundingClientRect();\n\t\t\t            var bodyRect = document.body.getBoundingClientRect();\n\t\t\t            var dynProps;\n\t\t\t            if (_this.original.float === 'right') {\n\t\t\t                var right = bodyRect.right - parentRect.right + _this.original.marginRight;\n\t\t\t                dynProps = { right: right + 'px' };\n\t\t\t            }\n\t\t\t            else if (_this.original.float === 'left') {\n\t\t\t                var left = parentRect.left - bodyRect.left + _this.original.marginLeft;\n\t\t\t                dynProps = { left: left + 'px' };\n\t\t\t            }\n\t\t\t            else {\n\t\t\t                //console.log('parentRect..............', parentRect.width);\n\t\t\t                dynProps = { width: parentRect.width + 'px' };\n\t\t\t            }\n\t\t\t            //console.log('dynProps', dynProps);\n\t\t\t            if (_this.original.marginTop + _this.original.marginBottom +\n\t\t\t                _this.original.boundingClientRect.height + _this.stickyOffsetTop >= parentRect.bottom) {\n\t\t\t                /**\n\t\t\t                 * stikcy element reached to the bottom of the container\n\t\t\t                 */\n\t\t\t                // console.log('case 1 (absolute)', parentRect.bottom, this.original.marginBottom);\n\t\t\t                var floatAdjustment = _this.original.float === 'right' ? { right: 0 } :\n\t\t\t                    _this.original.float === 'left' ? { left: 0 } : {};\n\t\t\t                Object.assign(_this.el.style, {\n\t\t\t                    position: 'absolute',\n\t\t\t                    float: 'none',\n\t\t\t                    top: 'inherit',\n\t\t\t                    bottom: 0\n\t\t\t                }, dynProps, floatAdjustment);\n\t\t\t            }\n\t\t\t            else if (parentRect.top * -1 + _this.original.marginTop + _this.stickyOffsetTop > _this.original.offsetTop) {\n\t\t\t                /**\n\t\t\t                 * stikcy element is in the middle of container\n\t\t\t                 */\n\t\t\t                //console.log('case 2 (fixed)', parentRect.top * -1, this.original.marginTop, this.original.offsetTop);\n\t\t\t                // if not floating, add an empty filler element, since the original elements becames 'fixed'\n\t\t\t                if (_this.original.float !== 'left' && _this.original.float !== 'right' && !_this.fillerEl) {\n\t\t\t                    _this.fillerEl = document.createElement('div');\n\t\t\t                    _this.fillerEl.style.height = _this.el.offsetHeight + 'px';\n\t\t\t                    _this.parentEl.insertBefore(_this.fillerEl, _this.el);\n\t\t\t                }\n\t\t\t                Object.assign(_this.el.style, {\n\t\t\t                    position: 'fixed',\n\t\t\t                    float: 'none',\n\t\t\t                    top: _this.stickyOffsetTop + 'px',\n\t\t\t                    bottom: 'inherit'\n\t\t\t                }, dynProps);\n\t\t\t            }\n\t\t\t            else {\n\t\t\t                /**\n\t\t\t                 * stikcy element is in the original position\n\t\t\t                 */\n\t\t\t                // console.log('case 3 (original)');\n\t\t\t                if (_this.fillerEl) {\n\t\t\t                    _this.parentEl.removeChild(_this.fillerEl); //IE11 does not work with el.remove()\n\t\t\t                    _this.fillerEl = undefined;\n\t\t\t                }\n\t\t\t                Object.assign(_this.el.style, {\n\t\t\t                    position: _this.original.position,\n\t\t\t                    float: _this.original.float,\n\t\t\t                    top: _this.original.top,\n\t\t\t                    bottom: _this.original.bottom,\n\t\t\t                    width: _this.original.width,\n\t\t\t                    left: _this.original.left\n\t\t\t                }, dynProps);\n\t\t\t            }\n\t\t\t        };\n\t\t\t        this.el = this.el = el.nativeElement;\n\t\t\t        this.parentEl = this.el.parentElement;\n\t\t\t    }\n\t\t\t    Ng2StickyDirective.prototype.ngAfterViewInit = function () {\n\t\t\t        this.el.style.boxSizing = 'border-box';\n\t\t\t        if (this.stickyAfter) {\n\t\t\t            var cetStickyAfterEl = document.querySelector(this.stickyAfter);\n\t\t\t            if (cetStickyAfterEl) {\n\t\t\t                this.stickyOffsetTop = cetStickyAfterEl.getBoundingClientRect().bottom;\n\t\t\t            }\n\t\t\t        }\n\t\t\t        // set the parent relatively positioned\n\t\t\t        var allowedPositions = ['absolute', 'fixed', 'relative'];\n\t\t\t        var parentElPosition = ng2_utils_1.computedStyle(this.parentEl, 'position');\n\t\t\t        if (allowedPositions.indexOf(parentElPosition) === -1) {\n\t\t\t            this.parentEl.style.position = 'relative';\n\t\t\t        }\n\t\t\t        this.diff = {\n\t\t\t            top: this.el.offsetTop - this.parentEl.offsetTop,\n\t\t\t            left: this.el.offsetLeft - this.parentEl.offsetLeft\n\t\t\t        };\n\t\t\t        var elRect = this.el.getBoundingClientRect();\n\t\t\t        this.original = {\n\t\t\t            boundingClientRect: elRect,\n\t\t\t            position: ng2_utils_1.computedStyle(this.el, 'position'),\n\t\t\t            float: ng2_utils_1.computedStyle(this.el, 'float'),\n\t\t\t            top: ng2_utils_1.computedStyle(this.el, 'top'),\n\t\t\t            bottom: ng2_utils_1.computedStyle(this.el, 'bottom'),\n\t\t\t            left: ng2_utils_1.computedStyle(this.el, 'left'),\n\t\t\t            width: ng2_utils_1.computedStyle(this.el, 'width'),\n\t\t\t            offsetTop: this.el.offsetTop,\n\t\t\t            offsetLeft: this.el.offsetLeft,\n\t\t\t            marginTop: parseInt(ng2_utils_1.computedStyle(this.el, 'marginTop')),\n\t\t\t            marginBottom: parseInt(ng2_utils_1.computedStyle(this.el, 'marginBottom')),\n\t\t\t            marginLeft: parseInt(ng2_utils_1.computedStyle(this.el, 'marginLeft')),\n\t\t\t            marginRight: parseInt(ng2_utils_1.computedStyle(this.el, 'marginLeft'))\n\t\t\t        };\n\t\t\t        this.attach();\n\t\t\t    };\n\t\t\t    Ng2StickyDirective.prototype.ngOnDestroy = function () {\n\t\t\t        this.detach();\n\t\t\t    };\n\t\t\t    Ng2StickyDirective.prototype.attach = function () {\n\t\t\t        window.addEventListener('scroll', this.scrollHandler);\n\t\t\t        window.addEventListener('resize', this.scrollHandler);\n\t\t\t    };\n\t\t\t    Ng2StickyDirective.prototype.detach = function () {\n\t\t\t        window.removeEventListener('scroll', this.scrollHandler);\n\t\t\t        window.removeEventListener('resize', this.scrollHandler);\n\t\t\t    };\n\t\t\t    return Ng2StickyDirective;\n\t\t\t}());\n\t\t\t__decorate([\n\t\t\t    core_1.Input('sticky-after'),\n\t\t\t    __metadata(\"design:type\", String)\n\t\t\t], Ng2StickyDirective.prototype, \"stickyAfter\", void 0);\n\t\t\tNg2StickyDirective = __decorate([\n\t\t\t    core_1.Directive({\n\t\t\t        selector: '[ng2-sticky]'\n\t\t\t    }),\n\t\t\t    __metadata(\"design:paramtypes\", [core_1.ElementRef])\n\t\t\t], Ng2StickyDirective);\n\t\t\texports.Ng2StickyDirective = Ng2StickyDirective;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 2 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\t\t\n\t\t/***/ },\n\t\t/* 3 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t(function webpackUniversalModuleDefinition(root, factory) {\n\t\t\t\tif(true)\n\t\t\t\t\tmodule.exports = factory(__webpack_require__(2));\n\t\t\t\telse if(typeof define === 'function' && define.amd)\n\t\t\t\t\tdefine([\"@angular/core\"], factory);\n\t\t\t\telse if(typeof exports === 'object')\n\t\t\t\t\texports[\"ng2-utils\"] = factory(require(\"@angular/core\"));\n\t\t\t\telse\n\t\t\t\t\troot[\"ng2-utils\"] = factory(root[\"@angular/core\"]);\n\t\t\t})(this, function(__WEBPACK_EXTERNAL_MODULE_7__) {\n\t\t\treturn /******/ (function(modules) { // webpackBootstrap\n\t\t\t/******/ \t// The module cache\n\t\t\t/******/ \tvar installedModules = {};\n\t\t\t/******/\n\t\t\t/******/ \t// The require function\n\t\t\t/******/ \tfunction __webpack_require__(moduleId) {\n\t\t\t/******/\n\t\t\t/******/ \t\t// Check if module is in cache\n\t\t\t/******/ \t\tif(installedModules[moduleId])\n\t\t\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\t\t\t/******/\n\t\t\t/******/ \t\t// Create a new module (and put it into the cache)\n\t\t\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t\t\t/******/ \t\t\texports: {},\n\t\t\t/******/ \t\t\tid: moduleId,\n\t\t\t/******/ \t\t\tloaded: false\n\t\t\t/******/ \t\t};\n\t\t\t/******/\n\t\t\t/******/ \t\t// Execute the module function\n\t\t\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t\t\t/******/\n\t\t\t/******/ \t\t// Flag the module as loaded\n\t\t\t/******/ \t\tmodule.loaded = true;\n\t\t\t/******/\n\t\t\t/******/ \t\t// Return the exports of the module\n\t\t\t/******/ \t\treturn module.exports;\n\t\t\t/******/ \t}\n\t\t\t/******/\n\t\t\t/******/\n\t\t\t/******/ \t// expose the modules object (__webpack_modules__)\n\t\t\t/******/ \t__webpack_require__.m = modules;\n\t\t\t/******/\n\t\t\t/******/ \t// expose the module cache\n\t\t\t/******/ \t__webpack_require__.c = installedModules;\n\t\t\t/******/\n\t\t\t/******/ \t// __webpack_public_path__\n\t\t\t/******/ \t__webpack_require__.p = \"\";\n\t\t\t/******/\n\t\t\t/******/ \t// Load entry module and return exports\n\t\t\t/******/ \treturn __webpack_require__(0);\n\t\t\t/******/ })\n\t\t\t/************************************************************************/\n\t\t\t/******/ ([\n\t\t\t/* 0 */\n\t\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\t\n\t\t\t\t\"use strict\";\n\t\t\t\tvar scroll_to_1 = __webpack_require__(1);\n\t\t\t\texports.scrollTo = scroll_to_1.scrollTo;\n\t\t\t\tvar element_visible_1 = __webpack_require__(2);\n\t\t\t\texports.elementVisible = element_visible_1.elementVisible;\n\t\t\t\tvar computed_style_1 = __webpack_require__(3);\n\t\t\t\texports.computedStyle = computed_style_1.computedStyle;\n\t\t\t\tvar outer_width_1 = __webpack_require__(4);\n\t\t\t\texports.outerWidth = outer_width_1.outerWidth;\n\t\t\t\tvar outer_height_1 = __webpack_require__(5);\n\t\t\t\texports.outerHeight = outer_height_1.outerHeight;\n\t\t\t\tvar html_code_pipe_1 = __webpack_require__(6);\n\t\t\t\texports.HtmlCodePipe = html_code_pipe_1.HtmlCodePipe;\n\t\t\t\tvar javascript_code_pipe_1 = __webpack_require__(8);\n\t\t\t\texports.JavascriptCodePipe = javascript_code_pipe_1.JavascriptCodePipe;\n\t\t\t\tvar ng2_utils_module_1 = __webpack_require__(13);\n\t\t\t\texports.Ng2UtilsModule = ng2_utils_module_1.Ng2UtilsModule;\n\t\t\t\n\t\t\t\n\t\t\t/***/ },\n\t\t\t/* 1 */\n\t\t\t/***/ function(module, exports) {\n\t\t\t\n\t\t\t\t\"use strict\";\n\t\t\t\t/**\n\t\t\t\t * scroll to the selector within the parent selector by scrolling 10 times within 500ms\n\t\t\t\t * @param selector\n\t\t\t\t * @param parentSelector\n\t\t\t\t */\n\t\t\t\tfunction scrollTo(selector, parentSelector, horizontal, distance) {\n\t\t\t\t    // argument validation\n\t\t\t\t    var parentEl, targetEl;\n\t\t\t\t    parentSelector = parentSelector || 'body';\n\t\t\t\t    targetEl = document.querySelector(selector);\n\t\t\t\t    if (!targetEl) {\n\t\t\t\t        throw \"Invalid selector \" + selector;\n\t\t\t\t    }\n\t\t\t\t    parentEl = document.querySelector(parentSelector);\n\t\t\t\t    if (!parentEl) {\n\t\t\t\t        throw \"Invalid parent selector \" + parentSelector;\n\t\t\t\t    }\n\t\t\t\t    // detect the current environment\n\t\t\t\t    var parentElStyle = window.getComputedStyle(parentEl);\n\t\t\t\t    var scrollContainerEl = parentElStyle.overflow === 'auto' ? parentEl : document.body;\n\t\t\t\t    var currentScrollTop = scrollContainerEl.scrollTop;\n\t\t\t\t    var currentScrollLeft = scrollContainerEl.scrollLeft;\n\t\t\t\t    // determine targetOffsetTop(or Left);\n\t\t\t\t    var targetOffsetTop;\n\t\t\t\t    var targetOffsetLeft;\n\t\t\t\t    if (scrollContainerEl === document.body) {\n\t\t\t\t        var bodyRect = document.body.getBoundingClientRect();\n\t\t\t\t        var targetRect = targetEl.getBoundingClientRect();\n\t\t\t\t        targetOffsetTop = targetRect.top - bodyRect.top;\n\t\t\t\t        targetOffsetLeft = targetRect.left - bodyRect.left;\n\t\t\t\t    }\n\t\t\t\t    else {\n\t\t\t\t        targetOffsetTop = targetEl.offsetTop;\n\t\t\t\t        targetOffsetLeft = targetEl.offsetLeft;\n\t\t\t\t    }\n\t\t\t\t    if (distance) {\n\t\t\t\t        currentScrollTop += distance;\n\t\t\t\t        currentScrollLeft += distance;\n\t\t\t\t    }\n\t\t\t\t    // start scrolling\n\t\t\t\t    var step = horizontal ?\n\t\t\t\t        Math.ceil((targetOffsetLeft - currentScrollLeft) / 10) :\n\t\t\t\t        Math.ceil((targetOffsetTop - currentScrollTop) / 10);\n\t\t\t\t    var scrollProp = horizontal ? 'scrollLeft' : 'scrollTop';\n\t\t\t\t    (function loop(i, prop) {\n\t\t\t\t        setTimeout(function main() {\n\t\t\t\t            scrollContainerEl[prop] += step;\n\t\t\t\t            i > 1 && loop(i - 1, prop);\n\t\t\t\t        }, 50);\n\t\t\t\t    }(10, scrollProp));\n\t\t\t\t}\n\t\t\t\texports.scrollTo = scrollTo;\n\t\t\t\n\t\t\t\n\t\t\t/***/ },\n\t\t\t/* 2 */\n\t\t\t/***/ function(module, exports) {\n\t\t\t\n\t\t\t\t\"use strict\";\n\t\t\t\t/**\n\t\t\t\t * Returns an element is visible within outer element\n\t\t\t\t * @param innerEl\n\t\t\t\t * @param outerEl\n\t\t\t\t * @param adjustment\n\t\t\t\t * @returns {{top: boolean, bottom: boolean, left: boolean, right: boolean}}\n\t\t\t\t */\n\t\t\t\tfunction elementVisible(innerElement, outerElement, adjustment) {\n\t\t\t\t    var innerEl;\n\t\t\t\t    var outerEl;\n\t\t\t\t    innerEl = (typeof innerElement === 'string') ?\n\t\t\t\t        document.querySelector(innerElement) : innerElement;\n\t\t\t\t    outerEl = (typeof outerElement === 'string') ?\n\t\t\t\t        document.querySelector(outerElement) : outerElement;\n\t\t\t\t    var innerRect = innerEl.getBoundingClientRect();\n\t\t\t\t    var bottomAdjustment = (adjustment && adjustment.bottom || 0);\n\t\t\t\t    if (outerEl === window) {\n\t\t\t\t        return {\n\t\t\t\t            top: innerRect.bottom - bottomAdjustment > window.innerHeight\n\t\t\t\t                && innerRect.top < window.innerHeight,\n\t\t\t\t            bottom: innerRect.bottom - bottomAdjustment > 0\n\t\t\t\t                && innerRect.bottom < window.innerHeight,\n\t\t\t\t            left: innerRect.right > window.innerWidth\n\t\t\t\t                && innerRect.left < window.innerWidth,\n\t\t\t\t            right: innerRect.right > 0\n\t\t\t\t                && innerRect.right < window.innerWidth\n\t\t\t\t        };\n\t\t\t\t    }\n\t\t\t\t    else {\n\t\t\t\t        var outerRect = outerEl.getBoundingClientRect();\n\t\t\t\t        var defaultView = (innerEl.ownerDocument || document).defaultView;\n\t\t\t\t        var computedStyle = defaultView.getComputedStyle(outerEl, null);\n\t\t\t\t        var outerRectBorderTopWidth = parseInt(computedStyle.getPropertyValue('border-top-width'), 10);\n\t\t\t\t        var outerRectBorderLeftWidth = parseInt(computedStyle.getPropertyValue('border-left-width'), 10);\n\t\t\t\t        /* top is visible or bottom is visible */\n\t\t\t\t        var topVisible = (innerRect.top >= outerRect.top\n\t\t\t\t            && innerRect.top < outerRect.bottom);\n\t\t\t\t        var bottomVisible = (innerRect.bottom > (outerRect.top + outerRectBorderTopWidth)\n\t\t\t\t            && innerRect.bottom < outerRect.bottom);\n\t\t\t\t        var leftVisible = (innerRect.left >= outerRect.left\n\t\t\t\t            && innerRect.left < outerRect.right);\n\t\t\t\t        var rightVisible = (innerRect.right > (outerRect.left + outerRectBorderLeftWidth)\n\t\t\t\t            && innerRect.right < outerRect.right);\n\t\t\t\t        return {\n\t\t\t\t            top: topVisible,\n\t\t\t\t            bottom: bottomVisible,\n\t\t\t\t            left: leftVisible,\n\t\t\t\t            right: rightVisible\n\t\t\t\t        };\n\t\t\t\t    }\n\t\t\t\t}\n\t\t\t\texports.elementVisible = elementVisible;\n\t\t\t\n\t\t\t\n\t\t\t/***/ },\n\t\t\t/* 3 */\n\t\t\t/***/ function(module, exports) {\n\t\t\t\n\t\t\t\t\"use strict\";\n\t\t\t\t/**\n\t\t\t\t * returns coumputed style of given element\n\t\t\t\t * @param el\n\t\t\t\t * @param styleProp\n\t\t\t\t * @returns {any}\n\t\t\t\t */\n\t\t\t\tfunction computedStyle(element, styleProp) {\n\t\t\t\t    var el;\n\t\t\t\t    el = (typeof element === 'string') ? document.querySelector(element) : element;\n\t\t\t\t    var value, defaultView = (el.ownerDocument || document).defaultView;\n\t\t\t\t    // W3C standard way:\n\t\t\t\t    if (defaultView && defaultView.getComputedStyle) {\n\t\t\t\t        // sanitize property name to css notation\n\t\t\t\t        // (hypen separated words eg. font-Size)\n\t\t\t\t        styleProp = styleProp.replace(/([A-Z])/g, \"-$1\").toLowerCase();\n\t\t\t\t        return defaultView.getComputedStyle(el, null).getPropertyValue(styleProp);\n\t\t\t\t    }\n\t\t\t\t    else if (el['currentStyle']) {\n\t\t\t\t        // sanitize property name to camelCase\n\t\t\t\t        styleProp = styleProp.replace(/\\-(\\w)/g, function (str, letter) {\n\t\t\t\t            return letter.toUpperCase();\n\t\t\t\t        });\n\t\t\t\t        value = el['currentStyle'][styleProp];\n\t\t\t\t        // convert other units to pixels on IE\n\t\t\t\t        if (/^\\d+(em|pt|%|ex)?$/i.test(value)) {\n\t\t\t\t            return (function (value) {\n\t\t\t\t                var oldLeft = el.style.left, oldRsLeft = el['runtimeStyle'].left;\n\t\t\t\t                el['runtimeStyle'].left = el['currentStyle'].left;\n\t\t\t\t                el.style.left = value || 0;\n\t\t\t\t                value = el.style['pixelLeft'] + \"px\";\n\t\t\t\t                el.style.left = oldLeft;\n\t\t\t\t                el['runtimeStyle'].left = oldRsLeft;\n\t\t\t\t                return value;\n\t\t\t\t            })(value);\n\t\t\t\t        }\n\t\t\t\t        return value;\n\t\t\t\t    }\n\t\t\t\t}\n\t\t\t\texports.computedStyle = computedStyle;\n\t\t\t\n\t\t\t\n\t\t\t/***/ },\n\t\t\t/* 4 */\n\t\t\t/***/ function(module, exports) {\n\t\t\t\n\t\t\t\t\"use strict\";\n\t\t\t\tfunction outerWidth(element) {\n\t\t\t\t    var el;\n\t\t\t\t    (typeof element === 'string') ? (el = document.querySelector(element)) : element;\n\t\t\t\t    var style = getComputedStyle(el);\n\t\t\t\t    return el.offsetWidth +\n\t\t\t\t        parseInt(style.getPropertyValue('margin-left')) +\n\t\t\t\t        parseInt(style.getPropertyValue('margin-right'));\n\t\t\t\t}\n\t\t\t\texports.outerWidth = outerWidth;\n\t\t\t\n\t\t\t\n\t\t\t/***/ },\n\t\t\t/* 5 */\n\t\t\t/***/ function(module, exports) {\n\t\t\t\n\t\t\t\t\"use strict\";\n\t\t\t\tfunction outerHeight(element) {\n\t\t\t\t    var el;\n\t\t\t\t    (typeof element === 'string') ? (el = document.querySelector(element)) : element;\n\t\t\t\t    var style = getComputedStyle(el);\n\t\t\t\t    return el.offsetHeight +\n\t\t\t\t        parseInt(style.getPropertyValue('margin-top')) +\n\t\t\t\t        parseInt(style.getPropertyValue('margin-bottom'));\n\t\t\t\t}\n\t\t\t\texports.outerHeight = outerHeight;\n\t\t\t\n\t\t\t\n\t\t\t/***/ },\n\t\t\t/* 6 */\n\t\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\t\n\t\t\t\t\"use strict\";\n\t\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t\t};\n\t\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t\t};\n\t\t\t\tvar core_1 = __webpack_require__(7);\n\t\t\t\tvar HtmlCodePipe = (function () {\n\t\t\t\t    function HtmlCodePipe() {\n\t\t\t\t    }\n\t\t\t\t    HtmlCodePipe.prototype.transform = function (html, tagsIncludeExclude) {\n\t\t\t\t        var ret;\n\t\t\t\t        var tagsInclude = [];\n\t\t\t\t        var tagsExclude = [];\n\t\t\t\t        (tagsIncludeExclude || '').split(',').forEach(function (tag) {\n\t\t\t\t            if (tag.match(/^-/)) {\n\t\t\t\t                tag = tag.replace(/^-/, '');\n\t\t\t\t                tagsExclude.push(tag);\n\t\t\t\t            }\n\t\t\t\t            else if (tag !== '') {\n\t\t\t\t                tagsInclude.push(tag);\n\t\t\t\t            }\n\t\t\t\t        });\n\t\t\t\t        ret = tagsInclude.length > 0 ? '' : html;\n\t\t\t\t        if (tagsInclude.length > 0) {\n\t\t\t\t            tagsInclude.forEach(function (tag) {\n\t\t\t\t                var regEx = new RegExp(\"<\" + tag + \">([\\\\s\\\\S]*?)</\" + tag + \">\");\n\t\t\t\t                var matches = html.match(regEx);\n\t\t\t\t                var output = matches[0].replace(/<\\/?ng2-utils-[0-9]+>\\s*/g, ''); //remove <ng2-utils-xxx> and </ng2-utils-xxx>\n\t\t\t\t                ret = ret + output;\n\t\t\t\t            });\n\t\t\t\t        }\n\t\t\t\t        if (tagsExclude.length > 0) {\n\t\t\t\t            tagsExclude.forEach(function (tag) {\n\t\t\t\t                var regEx = new RegExp(\"<\" + tag + \">([\\\\s\\\\S]*?)</\" + tag + \">\");\n\t\t\t\t                ret = ret.replace(regEx, '');\n\t\t\t\t            });\n\t\t\t\t        }\n\t\t\t\t        return ret;\n\t\t\t\t    };\n\t\t\t\t    return HtmlCodePipe;\n\t\t\t\t}());\n\t\t\t\tHtmlCodePipe = __decorate([\n\t\t\t\t    core_1.Pipe({ name: 'htmlCode' }),\n\t\t\t\t    __metadata(\"design:paramtypes\", [])\n\t\t\t\t], HtmlCodePipe);\n\t\t\t\texports.HtmlCodePipe = HtmlCodePipe;\n\t\t\t\n\t\t\t\n\t\t\t/***/ },\n\t\t\t/* 7 */\n\t\t\t/***/ function(module, exports) {\n\t\t\t\n\t\t\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_7__;\n\t\t\t\n\t\t\t/***/ },\n\t\t\t/* 8 */\n\t\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\t\n\t\t\t\t\"use strict\";\n\t\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t\t};\n\t\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t\t};\n\t\t\t\tvar core_1 = __webpack_require__(7);\n\t\t\t\tvar js_beautify = __webpack_require__(9);\n\t\t\t\tvar JavascriptCodePipe = (function () {\n\t\t\t\t    function JavascriptCodePipe() {\n\t\t\t\t    }\n\t\t\t\t    JavascriptCodePipe.prototype.transform = function (value) {\n\t\t\t\t        value = value.toString();\n\t\t\t\t        var ret = value;\n\t\t\t\t        return js_beautify(value);\n\t\t\t\t    };\n\t\t\t\t    return JavascriptCodePipe;\n\t\t\t\t}());\n\t\t\t\tJavascriptCodePipe = __decorate([\n\t\t\t\t    core_1.Pipe({ name: 'jsCode' }),\n\t\t\t\t    __metadata(\"design:paramtypes\", [])\n\t\t\t\t], JavascriptCodePipe);\n\t\t\t\texports.JavascriptCodePipe = JavascriptCodePipe;\n\t\t\t\n\t\t\t\n\t\t\t/***/ },\n\t\t\t/* 9 */\n\t\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\t\n\t\t\t\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n\t\t\t\tThe following batches are equivalent:\n\t\t\t\t\n\t\t\t\tvar beautify_js = require('js-beautify');\n\t\t\t\tvar beautify_js = require('js-beautify').js;\n\t\t\t\tvar beautify_js = require('js-beautify').js_beautify;\n\t\t\t\t\n\t\t\t\tvar beautify_css = require('js-beautify').css;\n\t\t\t\tvar beautify_css = require('js-beautify').css_beautify;\n\t\t\t\t\n\t\t\t\tvar beautify_html = require('js-beautify').html;\n\t\t\t\tvar beautify_html = require('js-beautify').html_beautify;\n\t\t\t\t\n\t\t\t\tAll methods returned accept two arguments, the source string and an options object.\n\t\t\t\t**/\n\t\t\t\t\n\t\t\t\tfunction get_beautify(js_beautify, css_beautify, html_beautify) {\n\t\t\t\t    // the default is js\n\t\t\t\t    var beautify = function(src, config) {\n\t\t\t\t        return js_beautify.js_beautify(src, config);\n\t\t\t\t    };\n\t\t\t\t\n\t\t\t\t    // short aliases\n\t\t\t\t    beautify.js = js_beautify.js_beautify;\n\t\t\t\t    beautify.css = css_beautify.css_beautify;\n\t\t\t\t    beautify.html = html_beautify.html_beautify;\n\t\t\t\t\n\t\t\t\t    // legacy aliases\n\t\t\t\t    beautify.js_beautify = js_beautify.js_beautify;\n\t\t\t\t    beautify.css_beautify = css_beautify.css_beautify;\n\t\t\t\t    beautify.html_beautify = html_beautify.html_beautify;\n\t\t\t\t\n\t\t\t\t    return beautify;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (true) {\n\t\t\t\t    // Add support for AMD ( https://github.com/amdjs/amdjs-api/wiki/AMD#defineamd-property- )\n\t\t\t\t    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t\t\t\t        __webpack_require__(10),\n\t\t\t\t        __webpack_require__(11),\n\t\t\t\t        __webpack_require__(12)\n\t\t\t\t    ], __WEBPACK_AMD_DEFINE_RESULT__ = function(js_beautify, css_beautify, html_beautify) {\n\t\t\t\t        return get_beautify(js_beautify, css_beautify, html_beautify);\n\t\t\t\t    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\t\t\t} else {\n\t\t\t\t    (function(mod) {\n\t\t\t\t        var js_beautify = require('./lib/beautify');\n\t\t\t\t        var css_beautify = require('./lib/beautify-css');\n\t\t\t\t        var html_beautify = require('./lib/beautify-html');\n\t\t\t\t\n\t\t\t\t        mod.exports = get_beautify(js_beautify, css_beautify, html_beautify);\n\t\t\t\t\n\t\t\t\t    })(module);\n\t\t\t\t}\n\t\t\t\n\t\t\t/***/ },\n\t\t\t/* 10 */\n\t\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\t\n\t\t\t\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*jshint curly:true, eqeqeq:true, laxbreak:true, noempty:false */\n\t\t\t\t/*\n\t\t\t\t\n\t\t\t\t  The MIT License (MIT)\n\t\t\t\t\n\t\t\t\t  Copyright (c) 2007-2013 Einar Lielmanis and contributors.\n\t\t\t\t\n\t\t\t\t  Permission is hereby granted, free of charge, to any person\n\t\t\t\t  obtaining a copy of this software and associated documentation files\n\t\t\t\t  (the \"Software\"), to deal in the Software without restriction,\n\t\t\t\t  including without limitation the rights to use, copy, modify, merge,\n\t\t\t\t  publish, distribute, sublicense, and/or sell copies of the Software,\n\t\t\t\t  and to permit persons to whom the Software is furnished to do so,\n\t\t\t\t  subject to the following conditions:\n\t\t\t\t\n\t\t\t\t  The above copyright notice and this permission notice shall be\n\t\t\t\t  included in all copies or substantial portions of the Software.\n\t\t\t\t\n\t\t\t\t  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n\t\t\t\t  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t\t\t\t  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n\t\t\t\t  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n\t\t\t\t  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n\t\t\t\t  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n\t\t\t\t  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\t\t\t\t  SOFTWARE.\n\t\t\t\t\n\t\t\t\t JS Beautifier\n\t\t\t\t---------------\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t  Written by Einar Lielmanis, <einar@jsbeautifier.org>\n\t\t\t\t      http://jsbeautifier.org/\n\t\t\t\t\n\t\t\t\t  Originally converted to javascript by Vital, <vital76@gmail.com>\n\t\t\t\t  \"End braces on own line\" added by Chris J. Shull, <chrisjshull@gmail.com>\n\t\t\t\t  Parsing improvements for brace-less statements by Liam Newman <bitwiseman@gmail.com>\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t  Usage:\n\t\t\t\t    js_beautify(js_source_text);\n\t\t\t\t    js_beautify(js_source_text, options);\n\t\t\t\t\n\t\t\t\t  The options are:\n\t\t\t\t    indent_size (default 4)          - indentation size,\n\t\t\t\t    indent_char (default space)      - character to indent with,\n\t\t\t\t    preserve_newlines (default true) - whether existing line breaks should be preserved,\n\t\t\t\t    max_preserve_newlines (default unlimited) - maximum number of line breaks to be preserved in one chunk,\n\t\t\t\t\n\t\t\t\t    jslint_happy (default false) - if true, then jslint-stricter mode is enforced.\n\t\t\t\t\n\t\t\t\t            jslint_happy        !jslint_happy\n\t\t\t\t            ---------------------------------\n\t\t\t\t            function ()         function()\n\t\t\t\t\n\t\t\t\t            switch () {         switch() {\n\t\t\t\t            case 1:               case 1:\n\t\t\t\t              break;                break;\n\t\t\t\t            }                   }\n\t\t\t\t\n\t\t\t\t    space_after_anon_function (default false) - should the space before an anonymous function's parens be added, \"function()\" vs \"function ()\",\n\t\t\t\t          NOTE: This option is overriden by jslint_happy (i.e. if jslint_happy is true, space_after_anon_function is true by design)\n\t\t\t\t\n\t\t\t\t    brace_style (default \"collapse\") - \"collapse-preserve-inline\" | \"collapse\" | \"expand\" | \"end-expand\" | \"none\"\n\t\t\t\t            put braces on the same line as control statements (default), or put braces on own line (Allman / ANSI style), or just put end braces on own line, or attempt to keep them where they are.\n\t\t\t\t\n\t\t\t\t    space_before_conditional (default true) - should the space before conditional statement be added, \"if(true)\" vs \"if (true)\",\n\t\t\t\t\n\t\t\t\t    unescape_strings (default false) - should printable characters in strings encoded in \\xNN notation be unescaped, \"example\" vs \"\\x65\\x78\\x61\\x6d\\x70\\x6c\\x65\"\n\t\t\t\t\n\t\t\t\t    wrap_line_length (default unlimited) - lines should wrap at next opportunity after this number of characters.\n\t\t\t\t          NOTE: This is not a hard limit. Lines will continue until a point where a newline would\n\t\t\t\t                be preserved if it were present.\n\t\t\t\t\n\t\t\t\t    end_with_newline (default false)  - end output with a newline\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t    e.g\n\t\t\t\t\n\t\t\t\t    js_beautify(js_source_text, {\n\t\t\t\t      'indent_size': 1,\n\t\t\t\t      'indent_char': '\\t'\n\t\t\t\t    });\n\t\t\t\t\n\t\t\t\t*/\n\t\t\t\t\n\t\t\t\t// Object.values polyfill found here:\n\t\t\t\t// http://tokenposts.blogspot.com.au/2012/04/javascript-objectkeys-browser.html\n\t\t\t\tif (!Object.values) {\n\t\t\t\t    Object.values = function(o) {\n\t\t\t\t        if (o !== Object(o)) {\n\t\t\t\t            throw new TypeError('Object.values called on a non-object');\n\t\t\t\t        }\n\t\t\t\t        var k = [],\n\t\t\t\t            p;\n\t\t\t\t        for (p in o) {\n\t\t\t\t            if (Object.prototype.hasOwnProperty.call(o, p)) {\n\t\t\t\t                k.push(o[p]);\n\t\t\t\t            }\n\t\t\t\t        }\n\t\t\t\t        return k;\n\t\t\t\t    };\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t(function() {\n\t\t\t\t\n\t\t\t\t    function js_beautify(js_source_text, options) {\n\t\t\t\t\n\t\t\t\t        var acorn = {};\n\t\t\t\t        (function(exports) {\n\t\t\t\t            /* jshint curly: false */\n\t\t\t\t            // This section of code is taken from acorn.\n\t\t\t\t            //\n\t\t\t\t            // Acorn was written by Marijn Haverbeke and released under an MIT\n\t\t\t\t            // license. The Unicode regexps (for identifiers and whitespace) were\n\t\t\t\t            // taken from [Esprima](http://esprima.org) by Ariya Hidayat.\n\t\t\t\t            //\n\t\t\t\t            // Git repositories for Acorn are available at\n\t\t\t\t            //\n\t\t\t\t            //     http://marijnhaverbeke.nl/git/acorn\n\t\t\t\t            //     https://github.com/marijnh/acorn.git\n\t\t\t\t\n\t\t\t\t            // ## Character categories\n\t\t\t\t\n\t\t\t\t            // Big ugly regular expressions that match characters in the\n\t\t\t\t            // whitespace, identifier, and identifier-start categories. These\n\t\t\t\t            // are only applied when a character is found to actually have a\n\t\t\t\t            // code point above 128.\n\t\t\t\t\n\t\t\t\t            var nonASCIIwhitespace = /[\\u1680\\u180e\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/; // jshint ignore:line\n\t\t\t\t            var nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u08a0\\u08a2-\\u08ac\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097f\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d\\u0c58\\u0c59\\u0c60\\u0c61\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d60\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19c1-\\u19c7\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2e2f\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua697\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa80-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\n\t\t\t\t            var nonASCIIidentifierChars = \"\\u0300-\\u036f\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u0620-\\u0649\\u0672-\\u06d3\\u06e7-\\u06e8\\u06fb-\\u06fc\\u0730-\\u074a\\u0800-\\u0814\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0840-\\u0857\\u08e4-\\u08fe\\u0900-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962-\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09d7\\u09df-\\u09e0\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2-\\u0ae3\\u0ae6-\\u0aef\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b5f-\\u0b60\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c01-\\u0c03\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62-\\u0c63\\u0c66-\\u0c6f\\u0c82\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2-\\u0ce3\\u0ce6-\\u0cef\\u0d02\\u0d03\\u0d46-\\u0d48\\u0d57\\u0d62-\\u0d63\\u0d66-\\u0d6f\\u0d82\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0df2\\u0df3\\u0e34-\\u0e3a\\u0e40-\\u0e45\\u0e50-\\u0e59\\u0eb4-\\u0eb9\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f41-\\u0f47\\u0f71-\\u0f84\\u0f86-\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u1000-\\u1029\\u1040-\\u1049\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u170e-\\u1710\\u1720-\\u1730\\u1740-\\u1750\\u1772\\u1773\\u1780-\\u17b2\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u1920-\\u192b\\u1930-\\u193b\\u1951-\\u196d\\u19b0-\\u19c0\\u19c8-\\u19c9\\u19d0-\\u19d9\\u1a00-\\u1a15\\u1a20-\\u1a53\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1b46-\\u1b4b\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c00-\\u1c22\\u1c40-\\u1c49\\u1c5b-\\u1c7d\\u1cd0-\\u1cd2\\u1d00-\\u1dbe\\u1e01-\\u1f15\\u200c\\u200d\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2d81-\\u2d96\\u2de0-\\u2dff\\u3021-\\u3028\\u3099\\u309a\\ua640-\\ua66d\\ua674-\\ua67d\\ua69f\\ua6f0-\\ua6f1\\ua7f8-\\ua800\\ua806\\ua80b\\ua823-\\ua827\\ua880-\\ua881\\ua8b4-\\ua8c4\\ua8d0-\\ua8d9\\ua8f3-\\ua8f7\\ua900-\\ua909\\ua926-\\ua92d\\ua930-\\ua945\\ua980-\\ua983\\ua9b3-\\ua9c0\\uaa00-\\uaa27\\uaa40-\\uaa41\\uaa4c-\\uaa4d\\uaa50-\\uaa59\\uaa7b\\uaae0-\\uaae9\\uaaf2-\\uaaf3\\uabc0-\\uabe1\\uabec\\uabed\\uabf0-\\uabf9\\ufb20-\\ufb28\\ufe00-\\ufe0f\\ufe20-\\ufe26\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\n\t\t\t\t            var nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\n\t\t\t\t            var nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\n\t\t\t\t\n\t\t\t\t            // Whether a single character denotes a newline.\n\t\t\t\t\n\t\t\t\t            exports.newline = /[\\n\\r\\u2028\\u2029]/;\n\t\t\t\t\n\t\t\t\t            // Matches a whole line break (where CRLF is considered a single\n\t\t\t\t            // line break). Used to count lines.\n\t\t\t\t\n\t\t\t\t            // in javascript, these two differ\n\t\t\t\t            // in python they are the same, different methods are called on them\n\t\t\t\t            exports.lineBreak = new RegExp('\\r\\n|' + exports.newline.source);\n\t\t\t\t            exports.allLineBreaks = new RegExp(exports.lineBreak.source, 'g');\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t            // Test whether a given character code starts an identifier.\n\t\t\t\t\n\t\t\t\t            exports.isIdentifierStart = function(code) {\n\t\t\t\t                // permit $ (36) and @ (64). @ is used in ES7 decorators.\n\t\t\t\t                if (code < 65) return code === 36 || code === 64;\n\t\t\t\t                // 65 through 91 are uppercase letters.\n\t\t\t\t                if (code < 91) return true;\n\t\t\t\t                // permit _ (95).\n\t\t\t\t                if (code < 97) return code === 95;\n\t\t\t\t                // 97 through 123 are lowercase letters.\n\t\t\t\t                if (code < 123) return true;\n\t\t\t\t                return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\n\t\t\t\t            };\n\t\t\t\t\n\t\t\t\t            // Test whether a given character is part of an identifier.\n\t\t\t\t\n\t\t\t\t            exports.isIdentifierChar = function(code) {\n\t\t\t\t                if (code < 48) return code === 36;\n\t\t\t\t                if (code < 58) return true;\n\t\t\t\t                if (code < 65) return false;\n\t\t\t\t                if (code < 91) return true;\n\t\t\t\t                if (code < 97) return code === 95;\n\t\t\t\t                if (code < 123) return true;\n\t\t\t\t                return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n\t\t\t\t            };\n\t\t\t\t        })(acorn);\n\t\t\t\t        /* jshint curly: true */\n\t\t\t\t\n\t\t\t\t        function in_array(what, arr) {\n\t\t\t\t            for (var i = 0; i < arr.length; i += 1) {\n\t\t\t\t                if (arr[i] === what) {\n\t\t\t\t                    return true;\n\t\t\t\t                }\n\t\t\t\t            }\n\t\t\t\t            return false;\n\t\t\t\t        }\n\t\t\t\t\n\t\t\t\t        function trim(s) {\n\t\t\t\t            return s.replace(/^\\s+|\\s+$/g, '');\n\t\t\t\t        }\n\t\t\t\t\n\t\t\t\t        function ltrim(s) {\n\t\t\t\t            return s.replace(/^\\s+/g, '');\n\t\t\t\t        }\n\t\t\t\t\n\t\t\t\t        // function rtrim(s) {\n\t\t\t\t        //     return s.replace(/\\s+$/g, '');\n\t\t\t\t        // }\n\t\t\t\t\n\t\t\t\t        function sanitizeOperatorPosition(opPosition) {\n\t\t\t\t            opPosition = opPosition || OPERATOR_POSITION.before_newline;\n\t\t\t\t\n\t\t\t\t            var validPositionValues = Object.values(OPERATOR_POSITION);\n\t\t\t\t\n\t\t\t\t            if (!in_array(opPosition, validPositionValues)) {\n\t\t\t\t                throw new Error(\"Invalid Option Value: The option 'operator_position' must be one of the following values\\n\" +\n\t\t\t\t                    validPositionValues +\n\t\t\t\t                    \"\\nYou passed in: '\" + opPosition + \"'\");\n\t\t\t\t            }\n\t\t\t\t\n\t\t\t\t            return opPosition;\n\t\t\t\t        }\n\t\t\t\t\n\t\t\t\t        var OPERATOR_POSITION = {\n\t\t\t\t            before_newline: 'before-newline',\n\t\t\t\t            after_newline: 'after-newline',\n\t\t\t\t            preserve_newline: 'preserve-newline',\n\t\t\t\t        };\n\t\t\t\t\n\t\t\t\t        var OPERATOR_POSITION_BEFORE_OR_PRESERVE = [OPERATOR_POSITION.before_newline, OPERATOR_POSITION.preserve_newline];\n\t\t\t\t\n\t\t\t\t        var MODE = {\n\t\t\t\t            BlockStatement: 'BlockStatement', // 'BLOCK'\n\t\t\t\t            Statement: 'Statement', // 'STATEMENT'\n\t\t\t\t            ObjectLiteral: 'ObjectLiteral', // 'OBJECT',\n\t\t\t\t            ArrayLiteral: 'ArrayLiteral', //'[EXPRESSION]',\n\t\t\t\t            ForInitializer: 'ForInitializer', //'(FOR-EXPRESSION)',\n\t\t\t\t            Conditional: 'Conditional', //'(COND-EXPRESSION)',\n\t\t\t\t            Expression: 'Expression' //'(EXPRESSION)'\n\t\t\t\t        };\n\t\t\t\t\n\t\t\t\t        function Beautifier(js_source_text, options) {\n\t\t\t\t            \"use strict\";\n\t\t\t\t            var output;\n\t\t\t\t            var tokens = [],\n\t\t\t\t                token_pos;\n\t\t\t\t            var Tokenizer;\n\t\t\t\t            var current_token;\n\t\t\t\t            var last_type, last_last_text, indent_string;\n\t\t\t\t            var flags, previous_flags, flag_store;\n\t\t\t\t            var prefix;\n\t\t\t\t\n\t\t\t\t            var handlers, opt;\n\t\t\t\t            var baseIndentString = '';\n\t\t\t\t\n\t\t\t\t            handlers = {\n\t\t\t\t                'TK_START_EXPR': handle_start_expr,\n\t\t\t\t                'TK_END_EXPR': handle_end_expr,\n\t\t\t\t                'TK_START_BLOCK': handle_start_block,\n\t\t\t\t                'TK_END_BLOCK': handle_end_block,\n\t\t\t\t                'TK_WORD': handle_word,\n\t\t\t\t                'TK_RESERVED': handle_word,\n\t\t\t\t                'TK_SEMICOLON': handle_semicolon,\n\t\t\t\t                'TK_STRING': handle_string,\n\t\t\t\t                'TK_EQUALS': handle_equals,\n\t\t\t\t                'TK_OPERATOR': handle_operator,\n\t\t\t\t                'TK_COMMA': handle_comma,\n\t\t\t\t                'TK_BLOCK_COMMENT': handle_block_comment,\n\t\t\t\t                'TK_COMMENT': handle_comment,\n\t\t\t\t                'TK_DOT': handle_dot,\n\t\t\t\t                'TK_UNKNOWN': handle_unknown,\n\t\t\t\t                'TK_EOF': handle_eof\n\t\t\t\t            };\n\t\t\t\t\n\t\t\t\t            function create_flags(flags_base, mode) {\n\t\t\t\t                var next_indent_level = 0;\n\t\t\t\t                if (flags_base) {\n\t\t\t\t                    next_indent_level = flags_base.indentation_level;\n\t\t\t\t                    if (!output.just_added_newline() &&\n\t\t\t\t                        flags_base.line_indent_level > next_indent_level) {\n\t\t\t\t                        next_indent_level = flags_base.line_indent_level;\n\t\t\t\t                    }\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                var next_flags = {\n\t\t\t\t                    mode: mode,\n\t\t\t\t                    parent: flags_base,\n\t\t\t\t                    last_text: flags_base ? flags_base.last_text : '', // last token text\n\t\t\t\t                    last_word: flags_base ? flags_base.last_word : '', // last 'TK_WORD' passed\n\t\t\t\t                    declaration_statement: false,\n\t\t\t\t                    declaration_assignment: false,\n\t\t\t\t                    multiline_frame: false,\n\t\t\t\t                    inline_frame: false,\n\t\t\t\t                    if_block: false,\n\t\t\t\t                    else_block: false,\n\t\t\t\t                    do_block: false,\n\t\t\t\t                    do_while: false,\n\t\t\t\t                    import_block: false,\n\t\t\t\t                    in_case_statement: false, // switch(..){ INSIDE HERE }\n\t\t\t\t                    in_case: false, // we're on the exact line with \"case 0:\"\n\t\t\t\t                    case_body: false, // the indented case-action block\n\t\t\t\t                    indentation_level: next_indent_level,\n\t\t\t\t                    line_indent_level: flags_base ? flags_base.line_indent_level : next_indent_level,\n\t\t\t\t                    start_line_index: output.get_line_number(),\n\t\t\t\t                    ternary_depth: 0\n\t\t\t\t                };\n\t\t\t\t                return next_flags;\n\t\t\t\t            }\n\t\t\t\t\n\t\t\t\t            // Some interpreters have unexpected results with foo = baz || bar;\n\t\t\t\t            options = options ? options : {};\n\t\t\t\t            opt = {};\n\t\t\t\t\n\t\t\t\t            // compatibility\n\t\t\t\t            if (options.braces_on_own_line !== undefined) { //graceful handling of deprecated option\n\t\t\t\t                opt.brace_style = options.braces_on_own_line ? \"expand\" : \"collapse\";\n\t\t\t\t            }\n\t\t\t\t            opt.brace_style = options.brace_style ? options.brace_style : (opt.brace_style ? opt.brace_style : \"collapse\");\n\t\t\t\t\n\t\t\t\t            // graceful handling of deprecated option\n\t\t\t\t            if (opt.brace_style === \"expand-strict\") {\n\t\t\t\t                opt.brace_style = \"expand\";\n\t\t\t\t            }\n\t\t\t\t\n\t\t\t\t            opt.indent_size = options.indent_size ? parseInt(options.indent_size, 10) : 4;\n\t\t\t\t            opt.indent_char = options.indent_char ? options.indent_char : ' ';\n\t\t\t\t            opt.eol = options.eol ? options.eol : 'auto';\n\t\t\t\t            opt.preserve_newlines = (options.preserve_newlines === undefined) ? true : options.preserve_newlines;\n\t\t\t\t            opt.break_chained_methods = (options.break_chained_methods === undefined) ? false : options.break_chained_methods;\n\t\t\t\t            opt.max_preserve_newlines = (options.max_preserve_newlines === undefined) ? 0 : parseInt(options.max_preserve_newlines, 10);\n\t\t\t\t            opt.space_in_paren = (options.space_in_paren === undefined) ? false : options.space_in_paren;\n\t\t\t\t            opt.space_in_empty_paren = (options.space_in_empty_paren === undefined) ? false : options.space_in_empty_paren;\n\t\t\t\t            opt.jslint_happy = (options.jslint_happy === undefined) ? false : options.jslint_happy;\n\t\t\t\t            opt.space_after_anon_function = (options.space_after_anon_function === undefined) ? false : options.space_after_anon_function;\n\t\t\t\t            opt.keep_array_indentation = (options.keep_array_indentation === undefined) ? false : options.keep_array_indentation;\n\t\t\t\t            opt.space_before_conditional = (options.space_before_conditional === undefined) ? true : options.space_before_conditional;\n\t\t\t\t            opt.unescape_strings = (options.unescape_strings === undefined) ? false : options.unescape_strings;\n\t\t\t\t            opt.wrap_line_length = (options.wrap_line_length === undefined) ? 0 : parseInt(options.wrap_line_length, 10);\n\t\t\t\t            opt.e4x = (options.e4x === undefined) ? false : options.e4x;\n\t\t\t\t            opt.end_with_newline = (options.end_with_newline === undefined) ? false : options.end_with_newline;\n\t\t\t\t            opt.comma_first = (options.comma_first === undefined) ? false : options.comma_first;\n\t\t\t\t            opt.operator_position = sanitizeOperatorPosition(options.operator_position);\n\t\t\t\t\n\t\t\t\t            // For testing of beautify ignore:start directive\n\t\t\t\t            opt.test_output_raw = (options.test_output_raw === undefined) ? false : options.test_output_raw;\n\t\t\t\t\n\t\t\t\t            // force opt.space_after_anon_function to true if opt.jslint_happy\n\t\t\t\t            if (opt.jslint_happy) {\n\t\t\t\t                opt.space_after_anon_function = true;\n\t\t\t\t            }\n\t\t\t\t\n\t\t\t\t            if (options.indent_with_tabs) {\n\t\t\t\t                opt.indent_char = '\\t';\n\t\t\t\t                opt.indent_size = 1;\n\t\t\t\t            }\n\t\t\t\t\n\t\t\t\t            if (opt.eol === 'auto') {\n\t\t\t\t                opt.eol = '\\n';\n\t\t\t\t                if (js_source_text && acorn.lineBreak.test(js_source_text || '')) {\n\t\t\t\t                    opt.eol = js_source_text.match(acorn.lineBreak)[0];\n\t\t\t\t                }\n\t\t\t\t            }\n\t\t\t\t\n\t\t\t\t            opt.eol = opt.eol.replace(/\\\\r/, '\\r').replace(/\\\\n/, '\\n');\n\t\t\t\t\n\t\t\t\t            //----------------------------------\n\t\t\t\t            indent_string = '';\n\t\t\t\t            while (opt.indent_size > 0) {\n\t\t\t\t                indent_string += opt.indent_char;\n\t\t\t\t                opt.indent_size -= 1;\n\t\t\t\t            }\n\t\t\t\t\n\t\t\t\t            var preindent_index = 0;\n\t\t\t\t            if (js_source_text && js_source_text.length) {\n\t\t\t\t                while ((js_source_text.charAt(preindent_index) === ' ' ||\n\t\t\t\t                        js_source_text.charAt(preindent_index) === '\\t')) {\n\t\t\t\t                    baseIndentString += js_source_text.charAt(preindent_index);\n\t\t\t\t                    preindent_index += 1;\n\t\t\t\t                }\n\t\t\t\t                js_source_text = js_source_text.substring(preindent_index);\n\t\t\t\t            }\n\t\t\t\t\n\t\t\t\t            last_type = 'TK_START_BLOCK'; // last token type\n\t\t\t\t            last_last_text = ''; // pre-last token text\n\t\t\t\t            output = new Output(indent_string, baseIndentString);\n\t\t\t\t\n\t\t\t\t            // If testing the ignore directive, start with output disable set to true\n\t\t\t\t            output.raw = opt.test_output_raw;\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t            // Stack of parsing/formatting states, including MODE.\n\t\t\t\t            // We tokenize, parse, and output in an almost purely a forward-only stream of token input\n\t\t\t\t            // and formatted output.  This makes the beautifier less accurate than full parsers\n\t\t\t\t            // but also far more tolerant of syntax errors.\n\t\t\t\t            //\n\t\t\t\t            // For example, the default mode is MODE.BlockStatement. If we see a '{' we push a new frame of type\n\t\t\t\t            // MODE.BlockStatement on the the stack, even though it could be object literal.  If we later\n\t\t\t\t            // encounter a \":\", we'll switch to to MODE.ObjectLiteral.  If we then see a \";\",\n\t\t\t\t            // most full parsers would die, but the beautifier gracefully falls back to\n\t\t\t\t            // MODE.BlockStatement and continues on.\n\t\t\t\t            flag_store = [];\n\t\t\t\t            set_mode(MODE.BlockStatement);\n\t\t\t\t\n\t\t\t\t            this.beautify = function() {\n\t\t\t\t\n\t\t\t\t                /*jshint onevar:true */\n\t\t\t\t                var local_token, sweet_code;\n\t\t\t\t                Tokenizer = new tokenizer(js_source_text, opt, indent_string);\n\t\t\t\t                tokens = Tokenizer.tokenize();\n\t\t\t\t                token_pos = 0;\n\t\t\t\t\n\t\t\t\t                function get_local_token() {\n\t\t\t\t                    local_token = get_token();\n\t\t\t\t                    return local_token;\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                while (get_local_token()) {\n\t\t\t\t                    for (var i = 0; i < local_token.comments_before.length; i++) {\n\t\t\t\t                        // The cleanest handling of inline comments is to treat them as though they aren't there.\n\t\t\t\t                        // Just continue formatting and the behavior should be logical.\n\t\t\t\t                        // Also ignore unknown tokens.  Again, this should result in better behavior.\n\t\t\t\t                        handle_token(local_token.comments_before[i]);\n\t\t\t\t                    }\n\t\t\t\t                    handle_token(local_token);\n\t\t\t\t\n\t\t\t\t                    last_last_text = flags.last_text;\n\t\t\t\t                    last_type = local_token.type;\n\t\t\t\t                    flags.last_text = local_token.text;\n\t\t\t\t\n\t\t\t\t                    token_pos += 1;\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                sweet_code = output.get_code();\n\t\t\t\t                if (opt.end_with_newline) {\n\t\t\t\t                    sweet_code += '\\n';\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                if (opt.eol !== '\\n') {\n\t\t\t\t                    sweet_code = sweet_code.replace(/[\\n]/g, opt.eol);\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                return sweet_code;\n\t\t\t\t            };\n\t\t\t\t\n\t\t\t\t            function handle_token(local_token) {\n\t\t\t\t                var newlines = local_token.newlines;\n\t\t\t\t                var keep_whitespace = opt.keep_array_indentation && is_array(flags.mode);\n\t\t\t\t\n\t\t\t\t                if (keep_whitespace) {\n\t\t\t\t                    for (var i = 0; i < newlines; i += 1) {\n\t\t\t\t                        print_newline(i > 0);\n\t\t\t\t                    }\n\t\t\t\t                } else {\n\t\t\t\t                    if (opt.max_preserve_newlines && newlines > opt.max_preserve_newlines) {\n\t\t\t\t                        newlines = opt.max_preserve_newlines;\n\t\t\t\t                    }\n\t\t\t\t\n\t\t\t\t                    if (opt.preserve_newlines) {\n\t\t\t\t                        if (local_token.newlines > 1) {\n\t\t\t\t                            print_newline();\n\t\t\t\t                            for (var j = 1; j < newlines; j += 1) {\n\t\t\t\t                                print_newline(true);\n\t\t\t\t                            }\n\t\t\t\t                        }\n\t\t\t\t                    }\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                current_token = local_token;\n\t\t\t\t                handlers[current_token.type]();\n\t\t\t\t            }\n\t\t\t\t\n\t\t\t\t            // we could use just string.split, but\n\t\t\t\t            // IE doesn't like returning empty strings\n\t\t\t\t            function split_linebreaks(s) {\n\t\t\t\t                //return s.split(/\\x0d\\x0a|\\x0a/);\n\t\t\t\t\n\t\t\t\t                s = s.replace(acorn.allLineBreaks, '\\n');\n\t\t\t\t                var out = [],\n\t\t\t\t                    idx = s.indexOf(\"\\n\");\n\t\t\t\t                while (idx !== -1) {\n\t\t\t\t                    out.push(s.substring(0, idx));\n\t\t\t\t                    s = s.substring(idx + 1);\n\t\t\t\t                    idx = s.indexOf(\"\\n\");\n\t\t\t\t                }\n\t\t\t\t                if (s.length) {\n\t\t\t\t                    out.push(s);\n\t\t\t\t                }\n\t\t\t\t                return out;\n\t\t\t\t            }\n\t\t\t\t\n\t\t\t\t            var newline_restricted_tokens = ['break', 'continue', 'return', 'throw'];\n\t\t\t\t\n\t\t\t\t            function allow_wrap_or_preserved_newline(force_linewrap) {\n\t\t\t\t                force_linewrap = (force_linewrap === undefined) ? false : force_linewrap;\n\t\t\t\t\n\t\t\t\t                // Never wrap the first token on a line\n\t\t\t\t                if (output.just_added_newline()) {\n\t\t\t\t                    return;\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                var shouldPreserveOrForce = (opt.preserve_newlines && current_token.wanted_newline) || force_linewrap;\n\t\t\t\t                var operatorLogicApplies = in_array(flags.last_text, Tokenizer.positionable_operators) || in_array(current_token.text, Tokenizer.positionable_operators);\n\t\t\t\t\n\t\t\t\t                if (operatorLogicApplies) {\n\t\t\t\t                    var shouldPrintOperatorNewline = (\n\t\t\t\t                            in_array(flags.last_text, Tokenizer.positionable_operators) &&\n\t\t\t\t                            in_array(opt.operator_position, OPERATOR_POSITION_BEFORE_OR_PRESERVE)\n\t\t\t\t                        ) ||\n\t\t\t\t                        in_array(current_token.text, Tokenizer.positionable_operators);\n\t\t\t\t                    shouldPreserveOrForce = shouldPreserveOrForce && shouldPrintOperatorNewline;\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                if (shouldPreserveOrForce) {\n\t\t\t\t                    print_newline(false, true);\n\t\t\t\t                } else if (opt.wrap_line_length) {\n\t\t\t\t                    if (last_type === 'TK_RESERVED' && in_array(flags.last_text, newline_restricted_tokens)) {\n\t\t\t\t                        // These tokens should never have a newline inserted\n\t\t\t\t                        // between them and the following expression.\n\t\t\t\t                        return;\n\t\t\t\t                    }\n\t\t\t\t                    var proposed_line_length = output.current_line.get_character_count() + current_token.text.length +\n\t\t\t\t                        (output.space_before_token ? 1 : 0);\n\t\t\t\t                    if (proposed_line_length >= opt.wrap_line_length) {\n\t\t\t\t                        print_newline(false, true);\n\t\t\t\t                    }\n\t\t\t\t                }\n\t\t\t\t            }\n\t\t\t\t\n\t\t\t\t            function print_newline(force_newline, preserve_statement_flags) {\n\t\t\t\t                if (!preserve_statement_flags) {\n\t\t\t\t                    if (flags.last_text !== ';' && flags.last_text !== ',' && flags.last_text !== '=' && last_type !== 'TK_OPERATOR') {\n\t\t\t\t                        while (flags.mode === MODE.Statement && !flags.if_block && !flags.do_block) {\n\t\t\t\t                            restore_mode();\n\t\t\t\t                        }\n\t\t\t\t                    }\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                if (output.add_new_line(force_newline)) {\n\t\t\t\t                    flags.multiline_frame = true;\n\t\t\t\t                }\n\t\t\t\t            }\n\t\t\t\t\n\t\t\t\t            function print_token_line_indentation() {\n\t\t\t\t                if (output.just_added_newline()) {\n\t\t\t\t                    if (opt.keep_array_indentation && is_array(flags.mode) && current_token.wanted_newline) {\n\t\t\t\t                        output.current_line.push(current_token.whitespace_before);\n\t\t\t\t                        output.space_before_token = false;\n\t\t\t\t                    } else if (output.set_indent(flags.indentation_level)) {\n\t\t\t\t                        flags.line_indent_level = flags.indentation_level;\n\t\t\t\t                    }\n\t\t\t\t                }\n\t\t\t\t            }\n\t\t\t\t\n\t\t\t\t            function print_token(printable_token) {\n\t\t\t\t                if (output.raw) {\n\t\t\t\t                    output.add_raw_token(current_token);\n\t\t\t\t                    return;\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                if (opt.comma_first && last_type === 'TK_COMMA' &&\n\t\t\t\t                    output.just_added_newline()) {\n\t\t\t\t                    if (output.previous_line.last() === ',') {\n\t\t\t\t                        var popped = output.previous_line.pop();\n\t\t\t\t                        // if the comma was already at the start of the line,\n\t\t\t\t                        // pull back onto that line and reprint the indentation\n\t\t\t\t                        if (output.previous_line.is_empty()) {\n\t\t\t\t                            output.previous_line.push(popped);\n\t\t\t\t                            output.trim(true);\n\t\t\t\t                            output.current_line.pop();\n\t\t\t\t                            output.trim();\n\t\t\t\t                        }\n\t\t\t\t\n\t\t\t\t                        // add the comma in front of the next token\n\t\t\t\t                        print_token_line_indentation();\n\t\t\t\t                        output.add_token(',');\n\t\t\t\t                        output.space_before_token = true;\n\t\t\t\t                    }\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                printable_token = printable_token || current_token.text;\n\t\t\t\t                print_token_line_indentation();\n\t\t\t\t                output.add_token(printable_token);\n\t\t\t\t            }\n\t\t\t\t\n\t\t\t\t            function indent() {\n\t\t\t\t                flags.indentation_level += 1;\n\t\t\t\t            }\n\t\t\t\t\n\t\t\t\t            function deindent() {\n\t\t\t\t                if (flags.indentation_level > 0 &&\n\t\t\t\t                    ((!flags.parent) || flags.indentation_level > flags.parent.indentation_level)) {\n\t\t\t\t                    flags.indentation_level -= 1;\n\t\t\t\t\n\t\t\t\t                }\n\t\t\t\t            }\n\t\t\t\t\n\t\t\t\t            function set_mode(mode) {\n\t\t\t\t                if (flags) {\n\t\t\t\t                    flag_store.push(flags);\n\t\t\t\t                    previous_flags = flags;\n\t\t\t\t                } else {\n\t\t\t\t                    previous_flags = create_flags(null, mode);\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                flags = create_flags(previous_flags, mode);\n\t\t\t\t            }\n\t\t\t\t\n\t\t\t\t            function is_array(mode) {\n\t\t\t\t                return mode === MODE.ArrayLiteral;\n\t\t\t\t            }\n\t\t\t\t\n\t\t\t\t            function is_expression(mode) {\n\t\t\t\t                return in_array(mode, [MODE.Expression, MODE.ForInitializer, MODE.Conditional]);\n\t\t\t\t            }\n\t\t\t\t\n\t\t\t\t            function restore_mode() {\n\t\t\t\t                if (flag_store.length > 0) {\n\t\t\t\t                    previous_flags = flags;\n\t\t\t\t                    flags = flag_store.pop();\n\t\t\t\t                    if (previous_flags.mode === MODE.Statement) {\n\t\t\t\t                        output.remove_redundant_indentation(previous_flags);\n\t\t\t\t                    }\n\t\t\t\t                }\n\t\t\t\t            }\n\t\t\t\t\n\t\t\t\t            function start_of_object_property() {\n\t\t\t\t                return flags.parent.mode === MODE.ObjectLiteral && flags.mode === MODE.Statement && (\n\t\t\t\t                    (flags.last_text === ':' && flags.ternary_depth === 0) || (last_type === 'TK_RESERVED' && in_array(flags.last_text, ['get', 'set'])));\n\t\t\t\t            }\n\t\t\t\t\n\t\t\t\t            function start_of_statement() {\n\t\t\t\t                if (\n\t\t\t\t                    (last_type === 'TK_RESERVED' && in_array(flags.last_text, ['var', 'let', 'const']) && current_token.type === 'TK_WORD') ||\n\t\t\t\t                    (last_type === 'TK_RESERVED' && flags.last_text === 'do') ||\n\t\t\t\t                    (last_type === 'TK_RESERVED' && in_array(flags.last_text, ['return', 'throw']) && !current_token.wanted_newline) ||\n\t\t\t\t                    (last_type === 'TK_RESERVED' && flags.last_text === 'else' && !(current_token.type === 'TK_RESERVED' && current_token.text === 'if')) ||\n\t\t\t\t                    (last_type === 'TK_END_EXPR' && (previous_flags.mode === MODE.ForInitializer || previous_flags.mode === MODE.Conditional)) ||\n\t\t\t\t                    (last_type === 'TK_WORD' && flags.mode === MODE.BlockStatement &&\n\t\t\t\t                        !flags.in_case &&\n\t\t\t\t                        !(current_token.text === '--' || current_token.text === '++') &&\n\t\t\t\t                        last_last_text !== 'function' &&\n\t\t\t\t                        current_token.type !== 'TK_WORD' && current_token.type !== 'TK_RESERVED') ||\n\t\t\t\t                    (flags.mode === MODE.ObjectLiteral && (\n\t\t\t\t                        (flags.last_text === ':' && flags.ternary_depth === 0) || (last_type === 'TK_RESERVED' && in_array(flags.last_text, ['get', 'set']))))\n\t\t\t\t                ) {\n\t\t\t\t\n\t\t\t\t                    set_mode(MODE.Statement);\n\t\t\t\t                    indent();\n\t\t\t\t\n\t\t\t\t                    if (last_type === 'TK_RESERVED' && in_array(flags.last_text, ['var', 'let', 'const']) && current_token.type === 'TK_WORD') {\n\t\t\t\t                        flags.declaration_statement = true;\n\t\t\t\t                    }\n\t\t\t\t\n\t\t\t\t                    // Issue #276:\n\t\t\t\t                    // If starting a new statement with [if, for, while, do], push to a new line.\n\t\t\t\t                    // if (a) if (b) if(c) d(); else e(); else f();\n\t\t\t\t                    if (!start_of_object_property()) {\n\t\t\t\t                        allow_wrap_or_preserved_newline(\n\t\t\t\t                            current_token.type === 'TK_RESERVED' && in_array(current_token.text, ['do', 'for', 'if', 'while']));\n\t\t\t\t                    }\n\t\t\t\t\n\t\t\t\t                    return true;\n\t\t\t\t                }\n\t\t\t\t                return false;\n\t\t\t\t            }\n\t\t\t\t\n\t\t\t\t            function all_lines_start_with(lines, c) {\n\t\t\t\t                for (var i = 0; i < lines.length; i++) {\n\t\t\t\t                    var line = trim(lines[i]);\n\t\t\t\t                    if (line.charAt(0) !== c) {\n\t\t\t\t                        return false;\n\t\t\t\t                    }\n\t\t\t\t                }\n\t\t\t\t                return true;\n\t\t\t\t            }\n\t\t\t\t\n\t\t\t\t            function each_line_matches_indent(lines, indent) {\n\t\t\t\t                var i = 0,\n\t\t\t\t                    len = lines.length,\n\t\t\t\t                    line;\n\t\t\t\t                for (; i < len; i++) {\n\t\t\t\t                    line = lines[i];\n\t\t\t\t                    // allow empty lines to pass through\n\t\t\t\t                    if (line && line.indexOf(indent) !== 0) {\n\t\t\t\t                        return false;\n\t\t\t\t                    }\n\t\t\t\t                }\n\t\t\t\t                return true;\n\t\t\t\t            }\n\t\t\t\t\n\t\t\t\t            function is_special_word(word) {\n\t\t\t\t                return in_array(word, ['case', 'return', 'do', 'if', 'throw', 'else']);\n\t\t\t\t            }\n\t\t\t\t\n\t\t\t\t            function get_token(offset) {\n\t\t\t\t                var index = token_pos + (offset || 0);\n\t\t\t\t                return (index < 0 || index >= tokens.length) ? null : tokens[index];\n\t\t\t\t            }\n\t\t\t\t\n\t\t\t\t            function handle_start_expr() {\n\t\t\t\t                if (start_of_statement()) {\n\t\t\t\t                    // The conditional starts the statement if appropriate.\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                var next_mode = MODE.Expression;\n\t\t\t\t                if (current_token.text === '[') {\n\t\t\t\t\n\t\t\t\t                    if (last_type === 'TK_WORD' || flags.last_text === ')') {\n\t\t\t\t                        // this is array index specifier, break immediately\n\t\t\t\t                        // a[x], fn()[x]\n\t\t\t\t                        if (last_type === 'TK_RESERVED' && in_array(flags.last_text, Tokenizer.line_starters)) {\n\t\t\t\t                            output.space_before_token = true;\n\t\t\t\t                        }\n\t\t\t\t                        set_mode(next_mode);\n\t\t\t\t                        print_token();\n\t\t\t\t                        indent();\n\t\t\t\t                        if (opt.space_in_paren) {\n\t\t\t\t                            output.space_before_token = true;\n\t\t\t\t                        }\n\t\t\t\t                        return;\n\t\t\t\t                    }\n\t\t\t\t\n\t\t\t\t                    next_mode = MODE.ArrayLiteral;\n\t\t\t\t                    if (is_array(flags.mode)) {\n\t\t\t\t                        if (flags.last_text === '[' ||\n\t\t\t\t                            (flags.last_text === ',' && (last_last_text === ']' || last_last_text === '}'))) {\n\t\t\t\t                            // ], [ goes to new line\n\t\t\t\t                            // }, [ goes to new line\n\t\t\t\t                            if (!opt.keep_array_indentation) {\n\t\t\t\t                                print_newline();\n\t\t\t\t                            }\n\t\t\t\t                        }\n\t\t\t\t                    }\n\t\t\t\t\n\t\t\t\t                } else {\n\t\t\t\t                    if (last_type === 'TK_RESERVED' && flags.last_text === 'for') {\n\t\t\t\t                        next_mode = MODE.ForInitializer;\n\t\t\t\t                    } else if (last_type === 'TK_RESERVED' && in_array(flags.last_text, ['if', 'while'])) {\n\t\t\t\t                        next_mode = MODE.Conditional;\n\t\t\t\t                    } else {\n\t\t\t\t                        // next_mode = MODE.Expression;\n\t\t\t\t                    }\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                if (flags.last_text === ';' || last_type === 'TK_START_BLOCK') {\n\t\t\t\t                    print_newline();\n\t\t\t\t                } else if (last_type === 'TK_END_EXPR' || last_type === 'TK_START_EXPR' || last_type === 'TK_END_BLOCK' || flags.last_text === '.') {\n\t\t\t\t                    // TODO: Consider whether forcing this is required.  Review failing tests when removed.\n\t\t\t\t                    allow_wrap_or_preserved_newline(current_token.wanted_newline);\n\t\t\t\t                    // do nothing on (( and )( and ][ and ]( and .(\n\t\t\t\t                } else if (!(last_type === 'TK_RESERVED' && current_token.text === '(') && last_type !== 'TK_WORD' && last_type !== 'TK_OPERATOR') {\n\t\t\t\t                    output.space_before_token = true;\n\t\t\t\t                } else if ((last_type === 'TK_RESERVED' && (flags.last_word === 'function' || flags.last_word === 'typeof')) ||\n\t\t\t\t                    (flags.last_text === '*' &&\n\t\t\t\t                        (in_array(last_last_text, ['function', 'yield']) ||\n\t\t\t\t                            (flags.mode === MODE.ObjectLiteral && in_array(last_last_text, ['{', ',']))))) {\n\t\t\t\t                    // function() vs function ()\n\t\t\t\t                    // yield*() vs yield* ()\n\t\t\t\t                    // function*() vs function* ()\n\t\t\t\t                    if (opt.space_after_anon_function) {\n\t\t\t\t                        output.space_before_token = true;\n\t\t\t\t                    }\n\t\t\t\t                } else if (last_type === 'TK_RESERVED' && (in_array(flags.last_text, Tokenizer.line_starters) || flags.last_text === 'catch')) {\n\t\t\t\t                    if (opt.space_before_conditional) {\n\t\t\t\t                        output.space_before_token = true;\n\t\t\t\t                    }\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                // Should be a space between await and an IIFE\n\t\t\t\t                if (current_token.text === '(' && last_type === 'TK_RESERVED' && flags.last_word === 'await') {\n\t\t\t\t                    output.space_before_token = true;\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                // Support of this kind of newline preservation.\n\t\t\t\t                // a = (b &&\n\t\t\t\t                //     (c || d));\n\t\t\t\t                if (current_token.text === '(') {\n\t\t\t\t                    if (last_type === 'TK_EQUALS' || last_type === 'TK_OPERATOR') {\n\t\t\t\t                        if (!start_of_object_property()) {\n\t\t\t\t                            allow_wrap_or_preserved_newline();\n\t\t\t\t                        }\n\t\t\t\t                    }\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                // Support preserving wrapped arrow function expressions\n\t\t\t\t                // a.b('c',\n\t\t\t\t                //     () => d.e\n\t\t\t\t                // )\n\t\t\t\t                if (current_token.text === '(' && last_type !== 'TK_WORD' && last_type !== 'TK_RESERVED') {\n\t\t\t\t                    allow_wrap_or_preserved_newline();\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                set_mode(next_mode);\n\t\t\t\t                print_token();\n\t\t\t\t                if (opt.space_in_paren) {\n\t\t\t\t                    output.space_before_token = true;\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                // In all cases, if we newline while inside an expression it should be indented.\n\t\t\t\t                indent();\n\t\t\t\t            }\n\t\t\t\t\n\t\t\t\t            function handle_end_expr() {\n\t\t\t\t                // statements inside expressions are not valid syntax, but...\n\t\t\t\t                // statements must all be closed when their container closes\n\t\t\t\t                while (flags.mode === MODE.Statement) {\n\t\t\t\t                    restore_mode();\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                if (flags.multiline_frame) {\n\t\t\t\t                    allow_wrap_or_preserved_newline(current_token.text === ']' && is_array(flags.mode) && !opt.keep_array_indentation);\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                if (opt.space_in_paren) {\n\t\t\t\t                    if (last_type === 'TK_START_EXPR' && !opt.space_in_empty_paren) {\n\t\t\t\t                        // () [] no inner space in empty parens like these, ever, ref #320\n\t\t\t\t                        output.trim();\n\t\t\t\t                        output.space_before_token = false;\n\t\t\t\t                    } else {\n\t\t\t\t                        output.space_before_token = true;\n\t\t\t\t                    }\n\t\t\t\t                }\n\t\t\t\t                if (current_token.text === ']' && opt.keep_array_indentation) {\n\t\t\t\t                    print_token();\n\t\t\t\t                    restore_mode();\n\t\t\t\t                } else {\n\t\t\t\t                    restore_mode();\n\t\t\t\t                    print_token();\n\t\t\t\t                }\n\t\t\t\t                output.remove_redundant_indentation(previous_flags);\n\t\t\t\t\n\t\t\t\t                // do {} while () // no statement required after\n\t\t\t\t                if (flags.do_while && previous_flags.mode === MODE.Conditional) {\n\t\t\t\t                    previous_flags.mode = MODE.Expression;\n\t\t\t\t                    flags.do_block = false;\n\t\t\t\t                    flags.do_while = false;\n\t\t\t\t\n\t\t\t\t                }\n\t\t\t\t            }\n\t\t\t\t\n\t\t\t\t            function handle_start_block() {\n\t\t\t\t                // Check if this is should be treated as a ObjectLiteral\n\t\t\t\t                var next_token = get_token(1);\n\t\t\t\t                var second_token = get_token(2);\n\t\t\t\t                if (second_token && (\n\t\t\t\t                        (in_array(second_token.text, [':', ',']) && in_array(next_token.type, ['TK_STRING', 'TK_WORD', 'TK_RESERVED'])) ||\n\t\t\t\t                        (in_array(next_token.text, ['get', 'set']) && in_array(second_token.type, ['TK_WORD', 'TK_RESERVED']))\n\t\t\t\t                    )) {\n\t\t\t\t                    // We don't support TypeScript,but we didn't break it for a very long time.\n\t\t\t\t                    // We'll try to keep not breaking it.\n\t\t\t\t                    if (!in_array(last_last_text, ['class', 'interface'])) {\n\t\t\t\t                        set_mode(MODE.ObjectLiteral);\n\t\t\t\t                    } else {\n\t\t\t\t                        set_mode(MODE.BlockStatement);\n\t\t\t\t                    }\n\t\t\t\t                } else if (last_type === 'TK_OPERATOR' && flags.last_text === '=>') {\n\t\t\t\t                    // arrow function: (param1, paramN) => { statements }\n\t\t\t\t                    set_mode(MODE.BlockStatement);\n\t\t\t\t                } else if (in_array(last_type, ['TK_EQUALS', 'TK_START_EXPR', 'TK_COMMA', 'TK_OPERATOR']) ||\n\t\t\t\t                    (last_type === 'TK_RESERVED' && in_array(flags.last_text, ['return', 'throw', 'import', 'default']))\n\t\t\t\t                ) {\n\t\t\t\t                    // Detecting shorthand function syntax is difficult by scanning forward,\n\t\t\t\t                    //     so check the surrounding context.\n\t\t\t\t                    // If the block is being returned, imported, export default, passed as arg,\n\t\t\t\t                    //     assigned with = or assigned in a nested object, treat as an ObjectLiteral.\n\t\t\t\t                    set_mode(MODE.ObjectLiteral);\n\t\t\t\t                } else {\n\t\t\t\t                    set_mode(MODE.BlockStatement);\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                var empty_braces = !next_token.comments_before.length && next_token.text === '}';\n\t\t\t\t                var empty_anonymous_function = empty_braces && flags.last_word === 'function' &&\n\t\t\t\t                    last_type === 'TK_END_EXPR';\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t                if (opt.brace_style === \"expand\" ||\n\t\t\t\t                    (opt.brace_style === \"none\" && current_token.wanted_newline)) {\n\t\t\t\t                    if (last_type !== 'TK_OPERATOR' &&\n\t\t\t\t                        (empty_anonymous_function ||\n\t\t\t\t                            last_type === 'TK_EQUALS' ||\n\t\t\t\t                            (last_type === 'TK_RESERVED' && is_special_word(flags.last_text) && flags.last_text !== 'else'))) {\n\t\t\t\t                        output.space_before_token = true;\n\t\t\t\t                    } else {\n\t\t\t\t                        print_newline(false, true);\n\t\t\t\t                    }\n\t\t\t\t                } else { // collapse\n\t\t\t\t                    if (opt.brace_style === 'collapse-preserve-inline') {\n\t\t\t\t                        // search forward for a newline wanted inside this block\n\t\t\t\t                        var index = 0;\n\t\t\t\t                        var check_token = null;\n\t\t\t\t                        flags.inline_frame = true;\n\t\t\t\t                        do {\n\t\t\t\t                            index += 1;\n\t\t\t\t                            check_token = get_token(index);\n\t\t\t\t                            if (check_token.wanted_newline) {\n\t\t\t\t                                flags.inline_frame = false;\n\t\t\t\t                                break;\n\t\t\t\t                            }\n\t\t\t\t                        } while (check_token.type !== 'TK_EOF' &&\n\t\t\t\t                            !(check_token.type === 'TK_END_BLOCK' && check_token.opened === current_token));\n\t\t\t\t                    }\n\t\t\t\t\n\t\t\t\t                    if (is_array(previous_flags.mode) && (last_type === 'TK_START_EXPR' || last_type === 'TK_COMMA')) {\n\t\t\t\t                        // if we're preserving inline,\n\t\t\t\t                        // allow newline between comma and next brace.\n\t\t\t\t                        if (last_type === 'TK_COMMA' || opt.space_in_paren) {\n\t\t\t\t                            output.space_before_token = true;\n\t\t\t\t                        }\n\t\t\t\t\n\t\t\t\t                        if (opt.brace_style === 'collapse-preserve-inline' &&\n\t\t\t\t                            (last_type === 'TK_COMMA' || (last_type === 'TK_START_EXPR' && flags.inline_frame))) {\n\t\t\t\t                            allow_wrap_or_preserved_newline();\n\t\t\t\t                            previous_flags.multiline_frame = previous_flags.multiline_frame || flags.multiline_frame;\n\t\t\t\t                            flags.multiline_frame = false;\n\t\t\t\t                        }\n\t\t\t\t                    } else if (last_type !== 'TK_OPERATOR' && last_type !== 'TK_START_EXPR') {\n\t\t\t\t                        if (last_type === 'TK_START_BLOCK') {\n\t\t\t\t                            print_newline();\n\t\t\t\t                        } else {\n\t\t\t\t                            output.space_before_token = true;\n\t\t\t\t                        }\n\t\t\t\t                    }\n\t\t\t\t                }\n\t\t\t\t                print_token();\n\t\t\t\t                indent();\n\t\t\t\t            }\n\t\t\t\t\n\t\t\t\t            function handle_end_block() {\n\t\t\t\t                // statements must all be closed when their container closes\n\t\t\t\t                while (flags.mode === MODE.Statement) {\n\t\t\t\t                    restore_mode();\n\t\t\t\t                }\n\t\t\t\t                var empty_braces = last_type === 'TK_START_BLOCK';\n\t\t\t\t\n\t\t\t\t                if (opt.brace_style === \"expand\") {\n\t\t\t\t                    if (!empty_braces) {\n\t\t\t\t                        print_newline();\n\t\t\t\t                    }\n\t\t\t\t                } else {\n\t\t\t\t                    // skip {}\n\t\t\t\t                    if (!empty_braces) {\n\t\t\t\t                        if (flags.inline_frame) {\n\t\t\t\t                            output.space_before_token = true;\n\t\t\t\t                        } else if (is_array(flags.mode) && opt.keep_array_indentation) {\n\t\t\t\t                            // we REALLY need a newline here, but newliner would skip that\n\t\t\t\t                            opt.keep_array_indentation = false;\n\t\t\t\t                            print_newline();\n\t\t\t\t                            opt.keep_array_indentation = true;\n\t\t\t\t\n\t\t\t\t                        } else {\n\t\t\t\t                            print_newline();\n\t\t\t\t                        }\n\t\t\t\t                    }\n\t\t\t\t                }\n\t\t\t\t                restore_mode();\n\t\t\t\t                print_token();\n\t\t\t\t            }\n\t\t\t\t\n\t\t\t\t            function handle_word() {\n\t\t\t\t                if (current_token.type === 'TK_RESERVED') {\n\t\t\t\t                    if (in_array(current_token.text, ['set', 'get']) && flags.mode !== MODE.ObjectLiteral) {\n\t\t\t\t                        current_token.type = 'TK_WORD';\n\t\t\t\t                    } else if (in_array(current_token.text, ['as', 'from']) && !flags.import_block) {\n\t\t\t\t                        current_token.type = 'TK_WORD';\n\t\t\t\t                    } else if (flags.mode === MODE.ObjectLiteral) {\n\t\t\t\t                        var next_token = get_token(1);\n\t\t\t\t                        if (next_token.text === ':') {\n\t\t\t\t                            current_token.type = 'TK_WORD';\n\t\t\t\t                        }\n\t\t\t\t                    }\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                if (start_of_statement()) {\n\t\t\t\t                    // The conditional starts the statement if appropriate.\n\t\t\t\t                } else if (current_token.wanted_newline && !is_expression(flags.mode) &&\n\t\t\t\t                    (last_type !== 'TK_OPERATOR' || (flags.last_text === '--' || flags.last_text === '++')) &&\n\t\t\t\t                    last_type !== 'TK_EQUALS' &&\n\t\t\t\t                    (opt.preserve_newlines || !(last_type === 'TK_RESERVED' && in_array(flags.last_text, ['var', 'let', 'const', 'set', 'get'])))) {\n\t\t\t\t\n\t\t\t\t                    print_newline();\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                if (flags.do_block && !flags.do_while) {\n\t\t\t\t                    if (current_token.type === 'TK_RESERVED' && current_token.text === 'while') {\n\t\t\t\t                        // do {} ## while ()\n\t\t\t\t                        output.space_before_token = true;\n\t\t\t\t                        print_token();\n\t\t\t\t                        output.space_before_token = true;\n\t\t\t\t                        flags.do_while = true;\n\t\t\t\t                        return;\n\t\t\t\t                    } else {\n\t\t\t\t                        // do {} should always have while as the next word.\n\t\t\t\t                        // if we don't see the expected while, recover\n\t\t\t\t                        print_newline();\n\t\t\t\t                        flags.do_block = false;\n\t\t\t\t                    }\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                // if may be followed by else, or not\n\t\t\t\t                // Bare/inline ifs are tricky\n\t\t\t\t                // Need to unwind the modes correctly: if (a) if (b) c(); else d(); else e();\n\t\t\t\t                if (flags.if_block) {\n\t\t\t\t                    if (!flags.else_block && (current_token.type === 'TK_RESERVED' && current_token.text === 'else')) {\n\t\t\t\t                        flags.else_block = true;\n\t\t\t\t                    } else {\n\t\t\t\t                        while (flags.mode === MODE.Statement) {\n\t\t\t\t                            restore_mode();\n\t\t\t\t                        }\n\t\t\t\t                        flags.if_block = false;\n\t\t\t\t                        flags.else_block = false;\n\t\t\t\t                    }\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                if (current_token.type === 'TK_RESERVED' && (current_token.text === 'case' || (current_token.text === 'default' && flags.in_case_statement))) {\n\t\t\t\t                    print_newline();\n\t\t\t\t                    if (flags.case_body || opt.jslint_happy) {\n\t\t\t\t                        // switch cases following one another\n\t\t\t\t                        deindent();\n\t\t\t\t                        flags.case_body = false;\n\t\t\t\t                    }\n\t\t\t\t                    print_token();\n\t\t\t\t                    flags.in_case = true;\n\t\t\t\t                    flags.in_case_statement = true;\n\t\t\t\t                    return;\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                if (current_token.type === 'TK_RESERVED' && current_token.text === 'function') {\n\t\t\t\t                    if (in_array(flags.last_text, ['}', ';']) || (output.just_added_newline() && !in_array(flags.last_text, ['[', '{', ':', '=', ',']))) {\n\t\t\t\t                        // make sure there is a nice clean space of at least one blank line\n\t\t\t\t                        // before a new function definition\n\t\t\t\t                        if (!output.just_added_blankline() && !current_token.comments_before.length) {\n\t\t\t\t                            print_newline();\n\t\t\t\t                            print_newline(true);\n\t\t\t\t                        }\n\t\t\t\t                    }\n\t\t\t\t                    if (last_type === 'TK_RESERVED' || last_type === 'TK_WORD') {\n\t\t\t\t                        if (last_type === 'TK_RESERVED' && in_array(flags.last_text, ['get', 'set', 'new', 'return', 'export', 'async'])) {\n\t\t\t\t                            output.space_before_token = true;\n\t\t\t\t                        } else if (last_type === 'TK_RESERVED' && flags.last_text === 'default' && last_last_text === 'export') {\n\t\t\t\t                            output.space_before_token = true;\n\t\t\t\t                        } else {\n\t\t\t\t                            print_newline();\n\t\t\t\t                        }\n\t\t\t\t                    } else if (last_type === 'TK_OPERATOR' || flags.last_text === '=') {\n\t\t\t\t                        // foo = function\n\t\t\t\t                        output.space_before_token = true;\n\t\t\t\t                    } else if (!flags.multiline_frame && (is_expression(flags.mode) || is_array(flags.mode))) {\n\t\t\t\t                        // (function\n\t\t\t\t                    } else {\n\t\t\t\t                        print_newline();\n\t\t\t\t                    }\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                if (last_type === 'TK_COMMA' || last_type === 'TK_START_EXPR' || last_type === 'TK_EQUALS' || last_type === 'TK_OPERATOR') {\n\t\t\t\t                    if (!start_of_object_property()) {\n\t\t\t\t                        allow_wrap_or_preserved_newline();\n\t\t\t\t                    }\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                if (current_token.type === 'TK_RESERVED' && in_array(current_token.text, ['function', 'get', 'set'])) {\n\t\t\t\t                    print_token();\n\t\t\t\t                    flags.last_word = current_token.text;\n\t\t\t\t                    return;\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                prefix = 'NONE';\n\t\t\t\t\n\t\t\t\t                if (last_type === 'TK_END_BLOCK') {\n\t\t\t\t\n\t\t\t\t                    if (!(current_token.type === 'TK_RESERVED' && in_array(current_token.text, ['else', 'catch', 'finally', 'from']))) {\n\t\t\t\t                        prefix = 'NEWLINE';\n\t\t\t\t                    } else {\n\t\t\t\t                        if (opt.brace_style === \"expand\" ||\n\t\t\t\t                            opt.brace_style === \"end-expand\" ||\n\t\t\t\t                            (opt.brace_style === \"none\" && current_token.wanted_newline)) {\n\t\t\t\t                            prefix = 'NEWLINE';\n\t\t\t\t                        } else {\n\t\t\t\t                            prefix = 'SPACE';\n\t\t\t\t                            output.space_before_token = true;\n\t\t\t\t                        }\n\t\t\t\t                    }\n\t\t\t\t                } else if (last_type === 'TK_SEMICOLON' && flags.mode === MODE.BlockStatement) {\n\t\t\t\t                    // TODO: Should this be for STATEMENT as well?\n\t\t\t\t                    prefix = 'NEWLINE';\n\t\t\t\t                } else if (last_type === 'TK_SEMICOLON' && is_expression(flags.mode)) {\n\t\t\t\t                    prefix = 'SPACE';\n\t\t\t\t                } else if (last_type === 'TK_STRING') {\n\t\t\t\t                    prefix = 'NEWLINE';\n\t\t\t\t                } else if (last_type === 'TK_RESERVED' || last_type === 'TK_WORD' ||\n\t\t\t\t                    (flags.last_text === '*' &&\n\t\t\t\t                        (in_array(last_last_text, ['function', 'yield']) ||\n\t\t\t\t                            (flags.mode === MODE.ObjectLiteral && in_array(last_last_text, ['{', ',']))))) {\n\t\t\t\t                    prefix = 'SPACE';\n\t\t\t\t                } else if (last_type === 'TK_START_BLOCK') {\n\t\t\t\t                    if (flags.inline_frame) {\n\t\t\t\t                        prefix = 'SPACE';\n\t\t\t\t                    } else {\n\t\t\t\t                        prefix = 'NEWLINE';\n\t\t\t\t                    }\n\t\t\t\t                } else if (last_type === 'TK_END_EXPR') {\n\t\t\t\t                    output.space_before_token = true;\n\t\t\t\t                    prefix = 'NEWLINE';\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                if (current_token.type === 'TK_RESERVED' && in_array(current_token.text, Tokenizer.line_starters) && flags.last_text !== ')') {\n\t\t\t\t                    if (flags.inline_frame || flags.last_text === 'else' || flags.last_text === 'export') {\n\t\t\t\t                        prefix = 'SPACE';\n\t\t\t\t                    } else {\n\t\t\t\t                        prefix = 'NEWLINE';\n\t\t\t\t                    }\n\t\t\t\t\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                if (current_token.type === 'TK_RESERVED' && in_array(current_token.text, ['else', 'catch', 'finally'])) {\n\t\t\t\t                    if (!(last_type === 'TK_END_BLOCK' && previous_flags.mode === MODE.BlockStatement) ||\n\t\t\t\t                        opt.brace_style === \"expand\" ||\n\t\t\t\t                        opt.brace_style === \"end-expand\" ||\n\t\t\t\t                        (opt.brace_style === \"none\" && current_token.wanted_newline)) {\n\t\t\t\t                        print_newline();\n\t\t\t\t                    } else {\n\t\t\t\t                        output.trim(true);\n\t\t\t\t                        var line = output.current_line;\n\t\t\t\t                        // If we trimmed and there's something other than a close block before us\n\t\t\t\t                        // put a newline back in.  Handles '} // comment' scenario.\n\t\t\t\t                        if (line.last() !== '}') {\n\t\t\t\t                            print_newline();\n\t\t\t\t                        }\n\t\t\t\t                        output.space_before_token = true;\n\t\t\t\t                    }\n\t\t\t\t                } else if (prefix === 'NEWLINE') {\n\t\t\t\t                    if (last_type === 'TK_RESERVED' && is_special_word(flags.last_text)) {\n\t\t\t\t                        // no newline between 'return nnn'\n\t\t\t\t                        output.space_before_token = true;\n\t\t\t\t                    } else if (last_type !== 'TK_END_EXPR') {\n\t\t\t\t                        if ((last_type !== 'TK_START_EXPR' || !(current_token.type === 'TK_RESERVED' && in_array(current_token.text, ['var', 'let', 'const']))) && flags.last_text !== ':') {\n\t\t\t\t                            // no need to force newline on 'var': for (var x = 0...)\n\t\t\t\t                            if (current_token.type === 'TK_RESERVED' && current_token.text === 'if' && flags.last_text === 'else') {\n\t\t\t\t                                // no newline for } else if {\n\t\t\t\t                                output.space_before_token = true;\n\t\t\t\t                            } else {\n\t\t\t\t                                print_newline();\n\t\t\t\t                            }\n\t\t\t\t                        }\n\t\t\t\t                    } else if (current_token.type === 'TK_RESERVED' && in_array(current_token.text, Tokenizer.line_starters) && flags.last_text !== ')') {\n\t\t\t\t                        print_newline();\n\t\t\t\t                    }\n\t\t\t\t                } else if (flags.multiline_frame && is_array(flags.mode) && flags.last_text === ',' && last_last_text === '}') {\n\t\t\t\t                    print_newline(); // }, in lists get a newline treatment\n\t\t\t\t                } else if (prefix === 'SPACE') {\n\t\t\t\t                    output.space_before_token = true;\n\t\t\t\t                }\n\t\t\t\t                print_token();\n\t\t\t\t                flags.last_word = current_token.text;\n\t\t\t\t\n\t\t\t\t                if (current_token.type === 'TK_RESERVED') {\n\t\t\t\t                    if (current_token.text === 'do') {\n\t\t\t\t                        flags.do_block = true;\n\t\t\t\t                    } else if (current_token.text === 'if') {\n\t\t\t\t                        flags.if_block = true;\n\t\t\t\t                    } else if (current_token.text === 'import') {\n\t\t\t\t                        flags.import_block = true;\n\t\t\t\t                    } else if (flags.import_block && current_token.type === 'TK_RESERVED' && current_token.text === 'from') {\n\t\t\t\t                        flags.import_block = false;\n\t\t\t\t                    }\n\t\t\t\t                }\n\t\t\t\t            }\n\t\t\t\t\n\t\t\t\t            function handle_semicolon() {\n\t\t\t\t                if (start_of_statement()) {\n\t\t\t\t                    // The conditional starts the statement if appropriate.\n\t\t\t\t                    // Semicolon can be the start (and end) of a statement\n\t\t\t\t                    output.space_before_token = false;\n\t\t\t\t                }\n\t\t\t\t                while (flags.mode === MODE.Statement && !flags.if_block && !flags.do_block) {\n\t\t\t\t                    restore_mode();\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                // hacky but effective for the moment\n\t\t\t\t                if (flags.import_block) {\n\t\t\t\t                    flags.import_block = false;\n\t\t\t\t                }\n\t\t\t\t                print_token();\n\t\t\t\t            }\n\t\t\t\t\n\t\t\t\t            function handle_string() {\n\t\t\t\t                if (start_of_statement()) {\n\t\t\t\t                    // The conditional starts the statement if appropriate.\n\t\t\t\t                    // One difference - strings want at least a space before\n\t\t\t\t                    output.space_before_token = true;\n\t\t\t\t                } else if (last_type === 'TK_RESERVED' || last_type === 'TK_WORD' || flags.inline_frame) {\n\t\t\t\t                    output.space_before_token = true;\n\t\t\t\t                } else if (last_type === 'TK_COMMA' || last_type === 'TK_START_EXPR' || last_type === 'TK_EQUALS' || last_type === 'TK_OPERATOR') {\n\t\t\t\t                    if (!start_of_object_property()) {\n\t\t\t\t                        allow_wrap_or_preserved_newline();\n\t\t\t\t                    }\n\t\t\t\t                } else {\n\t\t\t\t                    print_newline();\n\t\t\t\t                }\n\t\t\t\t                print_token();\n\t\t\t\t            }\n\t\t\t\t\n\t\t\t\t            function handle_equals() {\n\t\t\t\t                if (start_of_statement()) {\n\t\t\t\t                    // The conditional starts the statement if appropriate.\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                if (flags.declaration_statement) {\n\t\t\t\t                    // just got an '=' in a var-line, different formatting/line-breaking, etc will now be done\n\t\t\t\t                    flags.declaration_assignment = true;\n\t\t\t\t                }\n\t\t\t\t                output.space_before_token = true;\n\t\t\t\t                print_token();\n\t\t\t\t                output.space_before_token = true;\n\t\t\t\t            }\n\t\t\t\t\n\t\t\t\t            function handle_comma() {\n\t\t\t\t                print_token();\n\t\t\t\t                output.space_before_token = true;\n\t\t\t\t                if (flags.declaration_statement) {\n\t\t\t\t                    if (is_expression(flags.parent.mode)) {\n\t\t\t\t                        // do not break on comma, for(var a = 1, b = 2)\n\t\t\t\t                        flags.declaration_assignment = false;\n\t\t\t\t                    }\n\t\t\t\t\n\t\t\t\t                    if (flags.declaration_assignment) {\n\t\t\t\t                        flags.declaration_assignment = false;\n\t\t\t\t                        print_newline(false, true);\n\t\t\t\t                    } else if (opt.comma_first) {\n\t\t\t\t                        // for comma-first, we want to allow a newline before the comma\n\t\t\t\t                        // to turn into a newline after the comma, which we will fixup later\n\t\t\t\t                        allow_wrap_or_preserved_newline();\n\t\t\t\t                    }\n\t\t\t\t                } else if (flags.mode === MODE.ObjectLiteral ||\n\t\t\t\t                    (flags.mode === MODE.Statement && flags.parent.mode === MODE.ObjectLiteral)) {\n\t\t\t\t                    if (flags.mode === MODE.Statement) {\n\t\t\t\t                        restore_mode();\n\t\t\t\t                    }\n\t\t\t\t\n\t\t\t\t                    if (!flags.inline_frame) {\n\t\t\t\t                        print_newline();\n\t\t\t\t                    }\n\t\t\t\t                } else if (opt.comma_first) {\n\t\t\t\t                    // EXPR or DO_BLOCK\n\t\t\t\t                    // for comma-first, we want to allow a newline before the comma\n\t\t\t\t                    // to turn into a newline after the comma, which we will fixup later\n\t\t\t\t                    allow_wrap_or_preserved_newline();\n\t\t\t\t                }\n\t\t\t\t            }\n\t\t\t\t\n\t\t\t\t            function handle_operator() {\n\t\t\t\t                if (start_of_statement()) {\n\t\t\t\t                    // The conditional starts the statement if appropriate.\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                if (last_type === 'TK_RESERVED' && is_special_word(flags.last_text)) {\n\t\t\t\t                    // \"return\" had a special handling in TK_WORD. Now we need to return the favor\n\t\t\t\t                    output.space_before_token = true;\n\t\t\t\t                    print_token();\n\t\t\t\t                    return;\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                // hack for actionscript's import .*;\n\t\t\t\t                if (current_token.text === '*' && last_type === 'TK_DOT') {\n\t\t\t\t                    print_token();\n\t\t\t\t                    return;\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                if (current_token.text === '::') {\n\t\t\t\t                    // no spaces around exotic namespacing syntax operator\n\t\t\t\t                    print_token();\n\t\t\t\t                    return;\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                // Allow line wrapping between operators when operator_position is\n\t\t\t\t                //   set to before or preserve\n\t\t\t\t                if (last_type === 'TK_OPERATOR' && in_array(opt.operator_position, OPERATOR_POSITION_BEFORE_OR_PRESERVE)) {\n\t\t\t\t                    allow_wrap_or_preserved_newline();\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                if (current_token.text === ':' && flags.in_case) {\n\t\t\t\t                    flags.case_body = true;\n\t\t\t\t                    indent();\n\t\t\t\t                    print_token();\n\t\t\t\t                    print_newline();\n\t\t\t\t                    flags.in_case = false;\n\t\t\t\t                    return;\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                var space_before = true;\n\t\t\t\t                var space_after = true;\n\t\t\t\t                var in_ternary = false;\n\t\t\t\t                var isGeneratorAsterisk = current_token.text === '*' &&\n\t\t\t\t                    ((last_type === 'TK_RESERVED' && in_array(flags.last_text, ['function', 'yield'])) ||\n\t\t\t\t                        (flags.mode === MODE.ObjectLiteral && in_array(last_type, ['TK_START_BLOCK', 'TK_COMMA'])));\n\t\t\t\t                var isUnary = in_array(current_token.text, ['-', '+']) && (\n\t\t\t\t                    in_array(last_type, ['TK_START_BLOCK', 'TK_START_EXPR', 'TK_EQUALS', 'TK_OPERATOR']) ||\n\t\t\t\t                    in_array(flags.last_text, Tokenizer.line_starters) ||\n\t\t\t\t                    flags.last_text === ','\n\t\t\t\t                );\n\t\t\t\t\n\t\t\t\t                if (current_token.text === ':') {\n\t\t\t\t                    if (flags.ternary_depth === 0) {\n\t\t\t\t                        // Colon is invalid javascript outside of ternary and object, but do our best to guess what was meant.\n\t\t\t\t                        space_before = false;\n\t\t\t\t                    } else {\n\t\t\t\t                        flags.ternary_depth -= 1;\n\t\t\t\t                        in_ternary = true;\n\t\t\t\t                    }\n\t\t\t\t                } else if (current_token.text === '?') {\n\t\t\t\t                    flags.ternary_depth += 1;\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                // let's handle the operator_position option prior to any conflicting logic\n\t\t\t\t                if (!isUnary && !isGeneratorAsterisk && opt.preserve_newlines && in_array(current_token.text, Tokenizer.positionable_operators)) {\n\t\t\t\t                    var isColon = current_token.text === ':';\n\t\t\t\t                    var isTernaryColon = (isColon && in_ternary);\n\t\t\t\t                    var isOtherColon = (isColon && !in_ternary);\n\t\t\t\t\n\t\t\t\t                    switch (opt.operator_position) {\n\t\t\t\t                        case OPERATOR_POSITION.before_newline:\n\t\t\t\t                            // if the current token is : and it's not a ternary statement then we set space_before to false\n\t\t\t\t                            output.space_before_token = !isOtherColon;\n\t\t\t\t\n\t\t\t\t                            print_token();\n\t\t\t\t\n\t\t\t\t                            if (!isColon || isTernaryColon) {\n\t\t\t\t                                allow_wrap_or_preserved_newline();\n\t\t\t\t                            }\n\t\t\t\t\n\t\t\t\t                            output.space_before_token = true;\n\t\t\t\t                            return;\n\t\t\t\t\n\t\t\t\t                        case OPERATOR_POSITION.after_newline:\n\t\t\t\t                            // if the current token is anything but colon, or (via deduction) it's a colon and in a ternary statement,\n\t\t\t\t                            //   then print a newline.\n\t\t\t\t\n\t\t\t\t                            output.space_before_token = true;\n\t\t\t\t\n\t\t\t\t                            if (!isColon || isTernaryColon) {\n\t\t\t\t                                if (get_token(1).wanted_newline) {\n\t\t\t\t                                    print_newline(false, true);\n\t\t\t\t                                } else {\n\t\t\t\t                                    allow_wrap_or_preserved_newline();\n\t\t\t\t                                }\n\t\t\t\t                            } else {\n\t\t\t\t                                output.space_before_token = false;\n\t\t\t\t                            }\n\t\t\t\t\n\t\t\t\t                            print_token();\n\t\t\t\t\n\t\t\t\t                            output.space_before_token = true;\n\t\t\t\t                            return;\n\t\t\t\t\n\t\t\t\t                        case OPERATOR_POSITION.preserve_newline:\n\t\t\t\t                            if (!isOtherColon) {\n\t\t\t\t                                allow_wrap_or_preserved_newline();\n\t\t\t\t                            }\n\t\t\t\t\n\t\t\t\t                            // if we just added a newline, or the current token is : and it's not a ternary statement,\n\t\t\t\t                            //   then we set space_before to false\n\t\t\t\t                            space_before = !(output.just_added_newline() || isOtherColon);\n\t\t\t\t\n\t\t\t\t                            output.space_before_token = space_before;\n\t\t\t\t                            print_token();\n\t\t\t\t                            output.space_before_token = true;\n\t\t\t\t                            return;\n\t\t\t\t                    }\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                if (in_array(current_token.text, ['--', '++', '!', '~']) || isUnary) {\n\t\t\t\t                    // unary operators (and binary +/- pretending to be unary) special cases\n\t\t\t\t\n\t\t\t\t                    space_before = false;\n\t\t\t\t                    space_after = false;\n\t\t\t\t\n\t\t\t\t                    // http://www.ecma-international.org/ecma-262/5.1/#sec-7.9.1\n\t\t\t\t                    // if there is a newline between -- or ++ and anything else we should preserve it.\n\t\t\t\t                    if (current_token.wanted_newline && (current_token.text === '--' || current_token.text === '++')) {\n\t\t\t\t                        print_newline(false, true);\n\t\t\t\t                    }\n\t\t\t\t\n\t\t\t\t                    if (flags.last_text === ';' && is_expression(flags.mode)) {\n\t\t\t\t                        // for (;; ++i)\n\t\t\t\t                        //        ^^^\n\t\t\t\t                        space_before = true;\n\t\t\t\t                    }\n\t\t\t\t\n\t\t\t\t                    if (last_type === 'TK_RESERVED') {\n\t\t\t\t                        space_before = true;\n\t\t\t\t                    } else if (last_type === 'TK_END_EXPR') {\n\t\t\t\t                        space_before = !(flags.last_text === ']' && (current_token.text === '--' || current_token.text === '++'));\n\t\t\t\t                    } else if (last_type === 'TK_OPERATOR') {\n\t\t\t\t                        // a++ + ++b;\n\t\t\t\t                        // a - -b\n\t\t\t\t                        space_before = in_array(current_token.text, ['--', '-', '++', '+']) && in_array(flags.last_text, ['--', '-', '++', '+']);\n\t\t\t\t                        // + and - are not unary when preceeded by -- or ++ operator\n\t\t\t\t                        // a-- + b\n\t\t\t\t                        // a * +b\n\t\t\t\t                        // a - -b\n\t\t\t\t                        if (in_array(current_token.text, ['+', '-']) && in_array(flags.last_text, ['--', '++'])) {\n\t\t\t\t                            space_after = true;\n\t\t\t\t                        }\n\t\t\t\t                    }\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t                    if (((flags.mode === MODE.BlockStatement && !flags.inline_frame) || flags.mode === MODE.Statement) &&\n\t\t\t\t                        (flags.last_text === '{' || flags.last_text === ';')) {\n\t\t\t\t                        // { foo; --i }\n\t\t\t\t                        // foo(); --bar;\n\t\t\t\t                        print_newline();\n\t\t\t\t                    }\n\t\t\t\t                } else if (isGeneratorAsterisk) {\n\t\t\t\t                    allow_wrap_or_preserved_newline();\n\t\t\t\t                    space_before = false;\n\t\t\t\t                    space_after = false;\n\t\t\t\t                }\n\t\t\t\t                output.space_before_token = output.space_before_token || space_before;\n\t\t\t\t                print_token();\n\t\t\t\t                output.space_before_token = space_after;\n\t\t\t\t            }\n\t\t\t\t\n\t\t\t\t            function handle_block_comment() {\n\t\t\t\t                if (output.raw) {\n\t\t\t\t                    output.add_raw_token(current_token);\n\t\t\t\t                    if (current_token.directives && current_token.directives.preserve === 'end') {\n\t\t\t\t                        // If we're testing the raw output behavior, do not allow a directive to turn it off.\n\t\t\t\t                        output.raw = opt.test_output_raw;\n\t\t\t\t                    }\n\t\t\t\t                    return;\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                if (current_token.directives) {\n\t\t\t\t                    print_newline(false, true);\n\t\t\t\t                    print_token();\n\t\t\t\t                    if (current_token.directives.preserve === 'start') {\n\t\t\t\t                        output.raw = true;\n\t\t\t\t                    }\n\t\t\t\t                    print_newline(false, true);\n\t\t\t\t                    return;\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                // inline block\n\t\t\t\t                if (!acorn.newline.test(current_token.text) && !current_token.wanted_newline) {\n\t\t\t\t                    output.space_before_token = true;\n\t\t\t\t                    print_token();\n\t\t\t\t                    output.space_before_token = true;\n\t\t\t\t                    return;\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                var lines = split_linebreaks(current_token.text);\n\t\t\t\t                var j; // iterator for this case\n\t\t\t\t                var javadoc = false;\n\t\t\t\t                var starless = false;\n\t\t\t\t                var lastIndent = current_token.whitespace_before;\n\t\t\t\t                var lastIndentLength = lastIndent.length;\n\t\t\t\t\n\t\t\t\t                // block comment starts with a new line\n\t\t\t\t                print_newline(false, true);\n\t\t\t\t                if (lines.length > 1) {\n\t\t\t\t                    javadoc = all_lines_start_with(lines.slice(1), '*');\n\t\t\t\t                    starless = each_line_matches_indent(lines.slice(1), lastIndent);\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                // first line always indented\n\t\t\t\t                print_token(lines[0]);\n\t\t\t\t                for (j = 1; j < lines.length; j++) {\n\t\t\t\t                    print_newline(false, true);\n\t\t\t\t                    if (javadoc) {\n\t\t\t\t                        // javadoc: reformat and re-indent\n\t\t\t\t                        print_token(' ' + ltrim(lines[j]));\n\t\t\t\t                    } else if (starless && lines[j].length > lastIndentLength) {\n\t\t\t\t                        // starless: re-indent non-empty content, avoiding trim\n\t\t\t\t                        print_token(lines[j].substring(lastIndentLength));\n\t\t\t\t                    } else {\n\t\t\t\t                        // normal comments output raw\n\t\t\t\t                        output.add_token(lines[j]);\n\t\t\t\t                    }\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                // for comments of more than one line, make sure there's a new line after\n\t\t\t\t                print_newline(false, true);\n\t\t\t\t            }\n\t\t\t\t\n\t\t\t\t            function handle_comment() {\n\t\t\t\t                if (current_token.wanted_newline) {\n\t\t\t\t                    print_newline(false, true);\n\t\t\t\t                } else {\n\t\t\t\t                    output.trim(true);\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                output.space_before_token = true;\n\t\t\t\t                print_token();\n\t\t\t\t                print_newline(false, true);\n\t\t\t\t            }\n\t\t\t\t\n\t\t\t\t            function handle_dot() {\n\t\t\t\t                if (start_of_statement()) {\n\t\t\t\t                    // The conditional starts the statement if appropriate.\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                if (last_type === 'TK_RESERVED' && is_special_word(flags.last_text)) {\n\t\t\t\t                    output.space_before_token = true;\n\t\t\t\t                } else {\n\t\t\t\t                    // allow preserved newlines before dots in general\n\t\t\t\t                    // force newlines on dots after close paren when break_chained - for bar().baz()\n\t\t\t\t                    allow_wrap_or_preserved_newline(flags.last_text === ')' && opt.break_chained_methods);\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                print_token();\n\t\t\t\t            }\n\t\t\t\t\n\t\t\t\t            function handle_unknown() {\n\t\t\t\t                print_token();\n\t\t\t\t\n\t\t\t\t                if (current_token.text[current_token.text.length - 1] === '\\n') {\n\t\t\t\t                    print_newline();\n\t\t\t\t                }\n\t\t\t\t            }\n\t\t\t\t\n\t\t\t\t            function handle_eof() {\n\t\t\t\t                // Unwind any open statements\n\t\t\t\t                while (flags.mode === MODE.Statement) {\n\t\t\t\t                    restore_mode();\n\t\t\t\t                }\n\t\t\t\t            }\n\t\t\t\t        }\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t        function OutputLine(parent) {\n\t\t\t\t            var _character_count = 0;\n\t\t\t\t            // use indent_count as a marker for lines that have preserved indentation\n\t\t\t\t            var _indent_count = -1;\n\t\t\t\t\n\t\t\t\t            var _items = [];\n\t\t\t\t            var _empty = true;\n\t\t\t\t\n\t\t\t\t            this.set_indent = function(level) {\n\t\t\t\t                _character_count = parent.baseIndentLength + level * parent.indent_length;\n\t\t\t\t                _indent_count = level;\n\t\t\t\t            };\n\t\t\t\t\n\t\t\t\t            this.get_character_count = function() {\n\t\t\t\t                return _character_count;\n\t\t\t\t            };\n\t\t\t\t\n\t\t\t\t            this.is_empty = function() {\n\t\t\t\t                return _empty;\n\t\t\t\t            };\n\t\t\t\t\n\t\t\t\t            this.last = function() {\n\t\t\t\t                if (!this._empty) {\n\t\t\t\t                    return _items[_items.length - 1];\n\t\t\t\t                } else {\n\t\t\t\t                    return null;\n\t\t\t\t                }\n\t\t\t\t            };\n\t\t\t\t\n\t\t\t\t            this.push = function(input) {\n\t\t\t\t                _items.push(input);\n\t\t\t\t                _character_count += input.length;\n\t\t\t\t                _empty = false;\n\t\t\t\t            };\n\t\t\t\t\n\t\t\t\t            this.pop = function() {\n\t\t\t\t                var item = null;\n\t\t\t\t                if (!_empty) {\n\t\t\t\t                    item = _items.pop();\n\t\t\t\t                    _character_count -= item.length;\n\t\t\t\t                    _empty = _items.length === 0;\n\t\t\t\t                }\n\t\t\t\t                return item;\n\t\t\t\t            };\n\t\t\t\t\n\t\t\t\t            this.remove_indent = function() {\n\t\t\t\t                if (_indent_count > 0) {\n\t\t\t\t                    _indent_count -= 1;\n\t\t\t\t                    _character_count -= parent.indent_length;\n\t\t\t\t                }\n\t\t\t\t            };\n\t\t\t\t\n\t\t\t\t            this.trim = function() {\n\t\t\t\t                while (this.last() === ' ') {\n\t\t\t\t                    _items.pop();\n\t\t\t\t                    _character_count -= 1;\n\t\t\t\t                }\n\t\t\t\t                _empty = _items.length === 0;\n\t\t\t\t            };\n\t\t\t\t\n\t\t\t\t            this.toString = function() {\n\t\t\t\t                var result = '';\n\t\t\t\t                if (!this._empty) {\n\t\t\t\t                    if (_indent_count >= 0) {\n\t\t\t\t                        result = parent.indent_cache[_indent_count];\n\t\t\t\t                    }\n\t\t\t\t                    result += _items.join('');\n\t\t\t\t                }\n\t\t\t\t                return result;\n\t\t\t\t            };\n\t\t\t\t        }\n\t\t\t\t\n\t\t\t\t        function Output(indent_string, baseIndentString) {\n\t\t\t\t            baseIndentString = baseIndentString || '';\n\t\t\t\t            this.indent_cache = [baseIndentString];\n\t\t\t\t            this.baseIndentLength = baseIndentString.length;\n\t\t\t\t            this.indent_length = indent_string.length;\n\t\t\t\t            this.raw = false;\n\t\t\t\t\n\t\t\t\t            var lines = [];\n\t\t\t\t            this.baseIndentString = baseIndentString;\n\t\t\t\t            this.indent_string = indent_string;\n\t\t\t\t            this.previous_line = null;\n\t\t\t\t            this.current_line = null;\n\t\t\t\t            this.space_before_token = false;\n\t\t\t\t\n\t\t\t\t            this.add_outputline = function() {\n\t\t\t\t                this.previous_line = this.current_line;\n\t\t\t\t                this.current_line = new OutputLine(this);\n\t\t\t\t                lines.push(this.current_line);\n\t\t\t\t            };\n\t\t\t\t\n\t\t\t\t            // initialize\n\t\t\t\t            this.add_outputline();\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t            this.get_line_number = function() {\n\t\t\t\t                return lines.length;\n\t\t\t\t            };\n\t\t\t\t\n\t\t\t\t            // Using object instead of string to allow for later expansion of info about each line\n\t\t\t\t            this.add_new_line = function(force_newline) {\n\t\t\t\t                if (this.get_line_number() === 1 && this.just_added_newline()) {\n\t\t\t\t                    return false; // no newline on start of file\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                if (force_newline || !this.just_added_newline()) {\n\t\t\t\t                    if (!this.raw) {\n\t\t\t\t                        this.add_outputline();\n\t\t\t\t                    }\n\t\t\t\t                    return true;\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                return false;\n\t\t\t\t            };\n\t\t\t\t\n\t\t\t\t            this.get_code = function() {\n\t\t\t\t                var sweet_code = lines.join('\\n').replace(/[\\r\\n\\t ]+$/, '');\n\t\t\t\t                return sweet_code;\n\t\t\t\t            };\n\t\t\t\t\n\t\t\t\t            this.set_indent = function(level) {\n\t\t\t\t                // Never indent your first output indent at the start of the file\n\t\t\t\t                if (lines.length > 1) {\n\t\t\t\t                    while (level >= this.indent_cache.length) {\n\t\t\t\t                        this.indent_cache.push(this.indent_cache[this.indent_cache.length - 1] + this.indent_string);\n\t\t\t\t                    }\n\t\t\t\t\n\t\t\t\t                    this.current_line.set_indent(level);\n\t\t\t\t                    return true;\n\t\t\t\t                }\n\t\t\t\t                this.current_line.set_indent(0);\n\t\t\t\t                return false;\n\t\t\t\t            };\n\t\t\t\t\n\t\t\t\t            this.add_raw_token = function(token) {\n\t\t\t\t                for (var x = 0; x < token.newlines; x++) {\n\t\t\t\t                    this.add_outputline();\n\t\t\t\t                }\n\t\t\t\t                this.current_line.push(token.whitespace_before);\n\t\t\t\t                this.current_line.push(token.text);\n\t\t\t\t                this.space_before_token = false;\n\t\t\t\t            };\n\t\t\t\t\n\t\t\t\t            this.add_token = function(printable_token) {\n\t\t\t\t                this.add_space_before_token();\n\t\t\t\t                this.current_line.push(printable_token);\n\t\t\t\t            };\n\t\t\t\t\n\t\t\t\t            this.add_space_before_token = function() {\n\t\t\t\t                if (this.space_before_token && !this.just_added_newline()) {\n\t\t\t\t                    this.current_line.push(' ');\n\t\t\t\t                }\n\t\t\t\t                this.space_before_token = false;\n\t\t\t\t            };\n\t\t\t\t\n\t\t\t\t            this.remove_redundant_indentation = function(frame) {\n\t\t\t\t                // This implementation is effective but has some issues:\n\t\t\t\t                //     - can cause line wrap to happen too soon due to indent removal\n\t\t\t\t                //           after wrap points are calculated\n\t\t\t\t                // These issues are minor compared to ugly indentation.\n\t\t\t\t\n\t\t\t\t                if (frame.multiline_frame ||\n\t\t\t\t                    frame.mode === MODE.ForInitializer ||\n\t\t\t\t                    frame.mode === MODE.Conditional) {\n\t\t\t\t                    return;\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                // remove one indent from each line inside this section\n\t\t\t\t                var index = frame.start_line_index;\n\t\t\t\t\n\t\t\t\t                var output_length = lines.length;\n\t\t\t\t                while (index < output_length) {\n\t\t\t\t                    lines[index].remove_indent();\n\t\t\t\t                    index++;\n\t\t\t\t                }\n\t\t\t\t            };\n\t\t\t\t\n\t\t\t\t            this.trim = function(eat_newlines) {\n\t\t\t\t                eat_newlines = (eat_newlines === undefined) ? false : eat_newlines;\n\t\t\t\t\n\t\t\t\t                this.current_line.trim(indent_string, baseIndentString);\n\t\t\t\t\n\t\t\t\t                while (eat_newlines && lines.length > 1 &&\n\t\t\t\t                    this.current_line.is_empty()) {\n\t\t\t\t                    lines.pop();\n\t\t\t\t                    this.current_line = lines[lines.length - 1];\n\t\t\t\t                    this.current_line.trim();\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                this.previous_line = lines.length > 1 ? lines[lines.length - 2] : null;\n\t\t\t\t            };\n\t\t\t\t\n\t\t\t\t            this.just_added_newline = function() {\n\t\t\t\t                return this.current_line.is_empty();\n\t\t\t\t            };\n\t\t\t\t\n\t\t\t\t            this.just_added_blankline = function() {\n\t\t\t\t                if (this.just_added_newline()) {\n\t\t\t\t                    if (lines.length === 1) {\n\t\t\t\t                        return true; // start of the file and newline = blank\n\t\t\t\t                    }\n\t\t\t\t\n\t\t\t\t                    var line = lines[lines.length - 2];\n\t\t\t\t                    return line.is_empty();\n\t\t\t\t                }\n\t\t\t\t                return false;\n\t\t\t\t            };\n\t\t\t\t        }\n\t\t\t\t\n\t\t\t\t        var InputScanner = function(input) {\n\t\t\t\t            var _input = input;\n\t\t\t\t            var _input_length = _input.length;\n\t\t\t\t            var _position = 0;\n\t\t\t\t\n\t\t\t\t            this.back = function() {\n\t\t\t\t                _position -= 1;\n\t\t\t\t            };\n\t\t\t\t\n\t\t\t\t            this.hasNext = function() {\n\t\t\t\t                return _position < _input_length;\n\t\t\t\t            };\n\t\t\t\t\n\t\t\t\t            this.next = function() {\n\t\t\t\t                var val = null;\n\t\t\t\t                if (this.hasNext()) {\n\t\t\t\t                    val = _input.charAt(_position);\n\t\t\t\t                    _position += 1;\n\t\t\t\t                }\n\t\t\t\t                return val;\n\t\t\t\t            };\n\t\t\t\t\n\t\t\t\t            this.peek = function(index) {\n\t\t\t\t                var val = null;\n\t\t\t\t                index = index || 0;\n\t\t\t\t                index += _position;\n\t\t\t\t                if (index >= 0 && index < _input_length) {\n\t\t\t\t                    val = _input.charAt(index);\n\t\t\t\t                }\n\t\t\t\t                return val;\n\t\t\t\t            };\n\t\t\t\t\n\t\t\t\t            this.peekCharCode = function(index) {\n\t\t\t\t                var val = 0;\n\t\t\t\t                index = index || 0;\n\t\t\t\t                index += _position;\n\t\t\t\t                if (index >= 0 && index < _input_length) {\n\t\t\t\t                    val = _input.charCodeAt(index);\n\t\t\t\t                }\n\t\t\t\t                return val;\n\t\t\t\t            };\n\t\t\t\t\n\t\t\t\t            this.test = function(pattern, index) {\n\t\t\t\t                index = index || 0;\n\t\t\t\t                pattern.lastIndex = _position + index;\n\t\t\t\t                return pattern.test(_input);\n\t\t\t\t            };\n\t\t\t\t\n\t\t\t\t            this.testChar = function(pattern, index) {\n\t\t\t\t                var val = this.peek(index);\n\t\t\t\t                return val !== null && pattern.test(val);\n\t\t\t\t            };\n\t\t\t\t\n\t\t\t\t            this.match = function(pattern) {\n\t\t\t\t                pattern.lastIndex = _position;\n\t\t\t\t                var pattern_match = pattern.exec(_input);\n\t\t\t\t                if (pattern_match && pattern_match.index === _position) {\n\t\t\t\t                    _position += pattern_match[0].length;\n\t\t\t\t                } else {\n\t\t\t\t                    pattern_match = null;\n\t\t\t\t                }\n\t\t\t\t                return pattern_match;\n\t\t\t\t            };\n\t\t\t\t        };\n\t\t\t\t\n\t\t\t\t        var Token = function(type, text, newlines, whitespace_before, parent) {\n\t\t\t\t            this.type = type;\n\t\t\t\t            this.text = text;\n\t\t\t\t            this.comments_before = [];\n\t\t\t\t            this.newlines = newlines || 0;\n\t\t\t\t            this.wanted_newline = newlines > 0;\n\t\t\t\t            this.whitespace_before = whitespace_before || '';\n\t\t\t\t            this.parent = parent || null;\n\t\t\t\t            this.opened = null;\n\t\t\t\t            this.directives = null;\n\t\t\t\t        };\n\t\t\t\t\n\t\t\t\t        function tokenizer(input_string, opts) {\n\t\t\t\t\n\t\t\t\t            var whitespace = \"\\n\\r\\t \".split('');\n\t\t\t\t            var digit = /[0-9]/;\n\t\t\t\t            var digit_bin = /[01]/;\n\t\t\t\t            var digit_oct = /[01234567]/;\n\t\t\t\t            var digit_hex = /[0123456789abcdefABCDEF]/;\n\t\t\t\t\n\t\t\t\t            this.positionable_operators = '!= !== % & && * ** + - / : < << <= == === > >= >> >>> ? ^ | ||'.split(' ');\n\t\t\t\t            var punct = this.positionable_operators.concat(\n\t\t\t\t                // non-positionable operators - these do not follow operator position settings\n\t\t\t\t                '! %= &= *= **= ++ += , -- -= /= :: <<= = => >>= >>>= ^= |= ~'.split(' '));\n\t\t\t\t\n\t\t\t\t            // words which should always start on new line.\n\t\t\t\t            this.line_starters = 'continue,try,throw,return,var,let,const,if,switch,case,default,for,while,break,function,import,export'.split(',');\n\t\t\t\t            var reserved_words = this.line_starters.concat(['do', 'in', 'else', 'get', 'set', 'new', 'catch', 'finally', 'typeof', 'yield', 'async', 'await', 'from', 'as']);\n\t\t\t\t\n\t\t\t\t            //  /* ... */ comment ends with nearest */ or end of file\n\t\t\t\t            var block_comment_pattern = /([\\s\\S]*?)((?:\\*\\/)|$)/g;\n\t\t\t\t\n\t\t\t\t            // comment ends just before nearest linefeed or end of file\n\t\t\t\t            var comment_pattern = /([^\\n\\r\\u2028\\u2029]*)/g;\n\t\t\t\t\n\t\t\t\t            var directives_block_pattern = /\\/\\* beautify( \\w+[:]\\w+)+ \\*\\//g;\n\t\t\t\t            var directive_pattern = / (\\w+)[:](\\w+)/g;\n\t\t\t\t            var directives_end_ignore_pattern = /([\\s\\S]*?)((?:\\/\\*\\sbeautify\\signore:end\\s\\*\\/)|$)/g;\n\t\t\t\t\n\t\t\t\t            var template_pattern = /((<\\?php|<\\?=)[\\s\\S]*?\\?>)|(<%[\\s\\S]*?%>)/g;\n\t\t\t\t\n\t\t\t\t            var n_newlines, whitespace_before_token, in_html_comment, tokens;\n\t\t\t\t            var input;\n\t\t\t\t\n\t\t\t\t            this.tokenize = function() {\n\t\t\t\t                input = new InputScanner(input_string);\n\t\t\t\t                in_html_comment = false;\n\t\t\t\t                tokens = [];\n\t\t\t\t\n\t\t\t\t                var next, last;\n\t\t\t\t                var token_values;\n\t\t\t\t                var open = null;\n\t\t\t\t                var open_stack = [];\n\t\t\t\t                var comments = [];\n\t\t\t\t\n\t\t\t\t                while (!(last && last.type === 'TK_EOF')) {\n\t\t\t\t                    token_values = tokenize_next();\n\t\t\t\t                    next = new Token(token_values[1], token_values[0], n_newlines, whitespace_before_token);\n\t\t\t\t                    while (next.type === 'TK_COMMENT' || next.type === 'TK_BLOCK_COMMENT' || next.type === 'TK_UNKNOWN') {\n\t\t\t\t                        if (next.type === 'TK_BLOCK_COMMENT') {\n\t\t\t\t                            next.directives = token_values[2];\n\t\t\t\t                        }\n\t\t\t\t                        comments.push(next);\n\t\t\t\t                        token_values = tokenize_next();\n\t\t\t\t                        next = new Token(token_values[1], token_values[0], n_newlines, whitespace_before_token);\n\t\t\t\t                    }\n\t\t\t\t\n\t\t\t\t                    if (comments.length) {\n\t\t\t\t                        next.comments_before = comments;\n\t\t\t\t                        comments = [];\n\t\t\t\t                    }\n\t\t\t\t\n\t\t\t\t                    if (next.type === 'TK_START_BLOCK' || next.type === 'TK_START_EXPR') {\n\t\t\t\t                        next.parent = last;\n\t\t\t\t                        open_stack.push(open);\n\t\t\t\t                        open = next;\n\t\t\t\t                    } else if ((next.type === 'TK_END_BLOCK' || next.type === 'TK_END_EXPR') &&\n\t\t\t\t                        (open && (\n\t\t\t\t                            (next.text === ']' && open.text === '[') ||\n\t\t\t\t                            (next.text === ')' && open.text === '(') ||\n\t\t\t\t                            (next.text === '}' && open.text === '{')))) {\n\t\t\t\t                        next.parent = open.parent;\n\t\t\t\t                        next.opened = open;\n\t\t\t\t\n\t\t\t\t                        open = open_stack.pop();\n\t\t\t\t                    }\n\t\t\t\t\n\t\t\t\t                    tokens.push(next);\n\t\t\t\t                    last = next;\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                return tokens;\n\t\t\t\t            };\n\t\t\t\t\n\t\t\t\t            function get_directives(text) {\n\t\t\t\t                if (!text.match(directives_block_pattern)) {\n\t\t\t\t                    return null;\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                var directives = {};\n\t\t\t\t                directive_pattern.lastIndex = 0;\n\t\t\t\t                var directive_match = directive_pattern.exec(text);\n\t\t\t\t\n\t\t\t\t                while (directive_match) {\n\t\t\t\t                    directives[directive_match[1]] = directive_match[2];\n\t\t\t\t                    directive_match = directive_pattern.exec(text);\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                return directives;\n\t\t\t\t            }\n\t\t\t\t\n\t\t\t\t            function tokenize_next() {\n\t\t\t\t                var resulting_string;\n\t\t\t\t                var whitespace_on_this_line = [];\n\t\t\t\t\n\t\t\t\t                n_newlines = 0;\n\t\t\t\t                whitespace_before_token = '';\n\t\t\t\t\n\t\t\t\t                var c = input.next();\n\t\t\t\t\n\t\t\t\t                if (c === null) {\n\t\t\t\t                    return ['', 'TK_EOF'];\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                var last_token;\n\t\t\t\t                if (tokens.length) {\n\t\t\t\t                    last_token = tokens[tokens.length - 1];\n\t\t\t\t                } else {\n\t\t\t\t                    // For the sake of tokenizing we can pretend that there was on open brace to start\n\t\t\t\t                    last_token = new Token('TK_START_BLOCK', '{');\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                while (in_array(c, whitespace)) {\n\t\t\t\t\n\t\t\t\t                    if (acorn.newline.test(c)) {\n\t\t\t\t                        if (!(c === '\\n' && input.peek(-2) === '\\r')) {\n\t\t\t\t                            n_newlines += 1;\n\t\t\t\t                            whitespace_on_this_line = [];\n\t\t\t\t                        }\n\t\t\t\t                    } else {\n\t\t\t\t                        whitespace_on_this_line.push(c);\n\t\t\t\t                    }\n\t\t\t\t\n\t\t\t\t                    c = input.next();\n\t\t\t\t\n\t\t\t\t                    if (c === null) {\n\t\t\t\t                        return ['', 'TK_EOF'];\n\t\t\t\t                    }\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                if (whitespace_on_this_line.length) {\n\t\t\t\t                    whitespace_before_token = whitespace_on_this_line.join('');\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                if (digit.test(c) || (c === '.' && input.testChar(digit))) {\n\t\t\t\t                    var allow_decimal = true;\n\t\t\t\t                    var allow_e = true;\n\t\t\t\t                    var local_digit = digit;\n\t\t\t\t\n\t\t\t\t                    if (c === '0' && input.testChar(/[XxOoBb]/)) {\n\t\t\t\t                        // switch to hex/oct/bin number, no decimal or e, just hex/oct/bin digits\n\t\t\t\t                        allow_decimal = false;\n\t\t\t\t                        allow_e = false;\n\t\t\t\t                        if (input.testChar(/[Bb]/)) {\n\t\t\t\t                            local_digit = digit_bin;\n\t\t\t\t                        } else if (input.testChar(/[Oo]/)) {\n\t\t\t\t                            local_digit = digit_oct;\n\t\t\t\t                        } else {\n\t\t\t\t                            local_digit = digit_hex;\n\t\t\t\t                        }\n\t\t\t\t                        c += input.next();\n\t\t\t\t                    } else if (c === '.') {\n\t\t\t\t                        // Already have a decimal for this literal, don't allow another\n\t\t\t\t                        allow_decimal = false;\n\t\t\t\t                    } else {\n\t\t\t\t                        // we know this first loop will run.  It keeps the logic simpler.\n\t\t\t\t                        c = '';\n\t\t\t\t                        input.back();\n\t\t\t\t                    }\n\t\t\t\t\n\t\t\t\t                    // Add the digits\n\t\t\t\t                    while (input.testChar(local_digit)) {\n\t\t\t\t                        c += input.next();\n\t\t\t\t\n\t\t\t\t                        if (allow_decimal && input.peek() === '.') {\n\t\t\t\t                            c += input.next();\n\t\t\t\t                            allow_decimal = false;\n\t\t\t\t                        } else if (allow_e && input.testChar(/[Ee]/)) {\n\t\t\t\t                            c += input.next();\n\t\t\t\t\n\t\t\t\t                            if (input.testChar(/[+-]/)) {\n\t\t\t\t                                c += input.next();\n\t\t\t\t                            }\n\t\t\t\t\n\t\t\t\t                            allow_e = false;\n\t\t\t\t                            allow_decimal = false;\n\t\t\t\t                        }\n\t\t\t\t                    }\n\t\t\t\t\n\t\t\t\t                    return [c, 'TK_WORD'];\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                if (acorn.isIdentifierStart(input.peekCharCode(-1))) {\n\t\t\t\t                    if (input.hasNext()) {\n\t\t\t\t                        while (acorn.isIdentifierChar(input.peekCharCode())) {\n\t\t\t\t                            c += input.next();\n\t\t\t\t                            if (!input.hasNext()) {\n\t\t\t\t                                break;\n\t\t\t\t                            }\n\t\t\t\t                        }\n\t\t\t\t                    }\n\t\t\t\t\n\t\t\t\t                    if (!(last_token.type === 'TK_DOT' ||\n\t\t\t\t                            (last_token.type === 'TK_RESERVED' && in_array(last_token.text, ['set', 'get']))) &&\n\t\t\t\t                        in_array(c, reserved_words)) {\n\t\t\t\t                        if (c === 'in') { // hack for 'in' operator\n\t\t\t\t                            return [c, 'TK_OPERATOR'];\n\t\t\t\t                        }\n\t\t\t\t                        return [c, 'TK_RESERVED'];\n\t\t\t\t                    }\n\t\t\t\t\n\t\t\t\t                    return [c, 'TK_WORD'];\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                if (c === '(' || c === '[') {\n\t\t\t\t                    return [c, 'TK_START_EXPR'];\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                if (c === ')' || c === ']') {\n\t\t\t\t                    return [c, 'TK_END_EXPR'];\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                if (c === '{') {\n\t\t\t\t                    return [c, 'TK_START_BLOCK'];\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                if (c === '}') {\n\t\t\t\t                    return [c, 'TK_END_BLOCK'];\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                if (c === ';') {\n\t\t\t\t                    return [c, 'TK_SEMICOLON'];\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                if (c === '/') {\n\t\t\t\t                    var comment = '';\n\t\t\t\t                    var comment_match;\n\t\t\t\t                    // peek for comment /* ... */\n\t\t\t\t                    if (input.peek() === '*') {\n\t\t\t\t                        input.next();\n\t\t\t\t                        comment_match = input.match(block_comment_pattern);\n\t\t\t\t                        comment = '/*' + comment_match[0];\n\t\t\t\t                        var directives = get_directives(comment);\n\t\t\t\t                        if (directives && directives.ignore === 'start') {\n\t\t\t\t                            comment_match = input.match(directives_end_ignore_pattern);\n\t\t\t\t                            comment += comment_match[0];\n\t\t\t\t                        }\n\t\t\t\t                        comment = comment.replace(acorn.allLineBreaks, '\\n');\n\t\t\t\t                        return [comment, 'TK_BLOCK_COMMENT', directives];\n\t\t\t\t                    }\n\t\t\t\t                    // peek for comment // ...\n\t\t\t\t                    if (input.peek() === '/') {\n\t\t\t\t                        input.next();\n\t\t\t\t                        comment_match = input.match(comment_pattern);\n\t\t\t\t                        comment = '//' + comment_match[0];\n\t\t\t\t                        return [comment, 'TK_COMMENT'];\n\t\t\t\t                    }\n\t\t\t\t\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                var startXmlRegExp = /<()([-a-zA-Z:0-9_.]+|{[\\s\\S]+?}|!\\[CDATA\\[[\\s\\S]*?\\]\\])(\\s+{[\\s\\S]+?}|\\s+[-a-zA-Z:0-9_.]+|\\s+[-a-zA-Z:0-9_.]+\\s*=\\s*('[^']*'|\"[^\"]*\"|{[\\s\\S]+?}))*\\s*(\\/?)\\s*>/g;\n\t\t\t\t\n\t\t\t\t                if (c === '`' || c === \"'\" || c === '\"' || // string\n\t\t\t\t                    (\n\t\t\t\t                        (c === '/') || // regexp\n\t\t\t\t                        (opts.e4x && c === \"<\" && input.test(startXmlRegExp, -1)) // xml\n\t\t\t\t                    ) && ( // regex and xml can only appear in specific locations during parsing\n\t\t\t\t                        (last_token.type === 'TK_RESERVED' && in_array(last_token.text, ['return', 'case', 'throw', 'else', 'do', 'typeof', 'yield'])) ||\n\t\t\t\t                        (last_token.type === 'TK_END_EXPR' && last_token.text === ')' &&\n\t\t\t\t                            last_token.parent && last_token.parent.type === 'TK_RESERVED' && in_array(last_token.parent.text, ['if', 'while', 'for'])) ||\n\t\t\t\t                        (in_array(last_token.type, ['TK_COMMENT', 'TK_START_EXPR', 'TK_START_BLOCK',\n\t\t\t\t                            'TK_END_BLOCK', 'TK_OPERATOR', 'TK_EQUALS', 'TK_EOF', 'TK_SEMICOLON', 'TK_COMMA'\n\t\t\t\t                        ]))\n\t\t\t\t                    )) {\n\t\t\t\t\n\t\t\t\t                    var sep = c,\n\t\t\t\t                        esc = false,\n\t\t\t\t                        has_char_escapes = false;\n\t\t\t\t\n\t\t\t\t                    resulting_string = c;\n\t\t\t\t\n\t\t\t\t                    if (sep === '/') {\n\t\t\t\t                        //\n\t\t\t\t                        // handle regexp\n\t\t\t\t                        //\n\t\t\t\t                        var in_char_class = false;\n\t\t\t\t                        while (input.hasNext() &&\n\t\t\t\t                            ((esc || in_char_class || input.peek() !== sep) &&\n\t\t\t\t                                !input.testChar(acorn.newline))) {\n\t\t\t\t                            resulting_string += input.peek();\n\t\t\t\t                            if (!esc) {\n\t\t\t\t                                esc = input.peek() === '\\\\';\n\t\t\t\t                                if (input.peek() === '[') {\n\t\t\t\t                                    in_char_class = true;\n\t\t\t\t                                } else if (input.peek() === ']') {\n\t\t\t\t                                    in_char_class = false;\n\t\t\t\t                                }\n\t\t\t\t                            } else {\n\t\t\t\t                                esc = false;\n\t\t\t\t                            }\n\t\t\t\t                            input.next();\n\t\t\t\t                        }\n\t\t\t\t                    } else if (opts.e4x && sep === '<') {\n\t\t\t\t                        //\n\t\t\t\t                        // handle e4x xml literals\n\t\t\t\t                        //\n\t\t\t\t\n\t\t\t\t                        var xmlRegExp = /[\\s\\S]*?<(\\/?)([-a-zA-Z:0-9_.]+|{[\\s\\S]+?}|!\\[CDATA\\[[\\s\\S]*?\\]\\])(\\s+{[\\s\\S]+?}|\\s+[-a-zA-Z:0-9_.]+|\\s+[-a-zA-Z:0-9_.]+\\s*=\\s*('[^']*'|\"[^\"]*\"|{[\\s\\S]+?}))*\\s*(\\/?)\\s*>/g;\n\t\t\t\t                        input.back();\n\t\t\t\t                        var xmlStr = '';\n\t\t\t\t                        var match = input.match(startXmlRegExp);\n\t\t\t\t                        if (match) {\n\t\t\t\t                            // Trim root tag to attempt to\n\t\t\t\t                            var rootTag = match[2].replace(/^{\\s+/, '{').replace(/\\s+}$/, '}');\n\t\t\t\t                            var isCurlyRoot = rootTag.indexOf('{') === 0;\n\t\t\t\t                            var depth = 0;\n\t\t\t\t                            while (match) {\n\t\t\t\t                                var isEndTag = !!match[1];\n\t\t\t\t                                var tagName = match[2];\n\t\t\t\t                                var isSingletonTag = (!!match[match.length - 1]) || (tagName.slice(0, 8) === \"![CDATA[\");\n\t\t\t\t                                if (!isSingletonTag &&\n\t\t\t\t                                    (tagName === rootTag || (isCurlyRoot && tagName.replace(/^{\\s+/, '{').replace(/\\s+}$/, '}')))) {\n\t\t\t\t                                    if (isEndTag) {\n\t\t\t\t                                        --depth;\n\t\t\t\t                                    } else {\n\t\t\t\t                                        ++depth;\n\t\t\t\t                                    }\n\t\t\t\t                                }\n\t\t\t\t                                xmlStr += match[0];\n\t\t\t\t                                if (depth <= 0) {\n\t\t\t\t                                    break;\n\t\t\t\t                                }\n\t\t\t\t                                match = input.match(xmlRegExp);\n\t\t\t\t                            }\n\t\t\t\t                            // if we didn't close correctly, keep unformatted.\n\t\t\t\t                            if (!match) {\n\t\t\t\t                                xmlStr += input.match(/[\\s\\S]*/g)[0];\n\t\t\t\t                            }\n\t\t\t\t                            xmlStr = xmlStr.replace(acorn.allLineBreaks, '\\n');\n\t\t\t\t                            return [xmlStr, \"TK_STRING\"];\n\t\t\t\t                        }\n\t\t\t\t                    } else {\n\t\t\t\t                        //\n\t\t\t\t                        // handle string\n\t\t\t\t                        //\n\t\t\t\t                        var parse_string = function(delimiter, allow_unescaped_newlines, start_sub) {\n\t\t\t\t                            // Template strings can travers lines without escape characters.\n\t\t\t\t                            // Other strings cannot\n\t\t\t\t                            var current_char;\n\t\t\t\t                            while (input.hasNext()) {\n\t\t\t\t                                current_char = input.peek();\n\t\t\t\t                                if (!(esc || (current_char !== delimiter &&\n\t\t\t\t                                        (allow_unescaped_newlines || !acorn.newline.test(current_char))))) {\n\t\t\t\t                                    break;\n\t\t\t\t                                }\n\t\t\t\t\n\t\t\t\t                                // Handle \\r\\n linebreaks after escapes or in template strings\n\t\t\t\t                                if ((esc || allow_unescaped_newlines) && acorn.newline.test(current_char)) {\n\t\t\t\t                                    if (current_char === '\\r' && input.peek(1) === '\\n') {\n\t\t\t\t                                        input.next();\n\t\t\t\t                                        current_char = input.peek();\n\t\t\t\t                                    }\n\t\t\t\t                                    resulting_string += '\\n';\n\t\t\t\t                                } else {\n\t\t\t\t                                    resulting_string += current_char;\n\t\t\t\t                                }\n\t\t\t\t\n\t\t\t\t                                if (esc) {\n\t\t\t\t                                    if (current_char === 'x' || current_char === 'u') {\n\t\t\t\t                                        has_char_escapes = true;\n\t\t\t\t                                    }\n\t\t\t\t                                    esc = false;\n\t\t\t\t                                } else {\n\t\t\t\t                                    esc = current_char === '\\\\';\n\t\t\t\t                                }\n\t\t\t\t\n\t\t\t\t                                input.next();\n\t\t\t\t\n\t\t\t\t                                if (start_sub && resulting_string.indexOf(start_sub, resulting_string.length - start_sub.length) !== -1) {\n\t\t\t\t                                    if (delimiter === '`') {\n\t\t\t\t                                        parse_string('}', allow_unescaped_newlines, '`');\n\t\t\t\t                                    } else {\n\t\t\t\t                                        parse_string('`', allow_unescaped_newlines, '${');\n\t\t\t\t                                    }\n\t\t\t\t                                }\n\t\t\t\t                            }\n\t\t\t\t                        };\n\t\t\t\t\n\t\t\t\t                        if (sep === '`') {\n\t\t\t\t                            parse_string('`', true, '${');\n\t\t\t\t                        } else {\n\t\t\t\t                            parse_string(sep);\n\t\t\t\t                        }\n\t\t\t\t                    }\n\t\t\t\t\n\t\t\t\t                    if (has_char_escapes && opts.unescape_strings) {\n\t\t\t\t                        resulting_string = unescape_string(resulting_string);\n\t\t\t\t                    }\n\t\t\t\t\n\t\t\t\t                    if (input.peek() === sep) {\n\t\t\t\t                        resulting_string += sep;\n\t\t\t\t                        input.next();\n\t\t\t\t\n\t\t\t\t                        if (sep === '/') {\n\t\t\t\t                            // regexps may have modifiers /regexp/MOD , so fetch those, too\n\t\t\t\t                            // Only [gim] are valid, but if the user puts in garbage, do what we can to take it.\n\t\t\t\t                            while (input.hasNext() && acorn.isIdentifierStart(input.peekCharCode())) {\n\t\t\t\t                                resulting_string += input.next();\n\t\t\t\t                            }\n\t\t\t\t                        }\n\t\t\t\t                    }\n\t\t\t\t                    return [resulting_string, 'TK_STRING'];\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                if (c === '#') {\n\t\t\t\t\n\t\t\t\t                    if (tokens.length === 0 && input.peek() === '!') {\n\t\t\t\t                        // shebang\n\t\t\t\t                        resulting_string = c;\n\t\t\t\t                        while (input.hasNext() && c !== '\\n') {\n\t\t\t\t                            c = input.next();\n\t\t\t\t                            resulting_string += c;\n\t\t\t\t                        }\n\t\t\t\t                        return [trim(resulting_string) + '\\n', 'TK_UNKNOWN'];\n\t\t\t\t                    }\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t                    // Spidermonkey-specific sharp variables for circular references\n\t\t\t\t                    // https://developer.mozilla.org/En/Sharp_variables_in_JavaScript\n\t\t\t\t                    // http://mxr.mozilla.org/mozilla-central/source/js/src/jsscan.cpp around line 1935\n\t\t\t\t                    var sharp = '#';\n\t\t\t\t                    if (input.hasNext() && input.testChar(digit)) {\n\t\t\t\t                        do {\n\t\t\t\t                            c = input.next();\n\t\t\t\t                            sharp += c;\n\t\t\t\t                        } while (input.hasNext() && c !== '#' && c !== '=');\n\t\t\t\t                        if (c === '#') {\n\t\t\t\t                            //\n\t\t\t\t                        } else if (input.peek() === '[' && input.peek(1) === ']') {\n\t\t\t\t                            sharp += '[]';\n\t\t\t\t                            input.next();\n\t\t\t\t                            input.next();\n\t\t\t\t                        } else if (input.peek() === '{' && input.peek(1) === '}') {\n\t\t\t\t                            sharp += '{}';\n\t\t\t\t                            input.next();\n\t\t\t\t                            input.next();\n\t\t\t\t                        }\n\t\t\t\t                        return [sharp, 'TK_WORD'];\n\t\t\t\t                    }\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                if (c === '<' && (input.peek() === '?' || input.peek() === '%')) {\n\t\t\t\t                    input.back();\n\t\t\t\t                    var template_match = input.match(template_pattern);\n\t\t\t\t                    if (template_match) {\n\t\t\t\t                        c = template_match[0];\n\t\t\t\t                        c = c.replace(acorn.allLineBreaks, '\\n');\n\t\t\t\t                        return [c, 'TK_STRING'];\n\t\t\t\t                    }\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                if (c === '<' && input.match(/\\!--/g)) {\n\t\t\t\t                    c = '<!--';\n\t\t\t\t                    while (input.hasNext() && !input.testChar(acorn.newline)) {\n\t\t\t\t                        c += input.next();\n\t\t\t\t                    }\n\t\t\t\t                    in_html_comment = true;\n\t\t\t\t                    return [c, 'TK_COMMENT'];\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                if (c === '-' && in_html_comment && input.match(/->/g)) {\n\t\t\t\t                    in_html_comment = false;\n\t\t\t\t                    return ['-->', 'TK_COMMENT'];\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                if (c === '.') {\n\t\t\t\t                    return [c, 'TK_DOT'];\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                if (in_array(c, punct)) {\n\t\t\t\t                    while (input.hasNext() && in_array(c + input.peek(), punct)) {\n\t\t\t\t                        c += input.next();\n\t\t\t\t                        if (!input.hasNext()) {\n\t\t\t\t                            break;\n\t\t\t\t                        }\n\t\t\t\t                    }\n\t\t\t\t\n\t\t\t\t                    if (c === ',') {\n\t\t\t\t                        return [c, 'TK_COMMA'];\n\t\t\t\t                    } else if (c === '=') {\n\t\t\t\t                        return [c, 'TK_EQUALS'];\n\t\t\t\t                    } else {\n\t\t\t\t                        return [c, 'TK_OPERATOR'];\n\t\t\t\t                    }\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                return [c, 'TK_UNKNOWN'];\n\t\t\t\t            }\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t            function unescape_string(s) {\n\t\t\t\t                // You think that a regex would work for this\n\t\t\t\t                // return s.replace(/\\\\x([0-9a-f]{2})/gi, function(match, val) {\n\t\t\t\t                //         return String.fromCharCode(parseInt(val, 16));\n\t\t\t\t                //     })\n\t\t\t\t                // However, dealing with '\\xff', '\\\\xff', '\\\\\\xff' makes this more fun.\n\t\t\t\t                var out = '',\n\t\t\t\t                    escaped = 0;\n\t\t\t\t\n\t\t\t\t                var input_scan = new InputScanner(s);\n\t\t\t\t                var matched = null;\n\t\t\t\t\n\t\t\t\t                while (input_scan.hasNext()) {\n\t\t\t\t                    // Keep any whitespace, non-slash characters\n\t\t\t\t                    // also keep slash pairs.\n\t\t\t\t                    matched = input_scan.match(/([\\s]|[^\\\\]|\\\\\\\\)+/g);\n\t\t\t\t\n\t\t\t\t                    if (matched) {\n\t\t\t\t                        out += matched[0];\n\t\t\t\t                    }\n\t\t\t\t\n\t\t\t\t                    if (input_scan.peek() === '\\\\') {\n\t\t\t\t                        input_scan.next();\n\t\t\t\t                        if (input_scan.peek() === 'x') {\n\t\t\t\t                            matched = input_scan.match(/x([0-9A-Fa-f]{2})/g);\n\t\t\t\t                        } else if (input_scan.peek() === 'u') {\n\t\t\t\t                            matched = input_scan.match(/u([0-9A-Fa-f]{4})/g);\n\t\t\t\t                        } else {\n\t\t\t\t                            out += '\\\\';\n\t\t\t\t                            if (input_scan.hasNext()) {\n\t\t\t\t                                out += input_scan.next();\n\t\t\t\t                            }\n\t\t\t\t                            continue;\n\t\t\t\t                        }\n\t\t\t\t\n\t\t\t\t                        // If there's some error decoding, return the original string\n\t\t\t\t                        if (!matched) {\n\t\t\t\t                            return s;\n\t\t\t\t                        }\n\t\t\t\t\n\t\t\t\t                        escaped = parseInt(matched[1], 16);\n\t\t\t\t\n\t\t\t\t                        if (escaped > 0x7e && escaped <= 0xff && matched[0].indexOf('x') === 0) {\n\t\t\t\t                            // we bail out on \\x7f..\\xff,\n\t\t\t\t                            // leaving whole string escaped,\n\t\t\t\t                            // as it's probably completely binary\n\t\t\t\t                            return s;\n\t\t\t\t                        } else if (escaped >= 0x00 && escaped < 0x20) {\n\t\t\t\t                            // leave 0x00...0x1f escaped\n\t\t\t\t                            out += '\\\\' + matched[0];\n\t\t\t\t                            continue;\n\t\t\t\t                        } else if (escaped === 0x22 || escaped === 0x27 || escaped === 0x5c) {\n\t\t\t\t                            // single-quote, apostrophe, backslash - escape these\n\t\t\t\t                            out += '\\\\' + String.fromCharCode(escaped);\n\t\t\t\t                        } else {\n\t\t\t\t                            out += String.fromCharCode(escaped);\n\t\t\t\t                        }\n\t\t\t\t                    }\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                return out;\n\t\t\t\t            }\n\t\t\t\t        }\n\t\t\t\t\n\t\t\t\t        var beautifier = new Beautifier(js_source_text, options);\n\t\t\t\t        return beautifier.beautify();\n\t\t\t\t\n\t\t\t\t    }\n\t\t\t\t\n\t\t\t\t    if (true) {\n\t\t\t\t        // Add support for AMD ( https://github.com/amdjs/amdjs-api/wiki/AMD#defineamd-property- )\n\t\t\t\t        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t\t\t\t            return { js_beautify: js_beautify };\n\t\t\t\t        }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\t\t\t    } else if (typeof exports !== \"undefined\") {\n\t\t\t\t        // Add support for CommonJS. Just put this file somewhere on your require.paths\n\t\t\t\t        // and you will be able to `var js_beautify = require(\"beautify\").js_beautify`.\n\t\t\t\t        exports.js_beautify = js_beautify;\n\t\t\t\t    } else if (typeof window !== \"undefined\") {\n\t\t\t\t        // If we're running a web page and don't have either of the above, add our one global\n\t\t\t\t        window.js_beautify = js_beautify;\n\t\t\t\t    } else if (typeof global !== \"undefined\") {\n\t\t\t\t        // If we don't even have window, try global.\n\t\t\t\t        global.js_beautify = js_beautify;\n\t\t\t\t    }\n\t\t\t\t\n\t\t\t\t}());\n\t\t\t\n\t\t\t/***/ },\n\t\t\t/* 11 */\n\t\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\t\n\t\t\t\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*jshint curly:true, eqeqeq:true, laxbreak:true, noempty:false */\n\t\t\t\t/*\n\t\t\t\t\n\t\t\t\t  The MIT License (MIT)\n\t\t\t\t\n\t\t\t\t  Copyright (c) 2007-2013 Einar Lielmanis and contributors.\n\t\t\t\t\n\t\t\t\t  Permission is hereby granted, free of charge, to any person\n\t\t\t\t  obtaining a copy of this software and associated documentation files\n\t\t\t\t  (the \"Software\"), to deal in the Software without restriction,\n\t\t\t\t  including without limitation the rights to use, copy, modify, merge,\n\t\t\t\t  publish, distribute, sublicense, and/or sell copies of the Software,\n\t\t\t\t  and to permit persons to whom the Software is furnished to do so,\n\t\t\t\t  subject to the following conditions:\n\t\t\t\t\n\t\t\t\t  The above copyright notice and this permission notice shall be\n\t\t\t\t  included in all copies or substantial portions of the Software.\n\t\t\t\t\n\t\t\t\t  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n\t\t\t\t  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t\t\t\t  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n\t\t\t\t  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n\t\t\t\t  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n\t\t\t\t  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n\t\t\t\t  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\t\t\t\t  SOFTWARE.\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t CSS Beautifier\n\t\t\t\t---------------\n\t\t\t\t\n\t\t\t\t    Written by Harutyun Amirjanyan, (amirjanyan@gmail.com)\n\t\t\t\t\n\t\t\t\t    Based on code initially developed by: Einar Lielmanis, <einar@jsbeautifier.org>\n\t\t\t\t        http://jsbeautifier.org/\n\t\t\t\t\n\t\t\t\t    Usage:\n\t\t\t\t        css_beautify(source_text);\n\t\t\t\t        css_beautify(source_text, options);\n\t\t\t\t\n\t\t\t\t    The options are (default in brackets):\n\t\t\t\t        indent_size (4)                         — indentation size,\n\t\t\t\t        indent_char (space)                     — character to indent with,\n\t\t\t\t        selector_separator_newline (true)       - separate selectors with newline or\n\t\t\t\t                                                  not (e.g. \"a,\\nbr\" or \"a, br\")\n\t\t\t\t        end_with_newline (false)                - end with a newline\n\t\t\t\t        newline_between_rules (true)            - add a new line after every css rule\n\t\t\t\t        space_around_selector_separator (false) - ensure space around selector separators:\n\t\t\t\t                                                  '>', '+', '~' (e.g. \"a>b\" -> \"a > b\")\n\t\t\t\t    e.g\n\t\t\t\t\n\t\t\t\t    css_beautify(css_source_text, {\n\t\t\t\t      'indent_size': 1,\n\t\t\t\t      'indent_char': '\\t',\n\t\t\t\t      'selector_separator': ' ',\n\t\t\t\t      'end_with_newline': false,\n\t\t\t\t      'newline_between_rules': true,\n\t\t\t\t      'space_around_selector_separator': true\n\t\t\t\t    });\n\t\t\t\t*/\n\t\t\t\t\n\t\t\t\t// http://www.w3.org/TR/CSS21/syndata.html#tokenization\n\t\t\t\t// http://www.w3.org/TR/css3-syntax/\n\t\t\t\t\n\t\t\t\t(function() {\n\t\t\t\t    function css_beautify(source_text, options) {\n\t\t\t\t        options = options || {};\n\t\t\t\t        source_text = source_text || '';\n\t\t\t\t        // HACK: newline parsing inconsistent. This brute force normalizes the input.\n\t\t\t\t        source_text = source_text.replace(/\\r\\n|[\\r\\u2028\\u2029]/g, '\\n');\n\t\t\t\t\n\t\t\t\t        var indentSize = options.indent_size || 4;\n\t\t\t\t        var indentCharacter = options.indent_char || ' ';\n\t\t\t\t        var selectorSeparatorNewline = (options.selector_separator_newline === undefined) ? true : options.selector_separator_newline;\n\t\t\t\t        var end_with_newline = (options.end_with_newline === undefined) ? false : options.end_with_newline;\n\t\t\t\t        var newline_between_rules = (options.newline_between_rules === undefined) ? true : options.newline_between_rules;\n\t\t\t\t        var space_around_combinator = (options.space_around_combinator === undefined) ? false : options.space_around_combinator;\n\t\t\t\t        space_around_combinator = space_around_combinator || ((options.space_around_selector_separator === undefined) ? false : options.space_around_selector_separator);\n\t\t\t\t        var eol = options.eol ? options.eol : '\\n';\n\t\t\t\t\n\t\t\t\t        // compatibility\n\t\t\t\t        if (typeof indentSize === \"string\") {\n\t\t\t\t            indentSize = parseInt(indentSize, 10);\n\t\t\t\t        }\n\t\t\t\t\n\t\t\t\t        if (options.indent_with_tabs) {\n\t\t\t\t            indentCharacter = '\\t';\n\t\t\t\t            indentSize = 1;\n\t\t\t\t        }\n\t\t\t\t\n\t\t\t\t        eol = eol.replace(/\\\\r/, '\\r').replace(/\\\\n/, '\\n');\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t        // tokenizer\n\t\t\t\t        var whiteRe = /^\\s+$/;\n\t\t\t\t\n\t\t\t\t        var pos = -1,\n\t\t\t\t            ch;\n\t\t\t\t        var parenLevel = 0;\n\t\t\t\t\n\t\t\t\t        function next() {\n\t\t\t\t            ch = source_text.charAt(++pos);\n\t\t\t\t            return ch || '';\n\t\t\t\t        }\n\t\t\t\t\n\t\t\t\t        function peek(skipWhitespace) {\n\t\t\t\t            var result = '';\n\t\t\t\t            var prev_pos = pos;\n\t\t\t\t            if (skipWhitespace) {\n\t\t\t\t                eatWhitespace();\n\t\t\t\t            }\n\t\t\t\t            result = source_text.charAt(pos + 1) || '';\n\t\t\t\t            pos = prev_pos - 1;\n\t\t\t\t            next();\n\t\t\t\t            return result;\n\t\t\t\t        }\n\t\t\t\t\n\t\t\t\t        function eatString(endChars) {\n\t\t\t\t            var start = pos;\n\t\t\t\t            while (next()) {\n\t\t\t\t                if (ch === \"\\\\\") {\n\t\t\t\t                    next();\n\t\t\t\t                } else if (endChars.indexOf(ch) !== -1) {\n\t\t\t\t                    break;\n\t\t\t\t                } else if (ch === \"\\n\") {\n\t\t\t\t                    break;\n\t\t\t\t                }\n\t\t\t\t            }\n\t\t\t\t            return source_text.substring(start, pos + 1);\n\t\t\t\t        }\n\t\t\t\t\n\t\t\t\t        function peekString(endChar) {\n\t\t\t\t            var prev_pos = pos;\n\t\t\t\t            var str = eatString(endChar);\n\t\t\t\t            pos = prev_pos - 1;\n\t\t\t\t            next();\n\t\t\t\t            return str;\n\t\t\t\t        }\n\t\t\t\t\n\t\t\t\t        function eatWhitespace() {\n\t\t\t\t            var result = '';\n\t\t\t\t            while (whiteRe.test(peek())) {\n\t\t\t\t                next();\n\t\t\t\t                result += ch;\n\t\t\t\t            }\n\t\t\t\t            return result;\n\t\t\t\t        }\n\t\t\t\t\n\t\t\t\t        function skipWhitespace() {\n\t\t\t\t            var result = '';\n\t\t\t\t            if (ch && whiteRe.test(ch)) {\n\t\t\t\t                result = ch;\n\t\t\t\t            }\n\t\t\t\t            while (whiteRe.test(next())) {\n\t\t\t\t                result += ch;\n\t\t\t\t            }\n\t\t\t\t            return result;\n\t\t\t\t        }\n\t\t\t\t\n\t\t\t\t        function eatComment(singleLine) {\n\t\t\t\t            var start = pos;\n\t\t\t\t            singleLine = peek() === \"/\";\n\t\t\t\t            next();\n\t\t\t\t            while (next()) {\n\t\t\t\t                if (!singleLine && ch === \"*\" && peek() === \"/\") {\n\t\t\t\t                    next();\n\t\t\t\t                    break;\n\t\t\t\t                } else if (singleLine && ch === \"\\n\") {\n\t\t\t\t                    return source_text.substring(start, pos);\n\t\t\t\t                }\n\t\t\t\t            }\n\t\t\t\t\n\t\t\t\t            return source_text.substring(start, pos) + ch;\n\t\t\t\t        }\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t        function lookBack(str) {\n\t\t\t\t            return source_text.substring(pos - str.length, pos).toLowerCase() ===\n\t\t\t\t                str;\n\t\t\t\t        }\n\t\t\t\t\n\t\t\t\t        // Nested pseudo-class if we are insideRule\n\t\t\t\t        // and the next special character found opens\n\t\t\t\t        // a new block\n\t\t\t\t        function foundNestedPseudoClass() {\n\t\t\t\t            var openParen = 0;\n\t\t\t\t            for (var i = pos + 1; i < source_text.length; i++) {\n\t\t\t\t                var ch = source_text.charAt(i);\n\t\t\t\t                if (ch === \"{\") {\n\t\t\t\t                    return true;\n\t\t\t\t                } else if (ch === '(') {\n\t\t\t\t                    // pseudoclasses can contain ()\n\t\t\t\t                    openParen += 1;\n\t\t\t\t                } else if (ch === ')') {\n\t\t\t\t                    if (openParen === 0) {\n\t\t\t\t                        return false;\n\t\t\t\t                    }\n\t\t\t\t                    openParen -= 1;\n\t\t\t\t                } else if (ch === \";\" || ch === \"}\") {\n\t\t\t\t                    return false;\n\t\t\t\t                }\n\t\t\t\t            }\n\t\t\t\t            return false;\n\t\t\t\t        }\n\t\t\t\t\n\t\t\t\t        // printer\n\t\t\t\t        var basebaseIndentString = source_text.match(/^[\\t ]*/)[0];\n\t\t\t\t        var singleIndent = new Array(indentSize + 1).join(indentCharacter);\n\t\t\t\t        var indentLevel = 0;\n\t\t\t\t        var nestedLevel = 0;\n\t\t\t\t\n\t\t\t\t        function indent() {\n\t\t\t\t            indentLevel++;\n\t\t\t\t            basebaseIndentString += singleIndent;\n\t\t\t\t        }\n\t\t\t\t\n\t\t\t\t        function outdent() {\n\t\t\t\t            indentLevel--;\n\t\t\t\t            basebaseIndentString = basebaseIndentString.slice(0, -indentSize);\n\t\t\t\t        }\n\t\t\t\t\n\t\t\t\t        var print = {};\n\t\t\t\t        print[\"{\"] = function(ch) {\n\t\t\t\t            print.singleSpace();\n\t\t\t\t            output.push(ch);\n\t\t\t\t            print.newLine();\n\t\t\t\t        };\n\t\t\t\t        print[\"}\"] = function(ch) {\n\t\t\t\t            print.newLine();\n\t\t\t\t            output.push(ch);\n\t\t\t\t            print.newLine();\n\t\t\t\t        };\n\t\t\t\t\n\t\t\t\t        print._lastCharWhitespace = function() {\n\t\t\t\t            return whiteRe.test(output[output.length - 1]);\n\t\t\t\t        };\n\t\t\t\t\n\t\t\t\t        print.newLine = function(keepWhitespace) {\n\t\t\t\t            if (output.length) {\n\t\t\t\t                if (!keepWhitespace && output[output.length - 1] !== '\\n') {\n\t\t\t\t                    print.trim();\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                output.push('\\n');\n\t\t\t\t\n\t\t\t\t                if (basebaseIndentString) {\n\t\t\t\t                    output.push(basebaseIndentString);\n\t\t\t\t                }\n\t\t\t\t            }\n\t\t\t\t        };\n\t\t\t\t        print.singleSpace = function() {\n\t\t\t\t            if (output.length && !print._lastCharWhitespace()) {\n\t\t\t\t                output.push(' ');\n\t\t\t\t            }\n\t\t\t\t        };\n\t\t\t\t\n\t\t\t\t        print.preserveSingleSpace = function() {\n\t\t\t\t            if (isAfterSpace) {\n\t\t\t\t                print.singleSpace();\n\t\t\t\t            }\n\t\t\t\t        };\n\t\t\t\t\n\t\t\t\t        print.trim = function() {\n\t\t\t\t            while (print._lastCharWhitespace()) {\n\t\t\t\t                output.pop();\n\t\t\t\t            }\n\t\t\t\t        };\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t        var output = [];\n\t\t\t\t        /*_____________________--------------------_____________________*/\n\t\t\t\t\n\t\t\t\t        var insideRule = false;\n\t\t\t\t        var insidePropertyValue = false;\n\t\t\t\t        var enteringConditionalGroup = false;\n\t\t\t\t        var top_ch = '';\n\t\t\t\t        var last_top_ch = '';\n\t\t\t\t\n\t\t\t\t        while (true) {\n\t\t\t\t            var whitespace = skipWhitespace();\n\t\t\t\t            var isAfterSpace = whitespace !== '';\n\t\t\t\t            var isAfterNewline = whitespace.indexOf('\\n') !== -1;\n\t\t\t\t            last_top_ch = top_ch;\n\t\t\t\t            top_ch = ch;\n\t\t\t\t\n\t\t\t\t            if (!ch) {\n\t\t\t\t                break;\n\t\t\t\t            } else if (ch === '/' && peek() === '*') { /* css comment */\n\t\t\t\t                var header = indentLevel === 0;\n\t\t\t\t\n\t\t\t\t                if (isAfterNewline || header) {\n\t\t\t\t                    print.newLine();\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                output.push(eatComment());\n\t\t\t\t                print.newLine();\n\t\t\t\t                if (header) {\n\t\t\t\t                    print.newLine(true);\n\t\t\t\t                }\n\t\t\t\t            } else if (ch === '/' && peek() === '/') { // single line comment\n\t\t\t\t                if (!isAfterNewline && last_top_ch !== '{') {\n\t\t\t\t                    print.trim();\n\t\t\t\t                }\n\t\t\t\t                print.singleSpace();\n\t\t\t\t                output.push(eatComment());\n\t\t\t\t                print.newLine();\n\t\t\t\t            } else if (ch === '@') {\n\t\t\t\t                print.preserveSingleSpace();\n\t\t\t\t\n\t\t\t\t                // deal with less propery mixins @{...}\n\t\t\t\t                if (peek() === '{') {\n\t\t\t\t                    output.push(eatString('}'));\n\t\t\t\t                } else {\n\t\t\t\t                    output.push(ch);\n\t\t\t\t\n\t\t\t\t                    // strip trailing space, if present, for hash property checks\n\t\t\t\t                    var variableOrRule = peekString(\": ,;{}()[]/='\\\"\");\n\t\t\t\t\n\t\t\t\t                    if (variableOrRule.match(/[ :]$/)) {\n\t\t\t\t                        // we have a variable or pseudo-class, add it and insert one space before continuing\n\t\t\t\t                        next();\n\t\t\t\t                        variableOrRule = eatString(\": \").replace(/\\s$/, '');\n\t\t\t\t                        output.push(variableOrRule);\n\t\t\t\t                        print.singleSpace();\n\t\t\t\t                    }\n\t\t\t\t\n\t\t\t\t                    variableOrRule = variableOrRule.replace(/\\s$/, '');\n\t\t\t\t\n\t\t\t\t                    // might be a nesting at-rule\n\t\t\t\t                    if (variableOrRule in css_beautify.NESTED_AT_RULE) {\n\t\t\t\t                        nestedLevel += 1;\n\t\t\t\t                        if (variableOrRule in css_beautify.CONDITIONAL_GROUP_RULE) {\n\t\t\t\t                            enteringConditionalGroup = true;\n\t\t\t\t                        }\n\t\t\t\t                    }\n\t\t\t\t                }\n\t\t\t\t            } else if (ch === '#' && peek() === '{') {\n\t\t\t\t                print.preserveSingleSpace();\n\t\t\t\t                output.push(eatString('}'));\n\t\t\t\t            } else if (ch === '{') {\n\t\t\t\t                if (peek(true) === '}') {\n\t\t\t\t                    eatWhitespace();\n\t\t\t\t                    next();\n\t\t\t\t                    print.singleSpace();\n\t\t\t\t                    output.push(\"{}\");\n\t\t\t\t                    print.newLine();\n\t\t\t\t                    if (newline_between_rules && indentLevel === 0) {\n\t\t\t\t                        print.newLine(true);\n\t\t\t\t                    }\n\t\t\t\t                } else {\n\t\t\t\t                    indent();\n\t\t\t\t                    print[\"{\"](ch);\n\t\t\t\t                    // when entering conditional groups, only rulesets are allowed\n\t\t\t\t                    if (enteringConditionalGroup) {\n\t\t\t\t                        enteringConditionalGroup = false;\n\t\t\t\t                        insideRule = (indentLevel > nestedLevel);\n\t\t\t\t                    } else {\n\t\t\t\t                        // otherwise, declarations are also allowed\n\t\t\t\t                        insideRule = (indentLevel >= nestedLevel);\n\t\t\t\t                    }\n\t\t\t\t                }\n\t\t\t\t            } else if (ch === '}') {\n\t\t\t\t                outdent();\n\t\t\t\t                print[\"}\"](ch);\n\t\t\t\t                insideRule = false;\n\t\t\t\t                insidePropertyValue = false;\n\t\t\t\t                if (nestedLevel) {\n\t\t\t\t                    nestedLevel--;\n\t\t\t\t                }\n\t\t\t\t                if (newline_between_rules && indentLevel === 0) {\n\t\t\t\t                    print.newLine(true);\n\t\t\t\t                }\n\t\t\t\t            } else if (ch === \":\") {\n\t\t\t\t                eatWhitespace();\n\t\t\t\t                if ((insideRule || enteringConditionalGroup) &&\n\t\t\t\t                    !(lookBack(\"&\") || foundNestedPseudoClass()) &&\n\t\t\t\t                    !lookBack(\"(\")) {\n\t\t\t\t                    // 'property: value' delimiter\n\t\t\t\t                    // which could be in a conditional group query\n\t\t\t\t                    insidePropertyValue = true;\n\t\t\t\t                    output.push(':');\n\t\t\t\t                    print.singleSpace();\n\t\t\t\t                } else {\n\t\t\t\t                    // sass/less parent reference don't use a space\n\t\t\t\t                    // sass nested pseudo-class don't use a space\n\t\t\t\t\n\t\t\t\t                    // preserve space before pseudoclasses/pseudoelements, as it means \"in any child\"\n\t\t\t\t                    if (lookBack(\" \") && output[output.length - 1] !== \" \") {\n\t\t\t\t                        output.push(\" \");\n\t\t\t\t                    }\n\t\t\t\t                    if (peek() === \":\") {\n\t\t\t\t                        // pseudo-element\n\t\t\t\t                        next();\n\t\t\t\t                        output.push(\"::\");\n\t\t\t\t                    } else {\n\t\t\t\t                        // pseudo-class\n\t\t\t\t                        output.push(':');\n\t\t\t\t                    }\n\t\t\t\t                }\n\t\t\t\t            } else if (ch === '\"' || ch === '\\'') {\n\t\t\t\t                print.preserveSingleSpace();\n\t\t\t\t                output.push(eatString(ch));\n\t\t\t\t            } else if (ch === ';') {\n\t\t\t\t                insidePropertyValue = false;\n\t\t\t\t                output.push(ch);\n\t\t\t\t                print.newLine();\n\t\t\t\t            } else if (ch === '(') { // may be a url\n\t\t\t\t                if (lookBack(\"url\")) {\n\t\t\t\t                    output.push(ch);\n\t\t\t\t                    eatWhitespace();\n\t\t\t\t                    if (next()) {\n\t\t\t\t                        if (ch !== ')' && ch !== '\"' && ch !== '\\'') {\n\t\t\t\t                            output.push(eatString(')'));\n\t\t\t\t                        } else {\n\t\t\t\t                            pos--;\n\t\t\t\t                        }\n\t\t\t\t                    }\n\t\t\t\t                } else {\n\t\t\t\t                    parenLevel++;\n\t\t\t\t                    print.preserveSingleSpace();\n\t\t\t\t                    output.push(ch);\n\t\t\t\t                    eatWhitespace();\n\t\t\t\t                }\n\t\t\t\t            } else if (ch === ')') {\n\t\t\t\t                output.push(ch);\n\t\t\t\t                parenLevel--;\n\t\t\t\t            } else if (ch === ',') {\n\t\t\t\t                output.push(ch);\n\t\t\t\t                eatWhitespace();\n\t\t\t\t                if (selectorSeparatorNewline && !insidePropertyValue && parenLevel < 1) {\n\t\t\t\t                    print.newLine();\n\t\t\t\t                } else {\n\t\t\t\t                    print.singleSpace();\n\t\t\t\t                }\n\t\t\t\t            } else if ((ch === '>' || ch === '+' || ch === '~') &&\n\t\t\t\t                !insidePropertyValue && parenLevel < 1) {\n\t\t\t\t                //handle combinator spacing\n\t\t\t\t                if (space_around_combinator) {\n\t\t\t\t                    print.singleSpace();\n\t\t\t\t                    output.push(ch);\n\t\t\t\t                    print.singleSpace();\n\t\t\t\t                } else {\n\t\t\t\t                    output.push(ch);\n\t\t\t\t                    eatWhitespace();\n\t\t\t\t                    // squash extra whitespace\n\t\t\t\t                    if (ch && whiteRe.test(ch)) {\n\t\t\t\t                        ch = '';\n\t\t\t\t                    }\n\t\t\t\t                }\n\t\t\t\t            } else if (ch === ']') {\n\t\t\t\t                output.push(ch);\n\t\t\t\t            } else if (ch === '[') {\n\t\t\t\t                print.preserveSingleSpace();\n\t\t\t\t                output.push(ch);\n\t\t\t\t            } else if (ch === '=') { // no whitespace before or after\n\t\t\t\t                eatWhitespace();\n\t\t\t\t                ch = '=';\n\t\t\t\t                output.push(ch);\n\t\t\t\t            } else {\n\t\t\t\t                print.preserveSingleSpace();\n\t\t\t\t                output.push(ch);\n\t\t\t\t            }\n\t\t\t\t        }\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t        var sweetCode = '';\n\t\t\t\t        if (basebaseIndentString) {\n\t\t\t\t            sweetCode += basebaseIndentString;\n\t\t\t\t        }\n\t\t\t\t\n\t\t\t\t        sweetCode += output.join('').replace(/[\\r\\n\\t ]+$/, '');\n\t\t\t\t\n\t\t\t\t        // establish end_with_newline\n\t\t\t\t        if (end_with_newline) {\n\t\t\t\t            sweetCode += '\\n';\n\t\t\t\t        }\n\t\t\t\t\n\t\t\t\t        if (eol !== '\\n') {\n\t\t\t\t            sweetCode = sweetCode.replace(/[\\n]/g, eol);\n\t\t\t\t        }\n\t\t\t\t\n\t\t\t\t        return sweetCode;\n\t\t\t\t    }\n\t\t\t\t\n\t\t\t\t    // https://developer.mozilla.org/en-US/docs/Web/CSS/At-rule\n\t\t\t\t    css_beautify.NESTED_AT_RULE = {\n\t\t\t\t        \"@page\": true,\n\t\t\t\t        \"@font-face\": true,\n\t\t\t\t        \"@keyframes\": true,\n\t\t\t\t        // also in CONDITIONAL_GROUP_RULE below\n\t\t\t\t        \"@media\": true,\n\t\t\t\t        \"@supports\": true,\n\t\t\t\t        \"@document\": true\n\t\t\t\t    };\n\t\t\t\t    css_beautify.CONDITIONAL_GROUP_RULE = {\n\t\t\t\t        \"@media\": true,\n\t\t\t\t        \"@supports\": true,\n\t\t\t\t        \"@document\": true\n\t\t\t\t    };\n\t\t\t\t\n\t\t\t\t    /*global define */\n\t\t\t\t    if (true) {\n\t\t\t\t        // Add support for AMD ( https://github.com/amdjs/amdjs-api/wiki/AMD#defineamd-property- )\n\t\t\t\t        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t\t\t\t            return {\n\t\t\t\t                css_beautify: css_beautify\n\t\t\t\t            };\n\t\t\t\t        }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\t\t\t    } else if (typeof exports !== \"undefined\") {\n\t\t\t\t        // Add support for CommonJS. Just put this file somewhere on your require.paths\n\t\t\t\t        // and you will be able to `var html_beautify = require(\"beautify\").html_beautify`.\n\t\t\t\t        exports.css_beautify = css_beautify;\n\t\t\t\t    } else if (typeof window !== \"undefined\") {\n\t\t\t\t        // If we're running a web page and don't have either of the above, add our one global\n\t\t\t\t        window.css_beautify = css_beautify;\n\t\t\t\t    } else if (typeof global !== \"undefined\") {\n\t\t\t\t        // If we don't even have window, try global.\n\t\t\t\t        global.css_beautify = css_beautify;\n\t\t\t\t    }\n\t\t\t\t\n\t\t\t\t}());\n\t\t\t\n\t\t\t/***/ },\n\t\t\t/* 12 */\n\t\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\t\n\t\t\t\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*jshint curly:true, eqeqeq:true, laxbreak:true, noempty:false */\n\t\t\t\t/*\n\t\t\t\t\n\t\t\t\t  The MIT License (MIT)\n\t\t\t\t\n\t\t\t\t  Copyright (c) 2007-2013 Einar Lielmanis and contributors.\n\t\t\t\t\n\t\t\t\t  Permission is hereby granted, free of charge, to any person\n\t\t\t\t  obtaining a copy of this software and associated documentation files\n\t\t\t\t  (the \"Software\"), to deal in the Software without restriction,\n\t\t\t\t  including without limitation the rights to use, copy, modify, merge,\n\t\t\t\t  publish, distribute, sublicense, and/or sell copies of the Software,\n\t\t\t\t  and to permit persons to whom the Software is furnished to do so,\n\t\t\t\t  subject to the following conditions:\n\t\t\t\t\n\t\t\t\t  The above copyright notice and this permission notice shall be\n\t\t\t\t  included in all copies or substantial portions of the Software.\n\t\t\t\t\n\t\t\t\t  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n\t\t\t\t  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t\t\t\t  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n\t\t\t\t  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n\t\t\t\t  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n\t\t\t\t  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n\t\t\t\t  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\t\t\t\t  SOFTWARE.\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t Style HTML\n\t\t\t\t---------------\n\t\t\t\t\n\t\t\t\t  Written by Nochum Sossonko, (nsossonko@hotmail.com)\n\t\t\t\t\n\t\t\t\t  Based on code initially developed by: Einar Lielmanis, <einar@jsbeautifier.org>\n\t\t\t\t    http://jsbeautifier.org/\n\t\t\t\t\n\t\t\t\t  Usage:\n\t\t\t\t    style_html(html_source);\n\t\t\t\t\n\t\t\t\t    style_html(html_source, options);\n\t\t\t\t\n\t\t\t\t  The options are:\n\t\t\t\t    indent_inner_html (default false)  — indent <head> and <body> sections,\n\t\t\t\t    indent_size (default 4)          — indentation size,\n\t\t\t\t    indent_char (default space)      — character to indent with,\n\t\t\t\t    wrap_line_length (default 250)            -  maximum amount of characters per line (0 = disable)\n\t\t\t\t    brace_style (default \"collapse\") - \"collapse\" | \"expand\" | \"end-expand\" | \"none\"\n\t\t\t\t            put braces on the same line as control statements (default), or put braces on own line (Allman / ANSI style), or just put end braces on own line, or attempt to keep them where they are.\n\t\t\t\t    unformatted (defaults to inline tags) - list of tags, that shouldn't be reformatted\n\t\t\t\t    indent_scripts (default normal)  - \"keep\"|\"separate\"|\"normal\"\n\t\t\t\t    preserve_newlines (default true) - whether existing line breaks before elements should be preserved\n\t\t\t\t                                        Only works before elements, not inside tags or for text.\n\t\t\t\t    max_preserve_newlines (default unlimited) - maximum number of line breaks to be preserved in one chunk\n\t\t\t\t    indent_handlebars (default false) - format and indent {{#foo}} and {{/foo}}\n\t\t\t\t    end_with_newline (false)          - end with a newline\n\t\t\t\t    extra_liners (default [head,body,/html]) -List of tags that should have an extra newline before them.\n\t\t\t\t\n\t\t\t\t    e.g.\n\t\t\t\t\n\t\t\t\t    style_html(html_source, {\n\t\t\t\t      'indent_inner_html': false,\n\t\t\t\t      'indent_size': 2,\n\t\t\t\t      'indent_char': ' ',\n\t\t\t\t      'wrap_line_length': 78,\n\t\t\t\t      'brace_style': 'expand',\n\t\t\t\t      'preserve_newlines': true,\n\t\t\t\t      'max_preserve_newlines': 5,\n\t\t\t\t      'indent_handlebars': false,\n\t\t\t\t      'extra_liners': ['/html']\n\t\t\t\t    });\n\t\t\t\t*/\n\t\t\t\t\n\t\t\t\t(function() {\n\t\t\t\t\n\t\t\t\t    // function trim(s) {\n\t\t\t\t    //     return s.replace(/^\\s+|\\s+$/g, '');\n\t\t\t\t    // }\n\t\t\t\t\n\t\t\t\t    function ltrim(s) {\n\t\t\t\t        return s.replace(/^\\s+/g, '');\n\t\t\t\t    }\n\t\t\t\t\n\t\t\t\t    function rtrim(s) {\n\t\t\t\t        return s.replace(/\\s+$/g, '');\n\t\t\t\t    }\n\t\t\t\t\n\t\t\t\t    function style_html(html_source, options, js_beautify, css_beautify) {\n\t\t\t\t        //Wrapper function to invoke all the necessary constructors and deal with the output.\n\t\t\t\t\n\t\t\t\t        var multi_parser,\n\t\t\t\t            indent_inner_html,\n\t\t\t\t            indent_body_inner_html,\n\t\t\t\t            indent_head_inner_html,\n\t\t\t\t            indent_size,\n\t\t\t\t            indent_character,\n\t\t\t\t            wrap_line_length,\n\t\t\t\t            brace_style,\n\t\t\t\t            unformatted,\n\t\t\t\t            preserve_newlines,\n\t\t\t\t            max_preserve_newlines,\n\t\t\t\t            indent_handlebars,\n\t\t\t\t            wrap_attributes,\n\t\t\t\t            wrap_attributes_indent_size,\n\t\t\t\t            end_with_newline,\n\t\t\t\t            extra_liners,\n\t\t\t\t            eol;\n\t\t\t\t\n\t\t\t\t        options = options || {};\n\t\t\t\t\n\t\t\t\t        // backwards compatibility to 1.3.4\n\t\t\t\t        if ((options.wrap_line_length === undefined || parseInt(options.wrap_line_length, 10) === 0) &&\n\t\t\t\t            (options.max_char !== undefined && parseInt(options.max_char, 10) !== 0)) {\n\t\t\t\t            options.wrap_line_length = options.max_char;\n\t\t\t\t        }\n\t\t\t\t\n\t\t\t\t        indent_inner_html = (options.indent_inner_html === undefined) ? false : options.indent_inner_html;\n\t\t\t\t        indent_body_inner_html = (options.indent_body_inner_html === undefined) ? true : options.indent_body_inner_html;\n\t\t\t\t        indent_head_inner_html = (options.indent_head_inner_html === undefined) ? true : options.indent_head_inner_html;\n\t\t\t\t        indent_size = (options.indent_size === undefined) ? 4 : parseInt(options.indent_size, 10);\n\t\t\t\t        indent_character = (options.indent_char === undefined) ? ' ' : options.indent_char;\n\t\t\t\t        brace_style = (options.brace_style === undefined) ? 'collapse' : options.brace_style;\n\t\t\t\t        wrap_line_length = parseInt(options.wrap_line_length, 10) === 0 ? 32786 : parseInt(options.wrap_line_length || 250, 10);\n\t\t\t\t        unformatted = options.unformatted || [\n\t\t\t\t            // https://www.w3.org/TR/html5/dom.html#phrasing-content\n\t\t\t\t            'a', 'abbr', 'area', 'audio', 'b', 'bdi', 'bdo', 'br', 'button', 'canvas', 'cite',\n\t\t\t\t            'code', 'data', 'datalist', 'del', 'dfn', 'em', 'embed', 'i', 'iframe', 'img',\n\t\t\t\t            'input', 'ins', 'kbd', 'keygen', 'label', 'map', 'mark', 'math', 'meter', 'noscript',\n\t\t\t\t            'object', 'output', 'progress', 'q', 'ruby', 's', 'samp', /* 'script', */ 'select', 'small',\n\t\t\t\t            'span', 'strong', 'sub', 'sup', 'svg', 'template', 'textarea', 'time', 'u', 'var',\n\t\t\t\t            'video', 'wbr', 'text',\n\t\t\t\t            // prexisting - not sure of full effect of removing, leaving in\n\t\t\t\t            'acronym', 'address', 'big', 'dt', 'ins', 'small', 'strike', 'tt',\n\t\t\t\t            'pre',\n\t\t\t\t        ];\n\t\t\t\t        preserve_newlines = (options.preserve_newlines === undefined) ? true : options.preserve_newlines;\n\t\t\t\t        max_preserve_newlines = preserve_newlines ?\n\t\t\t\t            (isNaN(parseInt(options.max_preserve_newlines, 10)) ? 32786 : parseInt(options.max_preserve_newlines, 10)) :\n\t\t\t\t            0;\n\t\t\t\t        indent_handlebars = (options.indent_handlebars === undefined) ? false : options.indent_handlebars;\n\t\t\t\t        wrap_attributes = (options.wrap_attributes === undefined) ? 'auto' : options.wrap_attributes;\n\t\t\t\t        wrap_attributes_indent_size = (isNaN(parseInt(options.wrap_attributes_indent_size, 10))) ? indent_size : parseInt(options.wrap_attributes_indent_size, 10);\n\t\t\t\t        end_with_newline = (options.end_with_newline === undefined) ? false : options.end_with_newline;\n\t\t\t\t        extra_liners = (typeof options.extra_liners === 'object') && options.extra_liners ?\n\t\t\t\t            options.extra_liners.concat() : (typeof options.extra_liners === 'string') ?\n\t\t\t\t            options.extra_liners.split(',') : 'head,body,/html'.split(',');\n\t\t\t\t        eol = options.eol ? options.eol : '\\n';\n\t\t\t\t\n\t\t\t\t        if (options.indent_with_tabs) {\n\t\t\t\t            indent_character = '\\t';\n\t\t\t\t            indent_size = 1;\n\t\t\t\t        }\n\t\t\t\t\n\t\t\t\t        eol = eol.replace(/\\\\r/, '\\r').replace(/\\\\n/, '\\n');\n\t\t\t\t\n\t\t\t\t        function Parser() {\n\t\t\t\t\n\t\t\t\t            this.pos = 0; //Parser position\n\t\t\t\t            this.token = '';\n\t\t\t\t            this.current_mode = 'CONTENT'; //reflects the current Parser mode: TAG/CONTENT\n\t\t\t\t            this.tags = { //An object to hold tags, their position, and their parent-tags, initiated with default values\n\t\t\t\t                parent: 'parent1',\n\t\t\t\t                parentcount: 1,\n\t\t\t\t                parent1: ''\n\t\t\t\t            };\n\t\t\t\t            this.tag_type = '';\n\t\t\t\t            this.token_text = this.last_token = this.last_text = this.token_type = '';\n\t\t\t\t            this.newlines = 0;\n\t\t\t\t            this.indent_content = indent_inner_html;\n\t\t\t\t            this.indent_body_inner_html = indent_body_inner_html;\n\t\t\t\t            this.indent_head_inner_html = indent_head_inner_html;\n\t\t\t\t\n\t\t\t\t            this.Utils = { //Uilities made available to the various functions\n\t\t\t\t                whitespace: \"\\n\\r\\t \".split(''),\n\t\t\t\t\n\t\t\t\t                single_token: [\n\t\t\t\t                    // HTLM void elements - aka self-closing tags - aka singletons\n\t\t\t\t                    // https://www.w3.org/html/wg/drafts/html/master/syntax.html#void-elements\n\t\t\t\t                    'area', 'base', 'br', 'col', 'embed', 'hr', 'img', 'input', 'keygen',\n\t\t\t\t                    'link', 'menuitem', 'meta', 'param', 'source', 'track', 'wbr',\n\t\t\t\t                    // NOTE: Optional tags - are not understood.\n\t\t\t\t                    // https://www.w3.org/TR/html5/syntax.html#optional-tags\n\t\t\t\t                    // The rules for optional tags are too complex for a simple list\n\t\t\t\t                    // Also, the content of these tags should still be indented in many cases.\n\t\t\t\t                    // 'li' is a good exmple.\n\t\t\t\t\n\t\t\t\t                    // Doctype and xml elements\n\t\t\t\t                    '!doctype', '?xml',\n\t\t\t\t                    // ?php tag\n\t\t\t\t                    '?php',\n\t\t\t\t                    // other tags that were in this list, keeping just in case\n\t\t\t\t                    'basefont', 'isindex'\n\t\t\t\t                ],\n\t\t\t\t                extra_liners: extra_liners, //for tags that need a line of whitespace before them\n\t\t\t\t                in_array: function(what, arr) {\n\t\t\t\t                    for (var i = 0; i < arr.length; i++) {\n\t\t\t\t                        if (what === arr[i]) {\n\t\t\t\t                            return true;\n\t\t\t\t                        }\n\t\t\t\t                    }\n\t\t\t\t                    return false;\n\t\t\t\t                }\n\t\t\t\t            };\n\t\t\t\t\n\t\t\t\t            // Return true if the given text is composed entirely of whitespace.\n\t\t\t\t            this.is_whitespace = function(text) {\n\t\t\t\t                for (var n = 0; n < text.length; n++) {\n\t\t\t\t                    if (!this.Utils.in_array(text.charAt(n), this.Utils.whitespace)) {\n\t\t\t\t                        return false;\n\t\t\t\t                    }\n\t\t\t\t                }\n\t\t\t\t                return true;\n\t\t\t\t            };\n\t\t\t\t\n\t\t\t\t            this.traverse_whitespace = function() {\n\t\t\t\t                var input_char = '';\n\t\t\t\t\n\t\t\t\t                input_char = this.input.charAt(this.pos);\n\t\t\t\t                if (this.Utils.in_array(input_char, this.Utils.whitespace)) {\n\t\t\t\t                    this.newlines = 0;\n\t\t\t\t                    while (this.Utils.in_array(input_char, this.Utils.whitespace)) {\n\t\t\t\t                        if (preserve_newlines && input_char === '\\n' && this.newlines <= max_preserve_newlines) {\n\t\t\t\t                            this.newlines += 1;\n\t\t\t\t                        }\n\t\t\t\t\n\t\t\t\t                        this.pos++;\n\t\t\t\t                        input_char = this.input.charAt(this.pos);\n\t\t\t\t                    }\n\t\t\t\t                    return true;\n\t\t\t\t                }\n\t\t\t\t                return false;\n\t\t\t\t            };\n\t\t\t\t\n\t\t\t\t            // Append a space to the given content (string array) or, if we are\n\t\t\t\t            // at the wrap_line_length, append a newline/indentation.\n\t\t\t\t            // return true if a newline was added, false if a space was added\n\t\t\t\t            this.space_or_wrap = function(content) {\n\t\t\t\t                if (this.line_char_count >= this.wrap_line_length) { //insert a line when the wrap_line_length is reached\n\t\t\t\t                    this.print_newline(false, content);\n\t\t\t\t                    this.print_indentation(content);\n\t\t\t\t                    return true;\n\t\t\t\t                } else {\n\t\t\t\t                    this.line_char_count++;\n\t\t\t\t                    content.push(' ');\n\t\t\t\t                    return false;\n\t\t\t\t                }\n\t\t\t\t            };\n\t\t\t\t\n\t\t\t\t            this.get_content = function() { //function to capture regular content between tags\n\t\t\t\t                var input_char = '',\n\t\t\t\t                    content = [];\n\t\t\t\t\n\t\t\t\t                while (this.input.charAt(this.pos) !== '<') {\n\t\t\t\t                    if (this.pos >= this.input.length) {\n\t\t\t\t                        return content.length ? content.join('') : ['', 'TK_EOF'];\n\t\t\t\t                    }\n\t\t\t\t\n\t\t\t\t                    if (this.traverse_whitespace()) {\n\t\t\t\t                        this.space_or_wrap(content);\n\t\t\t\t                        continue;\n\t\t\t\t                    }\n\t\t\t\t\n\t\t\t\t                    if (indent_handlebars) {\n\t\t\t\t                        // Handlebars parsing is complicated.\n\t\t\t\t                        // {{#foo}} and {{/foo}} are formatted tags.\n\t\t\t\t                        // {{something}} should get treated as content, except:\n\t\t\t\t                        // {{else}} specifically behaves like {{#if}} and {{/if}}\n\t\t\t\t                        var peek3 = this.input.substr(this.pos, 3);\n\t\t\t\t                        if (peek3 === '{{#' || peek3 === '{{/') {\n\t\t\t\t                            // These are tags and not content.\n\t\t\t\t                            break;\n\t\t\t\t                        } else if (peek3 === '{{!') {\n\t\t\t\t                            return [this.get_tag(), 'TK_TAG_HANDLEBARS_COMMENT'];\n\t\t\t\t                        } else if (this.input.substr(this.pos, 2) === '{{') {\n\t\t\t\t                            if (this.get_tag(true) === '{{else}}') {\n\t\t\t\t                                break;\n\t\t\t\t                            }\n\t\t\t\t                        }\n\t\t\t\t                    }\n\t\t\t\t\n\t\t\t\t                    input_char = this.input.charAt(this.pos);\n\t\t\t\t                    this.pos++;\n\t\t\t\t                    this.line_char_count++;\n\t\t\t\t                    content.push(input_char); //letter at-a-time (or string) inserted to an array\n\t\t\t\t                }\n\t\t\t\t                return content.length ? content.join('') : '';\n\t\t\t\t            };\n\t\t\t\t\n\t\t\t\t            this.get_contents_to = function(name) { //get the full content of a script or style to pass to js_beautify\n\t\t\t\t                if (this.pos === this.input.length) {\n\t\t\t\t                    return ['', 'TK_EOF'];\n\t\t\t\t                }\n\t\t\t\t                var content = '';\n\t\t\t\t                var reg_match = new RegExp('</' + name + '\\\\s*>', 'igm');\n\t\t\t\t                reg_match.lastIndex = this.pos;\n\t\t\t\t                var reg_array = reg_match.exec(this.input);\n\t\t\t\t                var end_script = reg_array ? reg_array.index : this.input.length; //absolute end of script\n\t\t\t\t                if (this.pos < end_script) { //get everything in between the script tags\n\t\t\t\t                    content = this.input.substring(this.pos, end_script);\n\t\t\t\t                    this.pos = end_script;\n\t\t\t\t                }\n\t\t\t\t                return content;\n\t\t\t\t            };\n\t\t\t\t\n\t\t\t\t            this.record_tag = function(tag) { //function to record a tag and its parent in this.tags Object\n\t\t\t\t                if (this.tags[tag + 'count']) { //check for the existence of this tag type\n\t\t\t\t                    this.tags[tag + 'count']++;\n\t\t\t\t                    this.tags[tag + this.tags[tag + 'count']] = this.indent_level; //and record the present indent level\n\t\t\t\t                } else { //otherwise initialize this tag type\n\t\t\t\t                    this.tags[tag + 'count'] = 1;\n\t\t\t\t                    this.tags[tag + this.tags[tag + 'count']] = this.indent_level; //and record the present indent level\n\t\t\t\t                }\n\t\t\t\t                this.tags[tag + this.tags[tag + 'count'] + 'parent'] = this.tags.parent; //set the parent (i.e. in the case of a div this.tags.div1parent)\n\t\t\t\t                this.tags.parent = tag + this.tags[tag + 'count']; //and make this the current parent (i.e. in the case of a div 'div1')\n\t\t\t\t            };\n\t\t\t\t\n\t\t\t\t            this.retrieve_tag = function(tag) { //function to retrieve the opening tag to the corresponding closer\n\t\t\t\t                if (this.tags[tag + 'count']) { //if the openener is not in the Object we ignore it\n\t\t\t\t                    var temp_parent = this.tags.parent; //check to see if it's a closable tag.\n\t\t\t\t                    while (temp_parent) { //till we reach '' (the initial value);\n\t\t\t\t                        if (tag + this.tags[tag + 'count'] === temp_parent) { //if this is it use it\n\t\t\t\t                            break;\n\t\t\t\t                        }\n\t\t\t\t                        temp_parent = this.tags[temp_parent + 'parent']; //otherwise keep on climbing up the DOM Tree\n\t\t\t\t                    }\n\t\t\t\t                    if (temp_parent) { //if we caught something\n\t\t\t\t                        this.indent_level = this.tags[tag + this.tags[tag + 'count']]; //set the indent_level accordingly\n\t\t\t\t                        this.tags.parent = this.tags[temp_parent + 'parent']; //and set the current parent\n\t\t\t\t                    }\n\t\t\t\t                    delete this.tags[tag + this.tags[tag + 'count'] + 'parent']; //delete the closed tags parent reference...\n\t\t\t\t                    delete this.tags[tag + this.tags[tag + 'count']]; //...and the tag itself\n\t\t\t\t                    if (this.tags[tag + 'count'] === 1) {\n\t\t\t\t                        delete this.tags[tag + 'count'];\n\t\t\t\t                    } else {\n\t\t\t\t                        this.tags[tag + 'count']--;\n\t\t\t\t                    }\n\t\t\t\t                }\n\t\t\t\t            };\n\t\t\t\t\n\t\t\t\t            this.indent_to_tag = function(tag) {\n\t\t\t\t                // Match the indentation level to the last use of this tag, but don't remove it.\n\t\t\t\t                if (!this.tags[tag + 'count']) {\n\t\t\t\t                    return;\n\t\t\t\t                }\n\t\t\t\t                var temp_parent = this.tags.parent;\n\t\t\t\t                while (temp_parent) {\n\t\t\t\t                    if (tag + this.tags[tag + 'count'] === temp_parent) {\n\t\t\t\t                        break;\n\t\t\t\t                    }\n\t\t\t\t                    temp_parent = this.tags[temp_parent + 'parent'];\n\t\t\t\t                }\n\t\t\t\t                if (temp_parent) {\n\t\t\t\t                    this.indent_level = this.tags[tag + this.tags[tag + 'count']];\n\t\t\t\t                }\n\t\t\t\t            };\n\t\t\t\t\n\t\t\t\t            this.get_tag = function(peek) { //function to get a full tag and parse its type\n\t\t\t\t                var input_char = '',\n\t\t\t\t                    content = [],\n\t\t\t\t                    comment = '',\n\t\t\t\t                    space = false,\n\t\t\t\t                    first_attr = true,\n\t\t\t\t                    tag_start, tag_end,\n\t\t\t\t                    tag_start_char,\n\t\t\t\t                    orig_pos = this.pos,\n\t\t\t\t                    orig_line_char_count = this.line_char_count;\n\t\t\t\t\n\t\t\t\t                peek = peek !== undefined ? peek : false;\n\t\t\t\t\n\t\t\t\t                do {\n\t\t\t\t                    if (this.pos >= this.input.length) {\n\t\t\t\t                        if (peek) {\n\t\t\t\t                            this.pos = orig_pos;\n\t\t\t\t                            this.line_char_count = orig_line_char_count;\n\t\t\t\t                        }\n\t\t\t\t                        return content.length ? content.join('') : ['', 'TK_EOF'];\n\t\t\t\t                    }\n\t\t\t\t\n\t\t\t\t                    input_char = this.input.charAt(this.pos);\n\t\t\t\t                    this.pos++;\n\t\t\t\t\n\t\t\t\t                    if (this.Utils.in_array(input_char, this.Utils.whitespace)) { //don't want to insert unnecessary space\n\t\t\t\t                        space = true;\n\t\t\t\t                        continue;\n\t\t\t\t                    }\n\t\t\t\t\n\t\t\t\t                    if (input_char === \"'\" || input_char === '\"') {\n\t\t\t\t                        input_char += this.get_unformatted(input_char);\n\t\t\t\t                        space = true;\n\t\t\t\t\n\t\t\t\t                    }\n\t\t\t\t\n\t\t\t\t                    if (input_char === '=') { //no space before =\n\t\t\t\t                        space = false;\n\t\t\t\t                    }\n\t\t\t\t\n\t\t\t\t                    if (content.length && content[content.length - 1] !== '=' && input_char !== '>' && space) {\n\t\t\t\t                        //no space after = or before >\n\t\t\t\t                        var wrapped = this.space_or_wrap(content);\n\t\t\t\t                        var indentAttrs = wrapped && input_char !== '/' && wrap_attributes !== 'force';\n\t\t\t\t                        space = false;\n\t\t\t\t                        if (!first_attr && wrap_attributes === 'force' && input_char !== '/') {\n\t\t\t\t                            this.print_newline(false, content);\n\t\t\t\t                            this.print_indentation(content);\n\t\t\t\t                            indentAttrs = true;\n\t\t\t\t                        }\n\t\t\t\t                        if (indentAttrs) {\n\t\t\t\t                            //indent attributes an auto or forced line-wrap\n\t\t\t\t                            for (var count = 0; count < wrap_attributes_indent_size; count++) {\n\t\t\t\t                                content.push(indent_character);\n\t\t\t\t                            }\n\t\t\t\t                        }\n\t\t\t\t                        for (var i = 0; i < content.length; i++) {\n\t\t\t\t                            if (content[i] === ' ') {\n\t\t\t\t                                first_attr = false;\n\t\t\t\t                                break;\n\t\t\t\t                            }\n\t\t\t\t                        }\n\t\t\t\t                    }\n\t\t\t\t\n\t\t\t\t                    if (indent_handlebars && tag_start_char === '<') {\n\t\t\t\t                        // When inside an angle-bracket tag, put spaces around\n\t\t\t\t                        // handlebars not inside of strings.\n\t\t\t\t                        if ((input_char + this.input.charAt(this.pos)) === '{{') {\n\t\t\t\t                            input_char += this.get_unformatted('}}');\n\t\t\t\t                            if (content.length && content[content.length - 1] !== ' ' && content[content.length - 1] !== '<') {\n\t\t\t\t                                input_char = ' ' + input_char;\n\t\t\t\t                            }\n\t\t\t\t                            space = true;\n\t\t\t\t                        }\n\t\t\t\t                    }\n\t\t\t\t\n\t\t\t\t                    if (input_char === '<' && !tag_start_char) {\n\t\t\t\t                        tag_start = this.pos - 1;\n\t\t\t\t                        tag_start_char = '<';\n\t\t\t\t                    }\n\t\t\t\t\n\t\t\t\t                    if (indent_handlebars && !tag_start_char) {\n\t\t\t\t                        if (content.length >= 2 && content[content.length - 1] === '{' && content[content.length - 2] === '{') {\n\t\t\t\t                            if (input_char === '#' || input_char === '/' || input_char === '!') {\n\t\t\t\t                                tag_start = this.pos - 3;\n\t\t\t\t                            } else {\n\t\t\t\t                                tag_start = this.pos - 2;\n\t\t\t\t                            }\n\t\t\t\t                            tag_start_char = '{';\n\t\t\t\t                        }\n\t\t\t\t                    }\n\t\t\t\t\n\t\t\t\t                    this.line_char_count++;\n\t\t\t\t                    content.push(input_char); //inserts character at-a-time (or string)\n\t\t\t\t\n\t\t\t\t                    if (content[1] && (content[1] === '!' || content[1] === '?' || content[1] === '%')) { //if we're in a comment, do something special\n\t\t\t\t                        // We treat all comments as literals, even more than preformatted tags\n\t\t\t\t                        // we just look for the appropriate close tag\n\t\t\t\t                        content = [this.get_comment(tag_start)];\n\t\t\t\t                        break;\n\t\t\t\t                    }\n\t\t\t\t\n\t\t\t\t                    if (indent_handlebars && content[1] && content[1] === '{' && content[2] && content[2] === '!') { //if we're in a comment, do something special\n\t\t\t\t                        // We treat all comments as literals, even more than preformatted tags\n\t\t\t\t                        // we just look for the appropriate close tag\n\t\t\t\t                        content = [this.get_comment(tag_start)];\n\t\t\t\t                        break;\n\t\t\t\t                    }\n\t\t\t\t\n\t\t\t\t                    if (indent_handlebars && tag_start_char === '{' && content.length > 2 && content[content.length - 2] === '}' && content[content.length - 1] === '}') {\n\t\t\t\t                        break;\n\t\t\t\t                    }\n\t\t\t\t                } while (input_char !== '>');\n\t\t\t\t\n\t\t\t\t                var tag_complete = content.join('');\n\t\t\t\t                var tag_index;\n\t\t\t\t                var tag_offset;\n\t\t\t\t\n\t\t\t\t                if (tag_complete.indexOf(' ') !== -1) { //if there's whitespace, thats where the tag name ends\n\t\t\t\t                    tag_index = tag_complete.indexOf(' ');\n\t\t\t\t                } else if (tag_complete.charAt(0) === '{') {\n\t\t\t\t                    tag_index = tag_complete.indexOf('}');\n\t\t\t\t                } else { //otherwise go with the tag ending\n\t\t\t\t                    tag_index = tag_complete.indexOf('>');\n\t\t\t\t                }\n\t\t\t\t                if (tag_complete.charAt(0) === '<' || !indent_handlebars) {\n\t\t\t\t                    tag_offset = 1;\n\t\t\t\t                } else {\n\t\t\t\t                    tag_offset = tag_complete.charAt(2) === '#' ? 3 : 2;\n\t\t\t\t                }\n\t\t\t\t                var tag_check = tag_complete.substring(tag_offset, tag_index).toLowerCase();\n\t\t\t\t                if (tag_complete.charAt(tag_complete.length - 2) === '/' ||\n\t\t\t\t                    this.Utils.in_array(tag_check, this.Utils.single_token)) { //if this tag name is a single tag type (either in the list or has a closing /)\n\t\t\t\t                    if (!peek) {\n\t\t\t\t                        this.tag_type = 'SINGLE';\n\t\t\t\t                    }\n\t\t\t\t                } else if (indent_handlebars && tag_complete.charAt(0) === '{' && tag_check === 'else') {\n\t\t\t\t                    if (!peek) {\n\t\t\t\t                        this.indent_to_tag('if');\n\t\t\t\t                        this.tag_type = 'HANDLEBARS_ELSE';\n\t\t\t\t                        this.indent_content = true;\n\t\t\t\t                        this.traverse_whitespace();\n\t\t\t\t                    }\n\t\t\t\t                } else if (this.is_unformatted(tag_check, unformatted)) { // do not reformat the \"unformatted\" tags\n\t\t\t\t                    comment = this.get_unformatted('</' + tag_check + '>', tag_complete); //...delegate to get_unformatted function\n\t\t\t\t                    content.push(comment);\n\t\t\t\t                    tag_end = this.pos - 1;\n\t\t\t\t                    this.tag_type = 'SINGLE';\n\t\t\t\t                } else if (tag_check === 'script' &&\n\t\t\t\t                    (tag_complete.search('type') === -1 ||\n\t\t\t\t                        (tag_complete.search('type') > -1 &&\n\t\t\t\t                            tag_complete.search(/\\b(text|application|dojo)\\/(x-)?(javascript|ecmascript|jscript|livescript|(ld\\+)?json|method|aspect)/) > -1))) {\n\t\t\t\t                    if (!peek) {\n\t\t\t\t                        this.record_tag(tag_check);\n\t\t\t\t                        this.tag_type = 'SCRIPT';\n\t\t\t\t                    }\n\t\t\t\t                } else if (tag_check === 'style' &&\n\t\t\t\t                    (tag_complete.search('type') === -1 ||\n\t\t\t\t                        (tag_complete.search('type') > -1 && tag_complete.search('text/css') > -1))) {\n\t\t\t\t                    if (!peek) {\n\t\t\t\t                        this.record_tag(tag_check);\n\t\t\t\t                        this.tag_type = 'STYLE';\n\t\t\t\t                    }\n\t\t\t\t                } else if (tag_check.charAt(0) === '!') { //peek for <! comment\n\t\t\t\t                    // for comments content is already correct.\n\t\t\t\t                    if (!peek) {\n\t\t\t\t                        this.tag_type = 'SINGLE';\n\t\t\t\t                        this.traverse_whitespace();\n\t\t\t\t                    }\n\t\t\t\t                } else if (!peek) {\n\t\t\t\t                    if (tag_check.charAt(0) === '/') { //this tag is a double tag so check for tag-ending\n\t\t\t\t                        this.retrieve_tag(tag_check.substring(1)); //remove it and all ancestors\n\t\t\t\t                        this.tag_type = 'END';\n\t\t\t\t                    } else { //otherwise it's a start-tag\n\t\t\t\t                        this.record_tag(tag_check); //push it on the tag stack\n\t\t\t\t                        if (tag_check.toLowerCase() !== 'html') {\n\t\t\t\t                            this.indent_content = true;\n\t\t\t\t                        }\n\t\t\t\t                        this.tag_type = 'START';\n\t\t\t\t                    }\n\t\t\t\t\n\t\t\t\t                    // Allow preserving of newlines after a start or end tag\n\t\t\t\t                    if (this.traverse_whitespace()) {\n\t\t\t\t                        this.space_or_wrap(content);\n\t\t\t\t                    }\n\t\t\t\t\n\t\t\t\t                    if (this.Utils.in_array(tag_check, this.Utils.extra_liners)) { //check if this double needs an extra line\n\t\t\t\t                        this.print_newline(false, this.output);\n\t\t\t\t                        if (this.output.length && this.output[this.output.length - 2] !== '\\n') {\n\t\t\t\t                            this.print_newline(true, this.output);\n\t\t\t\t                        }\n\t\t\t\t                    }\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                if (peek) {\n\t\t\t\t                    this.pos = orig_pos;\n\t\t\t\t                    this.line_char_count = orig_line_char_count;\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                return content.join(''); //returns fully formatted tag\n\t\t\t\t            };\n\t\t\t\t\n\t\t\t\t            this.get_comment = function(start_pos) { //function to return comment content in its entirety\n\t\t\t\t                // this is will have very poor perf, but will work for now.\n\t\t\t\t                var comment = '',\n\t\t\t\t                    delimiter = '>',\n\t\t\t\t                    matched = false;\n\t\t\t\t\n\t\t\t\t                this.pos = start_pos;\n\t\t\t\t                var input_char = this.input.charAt(this.pos);\n\t\t\t\t                this.pos++;\n\t\t\t\t\n\t\t\t\t                while (this.pos <= this.input.length) {\n\t\t\t\t                    comment += input_char;\n\t\t\t\t\n\t\t\t\t                    // only need to check for the delimiter if the last chars match\n\t\t\t\t                    if (comment.charAt(comment.length - 1) === delimiter.charAt(delimiter.length - 1) &&\n\t\t\t\t                        comment.indexOf(delimiter) !== -1) {\n\t\t\t\t                        break;\n\t\t\t\t                    }\n\t\t\t\t\n\t\t\t\t                    // only need to search for custom delimiter for the first few characters\n\t\t\t\t                    if (!matched && comment.length < 10) {\n\t\t\t\t                        if (comment.indexOf('<![if') === 0) { //peek for <![if conditional comment\n\t\t\t\t                            delimiter = '<![endif]>';\n\t\t\t\t                            matched = true;\n\t\t\t\t                        } else if (comment.indexOf('<![cdata[') === 0) { //if it's a <[cdata[ comment...\n\t\t\t\t                            delimiter = ']]>';\n\t\t\t\t                            matched = true;\n\t\t\t\t                        } else if (comment.indexOf('<![') === 0) { // some other ![ comment? ...\n\t\t\t\t                            delimiter = ']>';\n\t\t\t\t                            matched = true;\n\t\t\t\t                        } else if (comment.indexOf('<!--') === 0) { // <!-- comment ...\n\t\t\t\t                            delimiter = '-->';\n\t\t\t\t                            matched = true;\n\t\t\t\t                        } else if (comment.indexOf('{{!') === 0) { // {{! handlebars comment\n\t\t\t\t                            delimiter = '}}';\n\t\t\t\t                            matched = true;\n\t\t\t\t                        } else if (comment.indexOf('<?') === 0) { // {{! handlebars comment\n\t\t\t\t                            delimiter = '?>';\n\t\t\t\t                            matched = true;\n\t\t\t\t                        } else if (comment.indexOf('<%') === 0) { // {{! handlebars comment\n\t\t\t\t                            delimiter = '%>';\n\t\t\t\t                            matched = true;\n\t\t\t\t                        }\n\t\t\t\t                    }\n\t\t\t\t\n\t\t\t\t                    input_char = this.input.charAt(this.pos);\n\t\t\t\t                    this.pos++;\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                return comment;\n\t\t\t\t            };\n\t\t\t\t\n\t\t\t\t            function tokenMatcher(delimiter) {\n\t\t\t\t                var token = '';\n\t\t\t\t\n\t\t\t\t                var add = function(str) {\n\t\t\t\t                    var newToken = token + str.toLowerCase();\n\t\t\t\t                    token = newToken.length <= delimiter.length ? newToken : newToken.substr(newToken.length - delimiter.length, delimiter.length);\n\t\t\t\t                };\n\t\t\t\t\n\t\t\t\t                var doesNotMatch = function() {\n\t\t\t\t                    return token.indexOf(delimiter) === -1;\n\t\t\t\t                };\n\t\t\t\t\n\t\t\t\t                return {\n\t\t\t\t                    add: add,\n\t\t\t\t                    doesNotMatch: doesNotMatch\n\t\t\t\t                };\n\t\t\t\t            }\n\t\t\t\t\n\t\t\t\t            this.get_unformatted = function(delimiter, orig_tag) { //function to return unformatted content in its entirety\n\t\t\t\t                if (orig_tag && orig_tag.toLowerCase().indexOf(delimiter) !== -1) {\n\t\t\t\t                    return '';\n\t\t\t\t                }\n\t\t\t\t                var input_char = '';\n\t\t\t\t                var content = '';\n\t\t\t\t                var space = true;\n\t\t\t\t\n\t\t\t\t                var delimiterMatcher = tokenMatcher(delimiter);\n\t\t\t\t\n\t\t\t\t                do {\n\t\t\t\t\n\t\t\t\t                    if (this.pos >= this.input.length) {\n\t\t\t\t                        return content;\n\t\t\t\t                    }\n\t\t\t\t\n\t\t\t\t                    input_char = this.input.charAt(this.pos);\n\t\t\t\t                    this.pos++;\n\t\t\t\t\n\t\t\t\t                    if (this.Utils.in_array(input_char, this.Utils.whitespace)) {\n\t\t\t\t                        if (!space) {\n\t\t\t\t                            this.line_char_count--;\n\t\t\t\t                            continue;\n\t\t\t\t                        }\n\t\t\t\t                        if (input_char === '\\n' || input_char === '\\r') {\n\t\t\t\t                            content += '\\n';\n\t\t\t\t                            /*  Don't change tab indention for unformatted blocks.  If using code for html editing, this will greatly affect <pre> tags if they are specified in the 'unformatted array'\n\t\t\t\t                for (var i=0; i<this.indent_level; i++) {\n\t\t\t\t                  content += this.indent_string;\n\t\t\t\t                }\n\t\t\t\t                space = false; //...and make sure other indentation is erased\n\t\t\t\t                */\n\t\t\t\t                            this.line_char_count = 0;\n\t\t\t\t                            continue;\n\t\t\t\t                        }\n\t\t\t\t                    }\n\t\t\t\t                    content += input_char;\n\t\t\t\t                    delimiterMatcher.add(input_char);\n\t\t\t\t                    this.line_char_count++;\n\t\t\t\t                    space = true;\n\t\t\t\t\n\t\t\t\t                    if (indent_handlebars && input_char === '{' && content.length && content.charAt(content.length - 2) === '{') {\n\t\t\t\t                        // Handlebars expressions in strings should also be unformatted.\n\t\t\t\t                        content += this.get_unformatted('}}');\n\t\t\t\t                        // Don't consider when stopping for delimiters.\n\t\t\t\t                    }\n\t\t\t\t                } while (delimiterMatcher.doesNotMatch());\n\t\t\t\t\n\t\t\t\t                return content;\n\t\t\t\t            };\n\t\t\t\t\n\t\t\t\t            this.get_token = function() { //initial handler for token-retrieval\n\t\t\t\t                var token;\n\t\t\t\t\n\t\t\t\t                if (this.last_token === 'TK_TAG_SCRIPT' || this.last_token === 'TK_TAG_STYLE') { //check if we need to format javascript\n\t\t\t\t                    var type = this.last_token.substr(7);\n\t\t\t\t                    token = this.get_contents_to(type);\n\t\t\t\t                    if (typeof token !== 'string') {\n\t\t\t\t                        return token;\n\t\t\t\t                    }\n\t\t\t\t                    return [token, 'TK_' + type];\n\t\t\t\t                }\n\t\t\t\t                if (this.current_mode === 'CONTENT') {\n\t\t\t\t                    token = this.get_content();\n\t\t\t\t                    if (typeof token !== 'string') {\n\t\t\t\t                        return token;\n\t\t\t\t                    } else {\n\t\t\t\t                        return [token, 'TK_CONTENT'];\n\t\t\t\t                    }\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                if (this.current_mode === 'TAG') {\n\t\t\t\t                    token = this.get_tag();\n\t\t\t\t                    if (typeof token !== 'string') {\n\t\t\t\t                        return token;\n\t\t\t\t                    } else {\n\t\t\t\t                        var tag_name_type = 'TK_TAG_' + this.tag_type;\n\t\t\t\t                        return [token, tag_name_type];\n\t\t\t\t                    }\n\t\t\t\t                }\n\t\t\t\t            };\n\t\t\t\t\n\t\t\t\t            this.get_full_indent = function(level) {\n\t\t\t\t                level = this.indent_level + level || 0;\n\t\t\t\t                if (level < 1) {\n\t\t\t\t                    return '';\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                return Array(level + 1).join(this.indent_string);\n\t\t\t\t            };\n\t\t\t\t\n\t\t\t\t            this.is_unformatted = function(tag_check, unformatted) {\n\t\t\t\t                //is this an HTML5 block-level link?\n\t\t\t\t                if (!this.Utils.in_array(tag_check, unformatted)) {\n\t\t\t\t                    return false;\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                if (tag_check.toLowerCase() !== 'a' || !this.Utils.in_array('a', unformatted)) {\n\t\t\t\t                    return true;\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                //at this point we have an  tag; is its first child something we want to remain\n\t\t\t\t                //unformatted?\n\t\t\t\t                var next_tag = this.get_tag(true /* peek. */ );\n\t\t\t\t\n\t\t\t\t                // test next_tag to see if it is just html tag (no external content)\n\t\t\t\t                var tag = (next_tag || \"\").match(/^\\s*<\\s*\\/?([a-z]*)\\s*[^>]*>\\s*$/);\n\t\t\t\t\n\t\t\t\t                // if next_tag comes back but is not an isolated tag, then\n\t\t\t\t                // let's treat the 'a' tag as having content\n\t\t\t\t                // and respect the unformatted option\n\t\t\t\t                if (!tag || this.Utils.in_array(tag, unformatted)) {\n\t\t\t\t                    return true;\n\t\t\t\t                } else {\n\t\t\t\t                    return false;\n\t\t\t\t                }\n\t\t\t\t            };\n\t\t\t\t\n\t\t\t\t            this.printer = function(js_source, indent_character, indent_size, wrap_line_length, brace_style) { //handles input/output and some other printing functions\n\t\t\t\t\n\t\t\t\t                this.input = js_source || ''; //gets the input for the Parser\n\t\t\t\t\n\t\t\t\t                // HACK: newline parsing inconsistent. This brute force normalizes the input.\n\t\t\t\t                this.input = this.input.replace(/\\r\\n|[\\r\\u2028\\u2029]/g, '\\n');\n\t\t\t\t\n\t\t\t\t                this.output = [];\n\t\t\t\t                this.indent_character = indent_character;\n\t\t\t\t                this.indent_string = '';\n\t\t\t\t                this.indent_size = indent_size;\n\t\t\t\t                this.brace_style = brace_style;\n\t\t\t\t                this.indent_level = 0;\n\t\t\t\t                this.wrap_line_length = wrap_line_length;\n\t\t\t\t                this.line_char_count = 0; //count to see if wrap_line_length was exceeded\n\t\t\t\t\n\t\t\t\t                for (var i = 0; i < this.indent_size; i++) {\n\t\t\t\t                    this.indent_string += this.indent_character;\n\t\t\t\t                }\n\t\t\t\t\n\t\t\t\t                this.print_newline = function(force, arr) {\n\t\t\t\t                    this.line_char_count = 0;\n\t\t\t\t                    if (!arr || !arr.length) {\n\t\t\t\t                        return;\n\t\t\t\t                    }\n\t\t\t\t                    if (force || (arr[arr.length - 1] !== '\\n')) { //we might want the extra line\n\t\t\t\t                        if ((arr[arr.length - 1] !== '\\n')) {\n\t\t\t\t                            arr[arr.length - 1] = rtrim(arr[arr.length - 1]);\n\t\t\t\t                        }\n\t\t\t\t                        arr.push('\\n');\n\t\t\t\t                    }\n\t\t\t\t                };\n\t\t\t\t\n\t\t\t\t                this.print_indentation = function(arr) {\n\t\t\t\t                    for (var i = 0; i < this.indent_level; i++) {\n\t\t\t\t                        arr.push(this.indent_string);\n\t\t\t\t                        this.line_char_count += this.indent_string.length;\n\t\t\t\t                    }\n\t\t\t\t                };\n\t\t\t\t\n\t\t\t\t                this.print_token = function(text) {\n\t\t\t\t                    // Avoid printing initial whitespace.\n\t\t\t\t                    if (this.is_whitespace(text) && !this.output.length) {\n\t\t\t\t                        return;\n\t\t\t\t                    }\n\t\t\t\t                    if (text || text !== '') {\n\t\t\t\t                        if (this.output.length && this.output[this.output.length - 1] === '\\n') {\n\t\t\t\t                            this.print_indentation(this.output);\n\t\t\t\t                            text = ltrim(text);\n\t\t\t\t                        }\n\t\t\t\t                    }\n\t\t\t\t                    this.print_token_raw(text);\n\t\t\t\t                };\n\t\t\t\t\n\t\t\t\t                this.print_token_raw = function(text) {\n\t\t\t\t                    // If we are going to print newlines, truncate trailing\n\t\t\t\t                    // whitespace, as the newlines will represent the space.\n\t\t\t\t                    if (this.newlines > 0) {\n\t\t\t\t                        text = rtrim(text);\n\t\t\t\t                    }\n\t\t\t\t\n\t\t\t\t                    if (text && text !== '') {\n\t\t\t\t                        if (text.length > 1 && text.charAt(text.length - 1) === '\\n') {\n\t\t\t\t                            // unformatted tags can grab newlines as their last character\n\t\t\t\t                            this.output.push(text.slice(0, -1));\n\t\t\t\t                            this.print_newline(false, this.output);\n\t\t\t\t                        } else {\n\t\t\t\t                            this.output.push(text);\n\t\t\t\t                        }\n\t\t\t\t                    }\n\t\t\t\t\n\t\t\t\t                    for (var n = 0; n < this.newlines; n++) {\n\t\t\t\t                        this.print_newline(n > 0, this.output);\n\t\t\t\t                    }\n\t\t\t\t                    this.newlines = 0;\n\t\t\t\t                };\n\t\t\t\t\n\t\t\t\t                this.indent = function() {\n\t\t\t\t                    this.indent_level++;\n\t\t\t\t                };\n\t\t\t\t\n\t\t\t\t                this.unindent = function() {\n\t\t\t\t                    if (this.indent_level > 0) {\n\t\t\t\t                        this.indent_level--;\n\t\t\t\t                    }\n\t\t\t\t                };\n\t\t\t\t            };\n\t\t\t\t            return this;\n\t\t\t\t        }\n\t\t\t\t\n\t\t\t\t        /*_____________________--------------------_____________________*/\n\t\t\t\t\n\t\t\t\t        multi_parser = new Parser(); //wrapping functions Parser\n\t\t\t\t        multi_parser.printer(html_source, indent_character, indent_size, wrap_line_length, brace_style); //initialize starting values\n\t\t\t\t\n\t\t\t\t        while (true) {\n\t\t\t\t            var t = multi_parser.get_token();\n\t\t\t\t            multi_parser.token_text = t[0];\n\t\t\t\t            multi_parser.token_type = t[1];\n\t\t\t\t\n\t\t\t\t            if (multi_parser.token_type === 'TK_EOF') {\n\t\t\t\t                break;\n\t\t\t\t            }\n\t\t\t\t\n\t\t\t\t            switch (multi_parser.token_type) {\n\t\t\t\t                case 'TK_TAG_START':\n\t\t\t\t                    multi_parser.print_newline(false, multi_parser.output);\n\t\t\t\t                    multi_parser.print_token(multi_parser.token_text);\n\t\t\t\t                    if (multi_parser.indent_content) {\n\t\t\t\t                        if ((multi_parser.indent_body_inner_html || !multi_parser.token_text.match(/<body(?:.*)>/)) &&\n\t\t\t\t                            (multi_parser.indent_head_inner_html || !multi_parser.token_text.match(/<head(?:.*)>/))) {\n\t\t\t\t\n\t\t\t\t                            multi_parser.indent();\n\t\t\t\t                        }\n\t\t\t\t\n\t\t\t\t                        multi_parser.indent_content = false;\n\t\t\t\t                    }\n\t\t\t\t                    multi_parser.current_mode = 'CONTENT';\n\t\t\t\t                    break;\n\t\t\t\t                case 'TK_TAG_STYLE':\n\t\t\t\t                case 'TK_TAG_SCRIPT':\n\t\t\t\t                    multi_parser.print_newline(false, multi_parser.output);\n\t\t\t\t                    multi_parser.print_token(multi_parser.token_text);\n\t\t\t\t                    multi_parser.current_mode = 'CONTENT';\n\t\t\t\t                    break;\n\t\t\t\t                case 'TK_TAG_END':\n\t\t\t\t                    //Print new line only if the tag has no content and has child\n\t\t\t\t                    if (multi_parser.last_token === 'TK_CONTENT' && multi_parser.last_text === '') {\n\t\t\t\t                        var tag_name = (multi_parser.token_text.match(/\\w+/) || [])[0];\n\t\t\t\t                        var tag_extracted_from_last_output = null;\n\t\t\t\t                        if (multi_parser.output.length) {\n\t\t\t\t                            tag_extracted_from_last_output = multi_parser.output[multi_parser.output.length - 1].match(/(?:<|{{#)\\s*(\\w+)/);\n\t\t\t\t                        }\n\t\t\t\t                        if (tag_extracted_from_last_output === null ||\n\t\t\t\t                            (tag_extracted_from_last_output[1] !== tag_name && !multi_parser.Utils.in_array(tag_extracted_from_last_output[1], unformatted))) {\n\t\t\t\t                            multi_parser.print_newline(false, multi_parser.output);\n\t\t\t\t                        }\n\t\t\t\t                    }\n\t\t\t\t                    multi_parser.print_token(multi_parser.token_text);\n\t\t\t\t                    multi_parser.current_mode = 'CONTENT';\n\t\t\t\t                    break;\n\t\t\t\t                case 'TK_TAG_SINGLE':\n\t\t\t\t                    // Don't add a newline before elements that should remain unformatted.\n\t\t\t\t                    var tag_check = multi_parser.token_text.match(/^\\s*<([a-z-]+)/i);\n\t\t\t\t                    if (!tag_check || !multi_parser.Utils.in_array(tag_check[1], unformatted)) {\n\t\t\t\t                        multi_parser.print_newline(false, multi_parser.output);\n\t\t\t\t                    }\n\t\t\t\t                    multi_parser.print_token(multi_parser.token_text);\n\t\t\t\t                    multi_parser.current_mode = 'CONTENT';\n\t\t\t\t                    break;\n\t\t\t\t                case 'TK_TAG_HANDLEBARS_ELSE':\n\t\t\t\t                    // Don't add a newline if opening {{#if}} tag is on the current line\n\t\t\t\t                    var foundIfOnCurrentLine = false;\n\t\t\t\t                    for (var lastCheckedOutput = multi_parser.output.length - 1; lastCheckedOutput >= 0; lastCheckedOutput--) {\n\t\t\t\t                        if (multi_parser.output[lastCheckedOutput] === '\\n') {\n\t\t\t\t                            break;\n\t\t\t\t                        } else {\n\t\t\t\t                            if (multi_parser.output[lastCheckedOutput].match(/{{#if/)) {\n\t\t\t\t                                foundIfOnCurrentLine = true;\n\t\t\t\t                                break;\n\t\t\t\t                            }\n\t\t\t\t                        }\n\t\t\t\t                    }\n\t\t\t\t                    if (!foundIfOnCurrentLine) {\n\t\t\t\t                        multi_parser.print_newline(false, multi_parser.output);\n\t\t\t\t                    }\n\t\t\t\t                    multi_parser.print_token(multi_parser.token_text);\n\t\t\t\t                    if (multi_parser.indent_content) {\n\t\t\t\t                        multi_parser.indent();\n\t\t\t\t                        multi_parser.indent_content = false;\n\t\t\t\t                    }\n\t\t\t\t                    multi_parser.current_mode = 'CONTENT';\n\t\t\t\t                    break;\n\t\t\t\t                case 'TK_TAG_HANDLEBARS_COMMENT':\n\t\t\t\t                    multi_parser.print_token(multi_parser.token_text);\n\t\t\t\t                    multi_parser.current_mode = 'TAG';\n\t\t\t\t                    break;\n\t\t\t\t                case 'TK_CONTENT':\n\t\t\t\t                    multi_parser.print_token(multi_parser.token_text);\n\t\t\t\t                    multi_parser.current_mode = 'TAG';\n\t\t\t\t                    break;\n\t\t\t\t                case 'TK_STYLE':\n\t\t\t\t                case 'TK_SCRIPT':\n\t\t\t\t                    if (multi_parser.token_text !== '') {\n\t\t\t\t                        multi_parser.print_newline(false, multi_parser.output);\n\t\t\t\t                        var text = multi_parser.token_text,\n\t\t\t\t                            _beautifier,\n\t\t\t\t                            script_indent_level = 1;\n\t\t\t\t                        if (multi_parser.token_type === 'TK_SCRIPT') {\n\t\t\t\t                            _beautifier = typeof js_beautify === 'function' && js_beautify;\n\t\t\t\t                        } else if (multi_parser.token_type === 'TK_STYLE') {\n\t\t\t\t                            _beautifier = typeof css_beautify === 'function' && css_beautify;\n\t\t\t\t                        }\n\t\t\t\t\n\t\t\t\t                        if (options.indent_scripts === \"keep\") {\n\t\t\t\t                            script_indent_level = 0;\n\t\t\t\t                        } else if (options.indent_scripts === \"separate\") {\n\t\t\t\t                            script_indent_level = -multi_parser.indent_level;\n\t\t\t\t                        }\n\t\t\t\t\n\t\t\t\t                        var indentation = multi_parser.get_full_indent(script_indent_level);\n\t\t\t\t                        if (_beautifier) {\n\t\t\t\t\n\t\t\t\t                            // call the Beautifier if avaliable\n\t\t\t\t                            var Child_options = function() {\n\t\t\t\t                                this.eol = '\\n';\n\t\t\t\t                            };\n\t\t\t\t                            Child_options.prototype = options;\n\t\t\t\t                            var child_options = new Child_options();\n\t\t\t\t                            text = _beautifier(text.replace(/^\\s*/, indentation), child_options);\n\t\t\t\t                        } else {\n\t\t\t\t                            // simply indent the string otherwise\n\t\t\t\t                            var white = text.match(/^\\s*/)[0];\n\t\t\t\t                            var _level = white.match(/[^\\n\\r]*$/)[0].split(multi_parser.indent_string).length - 1;\n\t\t\t\t                            var reindent = multi_parser.get_full_indent(script_indent_level - _level);\n\t\t\t\t                            text = text.replace(/^\\s*/, indentation)\n\t\t\t\t                                .replace(/\\r\\n|\\r|\\n/g, '\\n' + reindent)\n\t\t\t\t                                .replace(/\\s+$/, '');\n\t\t\t\t                        }\n\t\t\t\t                        if (text) {\n\t\t\t\t                            multi_parser.print_token_raw(text);\n\t\t\t\t                            multi_parser.print_newline(true, multi_parser.output);\n\t\t\t\t                        }\n\t\t\t\t                    }\n\t\t\t\t                    multi_parser.current_mode = 'TAG';\n\t\t\t\t                    break;\n\t\t\t\t                default:\n\t\t\t\t                    // We should not be getting here but we don't want to drop input on the floor\n\t\t\t\t                    // Just output the text and move on\n\t\t\t\t                    if (multi_parser.token_text !== '') {\n\t\t\t\t                        multi_parser.print_token(multi_parser.token_text);\n\t\t\t\t                    }\n\t\t\t\t                    break;\n\t\t\t\t            }\n\t\t\t\t            multi_parser.last_token = multi_parser.token_type;\n\t\t\t\t            multi_parser.last_text = multi_parser.token_text;\n\t\t\t\t        }\n\t\t\t\t        var sweet_code = multi_parser.output.join('').replace(/[\\r\\n\\t ]+$/, '');\n\t\t\t\t\n\t\t\t\t        // establish end_with_newline\n\t\t\t\t        if (end_with_newline) {\n\t\t\t\t            sweet_code += '\\n';\n\t\t\t\t        }\n\t\t\t\t\n\t\t\t\t        if (eol !== '\\n') {\n\t\t\t\t            sweet_code = sweet_code.replace(/[\\n]/g, eol);\n\t\t\t\t        }\n\t\t\t\t\n\t\t\t\t        return sweet_code;\n\t\t\t\t    }\n\t\t\t\t\n\t\t\t\t    if (true) {\n\t\t\t\t        // Add support for AMD ( https://github.com/amdjs/amdjs-api/wiki/AMD#defineamd-property- )\n\t\t\t\t        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, __webpack_require__(10), __webpack_require__(11)], __WEBPACK_AMD_DEFINE_RESULT__ = function(requireamd) {\n\t\t\t\t            var js_beautify = __webpack_require__(10);\n\t\t\t\t            var css_beautify = __webpack_require__(11);\n\t\t\t\t\n\t\t\t\t            return {\n\t\t\t\t                html_beautify: function(html_source, options) {\n\t\t\t\t                    return style_html(html_source, options, js_beautify.js_beautify, css_beautify.css_beautify);\n\t\t\t\t                }\n\t\t\t\t            };\n\t\t\t\t        }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\t\t\t    } else if (typeof exports !== \"undefined\") {\n\t\t\t\t        // Add support for CommonJS. Just put this file somewhere on your require.paths\n\t\t\t\t        // and you will be able to `var html_beautify = require(\"beautify\").html_beautify`.\n\t\t\t\t        var js_beautify = require('./beautify.js');\n\t\t\t\t        var css_beautify = require('./beautify-css.js');\n\t\t\t\t\n\t\t\t\t        exports.html_beautify = function(html_source, options) {\n\t\t\t\t            return style_html(html_source, options, js_beautify.js_beautify, css_beautify.css_beautify);\n\t\t\t\t        };\n\t\t\t\t    } else if (typeof window !== \"undefined\") {\n\t\t\t\t        // If we're running a web page and don't have either of the above, add our one global\n\t\t\t\t        window.html_beautify = function(html_source, options) {\n\t\t\t\t            return style_html(html_source, options, window.js_beautify, window.css_beautify);\n\t\t\t\t        };\n\t\t\t\t    } else if (typeof global !== \"undefined\") {\n\t\t\t\t        // If we don't even have window, try global.\n\t\t\t\t        global.html_beautify = function(html_source, options) {\n\t\t\t\t            return style_html(html_source, options, global.js_beautify, global.css_beautify);\n\t\t\t\t        };\n\t\t\t\t    }\n\t\t\t\t\n\t\t\t\t}());\n\t\t\t\n\t\t\t/***/ },\n\t\t\t/* 13 */\n\t\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\t\n\t\t\t\t\"use strict\";\n\t\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t\t};\n\t\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t\t};\n\t\t\t\tvar core_1 = __webpack_require__(7);\n\t\t\t\tvar html_code_pipe_1 = __webpack_require__(6);\n\t\t\t\tvar javascript_code_pipe_1 = __webpack_require__(8);\n\t\t\t\tvar ng2_utils_directive_1 = __webpack_require__(14);\n\t\t\t\tvar Ng2UtilsModule = (function () {\n\t\t\t\t    function Ng2UtilsModule() {\n\t\t\t\t    }\n\t\t\t\t    return Ng2UtilsModule;\n\t\t\t\t}());\n\t\t\t\tNg2UtilsModule = __decorate([\n\t\t\t\t    core_1.NgModule({\n\t\t\t\t        declarations: [\n\t\t\t\t            html_code_pipe_1.HtmlCodePipe,\n\t\t\t\t            javascript_code_pipe_1.JavascriptCodePipe,\n\t\t\t\t            ng2_utils_directive_1.Ng2UtilsDirective\n\t\t\t\t        ],\n\t\t\t\t        exports: [\n\t\t\t\t            html_code_pipe_1.HtmlCodePipe,\n\t\t\t\t            javascript_code_pipe_1.JavascriptCodePipe,\n\t\t\t\t            ng2_utils_directive_1.Ng2UtilsDirective\n\t\t\t\t        ]\n\t\t\t\t    }),\n\t\t\t\t    __metadata(\"design:paramtypes\", [])\n\t\t\t\t], Ng2UtilsModule);\n\t\t\t\texports.Ng2UtilsModule = Ng2UtilsModule;\n\t\t\t\n\t\t\t\n\t\t\t/***/ },\n\t\t\t/* 14 */\n\t\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\t\n\t\t\t\t\"use strict\";\n\t\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t\t};\n\t\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t\t};\n\t\t\t\tvar core_1 = __webpack_require__(7);\n\t\t\t\tvar Ng2UtilsDirective = (function () {\n\t\t\t\t    function Ng2UtilsDirective() {\n\t\t\t\t    }\n\t\t\t\t    return Ng2UtilsDirective;\n\t\t\t\t}()); // dummy directive to allow non-standard tags\n\t\t\t\tNg2UtilsDirective = __decorate([\n\t\t\t\t    core_1.Directive({\n\t\t\t\t        selector: 'ng2-utils-1, ng2-utils-2, ng2-utils-3, ng2-utils-4, ng2-utils-5,' +\n\t\t\t\t            'ng2-utils-6, ng2-utils-7, ng2-utils-8, ng2-utils-9, ng2-utils-10,' +\n\t\t\t\t            'ng2-utils-11, ng2-utils-12, ng2-utils-13, ng2-utils-14, ng2-utils-15,' +\n\t\t\t\t            'ng2-utils-16, ng2-utils-17, ng2-utils-18, ng2-utils-19, ng2-utils-20'\n\t\t\t\t    }),\n\t\t\t\t    __metadata(\"design:paramtypes\", [])\n\t\t\t\t], Ng2UtilsDirective);\n\t\t\t\texports.Ng2UtilsDirective = Ng2UtilsDirective;\n\t\t\t\n\t\t\t\n\t\t\t/***/ }\n\t\t\t/******/ ])\n\t\t\t});\n\t\t\t;\n\t\t\t//# sourceMappingURL=ng2-utils.umd.js.map\n\t\t\n\t\t/***/ },\n\t\t/* 4 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t};\n\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t};\n\t\t\tvar core_1 = __webpack_require__(2);\n\t\t\tvar forms_1 = __webpack_require__(5);\n\t\t\tvar common_1 = __webpack_require__(6);\n\t\t\tvar ng2_sticky_directive_1 = __webpack_require__(1);\n\t\t\texports.Ng2StickyDirective = ng2_sticky_directive_1.Ng2StickyDirective;\n\t\t\tvar Ng2StickyModule = (function () {\n\t\t\t    function Ng2StickyModule() {\n\t\t\t    }\n\t\t\t    return Ng2StickyModule;\n\t\t\t}());\n\t\t\tNg2StickyModule = __decorate([\n\t\t\t    core_1.NgModule({\n\t\t\t        imports: [common_1.CommonModule, forms_1.FormsModule],\n\t\t\t        declarations: [ng2_sticky_directive_1.Ng2StickyDirective],\n\t\t\t        exports: [ng2_sticky_directive_1.Ng2StickyDirective]\n\t\t\t    }),\n\t\t\t    __metadata(\"design:paramtypes\", [])\n\t\t\t], Ng2StickyModule);\n\t\t\texports.Ng2StickyModule = Ng2StickyModule;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 5 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\t\t\n\t\t/***/ },\n\t\t/* 6 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_6__;\n\t\t\n\t\t/***/ }\n\t\t/******/ ])\n\t\t});\n\t\t;\n\t\t//# sourceMappingURL=ng2-sticky.umd.js.map\n\t\n\t/***/ },\n\t/* 17 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t(function webpackUniversalModuleDefinition(root, factory) {\n\t\t\tif(true)\n\t\t\t\tmodule.exports = factory(__webpack_require__(2), __webpack_require__(3), __webpack_require__(8));\n\t\t\telse if(typeof define === 'function' && define.amd)\n\t\t\t\tdefine([\"@angular/core\", \"@angular/forms\", \"@angular/common\"], factory);\n\t\t\telse if(typeof exports === 'object')\n\t\t\t\texports[\"ng2-tab\"] = factory(require(\"@angular/core\"), require(\"@angular/forms\"), require(\"@angular/common\"));\n\t\t\telse\n\t\t\t\troot[\"ng2-tab\"] = factory(root[\"@angular/core\"], root[\"@angular/forms\"], root[\"@angular/common\"]);\n\t\t})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__) {\n\t\treturn /******/ (function(modules) { // webpackBootstrap\n\t\t/******/ \t// The module cache\n\t\t/******/ \tvar installedModules = {};\n\t\t/******/\n\t\t/******/ \t// The require function\n\t\t/******/ \tfunction __webpack_require__(moduleId) {\n\t\t/******/\n\t\t/******/ \t\t// Check if module is in cache\n\t\t/******/ \t\tif(installedModules[moduleId])\n\t\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\t\t/******/\n\t\t/******/ \t\t// Create a new module (and put it into the cache)\n\t\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t\t/******/ \t\t\texports: {},\n\t\t/******/ \t\t\tid: moduleId,\n\t\t/******/ \t\t\tloaded: false\n\t\t/******/ \t\t};\n\t\t/******/\n\t\t/******/ \t\t// Execute the module function\n\t\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t\t/******/\n\t\t/******/ \t\t// Flag the module as loaded\n\t\t/******/ \t\tmodule.loaded = true;\n\t\t/******/\n\t\t/******/ \t\t// Return the exports of the module\n\t\t/******/ \t\treturn module.exports;\n\t\t/******/ \t}\n\t\t/******/\n\t\t/******/\n\t\t/******/ \t// expose the modules object (__webpack_modules__)\n\t\t/******/ \t__webpack_require__.m = modules;\n\t\t/******/\n\t\t/******/ \t// expose the module cache\n\t\t/******/ \t__webpack_require__.c = installedModules;\n\t\t/******/\n\t\t/******/ \t// __webpack_public_path__\n\t\t/******/ \t__webpack_require__.p = \"\";\n\t\t/******/\n\t\t/******/ \t// Load entry module and return exports\n\t\t/******/ \treturn __webpack_require__(0);\n\t\t/******/ })\n\t\t/************************************************************************/\n\t\t/******/ ([\n\t\t/* 0 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar ng2_tab_component_1 = __webpack_require__(1);\n\t\t\texports.Ng2TabComponent = ng2_tab_component_1.Ng2TabComponent;\n\t\t\tvar ng2_tab_module_1 = __webpack_require__(3);\n\t\t\texports.Ng2TabModule = ng2_tab_module_1.Ng2TabModule;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 1 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t};\n\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t};\n\t\t\tvar core_1 = __webpack_require__(2);\n\t\t\tvar Ng2TabComponent = (function () {\n\t\t\t    function Ng2TabComponent(viewContainer) {\n\t\t\t        this.viewContainer = viewContainer;\n\t\t\t        this.selectedIndexClass = 'selected';\n\t\t\t        this.selectedContentsClass = 'selected';\n\t\t\t        this.el = this.viewContainer.element.nativeElement;\n\t\t\t    }\n\t\t\t    Ng2TabComponent.prototype.ngAfterViewInit = function () {\n\t\t\t        var _this = this;\n\t\t\t        this.indexEls = [].slice.call(this.el.querySelectorAll('[index]'));\n\t\t\t        this.contentsEls = [].slice.call(this.el.querySelectorAll('[contents]'));\n\t\t\t        this.selectTab(this.selectedIndex);\n\t\t\t        this.indexEls.forEach(function (el) {\n\t\t\t            el.addEventListener('click', function () {\n\t\t\t                _this.selectTab(el.getAttribute('index'));\n\t\t\t            });\n\t\t\t        });\n\t\t\t    };\n\t\t\t    Ng2TabComponent.prototype.selectTab = function (id) {\n\t\t\t        var _this = this;\n\t\t\t        id = id || this.indexEls[0].getAttribute('index');\n\t\t\t        this.indexEls.forEach(function (el) {\n\t\t\t            _this.removeClass(el, _this.selectedIndexClass);\n\t\t\t            if (el.getAttribute('index') == id) {\n\t\t\t                _this.addClass(el, _this.selectedIndexClass);\n\t\t\t            }\n\t\t\t        });\n\t\t\t        this.contentsEls.forEach(function (el) {\n\t\t\t            el.style.display = 'none';\n\t\t\t            _this.removeClass(el, _this.selectedContentsClass);\n\t\t\t            if (el.getAttribute('contents') == id) {\n\t\t\t                el.style.display = '';\n\t\t\t                _this.addClass(el, _this.selectedContentsClass);\n\t\t\t            }\n\t\t\t        });\n\t\t\t    };\n\t\t\t    Ng2TabComponent.prototype.addClass = function (el, str) {\n\t\t\t        var classNames = (el.className || '').split(' ');\n\t\t\t        classNames.push(str);\n\t\t\t        el.className = classNames.join(' ');\n\t\t\t    };\n\t\t\t    Ng2TabComponent.prototype.removeClass = function (el, str) {\n\t\t\t        el.className = (el.className || '').replace(new RegExp('[ ]*' + str), '');\n\t\t\t    };\n\t\t\t    return Ng2TabComponent;\n\t\t\t}());\n\t\t\t__decorate([\n\t\t\t    core_1.Input('selected'),\n\t\t\t    __metadata(\"design:type\", String)\n\t\t\t], Ng2TabComponent.prototype, \"selectedIndex\", void 0);\n\t\t\t__decorate([\n\t\t\t    core_1.Input('selected-index-class'),\n\t\t\t    __metadata(\"design:type\", String)\n\t\t\t], Ng2TabComponent.prototype, \"selectedIndexClass\", void 0);\n\t\t\t__decorate([\n\t\t\t    core_1.Input('selected-contents-class'),\n\t\t\t    __metadata(\"design:type\", String)\n\t\t\t], Ng2TabComponent.prototype, \"selectedContentsClass\", void 0);\n\t\t\tNg2TabComponent = __decorate([\n\t\t\t    core_1.Component({\n\t\t\t        selector: 'ng2-tab, [ng2-tab]',\n\t\t\t        encapsulation: core_1.ViewEncapsulation.None,\n\t\t\t        template: \"<ng-content></ng-content>\",\n\t\t\t        styles: [\"\\n    .tabs {\\n      position: relative;\\n      top: 1px;\\n      background: transparent;\\n      display: block;\\n    }\\n    .tabs [index] {\\n      display: inline-block;\\n      border: 1px solid #999;\\n      padding: 5px 10px;\\n      border-radius: 2px 2px 0 0;\\n    }\\n    .tabs [index].selected {\\n      padding-top: 0;\\n      background: #f7f7f7;\\n      border-top: 5px solid #00BCD4;\\n      border-bottom: 1px solid transparent;\\n    }\\n    .tab-contents {\\n      border: 1px solid #999;\\n      border-radius: 2px;\\n      min-height: 3em;\\n    }\\n  \"],\n\t\t\t    }),\n\t\t\t    __metadata(\"design:paramtypes\", [core_1.ViewContainerRef])\n\t\t\t], Ng2TabComponent);\n\t\t\texports.Ng2TabComponent = Ng2TabComponent;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 2 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\t\t\n\t\t/***/ },\n\t\t/* 3 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t};\n\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t};\n\t\t\tvar core_1 = __webpack_require__(2);\n\t\t\tvar forms_1 = __webpack_require__(4);\n\t\t\tvar common_1 = __webpack_require__(5);\n\t\t\tvar ng2_tab_component_1 = __webpack_require__(1);\n\t\t\texports.Ng2TabComponent = ng2_tab_component_1.Ng2TabComponent;\n\t\t\tvar Ng2TabModule = (function () {\n\t\t\t    function Ng2TabModule() {\n\t\t\t    }\n\t\t\t    return Ng2TabModule;\n\t\t\t}());\n\t\t\tNg2TabModule = __decorate([\n\t\t\t    core_1.NgModule({\n\t\t\t        imports: [common_1.CommonModule, forms_1.FormsModule],\n\t\t\t        declarations: [ng2_tab_component_1.Ng2TabComponent],\n\t\t\t        exports: [ng2_tab_component_1.Ng2TabComponent]\n\t\t\t    }),\n\t\t\t    __metadata(\"design:paramtypes\", [])\n\t\t\t], Ng2TabModule);\n\t\t\texports.Ng2TabModule = Ng2TabModule;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 4 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\t\t\n\t\t/***/ },\n\t\t/* 5 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\t\t\n\t\t/***/ }\n\t\t/******/ ])\n\t\t});\n\t\t;\n\t\t//# sourceMappingURL=ng2-tab.umd.js.map\n\t\n\t/***/ },\n\t/* 18 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t(function webpackUniversalModuleDefinition(root, factory) {\n\t\t\tif(true)\n\t\t\t\tmodule.exports = factory(__webpack_require__(2), __webpack_require__(3), __webpack_require__(8));\n\t\t\telse if(typeof define === 'function' && define.amd)\n\t\t\t\tdefine([\"@angular/core\", \"@angular/forms\", \"@angular/common\"], factory);\n\t\t\telse if(typeof exports === 'object')\n\t\t\t\texports[\"ng2-tooltip-overlay\"] = factory(require(\"@angular/core\"), require(\"@angular/forms\"), require(\"@angular/common\"));\n\t\t\telse\n\t\t\t\troot[\"ng2-tooltip-overlay\"] = factory(root[\"@angular/core\"], root[\"@angular/forms\"], root[\"@angular/common\"]);\n\t\t})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__) {\n\t\treturn /******/ (function(modules) { // webpackBootstrap\n\t\t/******/ \t// The module cache\n\t\t/******/ \tvar installedModules = {};\n\t\t/******/\n\t\t/******/ \t// The require function\n\t\t/******/ \tfunction __webpack_require__(moduleId) {\n\t\t/******/\n\t\t/******/ \t\t// Check if module is in cache\n\t\t/******/ \t\tif(installedModules[moduleId])\n\t\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\t\t/******/\n\t\t/******/ \t\t// Create a new module (and put it into the cache)\n\t\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t\t/******/ \t\t\texports: {},\n\t\t/******/ \t\t\tid: moduleId,\n\t\t/******/ \t\t\tloaded: false\n\t\t/******/ \t\t};\n\t\t/******/\n\t\t/******/ \t\t// Execute the module function\n\t\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t\t/******/\n\t\t/******/ \t\t// Flag the module as loaded\n\t\t/******/ \t\tmodule.loaded = true;\n\t\t/******/\n\t\t/******/ \t\t// Return the exports of the module\n\t\t/******/ \t\treturn module.exports;\n\t\t/******/ \t}\n\t\t/******/\n\t\t/******/\n\t\t/******/ \t// expose the modules object (__webpack_modules__)\n\t\t/******/ \t__webpack_require__.m = modules;\n\t\t/******/\n\t\t/******/ \t// expose the module cache\n\t\t/******/ \t__webpack_require__.c = installedModules;\n\t\t/******/\n\t\t/******/ \t// __webpack_public_path__\n\t\t/******/ \t__webpack_require__.p = \"\";\n\t\t/******/\n\t\t/******/ \t// Load entry module and return exports\n\t\t/******/ \treturn __webpack_require__(0);\n\t\t/******/ })\n\t\t/************************************************************************/\n\t\t/******/ ([\n\t\t/* 0 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar ng2_tooltip_directive_1 = __webpack_require__(1);\n\t\t\texports.Ng2TooltipDirective = ng2_tooltip_directive_1.Ng2TooltipDirective;\n\t\t\tvar ng2_tooltip_overlay_module_1 = __webpack_require__(6);\n\t\t\texports.Ng2TooltipOverlayModule = ng2_tooltip_overlay_module_1.Ng2TooltipOverlayModule;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 1 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t};\n\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t};\n\t\t\tvar core_1 = __webpack_require__(2);\n\t\t\tvar ng2_overlay_1 = __webpack_require__(3);\n\t\t\tvar Ng2TooltipDirective = (function () {\n\t\t\t    function Ng2TooltipDirective(viewContainerRef, overlayManager) {\n\t\t\t        this.viewContainerRef = viewContainerRef;\n\t\t\t        this.overlayManager = overlayManager;\n\t\t\t        this.el = this.viewContainerRef.element.nativeElement;\n\t\t\t    }\n\t\t\t    Ng2TooltipDirective.prototype.ngAfterViewInit = function () {\n\t\t\t        this.overlay = this.getTooltipOverlay(this.el, this.tooltip);\n\t\t\t    };\n\t\t\t    Ng2TooltipDirective.prototype.showTooltip = function ($event) {\n\t\t\t        this.overlayManager.open(this.overlay, $event);\n\t\t\t        $event.stopPropagation();\n\t\t\t    };\n\t\t\t    Ng2TooltipDirective.prototype.hideTooltip = function ($event) {\n\t\t\t        this.overlayManager.close(this.overlay);\n\t\t\t        $event.stopPropagation();\n\t\t\t    };\n\t\t\t    Ng2TooltipDirective.prototype.getTooltipOverlay = function (el, tooltip) {\n\t\t\t        var tooltipEl = document.createElement('ng2-tooltip');\n\t\t\t        tooltipEl.style.display = 'none';\n\t\t\t        var divEl = document.createElement('div');\n\t\t\t        divEl.innerHTML = \"\\n       <div class='tooltip-contents'>\" + tooltip + \"</div>\\n       <div class='tooltip-down-arrow'></div>\\n    \";\n\t\t\t        tooltipEl.appendChild(divEl);\n\t\t\t        //el.parentElement.insertBefore(tooltipEl, el.nextSibling);\n\t\t\t        el.appendChild(tooltipEl);\n\t\t\t        var overlay = new ng2_overlay_1.Ng2Overlay(tooltipEl, {\n\t\t\t            id: 'tooltip-' + (el.id || Math.floor(Math.random() * 1000000)),\n\t\t\t            position: 'top cursor outside'\n\t\t\t        });\n\t\t\t        this.overlayManager.register(overlay);\n\t\t\t        return overlay;\n\t\t\t    };\n\t\t\t    return Ng2TooltipDirective;\n\t\t\t}());\n\t\t\t__decorate([\n\t\t\t    core_1.Input('ng2-tooltip'),\n\t\t\t    __metadata(\"design:type\", String)\n\t\t\t], Ng2TooltipDirective.prototype, \"tooltip\", void 0);\n\t\t\tNg2TooltipDirective = __decorate([\n\t\t\t    core_1.Directive({\n\t\t\t        selector: '[ng2-tooltip]',\n\t\t\t        host: {\n\t\t\t            '(mouseover)': 'showTooltip($event)',\n\t\t\t            '(mouseout)': 'hideTooltip($event)'\n\t\t\t        }\n\t\t\t    }),\n\t\t\t    __metadata(\"design:paramtypes\", [core_1.ViewContainerRef,\n\t\t\t        ng2_overlay_1.Ng2OverlayManager])\n\t\t\t], Ng2TooltipDirective);\n\t\t\texports.Ng2TooltipDirective = Ng2TooltipDirective;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 2 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\t\t\n\t\t/***/ },\n\t\t/* 3 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t(function webpackUniversalModuleDefinition(root, factory) {\n\t\t\t\tif(true)\n\t\t\t\t\tmodule.exports = factory(__webpack_require__(2), __webpack_require__(4), __webpack_require__(5));\n\t\t\t\telse if(typeof define === 'function' && define.amd)\n\t\t\t\t\tdefine([\"@angular/core\", \"@angular/forms\", \"@angular/common\"], factory);\n\t\t\t\telse if(typeof exports === 'object')\n\t\t\t\t\texports[\"ng2-overlay\"] = factory(require(\"@angular/core\"), require(\"@angular/forms\"), require(\"@angular/common\"));\n\t\t\t\telse\n\t\t\t\t\troot[\"ng2-overlay\"] = factory(root[\"@angular/core\"], root[\"@angular/forms\"], root[\"@angular/common\"]);\n\t\t\t})(this, function(__WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_7__, __WEBPACK_EXTERNAL_MODULE_8__) {\n\t\t\treturn /******/ (function(modules) { // webpackBootstrap\n\t\t\t/******/ \t// The module cache\n\t\t\t/******/ \tvar installedModules = {};\n\t\t\t/******/\n\t\t\t/******/ \t// The require function\n\t\t\t/******/ \tfunction __webpack_require__(moduleId) {\n\t\t\t/******/\n\t\t\t/******/ \t\t// Check if module is in cache\n\t\t\t/******/ \t\tif(installedModules[moduleId])\n\t\t\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\t\t\t/******/\n\t\t\t/******/ \t\t// Create a new module (and put it into the cache)\n\t\t\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t\t\t/******/ \t\t\texports: {},\n\t\t\t/******/ \t\t\tid: moduleId,\n\t\t\t/******/ \t\t\tloaded: false\n\t\t\t/******/ \t\t};\n\t\t\t/******/\n\t\t\t/******/ \t\t// Execute the module function\n\t\t\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t\t\t/******/\n\t\t\t/******/ \t\t// Flag the module as loaded\n\t\t\t/******/ \t\tmodule.loaded = true;\n\t\t\t/******/\n\t\t\t/******/ \t\t// Return the exports of the module\n\t\t\t/******/ \t\treturn module.exports;\n\t\t\t/******/ \t}\n\t\t\t/******/\n\t\t\t/******/\n\t\t\t/******/ \t// expose the modules object (__webpack_modules__)\n\t\t\t/******/ \t__webpack_require__.m = modules;\n\t\t\t/******/\n\t\t\t/******/ \t// expose the module cache\n\t\t\t/******/ \t__webpack_require__.c = installedModules;\n\t\t\t/******/\n\t\t\t/******/ \t// __webpack_public_path__\n\t\t\t/******/ \t__webpack_require__.p = \"\";\n\t\t\t/******/\n\t\t\t/******/ \t// Load entry module and return exports\n\t\t\t/******/ \treturn __webpack_require__(0);\n\t\t\t/******/ })\n\t\t\t/************************************************************************/\n\t\t\t/******/ ([\n\t\t\t/* 0 */\n\t\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\t\n\t\t\t\t\"use strict\";\n\t\t\t\tvar ng2_overlay_1 = __webpack_require__(1);\n\t\t\t\texports.Ng2Overlay = ng2_overlay_1.Ng2Overlay;\n\t\t\t\tvar ng2_overlay_manager_1 = __webpack_require__(3);\n\t\t\t\texports.Ng2OverlayManager = ng2_overlay_manager_1.Ng2OverlayManager;\n\t\t\t\tvar ng2_overlay_directive_1 = __webpack_require__(5);\n\t\t\t\texports.Ng2OverlayDirective = ng2_overlay_directive_1.Ng2OverlayDirective;\n\t\t\t\tvar ng2_overlay_module_1 = __webpack_require__(6);\n\t\t\t\texports.Ng2OverlayModule = ng2_overlay_module_1.Ng2OverlayModule;\n\t\t\t\n\t\t\t\n\t\t\t/***/ },\n\t\t\t/* 1 */\n\t\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\t\n\t\t\t\t\"use strict\";\n\t\t\t\tvar ng2_util_1 = __webpack_require__(2);\n\t\t\t\tvar Ng2Overlay = (function () {\n\t\t\t\t    function Ng2Overlay(el, options) {\n\t\t\t\t        options = options || {};\n\t\t\t\t        this.id = options.id;\n\t\t\t\t        this.type = options.type;\n\t\t\t\t        if (!this.id) {\n\t\t\t\t            throw \"Invalid overlay id\";\n\t\t\t\t        }\n\t\t\t\t        this.element = el; // overlay wrapper element with table dsplay\n\t\t\t\t        this.windowOverlay = options.windowOverlay;\n\t\t\t\t        this.position = this.getPositionProperty(options.position || 'center center');\n\t\t\t\t    }\n\t\t\t\t    Ng2Overlay.prototype.positionIt = function (event) {\n\t\t\t\t        if (this.position.inside) {\n\t\t\t\t            this.positionItInside(this.position);\n\t\t\t\t        }\n\t\t\t\t        else {\n\t\t\t\t            this.positionItOutside(this.position, event);\n\t\t\t\t        }\n\t\t\t\t    };\n\t\t\t\t    Ng2Overlay.prototype.getPositionProperty = function (positionStr) {\n\t\t\t\t        var position = {}, inside;\n\t\t\t\t        var _a = positionStr.split(' '), vertical = _a[0], horizontal = _a[1], insideStr = _a[2];\n\t\t\t\t        horizontal = horizontal || 'center';\n\t\t\t\t        vertical = vertical || 'center';\n\t\t\t\t        inside = (insideStr !== 'outside' || this.windowOverlay);\n\t\t\t\t        position.horizontal = Ng2Overlay[horizontal.toUpperCase()];\n\t\t\t\t        position.vertical = Ng2Overlay[vertical.toUpperCase()];\n\t\t\t\t        position.inside = inside;\n\t\t\t\t        return position;\n\t\t\t\t    };\n\t\t\t\t    Ng2Overlay.prototype.positionItInside = function (position) {\n\t\t\t\t        this.element.style.display = 'flex';\n\t\t\t\t        //top / left positioning\n\t\t\t\t        if (this.windowOverlay) {\n\t\t\t\t            this.element.style.position = 'fixed';\n\t\t\t\t            //works as blocker\n\t\t\t\t            Object.assign(this.element.style, {\n\t\t\t\t                backgroundColor: 'rgba(0,0,0,0.2)',\n\t\t\t\t                top: '0', left: '0', bottom: '0', right: '0',\n\t\t\t\t                width: '100%', height: '100%'\n\t\t\t\t            });\n\t\t\t\t        }\n\t\t\t\t        else {\n\t\t\t\t            //adjust top/left to match to parentElement\n\t\t\t\t            var parentEl = this.element.parentElement;\n\t\t\t\t            //works as a blocker\n\t\t\t\t            Object.assign(this.element.style, {\n\t\t\t\t                position: 'absolute',\n\t\t\t\t                // backgroundColor: 'transparent',\n\t\t\t\t                backgroundColor: 'rgba(0,0,0,0.2)',\n\t\t\t\t                top: parentEl.offsetTop + 'px',\n\t\t\t\t                left: parentEl.offsetLeft + 'px',\n\t\t\t\t                width: parentEl.offsetWidth + 'px',\n\t\t\t\t                height: parentEl.offsetHeight + 'px'\n\t\t\t\t            });\n\t\t\t\t        }\n\t\t\t\t        ;\n\t\t\t\t        //horizontal position\n\t\t\t\t        switch (position.horizontal) {\n\t\t\t\t            case Ng2Overlay.LEFT:\n\t\t\t\t                this.element.style.justifyContent = 'flex-start';\n\t\t\t\t                break;\n\t\t\t\t            case Ng2Overlay.CENTER:\n\t\t\t\t                this.element.style.justifyContent = 'center';\n\t\t\t\t                break;\n\t\t\t\t            case Ng2Overlay.RIGHT:\n\t\t\t\t                this.element.style.justifyContent = 'flex-end';\n\t\t\t\t                break;\n\t\t\t\t        }\n\t\t\t\t        //vertical position\n\t\t\t\t        switch (position.vertical) {\n\t\t\t\t            case Ng2Overlay.LEFT:\n\t\t\t\t                this.element.style.alignItems = 'flex-start';\n\t\t\t\t                break;\n\t\t\t\t            case Ng2Overlay.CENTER:\n\t\t\t\t            case Ng2Overlay.MIDDLE:\n\t\t\t\t                this.element.style.alignItems = 'center';\n\t\t\t\t                break;\n\t\t\t\t            case Ng2Overlay.RIGHT:\n\t\t\t\t                this.element.style.alignItems = 'flex-end';\n\t\t\t\t                break;\n\t\t\t\t        }\n\t\t\t\t    };\n\t\t\t\t    Ng2Overlay.prototype.positionItOutside = function (position, event) {\n\t\t\t\t        //adjust top/left to match to parentElement\n\t\t\t\t        var parentEl = this.element.parentElement;\n\t\t\t\t        //works as guide line?\n\t\t\t\t        Object.assign(this.element.style, {\n\t\t\t\t            position: 'absolute',\n\t\t\t\t            pointerEvents: 'none',\n\t\t\t\t            top: parentEl.offsetTop + 'px',\n\t\t\t\t            left: parentEl.offsetLeft + 'px',\n\t\t\t\t            width: parentEl.offsetWidth + 'px',\n\t\t\t\t            height: parentEl.offsetHeight + 'px'\n\t\t\t\t        });\n\t\t\t\t        this.element.style.display = 'block';\n\t\t\t\t        var elToPosition = (this.element.children[0]);\n\t\t\t\t        elToPosition.style.position = 'absolute';\n\t\t\t\t        elToPosition.style.pointerEvents = 'auto';\n\t\t\t\t        switch (position.vertical) {\n\t\t\t\t            case Ng2Overlay.TOP:\n\t\t\t\t                elToPosition.style.bottom = this.element.offsetHeight + 'px';\n\t\t\t\t                break;\n\t\t\t\t            case Ng2Overlay.BOTTOM:\n\t\t\t\t                elToPosition.style.top = this.element.offsetHeight + 'px';\n\t\t\t\t                break;\n\t\t\t\t            case Ng2Overlay.LEFT:\n\t\t\t\t                elToPosition.style.right = this.element.offsetWidth + 'px';\n\t\t\t\t                break;\n\t\t\t\t            case Ng2Overlay.RIGHT:\n\t\t\t\t                elToPosition.style.left = this.element.offsetWidth + 'px';\n\t\t\t\t                break;\n\t\t\t\t        }\n\t\t\t\t        switch (position.horizontal) {\n\t\t\t\t            case Ng2Overlay.CENTER:\n\t\t\t\t                elToPosition.style.left = (this.element.offsetWidth - elToPosition.offsetWidth) / 2 + 'px';\n\t\t\t\t                break;\n\t\t\t\t            case Ng2Overlay.LEFT:\n\t\t\t\t                elToPosition.style.left = '0';\n\t\t\t\t                break;\n\t\t\t\t            case Ng2Overlay.RIGHT:\n\t\t\t\t                elToPosition.style.right = '0';\n\t\t\t\t                break;\n\t\t\t\t            case Ng2Overlay.TOP:\n\t\t\t\t                elToPosition.style.top = '0';\n\t\t\t\t                break;\n\t\t\t\t            case Ng2Overlay.BOTTOM:\n\t\t\t\t                elToPosition.style.bottom = '0';\n\t\t\t\t                break;\n\t\t\t\t            case Ng2Overlay.CURSOR:\n\t\t\t\t                var mousePos = ng2_util_1.Ng2Util.getMousePositionInElement(event, this.element);\n\t\t\t\t                if ((mousePos.x + elToPosition.offsetWidth) > this.element.offsetWidth) {\n\t\t\t\t                    elToPosition.style.left = (this.element.offsetWidth - elToPosition.offsetWidth - 5) + 'px';\n\t\t\t\t                }\n\t\t\t\t                else if (mousePos.x < elToPosition.offsetWidth / 2) {\n\t\t\t\t                    elToPosition.style.left = '0px';\n\t\t\t\t                }\n\t\t\t\t                else {\n\t\t\t\t                    elToPosition.style.left = mousePos.x - elToPosition.offsetWidth / 2 + 'px';\n\t\t\t\t                }\n\t\t\t\t                break;\n\t\t\t\t        }\n\t\t\t\t    };\n\t\t\t\t    Ng2Overlay.TOP = 11;\n\t\t\t\t    Ng2Overlay.MIDDLE = 12;\n\t\t\t\t    Ng2Overlay.BOTTOM = 13;\n\t\t\t\t    Ng2Overlay.LEFT = 21;\n\t\t\t\t    Ng2Overlay.CENTER = 22;\n\t\t\t\t    Ng2Overlay.RIGHT = 23;\n\t\t\t\t    Ng2Overlay.CURSOR = 31;\n\t\t\t\t    return Ng2Overlay;\n\t\t\t\t}());\n\t\t\t\texports.Ng2Overlay = Ng2Overlay;\n\t\t\t\n\t\t\t\n\t\t\t/***/ },\n\t\t\t/* 2 */\n\t\t\t/***/ function(module, exports) {\n\t\t\t\n\t\t\t\t\"use strict\";\n\t\t\t\tvar Ng2Util = (function () {\n\t\t\t\t    function Ng2Util() {\n\t\t\t\t    }\n\t\t\t\t    Ng2Util.getDocumentPosition = function (oElement) {\n\t\t\t\t        var posX = 0, posY = 0;\n\t\t\t\t        if (oElement.offsetParent) {\n\t\t\t\t            for (; oElement; oElement = oElement.offsetParent) {\n\t\t\t\t                posX += oElement.offsetLeft;\n\t\t\t\t                posY += oElement.offsetTop;\n\t\t\t\t            }\n\t\t\t\t            return { x: posX, y: posY };\n\t\t\t\t        }\n\t\t\t\t        else {\n\t\t\t\t            return { x: oElement['x'], y: oElement['y'] };\n\t\t\t\t        }\n\t\t\t\t    };\n\t\t\t\t    Ng2Util.getMousePositionInElement = function (evt, element) {\n\t\t\t\t        evt = evt || window.event;\n\t\t\t\t        var posX = 0, posY = 0;\n\t\t\t\t        var elPos = this.getDocumentPosition(element);\n\t\t\t\t        if (evt.pageX || evt.pageY) {\n\t\t\t\t            posX = evt.pageX;\n\t\t\t\t            posY = evt.pageY;\n\t\t\t\t        }\n\t\t\t\t        else if (evt.clientX || evt.clientY) {\n\t\t\t\t            posX = evt.clientX +\n\t\t\t\t                document.body.scrollLeft +\n\t\t\t\t                document.documentElement.scrollLeft;\n\t\t\t\t            posY = evt.clientY +\n\t\t\t\t                document.body.scrollTop +\n\t\t\t\t                document.documentElement.scrollTop;\n\t\t\t\t        }\n\t\t\t\t        return {\n\t\t\t\t            x: posX - elPos.x,\n\t\t\t\t            y: posY - elPos.y\n\t\t\t\t        };\n\t\t\t\t    };\n\t\t\t\t    return Ng2Util;\n\t\t\t\t}());\n\t\t\t\texports.Ng2Util = Ng2Util;\n\t\t\t\n\t\t\t\n\t\t\t/***/ },\n\t\t\t/* 3 */\n\t\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\t\n\t\t\t\t\"use strict\";\n\t\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t\t};\n\t\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t\t};\n\t\t\t\tvar core_1 = __webpack_require__(4);\n\t\t\t\tvar Ng2OverlayManager = (function () {\n\t\t\t\t    function Ng2OverlayManager() {\n\t\t\t\t    }\n\t\t\t\t    Ng2OverlayManager.prototype.register = function (overlay) {\n\t\t\t\t        Ng2OverlayManager.overlays[overlay.id] = overlay;\n\t\t\t\t        // console.log('overlay.register, OverlayManager.overlays', OverlayManager.overlays);\n\t\t\t\t    };\n\t\t\t\t    Ng2OverlayManager.prototype.open = function (arg, event) {\n\t\t\t\t        var overlay = typeof arg === 'string' ? Ng2OverlayManager.overlays[arg] : arg;\n\t\t\t\t        if (!overlay.opened) {\n\t\t\t\t            overlay.positionIt(event);\n\t\t\t\t            overlay.opened = true;\n\t\t\t\t        }\n\t\t\t\t    };\n\t\t\t\t    Ng2OverlayManager.prototype.close = function (arg) {\n\t\t\t\t        var overlay = typeof arg === 'string' ? Ng2OverlayManager.overlays[arg] : arg;\n\t\t\t\t        overlay.element.style.display = 'none';\n\t\t\t\t        overlay.opened = false;\n\t\t\t\t    };\n\t\t\t\t    //list of overlay objects\n\t\t\t\t    Ng2OverlayManager.overlays = {};\n\t\t\t\t    Ng2OverlayManager = __decorate([\n\t\t\t\t        core_1.Injectable(), \n\t\t\t\t        __metadata('design:paramtypes', [])\n\t\t\t\t    ], Ng2OverlayManager);\n\t\t\t\t    return Ng2OverlayManager;\n\t\t\t\t}());\n\t\t\t\texports.Ng2OverlayManager = Ng2OverlayManager;\n\t\t\t\n\t\t\t\n\t\t\t/***/ },\n\t\t\t/* 4 */\n\t\t\t/***/ function(module, exports) {\n\t\t\t\n\t\t\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\t\t\t\n\t\t\t/***/ },\n\t\t\t/* 5 */\n\t\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\t\n\t\t\t\t\"use strict\";\n\t\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t\t};\n\t\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t\t};\n\t\t\t\tvar core_1 = __webpack_require__(4);\n\t\t\t\tvar ng2_overlay_manager_1 = __webpack_require__(3);\n\t\t\t\tvar ng2_overlay_1 = __webpack_require__(1);\n\t\t\t\tvar Ng2OverlayDirective = (function () {\n\t\t\t\t    function Ng2OverlayDirective(viewContainerRef, overlayManager) {\n\t\t\t\t        this.viewContainerRef = viewContainerRef;\n\t\t\t\t        this.overlayManager = overlayManager;\n\t\t\t\t        this.el = this.viewContainerRef.element.nativeElement;\n\t\t\t\t    }\n\t\t\t\t    Ng2OverlayDirective.prototype.ngAfterViewInit = function () {\n\t\t\t\t        this.wrapItWithOverlayTag();\n\t\t\t\t        this.registerToOverlayManager();\n\t\t\t\t    };\n\t\t\t\t    Ng2OverlayDirective.prototype.wrapItWithOverlayTag = function () {\n\t\t\t\t        //console.log('wrapped overlay directive element with <ng2-overlay>');\n\t\t\t\t        this.overlayEl = document.createElement('ng2-overlay');\n\t\t\t\t        this.overlayEl.style.display = 'none';\n\t\t\t\t        this.el.parentElement.insertBefore(this.overlayEl, this.el.nextSibling);\n\t\t\t\t        this.overlayEl.appendChild(this.el);\n\t\t\t\t    };\n\t\t\t\t    //create Overlay object,  then register this element to overlayManager\n\t\t\t\t    Ng2OverlayDirective.prototype.registerToOverlayManager = function () {\n\t\t\t\t        var positionStr = this.overlayPosition;\n\t\t\t\t        var overlay = new ng2_overlay_1.Ng2Overlay(this.overlayEl, {\n\t\t\t\t            id: this.el.id,\n\t\t\t\t            windowOverlay: this.overlayOf == \"window\",\n\t\t\t\t            position: positionStr\n\t\t\t\t        });\n\t\t\t\t        //console.log('registering overlay', overlay);\n\t\t\t\t        this.overlayManager.register(overlay);\n\t\t\t\t    };\n\t\t\t\t    __decorate([\n\t\t\t\t        core_1.Input('ng2-overlay-of'), \n\t\t\t\t        __metadata('design:type', String)\n\t\t\t\t    ], Ng2OverlayDirective.prototype, \"overlayOf\", void 0);\n\t\t\t\t    __decorate([\n\t\t\t\t        core_1.Input('ng2-overlay-position'), \n\t\t\t\t        __metadata('design:type', String)\n\t\t\t\t    ], Ng2OverlayDirective.prototype, \"overlayPosition\", void 0);\n\t\t\t\t    Ng2OverlayDirective = __decorate([\n\t\t\t\t        core_1.Directive({\n\t\t\t\t            selector: '[ng2-overlay], [ng2-overlay-of], [ng2-overlay-position]',\n\t\t\t\t        }), \n\t\t\t\t        __metadata('design:paramtypes', [core_1.ViewContainerRef, ng2_overlay_manager_1.Ng2OverlayManager])\n\t\t\t\t    ], Ng2OverlayDirective);\n\t\t\t\t    return Ng2OverlayDirective;\n\t\t\t\t}());\n\t\t\t\texports.Ng2OverlayDirective = Ng2OverlayDirective;\n\t\t\t\n\t\t\t\n\t\t\t/***/ },\n\t\t\t/* 6 */\n\t\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\t\n\t\t\t\t\"use strict\";\n\t\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t\t};\n\t\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t\t};\n\t\t\t\tvar core_1 = __webpack_require__(4);\n\t\t\t\tvar forms_1 = __webpack_require__(7);\n\t\t\t\tvar common_1 = __webpack_require__(8);\n\t\t\t\tvar ng2_overlay_manager_1 = __webpack_require__(3);\n\t\t\t\tvar ng2_overlay_directive_1 = __webpack_require__(5);\n\t\t\t\tvar Ng2OverlayModule = (function () {\n\t\t\t\t    function Ng2OverlayModule() {\n\t\t\t\t    }\n\t\t\t\t    Ng2OverlayModule = __decorate([\n\t\t\t\t        core_1.NgModule({\n\t\t\t\t            imports: [common_1.CommonModule, forms_1.FormsModule],\n\t\t\t\t            declarations: [ng2_overlay_directive_1.Ng2OverlayDirective],\n\t\t\t\t            providers: [ng2_overlay_manager_1.Ng2OverlayManager],\n\t\t\t\t            exports: [ng2_overlay_directive_1.Ng2OverlayDirective]\n\t\t\t\t        }), \n\t\t\t\t        __metadata('design:paramtypes', [])\n\t\t\t\t    ], Ng2OverlayModule);\n\t\t\t\t    return Ng2OverlayModule;\n\t\t\t\t}());\n\t\t\t\texports.Ng2OverlayModule = Ng2OverlayModule;\n\t\t\t\t;\n\t\t\t\n\t\t\t\n\t\t\t/***/ },\n\t\t\t/* 7 */\n\t\t\t/***/ function(module, exports) {\n\t\t\t\n\t\t\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_7__;\n\t\t\t\n\t\t\t/***/ },\n\t\t\t/* 8 */\n\t\t\t/***/ function(module, exports) {\n\t\t\t\n\t\t\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_8__;\n\t\t\t\n\t\t\t/***/ }\n\t\t\t/******/ ])\n\t\t\t});\n\t\t\t;\n\t\t\t//# sourceMappingURL=ng2-overlay.umd.js.map\n\t\t\n\t\t/***/ },\n\t\t/* 4 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\t\t\n\t\t/***/ },\n\t\t/* 5 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\t\t\n\t\t/***/ },\n\t\t/* 6 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t};\n\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t};\n\t\t\tvar core_1 = __webpack_require__(2);\n\t\t\tvar forms_1 = __webpack_require__(4);\n\t\t\tvar common_1 = __webpack_require__(5);\n\t\t\tvar ng2_overlay_1 = __webpack_require__(3);\n\t\t\tvar ng2_tooltip_directive_1 = __webpack_require__(1);\n\t\t\tvar Ng2TooltipOverlayModule = (function () {\n\t\t\t    function Ng2TooltipOverlayModule() {\n\t\t\t    }\n\t\t\t    return Ng2TooltipOverlayModule;\n\t\t\t}());\n\t\t\tNg2TooltipOverlayModule = __decorate([\n\t\t\t    core_1.NgModule({\n\t\t\t        imports: [common_1.CommonModule, forms_1.FormsModule, ng2_overlay_1.Ng2OverlayModule],\n\t\t\t        declarations: [ng2_tooltip_directive_1.Ng2TooltipDirective],\n\t\t\t        exports: [ng2_tooltip_directive_1.Ng2TooltipDirective]\n\t\t\t    }),\n\t\t\t    __metadata(\"design:paramtypes\", [])\n\t\t\t], Ng2TooltipOverlayModule);\n\t\t\texports.Ng2TooltipOverlayModule = Ng2TooltipOverlayModule;\n\t\t\n\t\t\n\t\t/***/ }\n\t\t/******/ ])\n\t\t});\n\t\t;\n\t\t//# sourceMappingURL=ng2-tooltip-overlay.umd.js.map\n\t\n\t/***/ },\n\t/* 19 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t(function webpackUniversalModuleDefinition(root, factory) {\n\t\t\tif(true)\n\t\t\t\tmodule.exports = factory(__webpack_require__(2), __webpack_require__(3), __webpack_require__(8));\n\t\t\telse if(typeof define === 'function' && define.amd)\n\t\t\t\tdefine([\"@angular/core\", \"@angular/forms\", \"@angular/common\"], factory);\n\t\t\telse if(typeof exports === 'object')\n\t\t\t\texports[\"ng2-ui-sortable\"] = factory(require(\"@angular/core\"), require(\"@angular/forms\"), require(\"@angular/common\"));\n\t\t\telse\n\t\t\t\troot[\"ng2-ui-sortable\"] = factory(root[\"@angular/core\"], root[\"@angular/forms\"], root[\"@angular/common\"]);\n\t\t})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__) {\n\t\treturn /******/ (function(modules) { // webpackBootstrap\n\t\t/******/ \t// The module cache\n\t\t/******/ \tvar installedModules = {};\n\t\t/******/\n\t\t/******/ \t// The require function\n\t\t/******/ \tfunction __webpack_require__(moduleId) {\n\t\t/******/\n\t\t/******/ \t\t// Check if module is in cache\n\t\t/******/ \t\tif(installedModules[moduleId])\n\t\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\t\t/******/\n\t\t/******/ \t\t// Create a new module (and put it into the cache)\n\t\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t\t/******/ \t\t\texports: {},\n\t\t/******/ \t\t\tid: moduleId,\n\t\t/******/ \t\t\tloaded: false\n\t\t/******/ \t\t};\n\t\t/******/\n\t\t/******/ \t\t// Execute the module function\n\t\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t\t/******/\n\t\t/******/ \t\t// Flag the module as loaded\n\t\t/******/ \t\tmodule.loaded = true;\n\t\t/******/\n\t\t/******/ \t\t// Return the exports of the module\n\t\t/******/ \t\treturn module.exports;\n\t\t/******/ \t}\n\t\t/******/\n\t\t/******/\n\t\t/******/ \t// expose the modules object (__webpack_modules__)\n\t\t/******/ \t__webpack_require__.m = modules;\n\t\t/******/\n\t\t/******/ \t// expose the module cache\n\t\t/******/ \t__webpack_require__.c = installedModules;\n\t\t/******/\n\t\t/******/ \t// __webpack_public_path__\n\t\t/******/ \t__webpack_require__.p = \"\";\n\t\t/******/\n\t\t/******/ \t// Load entry module and return exports\n\t\t/******/ \treturn __webpack_require__(0);\n\t\t/******/ })\n\t\t/************************************************************************/\n\t\t/******/ ([\n\t\t/* 0 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar ng2_sortable_directive_1 = __webpack_require__(1);\n\t\t\texports.Ng2SortableDirective = ng2_sortable_directive_1.Ng2SortableDirective;\n\t\t\tvar ng2_sortable_module_1 = __webpack_require__(3);\n\t\t\texports.Ng2SortableModule = ng2_sortable_module_1.Ng2SortableModule;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 1 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t};\n\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t};\n\t\t\tvar core_1 = __webpack_require__(2);\n\t\t\tvar Ng2SortableDirective = (function () {\n\t\t\t    function Ng2SortableDirective(viewContainerRef) {\n\t\t\t        var _this = this;\n\t\t\t        this.viewContainerRef = viewContainerRef;\n\t\t\t        this.orderChanged = new core_1.EventEmitter();\n\t\t\t        this.dragStartHandler = function (event) {\n\t\t\t            //console.log('dragStartHandler');\n\t\t\t            _this.draggingEl = event.target;\n\t\t\t            //noinspection TypeScriptUnresolvedFunction\n\t\t\t            Object.assign(_this.draggingEl.style, {\n\t\t\t                zIndex: 3,\n\t\t\t                pointerEvents: 'none'\n\t\t\t            });\n\t\t\t        };\n\t\t\t        this.dragHandler = function (event) {\n\t\t\t            //console.log('dragHandler');\n\t\t\t            //noinspection TypeScriptUnresolvedFunction\n\t\t\t            Object.assign(_this.draggingEl.style, {\n\t\t\t                transform: 'translate(0px,' + event.deltaY + 'px)'\n\t\t\t            });\n\t\t\t            var newElDragEnter = document.elementFromPoint(event.center.x, event.center.y);\n\t\t\t            if (_this.elDragEnter !== newElDragEnter) {\n\t\t\t                if (_this.elDragEnter) {\n\t\t\t                    _this.elDragEnter.className = _this.elDragEnter.className.replace(/\\ drag-enter/g, '');\n\t\t\t                }\n\t\t\t                _this.elDragEnter = newElDragEnter;\n\t\t\t                if (newElDragEnter.tagName === 'LI') {\n\t\t\t                    newElDragEnter.className += ' drag-enter';\n\t\t\t                }\n\t\t\t            }\n\t\t\t        };\n\t\t\t        this.dragEndHandler = function (event) {\n\t\t\t            //console.log('dragEndHandler');\n\t\t\t            //noinspection TypeScriptUnresolvedFunction\n\t\t\t            Object.assign(_this.draggingEl.style, {\n\t\t\t                transform: 'translate(0,0)',\n\t\t\t                zIndex: 1,\n\t\t\t                pointerEvents: 'inherit'\n\t\t\t            });\n\t\t\t            // remove class and drop the element\n\t\t\t            if (_this.elDragEnter) {\n\t\t\t                _this.elDragEnter.className = _this.elDragEnter.className.replace(/\\ drag-enter/g, '');\n\t\t\t                _this.elDragEnter.parentNode.insertBefore(_this.draggingEl, _this.elDragEnter);\n\t\t\t                _this.emitOrderChanged();\n\t\t\t            }\n\t\t\t        };\n\t\t\t        this.ulEl = this.viewContainerRef.element.nativeElement;\n\t\t\t    }\n\t\t\t    Ng2SortableDirective.prototype.ngAfterViewInit = function () {\n\t\t\t        this.liEls = this.ulEl.querySelectorAll('li');\n\t\t\t        for (var i = 0; i < this.liEls.length; i++) {\n\t\t\t            var liEl = this.liEls[i];\n\t\t\t            // create a simple instance by default, it only adds horizontal recognizers\n\t\t\t            var mc = new Hammer(liEl);\n\t\t\t            // let the pan gesture support all directions.\n\t\t\t            // this will block the vertical scrolling on a touch-device while on the element\n\t\t\t            mc.get('pan').set({ direction: Hammer.DIRECTION_ALL });\n\t\t\t            mc.on('panstart', this.dragStartHandler);\n\t\t\t            mc.on('panup pandown', this.dragHandler);\n\t\t\t            mc.on('panend', this.dragEndHandler);\n\t\t\t            this.emitOrderChanged();\n\t\t\t        }\n\t\t\t    };\n\t\t\t    Ng2SortableDirective.prototype.emitOrderChanged = function () {\n\t\t\t        var liEls = this.ulEl.querySelectorAll('li');\n\t\t\t        var orders = Array.prototype.slice.call(liEls).map(function (el) { return el.id; });\n\t\t\t        this.orderChanged.emit(orders);\n\t\t\t    };\n\t\t\t    return Ng2SortableDirective;\n\t\t\t}());\n\t\t\t__decorate([\n\t\t\t    core_1.Output(),\n\t\t\t    __metadata(\"design:type\", Object)\n\t\t\t], Ng2SortableDirective.prototype, \"orderChanged\", void 0);\n\t\t\tNg2SortableDirective = __decorate([\n\t\t\t    core_1.Directive({\n\t\t\t        selector: '[ng2-sortable]'\n\t\t\t    }),\n\t\t\t    __metadata(\"design:paramtypes\", [core_1.ViewContainerRef])\n\t\t\t], Ng2SortableDirective);\n\t\t\texports.Ng2SortableDirective = Ng2SortableDirective;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 2 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\t\t\n\t\t/***/ },\n\t\t/* 3 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t};\n\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t};\n\t\t\tvar core_1 = __webpack_require__(2);\n\t\t\tvar forms_1 = __webpack_require__(4);\n\t\t\tvar common_1 = __webpack_require__(5);\n\t\t\tvar ng2_sortable_directive_1 = __webpack_require__(1);\n\t\t\tvar Ng2SortableModule = (function () {\n\t\t\t    function Ng2SortableModule() {\n\t\t\t    }\n\t\t\t    return Ng2SortableModule;\n\t\t\t}());\n\t\t\tNg2SortableModule = __decorate([\n\t\t\t    core_1.NgModule({\n\t\t\t        imports: [common_1.CommonModule, forms_1.FormsModule],\n\t\t\t        declarations: [ng2_sortable_directive_1.Ng2SortableDirective],\n\t\t\t        exports: [ng2_sortable_directive_1.Ng2SortableDirective]\n\t\t\t    }),\n\t\t\t    __metadata(\"design:paramtypes\", [])\n\t\t\t], Ng2SortableModule);\n\t\t\texports.Ng2SortableModule = Ng2SortableModule;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 4 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\t\t\n\t\t/***/ },\n\t\t/* 5 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\t\t\n\t\t/***/ }\n\t\t/******/ ])\n\t\t});\n\t\t;\n\t\t//# sourceMappingURL=ng2-ui-sortable.umd.js.map\n\t\n\t/***/ },\n\t/* 20 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t(function webpackUniversalModuleDefinition(root, factory) {\n\t\t\tif(true)\n\t\t\t\tmodule.exports = factory(__webpack_require__(2), __webpack_require__(3), __webpack_require__(8));\n\t\t\telse if(typeof define === 'function' && define.amd)\n\t\t\t\tdefine([\"@angular/core\", \"@angular/forms\", \"@angular/common\"], factory);\n\t\t\telse if(typeof exports === 'object')\n\t\t\t\texports[\"ng2-overlay\"] = factory(require(\"@angular/core\"), require(\"@angular/forms\"), require(\"@angular/common\"));\n\t\t\telse\n\t\t\t\troot[\"ng2-overlay\"] = factory(root[\"@angular/core\"], root[\"@angular/forms\"], root[\"@angular/common\"]);\n\t\t})(this, function(__WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_7__, __WEBPACK_EXTERNAL_MODULE_8__) {\n\t\treturn /******/ (function(modules) { // webpackBootstrap\n\t\t/******/ \t// The module cache\n\t\t/******/ \tvar installedModules = {};\n\t\t/******/\n\t\t/******/ \t// The require function\n\t\t/******/ \tfunction __webpack_require__(moduleId) {\n\t\t/******/\n\t\t/******/ \t\t// Check if module is in cache\n\t\t/******/ \t\tif(installedModules[moduleId])\n\t\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\t\t/******/\n\t\t/******/ \t\t// Create a new module (and put it into the cache)\n\t\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t\t/******/ \t\t\texports: {},\n\t\t/******/ \t\t\tid: moduleId,\n\t\t/******/ \t\t\tloaded: false\n\t\t/******/ \t\t};\n\t\t/******/\n\t\t/******/ \t\t// Execute the module function\n\t\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t\t/******/\n\t\t/******/ \t\t// Flag the module as loaded\n\t\t/******/ \t\tmodule.loaded = true;\n\t\t/******/\n\t\t/******/ \t\t// Return the exports of the module\n\t\t/******/ \t\treturn module.exports;\n\t\t/******/ \t}\n\t\t/******/\n\t\t/******/\n\t\t/******/ \t// expose the modules object (__webpack_modules__)\n\t\t/******/ \t__webpack_require__.m = modules;\n\t\t/******/\n\t\t/******/ \t// expose the module cache\n\t\t/******/ \t__webpack_require__.c = installedModules;\n\t\t/******/\n\t\t/******/ \t// __webpack_public_path__\n\t\t/******/ \t__webpack_require__.p = \"\";\n\t\t/******/\n\t\t/******/ \t// Load entry module and return exports\n\t\t/******/ \treturn __webpack_require__(0);\n\t\t/******/ })\n\t\t/************************************************************************/\n\t\t/******/ ([\n\t\t/* 0 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar ng2_overlay_1 = __webpack_require__(1);\n\t\t\texports.Ng2Overlay = ng2_overlay_1.Ng2Overlay;\n\t\t\tvar ng2_overlay_manager_1 = __webpack_require__(3);\n\t\t\texports.Ng2OverlayManager = ng2_overlay_manager_1.Ng2OverlayManager;\n\t\t\tvar ng2_overlay_directive_1 = __webpack_require__(5);\n\t\t\texports.Ng2OverlayDirective = ng2_overlay_directive_1.Ng2OverlayDirective;\n\t\t\tvar ng2_overlay_module_1 = __webpack_require__(6);\n\t\t\texports.Ng2OverlayModule = ng2_overlay_module_1.Ng2OverlayModule;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 1 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar ng2_util_1 = __webpack_require__(2);\n\t\t\tvar Ng2Overlay = (function () {\n\t\t\t    function Ng2Overlay(el, options) {\n\t\t\t        options = options || {};\n\t\t\t        this.id = options.id;\n\t\t\t        this.type = options.type;\n\t\t\t        if (!this.id) {\n\t\t\t            throw \"Invalid overlay id\";\n\t\t\t        }\n\t\t\t        this.element = el; // overlay wrapper element with table dsplay\n\t\t\t        this.windowOverlay = options.windowOverlay;\n\t\t\t        this.position = this.getPositionProperty(options.position || 'center center');\n\t\t\t    }\n\t\t\t    Ng2Overlay.prototype.positionIt = function (event) {\n\t\t\t        if (this.position.inside) {\n\t\t\t            this.positionItInside(this.position);\n\t\t\t        }\n\t\t\t        else {\n\t\t\t            this.positionItOutside(this.position, event);\n\t\t\t        }\n\t\t\t    };\n\t\t\t    Ng2Overlay.prototype.getPositionProperty = function (positionStr) {\n\t\t\t        var position = {}, inside;\n\t\t\t        var _a = positionStr.split(' '), vertical = _a[0], horizontal = _a[1], insideStr = _a[2];\n\t\t\t        horizontal = horizontal || 'center';\n\t\t\t        vertical = vertical || 'center';\n\t\t\t        inside = (insideStr !== 'outside' || this.windowOverlay);\n\t\t\t        position.horizontal = Ng2Overlay[horizontal.toUpperCase()];\n\t\t\t        position.vertical = Ng2Overlay[vertical.toUpperCase()];\n\t\t\t        position.inside = inside;\n\t\t\t        return position;\n\t\t\t    };\n\t\t\t    Ng2Overlay.prototype.positionItInside = function (position) {\n\t\t\t        this.element.style.display = 'flex';\n\t\t\t        //top / left positioning\n\t\t\t        if (this.windowOverlay) {\n\t\t\t            this.element.style.position = 'fixed';\n\t\t\t            //works as blocker\n\t\t\t            Object.assign(this.element.style, {\n\t\t\t                backgroundColor: 'rgba(0,0,0,0.2)',\n\t\t\t                top: '0', left: '0', bottom: '0', right: '0',\n\t\t\t                width: '100%', height: '100%'\n\t\t\t            });\n\t\t\t        }\n\t\t\t        else {\n\t\t\t            //adjust top/left to match to parentElement\n\t\t\t            var parentEl = this.element.parentElement;\n\t\t\t            //works as a blocker\n\t\t\t            Object.assign(this.element.style, {\n\t\t\t                position: 'absolute',\n\t\t\t                // backgroundColor: 'transparent',\n\t\t\t                backgroundColor: 'rgba(0,0,0,0.2)',\n\t\t\t                top: parentEl.offsetTop + 'px',\n\t\t\t                left: parentEl.offsetLeft + 'px',\n\t\t\t                width: parentEl.offsetWidth + 'px',\n\t\t\t                height: parentEl.offsetHeight + 'px'\n\t\t\t            });\n\t\t\t        }\n\t\t\t        ;\n\t\t\t        //horizontal position\n\t\t\t        switch (position.horizontal) {\n\t\t\t            case Ng2Overlay.LEFT:\n\t\t\t                this.element.style.justifyContent = 'flex-start';\n\t\t\t                break;\n\t\t\t            case Ng2Overlay.CENTER:\n\t\t\t                this.element.style.justifyContent = 'center';\n\t\t\t                break;\n\t\t\t            case Ng2Overlay.RIGHT:\n\t\t\t                this.element.style.justifyContent = 'flex-end';\n\t\t\t                break;\n\t\t\t        }\n\t\t\t        //vertical position\n\t\t\t        switch (position.vertical) {\n\t\t\t            case Ng2Overlay.LEFT:\n\t\t\t                this.element.style.alignItems = 'flex-start';\n\t\t\t                break;\n\t\t\t            case Ng2Overlay.CENTER:\n\t\t\t            case Ng2Overlay.MIDDLE:\n\t\t\t                this.element.style.alignItems = 'center';\n\t\t\t                break;\n\t\t\t            case Ng2Overlay.RIGHT:\n\t\t\t                this.element.style.alignItems = 'flex-end';\n\t\t\t                break;\n\t\t\t        }\n\t\t\t    };\n\t\t\t    Ng2Overlay.prototype.positionItOutside = function (position, event) {\n\t\t\t        //adjust top/left to match to parentElement\n\t\t\t        var parentEl = this.element.parentElement;\n\t\t\t        //works as guide line?\n\t\t\t        Object.assign(this.element.style, {\n\t\t\t            position: 'absolute',\n\t\t\t            pointerEvents: 'none',\n\t\t\t            top: parentEl.offsetTop + 'px',\n\t\t\t            left: parentEl.offsetLeft + 'px',\n\t\t\t            width: parentEl.offsetWidth + 'px',\n\t\t\t            height: parentEl.offsetHeight + 'px'\n\t\t\t        });\n\t\t\t        this.element.style.display = 'block';\n\t\t\t        var elToPosition = (this.element.children[0]);\n\t\t\t        elToPosition.style.position = 'absolute';\n\t\t\t        elToPosition.style.pointerEvents = 'auto';\n\t\t\t        switch (position.vertical) {\n\t\t\t            case Ng2Overlay.TOP:\n\t\t\t                elToPosition.style.bottom = this.element.offsetHeight + 'px';\n\t\t\t                break;\n\t\t\t            case Ng2Overlay.BOTTOM:\n\t\t\t                elToPosition.style.top = this.element.offsetHeight + 'px';\n\t\t\t                break;\n\t\t\t            case Ng2Overlay.LEFT:\n\t\t\t                elToPosition.style.right = this.element.offsetWidth + 'px';\n\t\t\t                break;\n\t\t\t            case Ng2Overlay.RIGHT:\n\t\t\t                elToPosition.style.left = this.element.offsetWidth + 'px';\n\t\t\t                break;\n\t\t\t        }\n\t\t\t        switch (position.horizontal) {\n\t\t\t            case Ng2Overlay.CENTER:\n\t\t\t                elToPosition.style.left = (this.element.offsetWidth - elToPosition.offsetWidth) / 2 + 'px';\n\t\t\t                break;\n\t\t\t            case Ng2Overlay.LEFT:\n\t\t\t                elToPosition.style.left = '0';\n\t\t\t                break;\n\t\t\t            case Ng2Overlay.RIGHT:\n\t\t\t                elToPosition.style.right = '0';\n\t\t\t                break;\n\t\t\t            case Ng2Overlay.TOP:\n\t\t\t                elToPosition.style.top = '0';\n\t\t\t                break;\n\t\t\t            case Ng2Overlay.BOTTOM:\n\t\t\t                elToPosition.style.bottom = '0';\n\t\t\t                break;\n\t\t\t            case Ng2Overlay.CURSOR:\n\t\t\t                var mousePos = ng2_util_1.Ng2Util.getMousePositionInElement(event, this.element);\n\t\t\t                if ((mousePos.x + elToPosition.offsetWidth) > this.element.offsetWidth) {\n\t\t\t                    elToPosition.style.left = (this.element.offsetWidth - elToPosition.offsetWidth - 5) + 'px';\n\t\t\t                }\n\t\t\t                else if (mousePos.x < elToPosition.offsetWidth / 2) {\n\t\t\t                    elToPosition.style.left = '0px';\n\t\t\t                }\n\t\t\t                else {\n\t\t\t                    elToPosition.style.left = mousePos.x - elToPosition.offsetWidth / 2 + 'px';\n\t\t\t                }\n\t\t\t                break;\n\t\t\t        }\n\t\t\t    };\n\t\t\t    return Ng2Overlay;\n\t\t\t}());\n\t\t\tNg2Overlay.TOP = 11;\n\t\t\tNg2Overlay.MIDDLE = 12;\n\t\t\tNg2Overlay.BOTTOM = 13;\n\t\t\tNg2Overlay.LEFT = 21;\n\t\t\tNg2Overlay.CENTER = 22;\n\t\t\tNg2Overlay.RIGHT = 23;\n\t\t\tNg2Overlay.CURSOR = 31;\n\t\t\texports.Ng2Overlay = Ng2Overlay;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 2 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar Ng2Util = (function () {\n\t\t\t    function Ng2Util() {\n\t\t\t    }\n\t\t\t    Ng2Util.getDocumentPosition = function (oElement) {\n\t\t\t        var posX = 0, posY = 0;\n\t\t\t        if (oElement.offsetParent) {\n\t\t\t            for (; oElement; oElement = oElement.offsetParent) {\n\t\t\t                posX += oElement.offsetLeft;\n\t\t\t                posY += oElement.offsetTop;\n\t\t\t            }\n\t\t\t            return { x: posX, y: posY };\n\t\t\t        }\n\t\t\t        else {\n\t\t\t            return { x: oElement['x'], y: oElement['y'] };\n\t\t\t        }\n\t\t\t    };\n\t\t\t    Ng2Util.getMousePositionInElement = function (evt, element) {\n\t\t\t        evt = evt || window.event;\n\t\t\t        var posX = 0, posY = 0;\n\t\t\t        var elPos = this.getDocumentPosition(element);\n\t\t\t        if (evt.pageX || evt.pageY) {\n\t\t\t            posX = evt.pageX;\n\t\t\t            posY = evt.pageY;\n\t\t\t        }\n\t\t\t        else if (evt.clientX || evt.clientY) {\n\t\t\t            posX = evt.clientX +\n\t\t\t                document.body.scrollLeft +\n\t\t\t                document.documentElement.scrollLeft;\n\t\t\t            posY = evt.clientY +\n\t\t\t                document.body.scrollTop +\n\t\t\t                document.documentElement.scrollTop;\n\t\t\t        }\n\t\t\t        return {\n\t\t\t            x: posX - elPos.x,\n\t\t\t            y: posY - elPos.y\n\t\t\t        };\n\t\t\t    };\n\t\t\t    return Ng2Util;\n\t\t\t}());\n\t\t\texports.Ng2Util = Ng2Util;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 3 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t};\n\t\t\tvar core_1 = __webpack_require__(4);\n\t\t\tvar Ng2OverlayManager = Ng2OverlayManager_1 = (function () {\n\t\t\t    function Ng2OverlayManager() {\n\t\t\t    }\n\t\t\t    Ng2OverlayManager.prototype.register = function (overlay) {\n\t\t\t        Ng2OverlayManager_1.overlays[overlay.id] = overlay;\n\t\t\t        // console.log('overlay.register, OverlayManager.overlays', OverlayManager.overlays);\n\t\t\t    };\n\t\t\t    Ng2OverlayManager.prototype.open = function (arg, event) {\n\t\t\t        var overlay = typeof arg === 'string' ? Ng2OverlayManager_1.overlays[arg] : arg;\n\t\t\t        if (!overlay.opened) {\n\t\t\t            overlay.positionIt(event);\n\t\t\t            overlay.opened = true;\n\t\t\t        }\n\t\t\t    };\n\t\t\t    Ng2OverlayManager.prototype.close = function (arg) {\n\t\t\t        var overlay = typeof arg === 'string' ? Ng2OverlayManager_1.overlays[arg] : arg;\n\t\t\t        overlay.element.style.display = 'none';\n\t\t\t        overlay.opened = false;\n\t\t\t    };\n\t\t\t    return Ng2OverlayManager;\n\t\t\t}());\n\t\t\t//list of overlay objects\n\t\t\tNg2OverlayManager.overlays = {};\n\t\t\tNg2OverlayManager = Ng2OverlayManager_1 = __decorate([\n\t\t\t    core_1.Injectable()\n\t\t\t], Ng2OverlayManager);\n\t\t\texports.Ng2OverlayManager = Ng2OverlayManager;\n\t\t\tvar Ng2OverlayManager_1;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 4 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\t\t\n\t\t/***/ },\n\t\t/* 5 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t};\n\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t};\n\t\t\tvar core_1 = __webpack_require__(4);\n\t\t\tvar ng2_overlay_manager_1 = __webpack_require__(3);\n\t\t\tvar ng2_overlay_1 = __webpack_require__(1);\n\t\t\tvar Ng2OverlayDirective = (function () {\n\t\t\t    function Ng2OverlayDirective(viewContainerRef, overlayManager) {\n\t\t\t        this.viewContainerRef = viewContainerRef;\n\t\t\t        this.overlayManager = overlayManager;\n\t\t\t        this.el = this.viewContainerRef.element.nativeElement;\n\t\t\t    }\n\t\t\t    Ng2OverlayDirective.prototype.ngAfterViewInit = function () {\n\t\t\t        this.wrapItWithOverlayTag();\n\t\t\t        this.registerToOverlayManager();\n\t\t\t    };\n\t\t\t    Ng2OverlayDirective.prototype.wrapItWithOverlayTag = function () {\n\t\t\t        //console.log('wrapped overlay directive element with <ng2-overlay>');\n\t\t\t        this.overlayEl = document.createElement('ng2-overlay');\n\t\t\t        this.overlayEl.style.display = 'none';\n\t\t\t        this.el.parentElement.insertBefore(this.overlayEl, this.el.nextSibling);\n\t\t\t        this.overlayEl.appendChild(this.el);\n\t\t\t    };\n\t\t\t    //create Overlay object,  then register this element to overlayManager\n\t\t\t    Ng2OverlayDirective.prototype.registerToOverlayManager = function () {\n\t\t\t        var positionStr = this.overlayPosition;\n\t\t\t        var overlay = new ng2_overlay_1.Ng2Overlay(this.overlayEl, {\n\t\t\t            id: this.el.id,\n\t\t\t            windowOverlay: this.overlayOf == \"window\",\n\t\t\t            position: positionStr\n\t\t\t        });\n\t\t\t        //console.log('registering overlay', overlay);\n\t\t\t        this.overlayManager.register(overlay);\n\t\t\t    };\n\t\t\t    return Ng2OverlayDirective;\n\t\t\t}());\n\t\t\t__decorate([\n\t\t\t    core_1.Input('ng2-overlay-of'),\n\t\t\t    __metadata(\"design:type\", String)\n\t\t\t], Ng2OverlayDirective.prototype, \"overlayOf\", void 0);\n\t\t\t__decorate([\n\t\t\t    core_1.Input('ng2-overlay-position'),\n\t\t\t    __metadata(\"design:type\", String)\n\t\t\t], Ng2OverlayDirective.prototype, \"overlayPosition\", void 0);\n\t\t\tNg2OverlayDirective = __decorate([\n\t\t\t    core_1.Directive({\n\t\t\t        selector: '[ng2-overlay], [ng2-overlay-of], [ng2-overlay-position]',\n\t\t\t    }),\n\t\t\t    __metadata(\"design:paramtypes\", [core_1.ViewContainerRef,\n\t\t\t        ng2_overlay_manager_1.Ng2OverlayManager])\n\t\t\t], Ng2OverlayDirective);\n\t\t\texports.Ng2OverlayDirective = Ng2OverlayDirective;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 6 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t};\n\t\t\tvar core_1 = __webpack_require__(4);\n\t\t\tvar forms_1 = __webpack_require__(7);\n\t\t\tvar common_1 = __webpack_require__(8);\n\t\t\tvar ng2_overlay_manager_1 = __webpack_require__(3);\n\t\t\texports.Ng2OverlayManager = ng2_overlay_manager_1.Ng2OverlayManager;\n\t\t\tvar ng2_overlay_directive_1 = __webpack_require__(5);\n\t\t\tvar Ng2OverlayModule = (function () {\n\t\t\t    function Ng2OverlayModule() {\n\t\t\t    }\n\t\t\t    return Ng2OverlayModule;\n\t\t\t}());\n\t\t\tNg2OverlayModule = __decorate([\n\t\t\t    core_1.NgModule({\n\t\t\t        imports: [common_1.CommonModule, forms_1.FormsModule],\n\t\t\t        declarations: [ng2_overlay_directive_1.Ng2OverlayDirective],\n\t\t\t        providers: [ng2_overlay_manager_1.Ng2OverlayManager],\n\t\t\t        exports: [ng2_overlay_directive_1.Ng2OverlayDirective]\n\t\t\t    })\n\t\t\t], Ng2OverlayModule);\n\t\t\texports.Ng2OverlayModule = Ng2OverlayModule;\n\t\t\t;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 7 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_7__;\n\t\t\n\t\t/***/ },\n\t\t/* 8 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_8__;\n\t\t\n\t\t/***/ }\n\t\t/******/ ])\n\t\t});\n\t\t;\n\t\t//# sourceMappingURL=ng2-overlay.umd.js.map\n\t\n\t/***/ },\n\t/* 21 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t(function webpackUniversalModuleDefinition(root, factory) {\n\t\t\tif(true)\n\t\t\t\tmodule.exports = factory(__webpack_require__(2), __webpack_require__(3), __webpack_require__(8));\n\t\t\telse if(typeof define === 'function' && define.amd)\n\t\t\t\tdefine([\"@angular/core\", \"@angular/forms\", \"@angular/common\"], factory);\n\t\t\telse if(typeof exports === 'object')\n\t\t\t\texports[\"ng2-scrollable\"] = factory(require(\"@angular/core\"), require(\"@angular/forms\"), require(\"@angular/common\"));\n\t\t\telse\n\t\t\t\troot[\"ng2-scrollable\"] = factory(root[\"@angular/core\"], root[\"@angular/forms\"], root[\"@angular/common\"]);\n\t\t})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_6__) {\n\t\treturn /******/ (function(modules) { // webpackBootstrap\n\t\t/******/ \t// The module cache\n\t\t/******/ \tvar installedModules = {};\n\t\t/******/\n\t\t/******/ \t// The require function\n\t\t/******/ \tfunction __webpack_require__(moduleId) {\n\t\t/******/\n\t\t/******/ \t\t// Check if module is in cache\n\t\t/******/ \t\tif(installedModules[moduleId])\n\t\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\t\t/******/\n\t\t/******/ \t\t// Create a new module (and put it into the cache)\n\t\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t\t/******/ \t\t\texports: {},\n\t\t/******/ \t\t\tid: moduleId,\n\t\t/******/ \t\t\tloaded: false\n\t\t/******/ \t\t};\n\t\t/******/\n\t\t/******/ \t\t// Execute the module function\n\t\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t\t/******/\n\t\t/******/ \t\t// Flag the module as loaded\n\t\t/******/ \t\tmodule.loaded = true;\n\t\t/******/\n\t\t/******/ \t\t// Return the exports of the module\n\t\t/******/ \t\treturn module.exports;\n\t\t/******/ \t}\n\t\t/******/\n\t\t/******/\n\t\t/******/ \t// expose the modules object (__webpack_modules__)\n\t\t/******/ \t__webpack_require__.m = modules;\n\t\t/******/\n\t\t/******/ \t// expose the module cache\n\t\t/******/ \t__webpack_require__.c = installedModules;\n\t\t/******/\n\t\t/******/ \t// __webpack_public_path__\n\t\t/******/ \t__webpack_require__.p = \"\";\n\t\t/******/\n\t\t/******/ \t// Load entry module and return exports\n\t\t/******/ \treturn __webpack_require__(0);\n\t\t/******/ })\n\t\t/************************************************************************/\n\t\t/******/ ([\n\t\t/* 0 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar ng2_scrollable_directive_1 = __webpack_require__(1);\n\t\t\texports.Ng2ScrollableDirective = ng2_scrollable_directive_1.Ng2ScrollableDirective;\n\t\t\tvar ng2_scrollable_module_1 = __webpack_require__(4);\n\t\t\texports.Ng2ScrollableModule = ng2_scrollable_module_1.Ng2ScrollableModule;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 1 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t};\n\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t};\n\t\t\tvar core_1 = __webpack_require__(2);\n\t\t\tvar ng2_utils_1 = __webpack_require__(3);\n\t\t\tvar Ng2ScrollableDirective = (function () {\n\t\t\t    function Ng2ScrollableDirective(el) {\n\t\t\t        this.elementVisible = new core_1.EventEmitter();\n\t\t\t        this.sections = [];\n\t\t\t        this.visible = ng2_utils_1.elementVisible;\n\t\t\t        this.el = el.nativeElement;\n\t\t\t        this.el.style.position = 'relative';\n\t\t\t    }\n\t\t\t    // setup list of sections\n\t\t\t    Ng2ScrollableDirective.prototype.ngOnInit = function () {\n\t\t\t        for (var i = 0; i < this.el.children.length; i++) {\n\t\t\t            var childEl = this.el.children[i];\n\t\t\t            childEl.id && this.sections.push(childEl);\n\t\t\t        }\n\t\t\t        var thisElStyle = window.getComputedStyle(this.el);\n\t\t\t        var elToListenScroll = thisElStyle.overflow === 'auto' ? this.el : window;\n\t\t\t        this.listenScrollOn(elToListenScroll);\n\t\t\t    };\n\t\t\t    Ng2ScrollableDirective.prototype.listenScrollOn = function (el) {\n\t\t\t        var _this = this;\n\t\t\t        el.addEventListener('scroll', function () {\n\t\t\t            var elScrolledToVisible = null;\n\t\t\t            for (var i = 0; i < _this.sections.length; i++) {\n\t\t\t                var section = _this.sections[i];\n\t\t\t                var visible = _this.visible(section, el);\n\t\t\t                if (_this.horizontal && (visible.left || visible.right)) {\n\t\t\t                    elScrolledToVisible = section;\n\t\t\t                    break;\n\t\t\t                }\n\t\t\t                else if (!_this.horizontal && (visible.top || visible.bottom)) {\n\t\t\t                    elScrolledToVisible = section;\n\t\t\t                    break;\n\t\t\t                }\n\t\t\t            }\n\t\t\t            elScrolledToVisible && _this.elementVisible.emit(elScrolledToVisible);\n\t\t\t        });\n\t\t\t    };\n\t\t\t    Ng2ScrollableDirective.scrollTo = function (selector, parentSelector, horizontal, distance) {\n\t\t\t        // argument validation\n\t\t\t        var parentEl, targetEl;\n\t\t\t        parentSelector = parentSelector || 'body';\n\t\t\t        targetEl = document.querySelector(selector);\n\t\t\t        if (!targetEl) {\n\t\t\t            throw \"Invalid selector \" + selector;\n\t\t\t        }\n\t\t\t        parentEl = document.querySelector(parentSelector);\n\t\t\t        if (!parentEl) {\n\t\t\t            throw \"Invalid parent selector \" + parentSelector;\n\t\t\t        }\n\t\t\t        // detect the current environment\n\t\t\t        var parentElStyle = window.getComputedStyle(parentEl);\n\t\t\t        var scrollContainerEl = parentElStyle.overflow === 'auto' ?\n\t\t\t            parentEl : document.body;\n\t\t\t        var currentScrollTop = scrollContainerEl.scrollTop;\n\t\t\t        var currentScrollLeft = scrollContainerEl.scrollLeft;\n\t\t\t        // determine targetOffsetTop(or Left);\n\t\t\t        var targetOffsetTop;\n\t\t\t        var targetOffsetLeft;\n\t\t\t        if (scrollContainerEl === document.body) {\n\t\t\t            var bodyRect = document.body.getBoundingClientRect();\n\t\t\t            var targetRect = targetEl.getBoundingClientRect();\n\t\t\t            targetOffsetTop = targetRect.top - bodyRect.top;\n\t\t\t            targetOffsetLeft = targetRect.left - bodyRect.left;\n\t\t\t        }\n\t\t\t        else {\n\t\t\t            targetOffsetTop = targetEl.offsetTop;\n\t\t\t            targetOffsetLeft = targetEl.offsetLeft;\n\t\t\t        }\n\t\t\t        if (distance) {\n\t\t\t            currentScrollTop += distance;\n\t\t\t            currentScrollLeft += distance;\n\t\t\t        }\n\t\t\t        // start scrolling\n\t\t\t        var step = horizontal ?\n\t\t\t            Math.ceil((targetOffsetLeft - currentScrollLeft) / 10) :\n\t\t\t            Math.ceil((targetOffsetTop - currentScrollTop) / 10);\n\t\t\t        var scrollProp = horizontal ? 'scrollLeft' : 'scrollTop';\n\t\t\t        (function loop(i, prop) {\n\t\t\t            setTimeout(function main() {\n\t\t\t                scrollContainerEl[prop] += step;\n\t\t\t                i > 1 && loop(i - 1, prop);\n\t\t\t            }, 50);\n\t\t\t        }(10, scrollProp));\n\t\t\t    };\n\t\t\t    return Ng2ScrollableDirective;\n\t\t\t}());\n\t\t\t__decorate([\n\t\t\t    core_1.Input(),\n\t\t\t    __metadata(\"design:type\", Boolean)\n\t\t\t], Ng2ScrollableDirective.prototype, \"horizontal\", void 0);\n\t\t\t__decorate([\n\t\t\t    core_1.Output(),\n\t\t\t    __metadata(\"design:type\", Object)\n\t\t\t], Ng2ScrollableDirective.prototype, \"elementVisible\", void 0);\n\t\t\tNg2ScrollableDirective = __decorate([\n\t\t\t    core_1.Directive({\n\t\t\t        selector: '[ng2-scrollable]'\n\t\t\t    }),\n\t\t\t    __metadata(\"design:paramtypes\", [core_1.ElementRef])\n\t\t\t], Ng2ScrollableDirective);\n\t\t\texports.Ng2ScrollableDirective = Ng2ScrollableDirective;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 2 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\t\t\n\t\t/***/ },\n\t\t/* 3 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t(function webpackUniversalModuleDefinition(root, factory) {\n\t\t\t\tif(true)\n\t\t\t\t\tmodule.exports = factory(__webpack_require__(2));\n\t\t\t\telse if(typeof define === 'function' && define.amd)\n\t\t\t\t\tdefine([\"@angular/core\"], factory);\n\t\t\t\telse if(typeof exports === 'object')\n\t\t\t\t\texports[\"ng2-utils\"] = factory(require(\"@angular/core\"));\n\t\t\t\telse\n\t\t\t\t\troot[\"ng2-utils\"] = factory(root[\"@angular/core\"]);\n\t\t\t})(this, function(__WEBPACK_EXTERNAL_MODULE_1__) {\n\t\t\treturn /******/ (function(modules) { // webpackBootstrap\n\t\t\t/******/ \t// The module cache\n\t\t\t/******/ \tvar installedModules = {};\n\t\t\t/******/\n\t\t\t/******/ \t// The require function\n\t\t\t/******/ \tfunction __webpack_require__(moduleId) {\n\t\t\t/******/\n\t\t\t/******/ \t\t// Check if module is in cache\n\t\t\t/******/ \t\tif(installedModules[moduleId])\n\t\t\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\t\t\t/******/\n\t\t\t/******/ \t\t// Create a new module (and put it into the cache)\n\t\t\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t\t\t/******/ \t\t\texports: {},\n\t\t\t/******/ \t\t\tid: moduleId,\n\t\t\t/******/ \t\t\tloaded: false\n\t\t\t/******/ \t\t};\n\t\t\t/******/\n\t\t\t/******/ \t\t// Execute the module function\n\t\t\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t\t\t/******/\n\t\t\t/******/ \t\t// Flag the module as loaded\n\t\t\t/******/ \t\tmodule.loaded = true;\n\t\t\t/******/\n\t\t\t/******/ \t\t// Return the exports of the module\n\t\t\t/******/ \t\treturn module.exports;\n\t\t\t/******/ \t}\n\t\t\t/******/\n\t\t\t/******/\n\t\t\t/******/ \t// expose the modules object (__webpack_modules__)\n\t\t\t/******/ \t__webpack_require__.m = modules;\n\t\t\t/******/\n\t\t\t/******/ \t// expose the module cache\n\t\t\t/******/ \t__webpack_require__.c = installedModules;\n\t\t\t/******/\n\t\t\t/******/ \t// __webpack_public_path__\n\t\t\t/******/ \t__webpack_require__.p = \"\";\n\t\t\t/******/\n\t\t\t/******/ \t// Load entry module and return exports\n\t\t\t/******/ \treturn __webpack_require__(0);\n\t\t\t/******/ })\n\t\t\t/************************************************************************/\n\t\t\t/******/ ([\n\t\t\t/* 0 */\n\t\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\t\n\t\t\t\t\"use strict\";\n\t\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t\t};\n\t\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t\t};\n\t\t\t\tvar core_1 = __webpack_require__(1);\n\t\t\t\tvar scroll_to_1 = __webpack_require__(2);\n\t\t\t\texports.scrollTo = scroll_to_1.scrollTo;\n\t\t\t\tvar element_visible_1 = __webpack_require__(3);\n\t\t\t\texports.elementVisible = element_visible_1.elementVisible;\n\t\t\t\tvar computed_style_1 = __webpack_require__(4);\n\t\t\t\texports.computedStyle = computed_style_1.computedStyle;\n\t\t\t\tvar outer_width_1 = __webpack_require__(5);\n\t\t\t\texports.outerWidth = outer_width_1.outerWidth;\n\t\t\t\tvar outer_height_1 = __webpack_require__(6);\n\t\t\t\texports.outerHeight = outer_height_1.outerHeight;\n\t\t\t\tvar Ng2UtilsModule = (function () {\n\t\t\t\t    function Ng2UtilsModule() {\n\t\t\t\t    }\n\t\t\t\t    Ng2UtilsModule = __decorate([\n\t\t\t\t        core_1.NgModule({\n\t\t\t\t            declarations: [\n\t\t\t\t                scroll_to_1.scrollTo,\n\t\t\t\t                element_visible_1.elementVisible,\n\t\t\t\t                computed_style_1.computedStyle,\n\t\t\t\t                outer_width_1.outerWidth,\n\t\t\t\t                outer_height_1.outerHeight\n\t\t\t\t            ],\n\t\t\t\t            exports: [\n\t\t\t\t                scroll_to_1.scrollTo,\n\t\t\t\t                element_visible_1.elementVisible,\n\t\t\t\t                computed_style_1.computedStyle,\n\t\t\t\t                outer_width_1.outerWidth,\n\t\t\t\t                outer_height_1.outerHeight\n\t\t\t\t            ]\n\t\t\t\t        }), \n\t\t\t\t        __metadata('design:paramtypes', [])\n\t\t\t\t    ], Ng2UtilsModule);\n\t\t\t\t    return Ng2UtilsModule;\n\t\t\t\t}());\n\t\t\t\texports.Ng2UtilsModule = Ng2UtilsModule;\n\t\t\t\n\t\t\t\n\t\t\t/***/ },\n\t\t\t/* 1 */\n\t\t\t/***/ function(module, exports) {\n\t\t\t\n\t\t\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\t\t\t\n\t\t\t/***/ },\n\t\t\t/* 2 */\n\t\t\t/***/ function(module, exports) {\n\t\t\t\n\t\t\t\t\"use strict\";\n\t\t\t\t/**\n\t\t\t\t * scroll to the selector within the parent selector by scrolling 10 times within 500ms\n\t\t\t\t * @param selector\n\t\t\t\t * @param parentSelector\n\t\t\t\t */\n\t\t\t\tfunction scrollTo(selector, parentSelector) {\n\t\t\t\t    console.log('selector', selector, 'parentSelector', parentSelector);\n\t\t\t\t    var parentEl, targetEl;\n\t\t\t\t    targetEl = document.querySelector(selector);\n\t\t\t\t    if (!targetEl) {\n\t\t\t\t        throw \"Invalid selector \" + selector;\n\t\t\t\t    }\n\t\t\t\t    parentEl = document.querySelector(parentSelector);\n\t\t\t\t    if (!parentEl) {\n\t\t\t\t        throw \"Invalid parent selector \" + parentSelector;\n\t\t\t\t    }\n\t\t\t\t    var parentElStyle = window.getComputedStyle(parentEl);\n\t\t\t\t    parentEl = parentElStyle['overflow'] === 'auto' ? parentEl : document.body;\n\t\t\t\t    var currentScrollTop = parentEl.scrollTop;\n\t\t\t\t    var targetOffsetTop = targetEl.offsetTop;\n\t\t\t\t    if (parentEl === document.body) {\n\t\t\t\t        var bodyRect = document.body.getBoundingClientRect();\n\t\t\t\t        var targetRect = targetEl.getBoundingClientRect();\n\t\t\t\t        targetOffsetTop = targetRect.top - bodyRect.top;\n\t\t\t\t    }\n\t\t\t\t    var step = Math.ceil((targetOffsetTop - currentScrollTop) / 10);\n\t\t\t\t    (function loop(i) {\n\t\t\t\t        setTimeout(function main() {\n\t\t\t\t            parentEl.scrollTop += step;\n\t\t\t\t            i > 1 && loop(i - 1);\n\t\t\t\t        }, 50);\n\t\t\t\t    }(10));\n\t\t\t\t}\n\t\t\t\texports.scrollTo = scrollTo;\n\t\t\t\n\t\t\t\n\t\t\t/***/ },\n\t\t\t/* 3 */\n\t\t\t/***/ function(module, exports) {\n\t\t\t\n\t\t\t\t\"use strict\";\n\t\t\t\t/**\n\t\t\t\t * Returns an element is visible within outer element\n\t\t\t\t * @param innerEl\n\t\t\t\t * @param outerEl\n\t\t\t\t * @param adjustment\n\t\t\t\t * @returns {{top: boolean, bottom: boolean, left: boolean, right: boolean}}\n\t\t\t\t */\n\t\t\t\tfunction elementVisible(innerEl, outerEl, adjustment) {\n\t\t\t\t    var innerRect = innerEl.getBoundingClientRect();\n\t\t\t\t    var bottomAdjustment = (adjustment && adjustment.bottom || 0);\n\t\t\t\t    if (outerEl === window) {\n\t\t\t\t        return {\n\t\t\t\t            top: innerRect.bottom - bottomAdjustment > window.innerHeight\n\t\t\t\t                && innerRect.top < window.innerHeight,\n\t\t\t\t            bottom: innerRect.bottom - bottomAdjustment > 0\n\t\t\t\t                && innerRect.bottom < window.innerHeight,\n\t\t\t\t            left: innerRect.right > window.innerWidth\n\t\t\t\t                && innerRect.left < window.innerWidth,\n\t\t\t\t            right: innerRect.right > 0\n\t\t\t\t                && innerRect.right < window.innerWidth\n\t\t\t\t        };\n\t\t\t\t    }\n\t\t\t\t    else {\n\t\t\t\t        var outerRect = outerEl.getBoundingClientRect();\n\t\t\t\t        var defaultView = (innerEl.ownerDocument || document).defaultView;\n\t\t\t\t        var computedStyle = defaultView.getComputedStyle(outerEl, null);\n\t\t\t\t        var outerRectBorderTopWidth = parseInt(computedStyle.getPropertyValue('border-top-width'), 10);\n\t\t\t\t        var outerRectBorderLeftWidth = parseInt(computedStyle.getPropertyValue('border-left-width'), 10);\n\t\t\t\t        /* top is visible or bottom is visible */\n\t\t\t\t        var topVisible = (innerRect.top >= outerRect.top\n\t\t\t\t            && innerRect.top < outerRect.bottom);\n\t\t\t\t        var bottomVisible = (innerRect.bottom > (outerRect.top + outerRectBorderTopWidth)\n\t\t\t\t            && innerRect.bottom < outerRect.bottom);\n\t\t\t\t        var leftVisible = (innerRect.left >= outerRect.left\n\t\t\t\t            && innerRect.left < outerRect.right);\n\t\t\t\t        var rightVisible = (innerRect.right > (outerRect.left + outerRectBorderLeftWidth)\n\t\t\t\t            && innerRect.right < outerRect.right);\n\t\t\t\t        return {\n\t\t\t\t            top: topVisible,\n\t\t\t\t            bottom: bottomVisible,\n\t\t\t\t            left: leftVisible,\n\t\t\t\t            right: rightVisible\n\t\t\t\t        };\n\t\t\t\t    }\n\t\t\t\t}\n\t\t\t\texports.elementVisible = elementVisible;\n\t\t\t\n\t\t\t\n\t\t\t/***/ },\n\t\t\t/* 4 */\n\t\t\t/***/ function(module, exports) {\n\t\t\t\n\t\t\t\t\"use strict\";\n\t\t\t\t/**\n\t\t\t\t * returns coumputed style of given element\n\t\t\t\t * @param el\n\t\t\t\t * @param styleProp\n\t\t\t\t * @returns {any}\n\t\t\t\t */\n\t\t\t\tfunction computedStyle(el, styleProp) {\n\t\t\t\t    var value, defaultView = (el.ownerDocument || document).defaultView;\n\t\t\t\t    // W3C standard way:\n\t\t\t\t    if (defaultView && defaultView.getComputedStyle) {\n\t\t\t\t        // sanitize property name to css notation\n\t\t\t\t        // (hypen separated words eg. font-Size)\n\t\t\t\t        styleProp = styleProp.replace(/([A-Z])/g, \"-$1\").toLowerCase();\n\t\t\t\t        return defaultView.getComputedStyle(el, null).getPropertyValue(styleProp);\n\t\t\t\t    }\n\t\t\t\t    else if (el['currentStyle']) {\n\t\t\t\t        // sanitize property name to camelCase\n\t\t\t\t        styleProp = styleProp.replace(/\\-(\\w)/g, function (str, letter) {\n\t\t\t\t            return letter.toUpperCase();\n\t\t\t\t        });\n\t\t\t\t        value = el['currentStyle'][styleProp];\n\t\t\t\t        // convert other units to pixels on IE\n\t\t\t\t        if (/^\\d+(em|pt|%|ex)?$/i.test(value)) {\n\t\t\t\t            return (function (value) {\n\t\t\t\t                var oldLeft = el.style.left, oldRsLeft = el['runtimeStyle'].left;\n\t\t\t\t                el['runtimeStyle'].left = el['currentStyle'].left;\n\t\t\t\t                el.style.left = value || 0;\n\t\t\t\t                value = el.style['pixelLeft'] + \"px\";\n\t\t\t\t                el.style.left = oldLeft;\n\t\t\t\t                el['runtimeStyle'].left = oldRsLeft;\n\t\t\t\t                return value;\n\t\t\t\t            })(value);\n\t\t\t\t        }\n\t\t\t\t        return value;\n\t\t\t\t    }\n\t\t\t\t}\n\t\t\t\texports.computedStyle = computedStyle;\n\t\t\t\n\t\t\t\n\t\t\t/***/ },\n\t\t\t/* 5 */\n\t\t\t/***/ function(module, exports) {\n\t\t\t\n\t\t\t\t\"use strict\";\n\t\t\t\tfunction outerWidth(el) {\n\t\t\t\t    var style = getComputedStyle(el);\n\t\t\t\t    return el.offsetWidth +\n\t\t\t\t        parseInt(style.getPropertyValue('margin-left')) +\n\t\t\t\t        parseInt(style.getPropertyValue('margin-right'));\n\t\t\t\t}\n\t\t\t\texports.outerWidth = outerWidth;\n\t\t\t\n\t\t\t\n\t\t\t/***/ },\n\t\t\t/* 6 */\n\t\t\t/***/ function(module, exports) {\n\t\t\t\n\t\t\t\t\"use strict\";\n\t\t\t\tfunction outerHeight(el) {\n\t\t\t\t    var style = getComputedStyle(el);\n\t\t\t\t    return el.offsetHeight +\n\t\t\t\t        parseInt(style.getPropertyValue('margin-top')) +\n\t\t\t\t        parseInt(style.getPropertyValue('margin-bottom'));\n\t\t\t\t}\n\t\t\t\texports.outerHeight = outerHeight;\n\t\t\t\n\t\t\t\n\t\t\t/***/ }\n\t\t\t/******/ ])\n\t\t\t});\n\t\t\t;\n\t\t\t//# sourceMappingURL=ng2-utils.umd.js.map\n\t\t\n\t\t/***/ },\n\t\t/* 4 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t};\n\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t};\n\t\t\tvar core_1 = __webpack_require__(2);\n\t\t\tvar forms_1 = __webpack_require__(5);\n\t\t\tvar common_1 = __webpack_require__(6);\n\t\t\tvar ng2_scrollable_directive_1 = __webpack_require__(1);\n\t\t\texports.Ng2ScrollableDirective = ng2_scrollable_directive_1.Ng2ScrollableDirective;\n\t\t\tvar Ng2ScrollableModule = (function () {\n\t\t\t    function Ng2ScrollableModule() {\n\t\t\t    }\n\t\t\t    return Ng2ScrollableModule;\n\t\t\t}());\n\t\t\tNg2ScrollableModule = __decorate([\n\t\t\t    core_1.NgModule({\n\t\t\t        imports: [common_1.CommonModule, forms_1.FormsModule],\n\t\t\t        declarations: [ng2_scrollable_directive_1.Ng2ScrollableDirective],\n\t\t\t        exports: [ng2_scrollable_directive_1.Ng2ScrollableDirective]\n\t\t\t    }),\n\t\t\t    __metadata(\"design:paramtypes\", [])\n\t\t\t], Ng2ScrollableModule);\n\t\t\texports.Ng2ScrollableModule = Ng2ScrollableModule;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 5 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\t\t\n\t\t/***/ },\n\t\t/* 6 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_6__;\n\t\t\n\t\t/***/ }\n\t\t/******/ ])\n\t\t});\n\t\t;\n\t\t//# sourceMappingURL=ng2-scrollable.umd.js.map\n\t\n\t/***/ },\n\t/* 22 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t(function webpackUniversalModuleDefinition(root, factory) {\n\t\t\tif(true)\n\t\t\t\tmodule.exports = factory(__webpack_require__(2), __webpack_require__(8), __webpack_require__(3));\n\t\t\telse if(typeof define === 'function' && define.amd)\n\t\t\t\tdefine([\"@angular/core\", \"@angular/common\", \"@angular/forms\"], factory);\n\t\t\telse if(typeof exports === 'object')\n\t\t\t\texports[\"ng2-collapsable\"] = factory(require(\"@angular/core\"), require(\"@angular/common\"), require(\"@angular/forms\"));\n\t\t\telse\n\t\t\t\troot[\"ng2-collapsable\"] = factory(root[\"@angular/core\"], root[\"@angular/common\"], root[\"@angular/forms\"]);\n\t\t})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__) {\n\t\treturn /******/ (function(modules) { // webpackBootstrap\n\t\t/******/ \t// The module cache\n\t\t/******/ \tvar installedModules = {};\n\t\t/******/\n\t\t/******/ \t// The require function\n\t\t/******/ \tfunction __webpack_require__(moduleId) {\n\t\t/******/\n\t\t/******/ \t\t// Check if module is in cache\n\t\t/******/ \t\tif(installedModules[moduleId])\n\t\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\t\t/******/\n\t\t/******/ \t\t// Create a new module (and put it into the cache)\n\t\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t\t/******/ \t\t\texports: {},\n\t\t/******/ \t\t\tid: moduleId,\n\t\t/******/ \t\t\tloaded: false\n\t\t/******/ \t\t};\n\t\t/******/\n\t\t/******/ \t\t// Execute the module function\n\t\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t\t/******/\n\t\t/******/ \t\t// Flag the module as loaded\n\t\t/******/ \t\tmodule.loaded = true;\n\t\t/******/\n\t\t/******/ \t\t// Return the exports of the module\n\t\t/******/ \t\treturn module.exports;\n\t\t/******/ \t}\n\t\t/******/\n\t\t/******/\n\t\t/******/ \t// expose the modules object (__webpack_modules__)\n\t\t/******/ \t__webpack_require__.m = modules;\n\t\t/******/\n\t\t/******/ \t// expose the module cache\n\t\t/******/ \t__webpack_require__.c = installedModules;\n\t\t/******/\n\t\t/******/ \t// __webpack_public_path__\n\t\t/******/ \t__webpack_require__.p = \"\";\n\t\t/******/\n\t\t/******/ \t// Load entry module and return exports\n\t\t/******/ \treturn __webpack_require__(0);\n\t\t/******/ })\n\t\t/************************************************************************/\n\t\t/******/ ([\n\t\t/* 0 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar ng2_collapsable_component_1 = __webpack_require__(1);\n\t\t\texports.Ng2CollapsableComponent = ng2_collapsable_component_1.Ng2CollapsableComponent;\n\t\t\tvar ng2_collapsable_module_1 = __webpack_require__(3);\n\t\t\texports.Ng2CollapsableModule = ng2_collapsable_module_1.Ng2CollapsableModule;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 1 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t};\n\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t};\n\t\t\tvar core_1 = __webpack_require__(2);\n\t\t\tvar Ng2CollapsableComponent = (function () {\n\t\t\t    function Ng2CollapsableComponent(viewContainer) {\n\t\t\t        this.viewContainer = viewContainer;\n\t\t\t        this.selectedIndexClass = 'selected';\n\t\t\t        this.selectedContentsClass = 'selected';\n\t\t\t        this.el = this.viewContainer.element.nativeElement;\n\t\t\t    }\n\t\t\t    Ng2CollapsableComponent.prototype.ngAfterViewInit = function () {\n\t\t\t        var _this = this;\n\t\t\t        this.indexEls = [].slice.call(this.el.querySelectorAll('[index]'));\n\t\t\t        this.contentsEls = [].slice.call(this.el.querySelectorAll('[contents]'));\n\t\t\t        this.selectTab(this.selectedIndex);\n\t\t\t        this.indexEls.forEach(function (el) {\n\t\t\t            el.addEventListener('click', function () {\n\t\t\t                _this.selectTab(el.getAttribute('index'));\n\t\t\t            });\n\t\t\t        });\n\t\t\t    };\n\t\t\t    Ng2CollapsableComponent.prototype.selectTab = function (id) {\n\t\t\t        var _this = this;\n\t\t\t        id = id || this.indexEls[0].getAttribute('index');\n\t\t\t        this.indexEls.forEach(function (el) {\n\t\t\t            _this.removeClass(el, _this.selectedIndexClass);\n\t\t\t            if (el.getAttribute('index') == id) {\n\t\t\t                _this.addClass(el, _this.selectedIndexClass);\n\t\t\t            }\n\t\t\t        });\n\t\t\t        this.contentsEls.forEach(function (el) {\n\t\t\t            _this.removeClass(el, _this.selectedContentsClass);\n\t\t\t            if (el.getAttribute('contents') == id) {\n\t\t\t                _this.addClass(el, _this.selectedContentsClass);\n\t\t\t            }\n\t\t\t        });\n\t\t\t    };\n\t\t\t    Ng2CollapsableComponent.prototype.addClass = function (el, str) {\n\t\t\t        var classNames = (el.className || '').split(' ');\n\t\t\t        classNames.push(str);\n\t\t\t        el.className = classNames.join(' ');\n\t\t\t    };\n\t\t\t    Ng2CollapsableComponent.prototype.removeClass = function (el, str) {\n\t\t\t        el.className = (el.className || '').replace(new RegExp('[ ]*' + str), '');\n\t\t\t    };\n\t\t\t    return Ng2CollapsableComponent;\n\t\t\t}());\n\t\t\t__decorate([\n\t\t\t    core_1.Input('selected'),\n\t\t\t    __metadata(\"design:type\", String)\n\t\t\t], Ng2CollapsableComponent.prototype, \"selectedIndex\", void 0);\n\t\t\t__decorate([\n\t\t\t    core_1.Input('selected-index-class'),\n\t\t\t    __metadata(\"design:type\", String)\n\t\t\t], Ng2CollapsableComponent.prototype, \"selectedIndexClass\", void 0);\n\t\t\t__decorate([\n\t\t\t    core_1.Input('selected-contents-class'),\n\t\t\t    __metadata(\"design:type\", String)\n\t\t\t], Ng2CollapsableComponent.prototype, \"selectedContentsClass\", void 0);\n\t\t\tNg2CollapsableComponent = __decorate([\n\t\t\t    core_1.Component({\n\t\t\t        selector: 'ng2-collapsable, [ng2-collapsable]',\n\t\t\t        encapsulation: core_1.ViewEncapsulation.None,\n\t\t\t        template: \"<ng-content></ng-content>\",\n\t\t\t        styles: [\"\\n    [ng2-collapsable] [index] {\\n      display: block;\\n      cursor: pointer;\\n      position: relative;\\n      margin: 2px 0 0 0;\\n      padding: .5em .5em .5em .7em;\\n      border: 1px solid #cccccc;\\n      background: #ededed;\\n      font-weight: normal;\\n      border-radius: 2px; \\n      color: #2b2b2b;\\n    }\\n    [ng2-collapsable] [index].selected {\\n      border: 1px solid #003eff;\\n      background: #007fff;\\n      color: #ffffff;\\n      border-radius: 2px 2px 0 0;\\n    }\\n    [ng2-collapsable] [contents] {\\n      border-top: 0;\\n      background: #ffffff;\\n      color: #333333;\\n      padding: 0px;\\n      border-radius: 0 0 2px 2px;\\n      height: 0;\\n      border: 0;\\n      font-size: 0;\\n    }\\n    [ng2-collapsable] [contents].selected {\\n      height: 50px;\\n      padding: 10px;\\n      border: 1px solid #dddddd;\\n      transition: font-size 0.3s ease-in, height 0.3s ease-in;\\n      font-size: inherit;\\n    }\\n  \"],\n\t\t\t    }),\n\t\t\t    __metadata(\"design:paramtypes\", [core_1.ViewContainerRef])\n\t\t\t], Ng2CollapsableComponent);\n\t\t\texports.Ng2CollapsableComponent = Ng2CollapsableComponent;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 2 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\t\t\n\t\t/***/ },\n\t\t/* 3 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t};\n\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t};\n\t\t\tvar core_1 = __webpack_require__(2);\n\t\t\tvar common_1 = __webpack_require__(4);\n\t\t\tvar forms_1 = __webpack_require__(5);\n\t\t\tvar ng2_collapsable_component_1 = __webpack_require__(1);\n\t\t\tvar Ng2CollapsableModule = (function () {\n\t\t\t    function Ng2CollapsableModule() {\n\t\t\t    }\n\t\t\t    return Ng2CollapsableModule;\n\t\t\t}());\n\t\t\tNg2CollapsableModule = __decorate([\n\t\t\t    core_1.NgModule({\n\t\t\t        imports: [common_1.CommonModule, forms_1.FormsModule],\n\t\t\t        declarations: [ng2_collapsable_component_1.Ng2CollapsableComponent],\n\t\t\t        exports: [ng2_collapsable_component_1.Ng2CollapsableComponent]\n\t\t\t    }),\n\t\t\t    __metadata(\"design:paramtypes\", [])\n\t\t\t], Ng2CollapsableModule);\n\t\t\texports.Ng2CollapsableModule = Ng2CollapsableModule;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 4 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\t\t\n\t\t/***/ },\n\t\t/* 5 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\t\t\n\t\t/***/ }\n\t\t/******/ ])\n\t\t});\n\t\t;\n\t\t//# sourceMappingURL=ng2-collapsable.umd.js.map\n\t\n\t/***/ },\n\t/* 23 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t(function webpackUniversalModuleDefinition(root, factory) {\n\t\t\tif(true)\n\t\t\t\tmodule.exports = factory(__webpack_require__(2), __webpack_require__(3), __webpack_require__(4));\n\t\t\telse if(typeof define === 'function' && define.amd)\n\t\t\t\tdefine([\"@angular/core\", \"@angular/forms\", \"@angular/platform-browser\"], factory);\n\t\t\telse if(typeof exports === 'object')\n\t\t\t\texports[\"ng2-infinite-list\"] = factory(require(\"@angular/core\"), require(\"@angular/forms\"), require(\"@angular/platform-browser\"));\n\t\t\telse\n\t\t\t\troot[\"ng2-infinite-list\"] = factory(root[\"@angular/core\"], root[\"@angular/forms\"], root[\"@angular/platform-browser\"]);\n\t\t})(this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__) {\n\t\treturn /******/ (function(modules) { // webpackBootstrap\n\t\t/******/ \t// The module cache\n\t\t/******/ \tvar installedModules = {};\n\t\t/******/\n\t\t/******/ \t// The require function\n\t\t/******/ \tfunction __webpack_require__(moduleId) {\n\t\t/******/\n\t\t/******/ \t\t// Check if module is in cache\n\t\t/******/ \t\tif(installedModules[moduleId])\n\t\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\t\t/******/\n\t\t/******/ \t\t// Create a new module (and put it into the cache)\n\t\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t\t/******/ \t\t\texports: {},\n\t\t/******/ \t\t\tid: moduleId,\n\t\t/******/ \t\t\tloaded: false\n\t\t/******/ \t\t};\n\t\t/******/\n\t\t/******/ \t\t// Execute the module function\n\t\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t\t/******/\n\t\t/******/ \t\t// Flag the module as loaded\n\t\t/******/ \t\tmodule.loaded = true;\n\t\t/******/\n\t\t/******/ \t\t// Return the exports of the module\n\t\t/******/ \t\treturn module.exports;\n\t\t/******/ \t}\n\t\t/******/\n\t\t/******/\n\t\t/******/ \t// expose the modules object (__webpack_modules__)\n\t\t/******/ \t__webpack_require__.m = modules;\n\t\t/******/\n\t\t/******/ \t// expose the module cache\n\t\t/******/ \t__webpack_require__.c = installedModules;\n\t\t/******/\n\t\t/******/ \t// __webpack_public_path__\n\t\t/******/ \t__webpack_require__.p = \"\";\n\t\t/******/\n\t\t/******/ \t// Load entry module and return exports\n\t\t/******/ \treturn __webpack_require__(0);\n\t\t/******/ })\n\t\t/************************************************************************/\n\t\t/******/ ([\n\t\t/* 0 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t};\n\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t};\n\t\t\tvar core_1 = __webpack_require__(1);\n\t\t\tvar forms_1 = __webpack_require__(2);\n\t\t\tvar platform_browser_1 = __webpack_require__(3);\n\t\t\tvar ng2_infinite_list_directive_1 = __webpack_require__(4);\n\t\t\texports.Ng2InfiniteListDirective = ng2_infinite_list_directive_1.Ng2InfiniteListDirective;\n\t\t\tvar Ng2InfiniteListModule = (function () {\n\t\t\t    function Ng2InfiniteListModule() {\n\t\t\t    }\n\t\t\t    return Ng2InfiniteListModule;\n\t\t\t}());\n\t\t\tNg2InfiniteListModule = __decorate([\n\t\t\t    core_1.NgModule({\n\t\t\t        imports: [platform_browser_1.BrowserModule, forms_1.FormsModule],\n\t\t\t        declarations: [ng2_infinite_list_directive_1.Ng2InfiniteListDirective],\n\t\t\t        exports: [ng2_infinite_list_directive_1.Ng2InfiniteListDirective]\n\t\t\t    }),\n\t\t\t    __metadata(\"design:paramtypes\", [])\n\t\t\t], Ng2InfiniteListModule);\n\t\t\texports.Ng2InfiniteListModule = Ng2InfiniteListModule;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 1 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\t\t\n\t\t/***/ },\n\t\t/* 2 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\t\t\n\t\t/***/ },\n\t\t/* 3 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\t\t\n\t\t/***/ },\n\t\t/* 4 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t};\n\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t};\n\t\t\tvar core_1 = __webpack_require__(1);\n\t\t\tvar ng2_utils_1 = __webpack_require__(5);\n\t\t\tvar Ng2InfiniteListDirective = (function () {\n\t\t\t    function Ng2InfiniteListDirective(el) {\n\t\t\t        var _this = this;\n\t\t\t        this.endVisible = new core_1.EventEmitter();\n\t\t\t        this.elementVisible = ng2_utils_1.elementVisible;\n\t\t\t        this.scrollListener = function () {\n\t\t\t            var visible = _this.elementVisible(_this.endEl, _this.el);\n\t\t\t            if (_this.horizontal && (visible.left || visible.right)) {\n\t\t\t                _this.endVisible.emit(true);\n\t\t\t            }\n\t\t\t            else if (!_this.horizontal && (visible.top || visible.bottom)) {\n\t\t\t                _this.endVisible.emit(true);\n\t\t\t            }\n\t\t\t        };\n\t\t\t        this.el = el.nativeElement;\n\t\t\t    }\n\t\t\t    // setup list of sections\n\t\t\t    Ng2InfiniteListDirective.prototype.ngOnInit = function () {\n\t\t\t        this.endEl = this.el.querySelector('[ng2-infinite-list-end]');\n\t\t\t        if (!this.endEl) {\n\t\t\t            throw \"Invalid 'ng2-infinite-list-end\";\n\t\t\t        }\n\t\t\t        this.scrollListener();\n\t\t\t        this.el.addEventListener('scroll', this.scrollListener);\n\t\t\t        window.addEventListener('resize', this.scrollListener);\n\t\t\t    };\n\t\t\t    return Ng2InfiniteListDirective;\n\t\t\t}());\n\t\t\t__decorate([\n\t\t\t    core_1.Input(),\n\t\t\t    __metadata(\"design:type\", Boolean)\n\t\t\t], Ng2InfiniteListDirective.prototype, \"horizontal\", void 0);\n\t\t\t__decorate([\n\t\t\t    core_1.Output(),\n\t\t\t    __metadata(\"design:type\", Object)\n\t\t\t], Ng2InfiniteListDirective.prototype, \"endVisible\", void 0);\n\t\t\tNg2InfiniteListDirective = __decorate([\n\t\t\t    core_1.Directive({ selector: '[ng2-infinite-list]' }),\n\t\t\t    __metadata(\"design:paramtypes\", [core_1.ElementRef])\n\t\t\t], Ng2InfiniteListDirective);\n\t\t\texports.Ng2InfiniteListDirective = Ng2InfiniteListDirective;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 5 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t(function webpackUniversalModuleDefinition(root, factory) {\n\t\t\t\tif(true)\n\t\t\t\t\tmodule.exports = factory(__webpack_require__(1));\n\t\t\t\telse if(typeof define === 'function' && define.amd)\n\t\t\t\t\tdefine([\"@angular/core\"], factory);\n\t\t\t\telse if(typeof exports === 'object')\n\t\t\t\t\texports[\"ng2-utils\"] = factory(require(\"@angular/core\"));\n\t\t\t\telse\n\t\t\t\t\troot[\"ng2-utils\"] = factory(root[\"@angular/core\"]);\n\t\t\t})(this, function(__WEBPACK_EXTERNAL_MODULE_1__) {\n\t\t\treturn /******/ (function(modules) { // webpackBootstrap\n\t\t\t/******/ \t// The module cache\n\t\t\t/******/ \tvar installedModules = {};\n\t\t\t/******/\n\t\t\t/******/ \t// The require function\n\t\t\t/******/ \tfunction __webpack_require__(moduleId) {\n\t\t\t/******/\n\t\t\t/******/ \t\t// Check if module is in cache\n\t\t\t/******/ \t\tif(installedModules[moduleId])\n\t\t\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\t\t\t/******/\n\t\t\t/******/ \t\t// Create a new module (and put it into the cache)\n\t\t\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t\t\t/******/ \t\t\texports: {},\n\t\t\t/******/ \t\t\tid: moduleId,\n\t\t\t/******/ \t\t\tloaded: false\n\t\t\t/******/ \t\t};\n\t\t\t/******/\n\t\t\t/******/ \t\t// Execute the module function\n\t\t\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t\t\t/******/\n\t\t\t/******/ \t\t// Flag the module as loaded\n\t\t\t/******/ \t\tmodule.loaded = true;\n\t\t\t/******/\n\t\t\t/******/ \t\t// Return the exports of the module\n\t\t\t/******/ \t\treturn module.exports;\n\t\t\t/******/ \t}\n\t\t\t/******/\n\t\t\t/******/\n\t\t\t/******/ \t// expose the modules object (__webpack_modules__)\n\t\t\t/******/ \t__webpack_require__.m = modules;\n\t\t\t/******/\n\t\t\t/******/ \t// expose the module cache\n\t\t\t/******/ \t__webpack_require__.c = installedModules;\n\t\t\t/******/\n\t\t\t/******/ \t// __webpack_public_path__\n\t\t\t/******/ \t__webpack_require__.p = \"\";\n\t\t\t/******/\n\t\t\t/******/ \t// Load entry module and return exports\n\t\t\t/******/ \treturn __webpack_require__(0);\n\t\t\t/******/ })\n\t\t\t/************************************************************************/\n\t\t\t/******/ ([\n\t\t\t/* 0 */\n\t\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\t\n\t\t\t\t\"use strict\";\n\t\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t\t};\n\t\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t\t};\n\t\t\t\tvar core_1 = __webpack_require__(1);\n\t\t\t\tvar scroll_to_1 = __webpack_require__(2);\n\t\t\t\texports.scrollTo = scroll_to_1.scrollTo;\n\t\t\t\tvar element_visible_1 = __webpack_require__(3);\n\t\t\t\texports.elementVisible = element_visible_1.elementVisible;\n\t\t\t\tvar computed_style_1 = __webpack_require__(4);\n\t\t\t\texports.computedStyle = computed_style_1.computedStyle;\n\t\t\t\tvar outer_width_1 = __webpack_require__(5);\n\t\t\t\texports.outerWidth = outer_width_1.outerWidth;\n\t\t\t\tvar outer_height_1 = __webpack_require__(6);\n\t\t\t\texports.outerHeight = outer_height_1.outerHeight;\n\t\t\t\tvar Ng2UtilsModule = (function () {\n\t\t\t\t    function Ng2UtilsModule() {\n\t\t\t\t    }\n\t\t\t\t    Ng2UtilsModule = __decorate([\n\t\t\t\t        core_1.NgModule({\n\t\t\t\t            declarations: [\n\t\t\t\t                scroll_to_1.scrollTo,\n\t\t\t\t                element_visible_1.elementVisible,\n\t\t\t\t                computed_style_1.computedStyle,\n\t\t\t\t                outer_width_1.outerWidth,\n\t\t\t\t                outer_height_1.outerHeight\n\t\t\t\t            ],\n\t\t\t\t            exports: [\n\t\t\t\t                scroll_to_1.scrollTo,\n\t\t\t\t                element_visible_1.elementVisible,\n\t\t\t\t                computed_style_1.computedStyle,\n\t\t\t\t                outer_width_1.outerWidth,\n\t\t\t\t                outer_height_1.outerHeight\n\t\t\t\t            ]\n\t\t\t\t        }), \n\t\t\t\t        __metadata('design:paramtypes', [])\n\t\t\t\t    ], Ng2UtilsModule);\n\t\t\t\t    return Ng2UtilsModule;\n\t\t\t\t}());\n\t\t\t\texports.Ng2UtilsModule = Ng2UtilsModule;\n\t\t\t\n\t\t\t\n\t\t\t/***/ },\n\t\t\t/* 1 */\n\t\t\t/***/ function(module, exports) {\n\t\t\t\n\t\t\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\t\t\t\n\t\t\t/***/ },\n\t\t\t/* 2 */\n\t\t\t/***/ function(module, exports) {\n\t\t\t\n\t\t\t\t\"use strict\";\n\t\t\t\t/**\n\t\t\t\t * scroll to the selector within the parent selector by scrolling 10 times within 500ms\n\t\t\t\t * @param selector\n\t\t\t\t * @param parentSelector\n\t\t\t\t */\n\t\t\t\tfunction scrollTo(selector, parentSelector) {\n\t\t\t\t    console.log('selector', selector, 'parentSelector', parentSelector);\n\t\t\t\t    var parentEl, targetEl;\n\t\t\t\t    targetEl = document.querySelector(selector);\n\t\t\t\t    if (!targetEl) {\n\t\t\t\t        throw \"Invalid selector \" + selector;\n\t\t\t\t    }\n\t\t\t\t    parentEl = document.querySelector(parentSelector);\n\t\t\t\t    if (!parentEl) {\n\t\t\t\t        throw \"Invalid parent selector \" + parentSelector;\n\t\t\t\t    }\n\t\t\t\t    var parentElStyle = window.getComputedStyle(parentEl);\n\t\t\t\t    parentEl = parentElStyle['overflow'] === 'auto' ? parentEl : document.body;\n\t\t\t\t    var currentScrollTop = parentEl.scrollTop;\n\t\t\t\t    var targetOffsetTop = targetEl.offsetTop;\n\t\t\t\t    if (parentEl === document.body) {\n\t\t\t\t        var bodyRect = document.body.getBoundingClientRect();\n\t\t\t\t        var targetRect = targetEl.getBoundingClientRect();\n\t\t\t\t        targetOffsetTop = targetRect.top - bodyRect.top;\n\t\t\t\t    }\n\t\t\t\t    var step = Math.ceil((targetOffsetTop - currentScrollTop) / 10);\n\t\t\t\t    (function loop(i) {\n\t\t\t\t        setTimeout(function main() {\n\t\t\t\t            parentEl.scrollTop += step;\n\t\t\t\t            i > 1 && loop(i - 1);\n\t\t\t\t        }, 50);\n\t\t\t\t    }(10));\n\t\t\t\t}\n\t\t\t\texports.scrollTo = scrollTo;\n\t\t\t\n\t\t\t\n\t\t\t/***/ },\n\t\t\t/* 3 */\n\t\t\t/***/ function(module, exports) {\n\t\t\t\n\t\t\t\t\"use strict\";\n\t\t\t\t/**\n\t\t\t\t * Returns an element is visible within outer element\n\t\t\t\t * @param innerEl\n\t\t\t\t * @param outerEl\n\t\t\t\t * @param adjustment\n\t\t\t\t * @returns {{top: boolean, bottom: boolean, left: boolean, right: boolean}}\n\t\t\t\t */\n\t\t\t\tfunction elementVisible(innerEl, outerEl, adjustment) {\n\t\t\t\t    var innerRect = innerEl.getBoundingClientRect();\n\t\t\t\t    var bottomAdjustment = (adjustment && adjustment.bottom || 0);\n\t\t\t\t    if (outerEl === window) {\n\t\t\t\t        return {\n\t\t\t\t            top: innerRect.bottom - bottomAdjustment > window.innerHeight\n\t\t\t\t                && innerRect.top < window.innerHeight,\n\t\t\t\t            bottom: innerRect.bottom - bottomAdjustment > 0\n\t\t\t\t                && innerRect.bottom < window.innerHeight,\n\t\t\t\t            left: innerRect.right > window.innerWidth\n\t\t\t\t                && innerRect.left < window.innerWidth,\n\t\t\t\t            right: innerRect.right > 0\n\t\t\t\t                && innerRect.right < window.innerWidth\n\t\t\t\t        };\n\t\t\t\t    }\n\t\t\t\t    else {\n\t\t\t\t        var outerRect = outerEl.getBoundingClientRect();\n\t\t\t\t        var defaultView = (innerEl.ownerDocument || document).defaultView;\n\t\t\t\t        var computedStyle = defaultView.getComputedStyle(outerEl, null);\n\t\t\t\t        var outerRectBorderTopWidth = parseInt(computedStyle.getPropertyValue('border-top-width'), 10);\n\t\t\t\t        var outerRectBorderLeftWidth = parseInt(computedStyle.getPropertyValue('border-left-width'), 10);\n\t\t\t\t        /* top is visible or bottom is visible */\n\t\t\t\t        var topVisible = (innerRect.top >= outerRect.top\n\t\t\t\t            && innerRect.top < outerRect.bottom);\n\t\t\t\t        var bottomVisible = (innerRect.bottom > (outerRect.top + outerRectBorderTopWidth)\n\t\t\t\t            && innerRect.bottom < outerRect.bottom);\n\t\t\t\t        var leftVisible = (innerRect.left >= outerRect.left\n\t\t\t\t            && innerRect.left < outerRect.right);\n\t\t\t\t        var rightVisible = (innerRect.right > (outerRect.left + outerRectBorderLeftWidth)\n\t\t\t\t            && innerRect.right < outerRect.right);\n\t\t\t\t        return {\n\t\t\t\t            top: topVisible,\n\t\t\t\t            bottom: bottomVisible,\n\t\t\t\t            left: leftVisible,\n\t\t\t\t            right: rightVisible\n\t\t\t\t        };\n\t\t\t\t    }\n\t\t\t\t}\n\t\t\t\texports.elementVisible = elementVisible;\n\t\t\t\n\t\t\t\n\t\t\t/***/ },\n\t\t\t/* 4 */\n\t\t\t/***/ function(module, exports) {\n\t\t\t\n\t\t\t\t\"use strict\";\n\t\t\t\t/**\n\t\t\t\t * returns coumputed style of given element\n\t\t\t\t * @param el\n\t\t\t\t * @param styleProp\n\t\t\t\t * @returns {any}\n\t\t\t\t */\n\t\t\t\tfunction computedStyle(el, styleProp) {\n\t\t\t\t    var value, defaultView = (el.ownerDocument || document).defaultView;\n\t\t\t\t    // W3C standard way:\n\t\t\t\t    if (defaultView && defaultView.getComputedStyle) {\n\t\t\t\t        // sanitize property name to css notation\n\t\t\t\t        // (hypen separated words eg. font-Size)\n\t\t\t\t        styleProp = styleProp.replace(/([A-Z])/g, \"-$1\").toLowerCase();\n\t\t\t\t        return defaultView.getComputedStyle(el, null).getPropertyValue(styleProp);\n\t\t\t\t    }\n\t\t\t\t    else if (el['currentStyle']) {\n\t\t\t\t        // sanitize property name to camelCase\n\t\t\t\t        styleProp = styleProp.replace(/\\-(\\w)/g, function (str, letter) {\n\t\t\t\t            return letter.toUpperCase();\n\t\t\t\t        });\n\t\t\t\t        value = el['currentStyle'][styleProp];\n\t\t\t\t        // convert other units to pixels on IE\n\t\t\t\t        if (/^\\d+(em|pt|%|ex)?$/i.test(value)) {\n\t\t\t\t            return (function (value) {\n\t\t\t\t                var oldLeft = el.style.left, oldRsLeft = el['runtimeStyle'].left;\n\t\t\t\t                el['runtimeStyle'].left = el['currentStyle'].left;\n\t\t\t\t                el.style.left = value || 0;\n\t\t\t\t                value = el.style['pixelLeft'] + \"px\";\n\t\t\t\t                el.style.left = oldLeft;\n\t\t\t\t                el['runtimeStyle'].left = oldRsLeft;\n\t\t\t\t                return value;\n\t\t\t\t            })(value);\n\t\t\t\t        }\n\t\t\t\t        return value;\n\t\t\t\t    }\n\t\t\t\t}\n\t\t\t\texports.computedStyle = computedStyle;\n\t\t\t\n\t\t\t\n\t\t\t/***/ },\n\t\t\t/* 5 */\n\t\t\t/***/ function(module, exports) {\n\t\t\t\n\t\t\t\t\"use strict\";\n\t\t\t\tfunction outerWidth(el) {\n\t\t\t\t    var style = getComputedStyle(el);\n\t\t\t\t    return el.offsetWidth +\n\t\t\t\t        parseInt(style.getPropertyValue('margin-left')) +\n\t\t\t\t        parseInt(style.getPropertyValue('margin-right'));\n\t\t\t\t}\n\t\t\t\texports.outerWidth = outerWidth;\n\t\t\t\n\t\t\t\n\t\t\t/***/ },\n\t\t\t/* 6 */\n\t\t\t/***/ function(module, exports) {\n\t\t\t\n\t\t\t\t\"use strict\";\n\t\t\t\tfunction outerHeight(el) {\n\t\t\t\t    var style = getComputedStyle(el);\n\t\t\t\t    return el.offsetHeight +\n\t\t\t\t        parseInt(style.getPropertyValue('margin-top')) +\n\t\t\t\t        parseInt(style.getPropertyValue('margin-bottom'));\n\t\t\t\t}\n\t\t\t\texports.outerHeight = outerHeight;\n\t\t\t\n\t\t\t\n\t\t\t/***/ }\n\t\t\t/******/ ])\n\t\t\t});\n\t\t\t;\n\t\t\t//# sourceMappingURL=ng2-utils.umd.js.map\n\t\t\n\t\t/***/ }\n\t\t/******/ ])\n\t\t});\n\t\t;\n\t\t//# sourceMappingURL=ng2-infinite-list.umd.js.map\n\t\n\t/***/ }\n\t/******/ ])\n\t});\n\t;\n\t//# sourceMappingURL=ng2-ui.umd.js.map\n\n/***/ },\n\n/***/ 70:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<header class=\\\"masthead\\\">\\n  <div class=\\\"container bg-blue border-0 w-980\\\">\\n    <a href=\\\"/\\\" class=\\\"logo left text-white\\\">\\n      <img class=\\\"v-middle\\\" src=\\\"https://avatars1.githubusercontent.com/u/20460529?v=3&s=32\\\" />\\n      <span>NG2-UI</span>\\n    </a>\\n    <repo-info class=\\\"masthead-nav right\\\" numbers-section=\\\"1\\\"></repo-info>\\n  </div>\\n</header>\\n<div class=\\\"main container\\\">\\n  <div class=\\\"columns\\\">\\n    <div class=\\\"drawer one-fourth column\\\">\\n      <drawer-component class=\\\"drawer shadow-1\\\"></drawer-component>\\n      <repo-info contributors-section=\\\"1\\\"></repo-info>\\n    </div>\\n    <div class=\\\"three-fourths column markdown-body\\\">\\n      <router-outlet></router-outlet>\\n    </div>\\n  </div>\\n  <footer class=\\\"footer\\\">\\n    <div>\\n      Copyright Allen Kim 2016, 2017.<br>\\n      Created and maintained by Allen Kim.\\n    </div>\\n  </footer>\\n</div>\\n\"\n\n/***/ },\n\n/***/ 71:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(2);\n\tvar DrawerComponent = (function () {\n\t    function DrawerComponent() {\n\t    }\n\t    return DrawerComponent;\n\t}());\n\tDrawerComponent = __decorate([\n\t    core_1.Component({\n\t        selector: 'drawer-component',\n\t        template: \"\\n    <ul class=\\\"menu\\\">\\n      <li class=\\\"menu-item\\\" routerLinkActive=\\\"selected\\\"><a routerLink=\\\"/getting-started\\\">Getting Started</a>\\n      <li class=\\\"menu-item components\\\">\\n        <div class=\\\"pb-3\\\">Components</div>\\n        <ul class=\\\"menu \\\">\\n          <li class=\\\"menu-item\\\" routerLinkActive=\\\"selected\\\"><a routerLink=\\\"/auto-complete\\\">Auto Complete</a>\\n          <li class=\\\"menu-item\\\" routerLinkActive=\\\"selected\\\"><a routerLink=\\\"/datetime-picker\\\">Datetime Picker</a>\\n          <li class=\\\"menu-item\\\" routerLinkActive=\\\"selected\\\"><a routerLink=\\\"/google-map\\\">Google Map</a>\\n          <li class=\\\"menu-item\\\" routerLinkActive=\\\"selected\\\"><a routerLink=\\\"/infinite-list\\\">Infinite List</a>\\n          <li class=\\\"menu-item\\\" routerLinkActive=\\\"selected\\\"><a routerLink=\\\"/tab\\\">Tab</a>\\n          <li class=\\\"menu-item\\\" routerLinkActive=\\\"selected\\\"><a routerLink=\\\"/accordion\\\">Accordion </a>\\n          <li class=\\\"menu-item\\\" routerLinkActive=\\\"selected\\\"><a routerLink=\\\"/tooltip\\\">Tooltip</a>\\n          <li class=\\\"menu-item\\\" routerLinkActive=\\\"selected\\\"><a routerLink=\\\"/menu\\\">Menu</a>\\n          <li class=\\\"menu-item\\\" routerLinkActive=\\\"selected\\\"><a routerLink=\\\"/parallax\\\">Parallax Scroll</a>\\n          <li class=\\\"menu-item\\\" routerLinkActive=\\\"selected\\\"><a routerLink=\\\"/overlay\\\">Overlay</a>\\n          <li class=\\\"menu-item\\\" routerLinkActive=\\\"selected\\\"><a routerLink=\\\"/popup\\\">Popup</a>\\n          <li class=\\\"menu-item\\\" routerLinkActive=\\\"selected\\\"><a routerLink=\\\"/scrollable\\\">Scrollable</a>\\n          <li class=\\\"menu-item\\\" routerLinkActive=\\\"selected\\\"><a routerLink=\\\"/sortable\\\">Sortable</a>\\n          <li class=\\\"menu-item\\\" routerLinkActive=\\\"selected\\\"><a routerLink=\\\"/sticky\\\">Sticky Section</a>\\n        </ul>\\n      <li class=\\\"menu-item\\\"><a href=\\\"https://github.com/ng2-ui/ng2-ui/issues\\\">Help</a>\\n    </ul>\\n  \"\n\t    }),\n\t    __metadata(\"design:paramtypes\", [])\n\t], DrawerComponent);\n\texports.DrawerComponent = DrawerComponent;\n\n\n/***/ },\n\n/***/ 72:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(2);\n\tvar router_1 = __webpack_require__(31);\n\tvar http_cache_1 = __webpack_require__(73);\n\tvar RepoInfoComponent = (function () {\n\t    function RepoInfoComponent(router, httpCache) {\n\t        var _this = this;\n\t        this.router = router;\n\t        this.httpCache = httpCache;\n\t        router.events.subscribe(function (event) {\n\t            if (event instanceof router_1.NavigationStart) {\n\t                _this.currentUrl = event.url;\n\t                if (_this.repositories) {\n\t                    _this.update();\n\t                }\n\t            }\n\t        });\n\t    }\n\t    RepoInfoComponent.prototype.ngOnInit = function () {\n\t        var _this = this;\n\t        this.httpCache.get('https://api.github.com/users/ng2-ui/repos')\n\t            .subscribe(function (resp) {\n\t            _this.repositories = resp;\n\t            _this.update();\n\t        });\n\t    };\n\t    RepoInfoComponent.prototype.update = function () {\n\t        var _this = this;\n\t        var currentRepoUrl = this.getCurrentRepoUrl();\n\t        for (var i = 0; i < this.repositories.length; i++) {\n\t            var repo = this.repositories[i];\n\t            if (repo.url === currentRepoUrl) {\n\t                this.currentRepo = repo;\n\t                break;\n\t            }\n\t        }\n\t        this.getContributors(currentRepoUrl).subscribe(function (resp) {\n\t            _this.contributors = resp;\n\t        });\n\t    };\n\t    RepoInfoComponent.prototype.getContributors = function (repoUrl) {\n\t        return this.httpCache.get(repoUrl + '/contributors');\n\t    };\n\t    RepoInfoComponent.prototype.getCurrentRepoUrl = function () {\n\t        switch (this.currentUrl) {\n\t            case '/auto-complete': return 'https://api.github.com/repos/ng2-ui/ng2-auto-complete';\n\t            case '/datetime-picker': return 'https://api.github.com/repos/ng2-ui/ng2-datetime-picker';\n\t            case '/google-map': return 'https://api.github.com/repos/ng2-ui/ng2-map';\n\t            case '/infinite-list': return 'https://api.github.com/repos/ng2-ui/ng2-infinite-list';\n\t            case '/tab': return 'https://api.github.com/repos/ng2-ui/ng2-tab';\n\t            case '/accordion': return 'https://api.github.com/repos/ng2-ui/ng2-collapsable';\n\t            case '/tooltip': return 'https://api.github.com/repos/ng2-ui/ng2-tooltip-overlay';\n\t            case '/menu': return 'https://api.github.com/repos/ng2-ui/ng2-menu';\n\t            case '/parallax': return 'https://api.github.com/repos/ng2-ui/ng2-parallax-scroll';\n\t            case '/popup': return 'https://api.github.com/repos/ng2-ui/ng2-popup';\n\t            case '/scrollable': return 'https://api.github.com/repos/ng2-ui/ng2-scrollable';\n\t            case '/sortable': return 'https://api.github.com/repos/ng2-ui/ng2-ui-sortable';\n\t            case '/sticky': return 'https://api.github.com/repos/ng2-ui/ng2-sticky';\n\t            default: return 'https://api.github.com/repos/ng2-ui/ng2-ui';\n\t        }\n\t    };\n\t    return RepoInfoComponent;\n\t}());\n\t__decorate([\n\t    core_1.Input('contributors-section'),\n\t    __metadata(\"design:type\", String)\n\t], RepoInfoComponent.prototype, \"contributorsSection\", void 0);\n\t__decorate([\n\t    core_1.Input('numbers-section'),\n\t    __metadata(\"design:type\", String)\n\t], RepoInfoComponent.prototype, \"numbersSection\", void 0);\n\tRepoInfoComponent = __decorate([\n\t    core_1.Component({\n\t        selector: 'repo-info',\n\t        template: \"\\n    <div *ngIf=\\\"numbersSection\\\">\\n      <div *ngIf=\\\"currentUrl && currentRepo\\\">\\n        <span class=\\\"numbers d-inline-block\\\">\\n          <button class=\\\"btn btn-sm\\\">\\n            <a href=\\\"{{currentRepo.html_url}}\\\">\\n              <span class=\\\"octicon octicon-repo\\\"></span>\\n              {{currentUrl.replace('/','')}}\\n            </a>\\n          </button>\\n        </span>\\n        \\n        <span class=\\\"numbers d-inline-block\\\">\\n          <button class=\\\"btn btn-sm btn-with-count\\\">\\n            <a href=\\\"{{currentRepo.html_url}}\\\">\\n              <span class=\\\"octicon octicon-star\\\"></span>\\n              Star           \\n            </a>\\n          </button>\\n          <a class=\\\"social-count\\\" \\n            href=\\\"{{currentRepo.html_url}}/stargazers\\\">\\n            {{currentRepo.stargazers_count}}\\n          </a>\\n        </span>\\n        \\n        <span class=\\\"numbers d-inline-block\\\">\\n          <button class=\\\"btn btn-sm\\\">\\n            <a href=\\\"{{currentRepo.html_url}}/issues\\\">\\n              <span class=\\\"octicon octicon-issue-opened\\\"></span>\\n              {{currentRepo.open_issues}}\\n              Issues\\n            </a>\\n          </button>\\n        </span>\\n      </div>\\n    </div>\\n    \\n    <div *ngIf=\\\"contributorsSection\\\"\\n      class=\\\"container p-3 border\\\">\\n      <h3>Contributors</h3> \\n      <ul *ngIf=\\\"contributors\\\">\\n        <li class=\\\"contributor\\\" *ngFor=\\\"let user of contributors\\\">\\n          <a href=\\\"{{user.html_url}}\\\">\\n           <img src=\\\"{{user.avatar_url}}\\\" height=\\\"64\\\" /> <br/>\\n           <div class=\\\"name\\\">{{user.login}}</div>\\n          </a>\\n        </li>\\n        <li class=\\\"contributor\\\">\\n          <a href=\\\"{{currentRepo.html_url}}\\\">\\n           <div class=\\\"you\\\">You</div><br/>\\n           <div class=\\\"name\\\">Your Name</div>\\n          </a>\\n        </li>\\n      </ul>\\n    </div>\\n  \"\n\t    }),\n\t    __metadata(\"design:paramtypes\", [router_1.Router, http_cache_1.HttpCache])\n\t], RepoInfoComponent);\n\texports.RepoInfoComponent = RepoInfoComponent;\n\n\n/***/ },\n\n/***/ 73:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(2);\n\tvar Rx_1 = __webpack_require__(74);\n\tvar http_1 = __webpack_require__(29);\n\tvar ng2_storage_1 = __webpack_require__(359);\n\tvar HttpCache = (function () {\n\t    function HttpCache(http, storage) {\n\t        this.http = http;\n\t        this.storage = storage;\n\t    }\n\t    HttpCache.prototype.get = function (url) {\n\t        var _this = this;\n\t        var cached;\n\t        if (cached = this.storage.getItem(url)) {\n\t            return Rx_1.Observable.of(cached);\n\t        }\n\t        else {\n\t            return this.http.get(url)\n\t                .map(function (resp) {\n\t                _this.storage.setItem(url, resp.text());\n\t                return resp.json();\n\t            });\n\t        }\n\t    };\n\t    return HttpCache;\n\t}());\n\tHttpCache = __decorate([\n\t    core_1.Injectable(),\n\t    __metadata(\"design:paramtypes\", [http_1.Http,\n\t        ng2_storage_1.Ng2Storage])\n\t], HttpCache);\n\texports.HttpCache = HttpCache;\n\n\n/***/ },\n\n/***/ 359:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(2);\n\tvar MemoryStorage = (function () {\n\t    function MemoryStorage() {\n\t        this.data = {};\n\t    }\n\t    Object.defineProperty(MemoryStorage.prototype, \"length\", {\n\t        get: function () { return Object.keys(this.data).length; },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    MemoryStorage.prototype.getItem = function (key) { return this.data[key]; };\n\t    MemoryStorage.prototype.setItem = function (key, value) { this.data[key] = value; };\n\t    MemoryStorage.prototype.removeItem = function (key) { delete this.data[key]; };\n\t    MemoryStorage.prototype.clear = function () { this.data = {}; };\n\t    MemoryStorage.prototype.key = function (num) { return Object.keys(this.data)[num]; };\n\t    return MemoryStorage;\n\t}());\n\tvar Ng2Storage = (function () {\n\t    function Ng2Storage() {\n\t        // preference && (this.preference = preference);   //'localStorage' or 'sessionStorage'\n\t        this.preference = 'sessionStorage';\n\t        if (this.preference == 'localStorage' && this.hasStorage('localStorage')) {\n\t            this.storage = window.localStorage;\n\t        }\n\t        else if (this.preference == 'sessionStorage' && this.hasStorage('sessionStorage')) {\n\t            this.storage = window.sessionStorage;\n\t        }\n\t        else {\n\t            this.storage = new MemoryStorage();\n\t        }\n\t    }\n\t    Object.defineProperty(Ng2Storage.prototype, \"length\", {\n\t        get: function () { return this.storage.length; },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Ng2Storage.prototype.getItem = function (key) {\n\t        var strValue = this.storage.getItem(key);\n\t        try {\n\t            return JSON.parse(strValue);\n\t        }\n\t        catch (e) {\n\t            return strValue;\n\t        }\n\t    };\n\t    Ng2Storage.prototype.setItem = function (key, value) {\n\t        var strValue = typeof value === 'object' ? JSON.stringify(value) : value.toString();\n\t        this.storage.setItem(key, strValue);\n\t    };\n\t    Ng2Storage.prototype.removeItem = function (key) { this.storage.removeItem(key); };\n\t    Ng2Storage.prototype.clear = function () { this.storage.clear(); };\n\t    Ng2Storage.prototype.hasStorage = function (name) {\n\t        try {\n\t            window[name].setItem('test', '1');\n\t            window[name].removeItem('test');\n\t            return true;\n\t        }\n\t        catch (e) {\n\t            return false;\n\t        }\n\t    };\n\t    return Ng2Storage;\n\t}());\n\tNg2Storage = __decorate([\n\t    core_1.Injectable(),\n\t    __metadata(\"design:paramtypes\", [])\n\t], Ng2Storage);\n\texports.Ng2Storage = Ng2Storage;\n\n\n/***/ },\n\n/***/ 360:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar router_1 = __webpack_require__(31);\n\tvar components_route_1 = __webpack_require__(361);\n\tvar getting_started_component_1 = __webpack_require__(376);\n\texports.routes = [\n\t    { path: 'getting-started', component: getting_started_component_1.GettingStartedComponent }\n\t].concat(components_route_1.ComponentsRoutes, [\n\t    { path: '', redirectTo: '/getting-started', pathMatch: 'full' }\n\t]);\n\texports.APP_ROUTER_PROVIDERS = router_1.RouterModule.forRoot(exports.routes);\n\n\n/***/ },\n\n/***/ 361:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar accordion_component_1 = __webpack_require__(362);\n\tvar datetime_picker_component_1 = __webpack_require__(363);\n\tvar google_map_component_1 = __webpack_require__(364);\n\tvar infinite_list_component_1 = __webpack_require__(365);\n\tvar overlay_component_1 = __webpack_require__(366);\n\tvar parallax_scroll_component_1 = __webpack_require__(367);\n\tvar popup_component_1 = __webpack_require__(368);\n\tvar scrollable_component_1 = __webpack_require__(369);\n\tvar sticky_component_1 = __webpack_require__(370);\n\tvar tab_component_1 = __webpack_require__(371);\n\tvar tooltip_component_1 = __webpack_require__(372);\n\tvar auto_complete_component_1 = __webpack_require__(373);\n\tvar menu_component_1 = __webpack_require__(374);\n\tvar sortable_component_1 = __webpack_require__(375);\n\texports.ComponentsRoutes = [\n\t    { path: 'auto-complete', component: auto_complete_component_1.AutoCompleteComponent },\n\t    { path: 'datetime-picker', component: datetime_picker_component_1.DatetimePickerComponent },\n\t    { path: 'google-map', component: google_map_component_1.GoogleMapComponent },\n\t    { path: 'infinite-list', component: infinite_list_component_1.InfiniteListComponent },\n\t    { path: 'tab', component: tab_component_1.TabComponent },\n\t    { path: 'accordion', component: accordion_component_1.AccordionComponent },\n\t    { path: 'tooltip', component: tooltip_component_1.TooltipComponent },\n\t    { path: 'menu', component: menu_component_1.MenuComponent },\n\t    { path: 'overlay', component: overlay_component_1.OverlayComponent },\n\t    { path: 'parallax', component: parallax_scroll_component_1.ParallaxScrollComponent },\n\t    { path: 'popup', component: popup_component_1.PopupComponent },\n\t    { path: 'scrollable', component: scrollable_component_1.ScrollableComponent },\n\t    { path: 'sticky', component: sticky_component_1.StickyComponent },\n\t    { path: 'sortable', component: sortable_component_1.SortableComponent }\n\t];\n\n\n/***/ },\n\n/***/ 362:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(2);\n\tvar code = {};\n\tcode.html = \"\\n  <div ng2-collapsable\\n    selected=\\\"js\\\"\\n    selected-index-class=\\\"selected\\\"\\n    selected-contents-class=\\\"selected\\\">\\n    <div index=\\\"html\\\">HTML</div>\\n    <div contents=\\\"html\\\">HTML {{foo}}</div>\\n    \\n    <div index=\\\"js\\\">Javascript</div>\\n    <div contents=\\\"js\\\">Javascript {{bar}}</div>\\n    \\n    <div index=\\\"css\\\">Css</div>\\n    <div contents=\\\"css\\\">Style Sheet</div>\\n  </div>\";\n\tcode.js = \"\\n  import { Component } from '@angular/core';\\n\\n  @Component({\\n    templateUr: 'app.html'\\n  })\\n  export class AppComponent {\\n    foo: any = 'foo';\\n    bar: any = 'bar';\\n  }\";\n\tvar AccordionComponent = (function () {\n\t    function AccordionComponent() {\n\t        this.foo = 'foo';\n\t        this.bar = 'bar';\n\t        this.code = code;\n\t    }\n\t    AccordionComponent.prototype.ngAfterViewInit = function () {\n\t        window.scroll(0, 0);\n\t    };\n\t    return AccordionComponent;\n\t}());\n\tAccordionComponent = __decorate([\n\t    core_1.Component({\n\t        template: \"\\n    <div class=\\\"container page-title\\\">\\n      <h1>Accordion</h1>\\n    </div>\\n    <div class=\\\"container\\\">\\n      \" + code.html + \"\\n      <div class=\\\"spacer x2\\\"></div>\\n      <div ng2-tab> \\n        <div class=\\\"tabs\\\">\\n          <div index=\\\"html\\\">HTML</div>\\n          <div index=\\\"js\\\">Javascript</div>\\n        </div>\\n        <div class=\\\"tab-contents\\\">\\n          <div contents=\\\"html\\\">\\n            <pre>{{code.html | htmlCode}}</pre>\\n          </div>\\n          <div contents=\\\"js\\\">\\n            <pre>{{code.js | htmlCode }}</pre>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\"\n\t    }),\n\t    __metadata(\"design:paramtypes\", [])\n\t], AccordionComponent);\n\texports.AccordionComponent = AccordionComponent;\n\n\n/***/ },\n\n/***/ 363:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(2);\n\tvar code = { title: [], html: [], js: [] };\n\tcode.title[0] = \"Date/Time Both\";\n\tcode.html[0] = \"\\n  <input\\n    [(ngModel)]=\\\"date1\\\" \\n    ng2-datetime-picker />\\n  date2: {{date2}}\\n\";\n\tcode.js[0] = \"\\n  import { Component } from '@angular/core';\\n  @Component({\\n    selector: 'my-app',\\n    template: require('./myapp.html'),\\n  })\\n  export classAppComponent {\\n    date1 = null;\\n  }\\n\";\n\tcode.title[1] = \"Min Date, Max Date, and Disabled Dates\";\n\tcode.html[1] = \"\\n  <input\\n    [(ngModel)]=\\\"date2\\\" \\n    ng2-datetime-picker\\n    [disabled-dates]=\\\"date2DisabledDates\\\"\\n    [min-date]=\\\"date2MinDate\\\"\\n    [max-date]=\\\"date2MaxDate\\\"\\n    date-only=\\\"true\\\" />\\n  date2: {{date2}}\\n\";\n\tcode.js[1] = \"\\n  import { Component } from '@angular/core';\\n  @Component({\\n    selector: 'my-app',\\n    template: require('./myapp.html'),\\n  })\\n  export classAppComponent {\\n    date2 = new Date(2017, 0, 28);\\n    date2DisabledDates = [new Date(2017, 0, 10), new Date(2017, 0, 20)];\\n    date2MinDate = new Date(2017, 0, 1);\\n    date2MaxDate = new Date(2017, 11, 31);\\n  }\\n\";\n\t//timeonly\n\tcode.title[2] = \"Time Only\";\n\tcode.html[2] = \"\\n  <input [(ngModel)]=\\\"date3\\\"\\n    ng2-datetime-picker \\n    date-format=\\\"DD-MM-YYYY hh:mm\\\"\\n    time-only=\\\"true\\\"\\n    minute-step=\\\"5\\\"\\n    close-on-select=\\\"false\\\" />\";\n\tcode.js[2] = \"\\n  import { Component } from '@angular/core';\\n  @Component({\\n    selector: 'my-app',\\n    template: require('./myapp.html'),\\n  })\\n  export classAppComponent {\\n    date3 = new Date(\\\"Thu Jan 01 2015 00:00:00 GMT-0500 (EST)\\\");\\n  }\\n\";\n\tvar DatetimePickerComponent = (function () {\n\t    function DatetimePickerComponent() {\n\t        this.code = code;\n\t        this.date1 = null;\n\t        this.date1DefaultValue = new Date(2014, 11, 31, 21, 45, 59);\n\t        this.date2 = new Date(2017, 0, 28);\n\t        this.date2DisabledDates = [new Date(2017, 0, 10), new Date(2017, 0, 20)];\n\t        this.date2MinDate = new Date(2017, 0, 1);\n\t        this.date2MaxDate = new Date(2017, 11, 31);\n\t        this.date3 = new Date(\"Thu Jan 01 2015 00:00:00 GMT-0500 (EST)\");\n\t    }\n\t    DatetimePickerComponent.prototype.ngAfterViewInit = function () {\n\t        window.scroll(0, 0);\n\t    };\n\t    return DatetimePickerComponent;\n\t}());\n\tDatetimePickerComponent = __decorate([\n\t    core_1.Component({\n\t        template: \"\\n    <div class=\\\"container page-title\\\">\\n      <h1>Datetime Picker</h1>\\n    </div>\\n    \\n    <div class=\\\"container\\\">\\n      <p>\\n        Datetime picker converts input field into datetime selector by simply adding \\\"ng2-datetime-picker\\\" as an attribute.\\n      </p> \\n    \\n      <h2> {{code.title[0]}} </h2>\\n      <div class=\\\"spacer x3\\\"></div>\\n      <div class=\\\"container round-border\\\">\\n        <p>\" + code.html[0] + \"\\n        <ng2-tab>\\n          <div class=\\\"tabs\\\">\\n             <div index=\\\"html\\\">HTML</div>\\n             <div index=\\\"js\\\">Javascript</div>\\n           </div> \\n           <div class=\\\"tab-contents\\\">\\n             <div contents=\\\"html\\\">\\n               <pre><code>{{code.html[0]}}</code></pre>\\n             </div>\\n             <div contents=\\\"js\\\">\\n               <pre><code>{{code.js[0]}}</code></pre>\\n             </div>\\n           </div>\\n        </ng2-tab>\\n      </div>\\n      <div class=\\\"spacer x4\\\"></div>\\n      \\n      <h2> {{code.title[1]}} </h2>\\n      <div class=\\\"spacer x3\\\"></div>\\n      <div class=\\\"container round-border\\\">\\n        <p>\" + code.html[1] + \"\\n        <ng2-tab>\\n          <div class=\\\"tabs\\\">\\n             <div index=\\\"html\\\">HTML</div>\\n             <div index=\\\"js\\\">Javascript</div>\\n           </div> \\n           <div class=\\\"tab-contents\\\">\\n             <div contents=\\\"html\\\">\\n               <pre><code>{{code.html[1]}}</code></pre>\\n             </div>\\n             <div contents=\\\"js\\\">\\n               <pre><code>{{code.js[1]}}</code></pre>\\n             </div>\\n           </div>\\n        </ng2-tab>\\n      </div>\\n      <div class=\\\"spacer x4\\\"></div>\\n        \\n      <h2> {{code.title[2]}} </h2>\\n      <div class=\\\"spacer x3\\\"></div>\\n      <div class=\\\"container round-border\\\">\\n        <p>\" + code.html[2] + \"\\n        <ng2-tab>\\n          <div class=\\\"tabs\\\">\\n             <div index=\\\"html\\\">HTML</div>\\n             <div index=\\\"js\\\">Javascript</div>\\n           </div> \\n           <div class=\\\"tab-contents\\\">\\n             <div contents=\\\"html\\\">\\n               <pre><code>{{code.html[2]}}</code></pre>\\n             </div>\\n             <div contents=\\\"js\\\">\\n               <pre><code>{{code.js[2]}}</code></pre>\\n             </div>\\n           </div>\\n        </ng2-tab>\\n      </div>\\n      <div class=\\\"spacer x4\\\"></div>\\n        \\n    </div>\"\n\t    }),\n\t    __metadata(\"design:paramtypes\", [])\n\t], DatetimePickerComponent);\n\texports.DatetimePickerComponent = DatetimePickerComponent;\n\n\n/***/ },\n\n/***/ 364:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(2);\n\tvar code = { title: [], html: [], js: [] };\n\tcode.title[0] = \"Map With Dynamic Markers\";\n\tcode.html[0] = \"\\n  <ng2-map zoom=\\\"13\\\" center=\\\"Brampton, Canada\\\" scrollwheel=\\\"false\\\">\\n    <marker *ngFor=\\\"let pos of positions\\\" [position]=\\\"pos\\\"></marker>\\n  </ng2-map>\\n\";\n\tcode.js[0] = \"\\n  import { Component } from '@angular/core';\\n\\n  @Component({\\n    template: require('./app.html')\\n  })\\n  class AppCompoment {\\n    public positions=[];\\n    \\n    showRandomMarkers() {\\n      let randomLat: number, randomLng: number;\\n\\n      this.positions = [];\\n      for (let i=0; i<9; i++) {\\n        randomLat = Math.random() * (43.7399 - 43.7300) + 43.7300;\\n        randomLng = Math.random() * (-79.7600 - -79.7699) + -79.7699;\\n        this.positions.push([randomLat, randomLng]);\\n      }\\n    }\\n  }\\n\";\n\tcode.title[1] = \"Simple Map\";\n\tcode.html[1] = \"\\n  <ng2-map center=\\\"Brampton, Canada\\\" scrollwheel=\\\"false\\\">\\n  </ng2-map>\\n\";\n\tcode.js[1] = \"\\n  import { Component } from '@angular/core';\\n\\n  @Component({\\n    template: require('./app.html')\\n  })\\n  class AppCompoment {}\\n\";\n\tcode.title[2] = \"Simple Marker\";\n\tcode.html[2] = \"\\n  <ng2-map center=\\\"Brampton, Canada\\\" >\\n    <marker position=\\\"Brampton, Canada\\\"\\n      draggable=\\\"true\\\"></marker>\\n  </ng2-map>\\n\";\n\tcode.js[2] = \"\\n  import { Component } from '@angular/core';\\n\\n  @Component({\\n    template: require('./app.html')\\n  })\\n  class AppCompoment {}\\n\";\n\tcode.title[3] = \"Simple InfoWindow\";\n\tcode.html[3] = \"\\n  <ng2-map center=\\\"Brampton, Canada\\\">\\n    <marker position=\\\"Brampton, Canada\\\" \\n      draggable=\\\"true\\\" \\n      (click)=\\\"clicked($event)\\\">\\n    </marker>\\n    <info-window id=\\\"iw\\\">\\n      lat: [[lat]], lng: [[lng]]\\n    </info-window>\\n  </ng2-map>\\n\";\n\tcode.js[3] = \"\\n  import { Component } from '@angular/core';\\n\\n  @Component({\\n    template: require('./app.html')\\n  })\\n  class AppCompoment {\\n    clicked(event) {\\n      let marker = event.target;\\n      marker.ng2MapComponent.openInfoWindow('iw', marker, {\\n        lat: marker.getPosition().lat(), \\n        lng: marker.getPosition().lng(),\\n      });\\n    }\\n  }\\n\";\n\tvar GoogleMapComponent = (function () {\n\t    function GoogleMapComponent() {\n\t        this.positions = [];\n\t        this.code = code;\n\t    }\n\t    GoogleMapComponent.prototype.ngAfterViewInit = function () {\n\t        window.scroll(0, 0);\n\t    };\n\t    GoogleMapComponent.prototype.clicked = function (event) {\n\t        var marker = event.target;\n\t        marker.ng2MapComponent.openInfoWindow('iw', marker, {\n\t            lat: marker.getPosition().lat(),\n\t            lng: marker.getPosition().lng(),\n\t        });\n\t    };\n\t    GoogleMapComponent.prototype.showRandomMarkers = function () {\n\t        var randomLat, randomLng;\n\t        this.positions = [];\n\t        for (var i = 0; i < 9; i++) {\n\t            randomLat = Math.random() * (43.7399 - 43.7300) + 43.7300;\n\t            randomLng = Math.random() * (-79.7600 - -79.7699) + -79.7699;\n\t            this.positions.push([randomLat, randomLng]);\n\t        }\n\t    };\n\t    return GoogleMapComponent;\n\t}());\n\tGoogleMapComponent = __decorate([\n\t    core_1.Component({\n\t        template: \"\\n    <div class=\\\"container page-title\\\" xmlns=\\\"http://www.w3.org/1999/html\\\">\\n      <h1>Google Map</h1>\\n    </div>\\n    <div class=\\\"container\\\">\\n    \\n      <h2> {{code.title[0]}} </h2>\\n      <div class=\\\"spacer x3\\\"></div>\\n      <div class=\\\"container round-border\\\">\\n        <!--<p>\" + code.html[0] + \"-->\\n        <ng2-tab>\\n          <div class=\\\"tabs\\\">\\n             <div index=\\\"html\\\">HTML</div>\\n             <div index=\\\"js\\\">Javascript</div>\\n           </div> \\n           <div class=\\\"tab-contents\\\">\\n             <div contents=\\\"html\\\">\\n               <pre><code>{{code.html[0]}}</code></pre>\\n             </div>\\n             <div contents=\\\"js\\\">\\n               <pre><code>{{code.js[0]}}</code></pre>\\n             </div>\\n           </div>\\n        </ng2-tab>\\n      </div>\\n      <div class=\\\"spacer x4\\\"></div>\\n     \\n      <h2> {{code.title[1]}} </h2>\\n      <div class=\\\"spacer x3\\\"></div>\\n      <div class=\\\"container round-border\\\">\\n        <!--<p>\" + code.html[1] + \"-->\\n        <ng2-tab>\\n          <div class=\\\"tabs\\\">\\n             <div index=\\\"html\\\">HTML</div>\\n             <div index=\\\"js\\\">Javascript</div>\\n           </div> \\n           <div class=\\\"tab-contents\\\">\\n             <div contents=\\\"html\\\">\\n               <pre><code>{{code.html[1]}}</code></pre>\\n             </div>\\n             <div contents=\\\"js\\\">\\n               <pre><code>{{code.js[1]}}</code></pre>\\n             </div>\\n           </div>\\n        </ng2-tab>\\n      </div>\\n      <div class=\\\"spacer x4\\\"></div>\\n     \\n      <h2> {{code.title[2]}} </h2>\\n      <div class=\\\"spacer x3\\\"></div>\\n      <div class=\\\"container round-border\\\">\\n        <!--<p>\" + code.html[2] + \"-->\\n        <ng2-tab>\\n          <div class=\\\"tabs\\\">\\n             <div index=\\\"html\\\">HTML</div>\\n             <div index=\\\"js\\\">Javascript</div>\\n           </div> \\n           <div class=\\\"tab-contents\\\">\\n             <div contents=\\\"html\\\">\\n               <pre><code>{{code.html[2]}}</code></pre>\\n             </div>\\n             <div contents=\\\"js\\\">\\n               <pre><code>{{code.js[2]}}</code></pre>\\n             </div>\\n           </div>\\n        </ng2-tab>\\n      </div>\\n      <div class=\\\"spacer x4\\\"></div>\\n     \\n      <h2> {{code.title[3]}} </h2>\\n      <div class=\\\"spacer x3\\\"></div>\\n      <div class=\\\"container round-border\\\">\\n        <p>\" + code.html[3] + \"\\n        <ng2-tab>\\n          <div class=\\\"tabs\\\">\\n             <div index=\\\"html\\\">HTML</div>\\n             <div index=\\\"js\\\">Javascript</div>\\n           </div> \\n           <div class=\\\"tab-contents\\\">\\n             <div contents=\\\"html\\\">\\n               <pre><code>{{code.html[3]}}</code></pre>\\n             </div>\\n             <div contents=\\\"js\\\">\\n               <pre><code>{{code.js[3]}}</code></pre>\\n             </div>\\n           </div>\\n        </ng2-tab>\\n      </div>\\n      <div class=\\\"spacer x4\\\"></div>\\n    </div>\"\n\t    }),\n\t    __metadata(\"design:paramtypes\", [])\n\t], GoogleMapComponent);\n\texports.GoogleMapComponent = GoogleMapComponent;\n\n\n/***/ },\n\n/***/ 365:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(2);\n\tvar code = { title: [], html: [], js: [] };\n\tcode.title[0] = \"Vertically\";\n\tcode.html[0] = \"\\n  <ul ng2-infinite-list  class=\\\"infinite-list\\\"\\n      (endVisible)=\\\"loadMore(set1)\\\">\\n    <li *ngFor=\\\"let item of set1.list\\\">{{item+1}}</li>\\n    <div ng2-infinite-list-end>\\n      <div *ngIf=\\\"set1.loadingInProgress\\\">Loading</div>\\n      <div *ngIf=\\\"set1.endOfList\\\">End Of List</div>\\n    </div>\\n  </ul>\\n  loading in progress : {{set1.loadingInProgress}};\\n\";\n\tcode.js[0] = \"\\n  import { Component } from '@angular/core';\\n\\n  @Component({\\n    templates: 'app.tpl.html'\\n  })  \\n  export class AppComponent {\\n\\n    set1: any = {\\n      limit: 10, offset: 0, endOfList: false, loadingInProgress: false, list: []\\n    };\\n\\n    loadMore(data: any): void {\\n      if (!data.loadingInProgress) {\\n        if (data.offset > 99) {    // detect the end of list\\n          data.endOfList = true;\\n        } else {\\n          setTimeout(() => data.loadingInProgress = true);\\n          setTimeout(() => {      // mimics http call delay\\n            let max = data.offset + data.limit;\\n            for (let i = data.offset; i < max; i++) {\\n              data.list.push(i);\\n            }\\n            data.offset = max;\\n            data.loadingInProgress = false;\\n          }, 1000);\\n        }\\n      }\\n    }\\n  }\\n\";\n\tcode.title[1] = \"Horizontally\";\n\tcode.html[1] = \"\\n  <div ng2-infinite-list horizontal=\\\"true\\\"\\n       class=\\\"infinite-list horizontal\\\"\\n       (endVisible)=\\\"loadMore(set2)\\\">\\n    <div *ngFor=\\\"let item of set2.list\\\">{{item+1}}</div>\\n      <div ng2-infinite-list-end>\\n      &nbsp;\\n      <div *ngIf=\\\"set2.loadingInProgress\\\">Loading</div>\\n      <div *ngIf=\\\"set2.endOfList\\\">End Of List</div>\\n    </div>\\n  </div>\\n  loading in progress : {{set2.loadingInProgress}}      \\n\";\n\tcode.js[1] = \"\\n  import { Component } from '@angular/core';\\n\\n  @Component({\\n    templates: 'app.tpl.html'\\n  })  \\n  export class AppComponent {\\n\\n    set2: any = {\\n      limit: 10, offset: 0, endOfList: false, loadingInProgress: false, list: []\\n    };\\n\\n    loadMore(data: any): void {\\n      if (!data.loadingInProgress) {\\n        if (data.offset > 99) {    // detect the end of list\\n          data.endOfList = true;\\n        } else {\\n          setTimeout(() => data.loadingInProgress = true);\\n          setTimeout(() => {      // mimics http call delay\\n            let max = data.offset + data.limit;\\n            for (let i = data.offset; i < max; i++) {\\n              data.list.push(i);\\n            }\\n            data.offset = max;\\n            data.loadingInProgress = false;\\n          }, 1000);\\n        }\\n      }\\n    }\\n  }\\n\";\n\tvar InfiniteListComponent = (function () {\n\t    function InfiniteListComponent() {\n\t        this.code = code;\n\t        this.set1 = {\n\t            limit: 10, offset: 0, endOfList: false, loadingInProgress: false, list: []\n\t        };\n\t        this.set2 = {\n\t            limit: 10, offset: 0, endOfList: false, loadingInProgress: false, list: []\n\t        };\n\t    }\n\t    InfiniteListComponent.prototype.ngAfterViewInit = function () {\n\t        window.scroll(0, 0);\n\t    };\n\t    InfiniteListComponent.prototype.loadMore = function (data) {\n\t        if (!data.loadingInProgress) {\n\t            if (data.offset > 99) {\n\t                data.endOfList = true;\n\t            }\n\t            else {\n\t                setTimeout(function () { return data.loadingInProgress = true; });\n\t                setTimeout(function () {\n\t                    var max = data.offset + data.limit;\n\t                    for (var i = data.offset; i < max; i++) {\n\t                        data.list.push(i);\n\t                    }\n\t                    data.offset = max;\n\t                    data.loadingInProgress = false;\n\t                }, 1000);\n\t            }\n\t        }\n\t    };\n\t    return InfiniteListComponent;\n\t}());\n\tInfiniteListComponent = __decorate([\n\t    core_1.Component({\n\t        template: \"\\n    <div class=\\\"container page-title\\\" xmlns=\\\"http://www.w3.org/1999/html\\\">\\n      <h1>Infinite List</h1>\\n    </div>\\n    <div class=\\\"container\\\">\\n    \\n      <h2> {{code.title[0]}} </h2>\\n      <div class=\\\"spacer x3\\\"></div>\\n      <div class=\\\"container round-border\\\">\\n        <p>\" + code.html[0] + \"\\n        <ng2-tab>\\n          <div class=\\\"tabs\\\">\\n             <div index=\\\"html\\\">HTML</div>\\n             <div index=\\\"js\\\">Javascript</div>\\n           </div> \\n           <div class=\\\"tab-contents\\\">\\n             <div contents=\\\"html\\\">\\n               <pre><code>{{code.html[0]}}</code></pre>\\n             </div>\\n             <div contents=\\\"js\\\">\\n               <pre><code>{{code.js[0]}}</code></pre>\\n             </div>\\n           </div>\\n        </ng2-tab>\\n      </div>\\n      <div class=\\\"spacer x4\\\"></div>\\n      \\n      <h2> {{code.title[1]}} </h2>\\n      <div class=\\\"spacer x3\\\"></div>\\n      <div class=\\\"container round-border\\\">\\n        <p>\" + code.html[1] + \"\\n        <ng2-tab>\\n          <div class=\\\"tabs\\\">\\n             <div index=\\\"html\\\">HTML</div>\\n             <div index=\\\"js\\\">Javascript</div>\\n           </div> \\n           <div class=\\\"tab-contents\\\">\\n             <div contents=\\\"html\\\">\\n               <pre><code>{{code.html[1]}}</code></pre>\\n             </div>\\n             <div contents=\\\"js\\\">\\n               <pre><code>{{code.js[1]}}</code></pre>\\n             </div>\\n           </div>\\n        </ng2-tab>\\n      </div>\\n      <div class=\\\"spacer x4\\\"></div>\\n      \\n   </div> \\n\",\n\t        styles: [\"\\n    .infinite-list {\\n      overflow: auto;\\n      border: 5px solid #999;\\n      height: 200px;\\n      position: relative;\\n    }\\n    .infinite-list > * {\\n      min-height: 20px\\n    }\\n\\n    .infinite-list > *:nth-child(odd) {\\n      background-color: #eee\\n    }\\n\\n    .infinite-list.horizontal {\\n      height: 120px;\\n      white-space: nowrap;\\n      overflow-y: hidden;\\n    }\\n    .infinite-list.horizontal > div {\\n      border: 1px solid #666;\\n      width: 50px;\\n      height: 80px;\\n      display: inline-block;\\n      margin: 10px;\\n      vertical-align: top;\\n    }\"]\n\t    }),\n\t    __metadata(\"design:paramtypes\", [])\n\t], InfiniteListComponent);\n\texports.InfiniteListComponent = InfiniteListComponent;\n\n\n/***/ },\n\n/***/ 366:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(2);\n\tvar ng2_ui_1 = __webpack_require__(61);\n\tvar code = { title: [], html: [], js: [], css: [] };\n\tcode.title[0] = \"Window Overlay - Modal\";\n\tcode.html[0] = \"\\n  <div id=\\\"window-loading\\\" ng2-overlay-of=\\\"window\\\">\\n    <div style=\\\"color:#fff\\\">Loading</div>\\n    <button (click)=\\\"overlayManager.close('window-loading')\\\">Close</button>\\n  </div>\\n  <button (click)=\\\"overlayManager.open('window-loading')\\\">Show Loading For Window</button>\\n\";\n\tcode.js[0] = \"\\n  import { Component } from '@angular/core';\\n\\n  @Component({\\n    templateUr: 'app.html',\\n    styles: [require('./app.css')]\\n  })\\n  export class OverlayComponent{\\n    constructor(public overlayManager: Ng2OverlayManager) {}\\n\\n    ngAfterViewInit(): void {\\n      window.scroll(0,0);\\n    }\\n  }\\n\";\n\tvar OverlayComponent = (function () {\n\t    function OverlayComponent(overlayManager) {\n\t        this.overlayManager = overlayManager;\n\t        this.code = code;\n\t    }\n\t    OverlayComponent.prototype.ngAfterViewInit = function () {\n\t        window.scroll(0, 0);\n\t    };\n\t    return OverlayComponent;\n\t}());\n\tOverlayComponent = __decorate([\n\t    core_1.Component({\n\t        template: \"\\n    <div class=\\\"container page-title\\\">\\n      <h1>Overlay</h1>\\n    </div>\\n    <div class=\\\"container\\\">\\n      <p class=\\\"page-title-description\\\">\\n        Overlay is an on-the-top layer over DOM elements. Commonly this is used to have some feature to show on the top \\n        of html or an element and to disappear when action is taken.\\n      </p>\\n      \\n      For example\\n      <ul>\\n        <li>Loading Sign</li>\\n        <li>Tooltip</li>\\n        <li>Hover Effect</li>\\n        <li>Etc</li>\\n      </ul>\\n      \\n      <h2> {{code.title[0]}} </h2>\\n      <div class=\\\"spacer x3\\\"></div>\\n      <div class=\\\"container round-border\\\">\\n        <p>\" + code.html[0] + \"\\n        <ng2-tab>\\n          <div class=\\\"tabs\\\">\\n             <div index=\\\"html\\\">HTML</div>\\n             <div index=\\\"js\\\">Javascript</div>\\n           </div> \\n           <div class=\\\"tab-contents\\\">\\n             <div contents=\\\"html\\\">\\n               <pre><code>{{code.html[0]}}</code></pre>\\n             </div>\\n             <div contents=\\\"js\\\">\\n               <pre><code>{{code.js[0]}}</code></pre>\\n             </div>\\n           </div>\\n        </ng2-tab>\\n      </div>\\n      <div class=\\\"spacer x4\\\"></div>\\n      \\n    </div>\",\n\t        styles: [\"li {list-style-position: inside}\"]\n\t    }),\n\t    __metadata(\"design:paramtypes\", [ng2_ui_1.Ng2OverlayManager])\n\t], OverlayComponent);\n\texports.OverlayComponent = OverlayComponent;\n\n\n/***/ },\n\n/***/ 367:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(2);\n\tvar code = { title: [], html: [], js: [], css: [] };\n\tcode.title[0] = \"Parallax Scroll 1\";\n\tcode.html[0] = \"\\n  <div ng2-parallax style=\\\"height: 400px\\\">\\n    <img src=\\\"http://materializecss.com/images/parallax1.jpg\\\" />\\n  </div>\\n\";\n\tcode.js[0] = \"\\n  import { Component } from '@angular/core';\\n  @Component({templateUr: 'app.html'})\\n  export class AppComponent{}\\n\";\n\tcode.title[1] = \"Parallax Scroll 2\";\n\tcode.html[1] = \"\\n  <div ng2-parallax style=\\\"height: 400px\\\">\\n    <img src=\\\"http://materializecss.com/images/parallax2.jpg\\\" />\\n  </div>\\n\";\n\tcode.js[1] = \"\\n  import { Component } from '@angular/core';\\n  @Component({templateUr: 'app.html'})\\n  export class AppComponent{}\\n\";\n\tvar ParallaxScrollComponent = (function () {\n\t    function ParallaxScrollComponent() {\n\t        this.code = code;\n\t    }\n\t    ParallaxScrollComponent.prototype.ngAfterViewInit = function () {\n\t        window.scroll(0, 0);\n\t    };\n\t    return ParallaxScrollComponent;\n\t}());\n\tParallaxScrollComponent = __decorate([\n\t    core_1.Component({\n\t        template: \"\\n    <div class=\\\"container page-title\\\">\\n      <h1>Parallax Scroll</h1>\\n    </div>\\n    <div class=\\\"container\\\">\\n      <div> \\n        <p>\\n          <b>Parallax scrolling</b> is a scrolling technique used computer graphics\\n          in which background images move more slowly than images in the foreground, \\n          creating the illusion of depth and immersion.\\n        </p>\\n        <p>\\n          scroll up/down and see how image changes.\\n          To see the proper parallax effect, the container window\\n          should be smaller than the image behind.\\n        </p>\\n      </div>\\n      \\n      <h2> {{code.title[0]}} </h2>\\n      <div class=\\\"spacer x3\\\"></div>\\n      <div class=\\\"container round-border\\\">\\n        <p>\" + code.html[0] + \"\\n        <ng2-tab>\\n          <div class=\\\"tabs\\\">\\n             <div index=\\\"html\\\">HTML</div>\\n             <div index=\\\"js\\\">Javascript</div>\\n           </div> \\n           <div class=\\\"tab-contents\\\">\\n             <div contents=\\\"html\\\">\\n               <pre><code>{{code.html[0]}}</code></pre>\\n             </div>\\n             <div contents=\\\"js\\\">\\n               <pre><code>{{code.js[0]}}</code></pre>\\n             </div>\\n           </div>\\n        </ng2-tab>\\n      </div>\\n      <div class=\\\"spacer x4\\\"></div>\\n      \\n      <div style=\\\"height: 400px\\\">\\n         This space is intentionally added for scrolling\\n      </div>\\n      \\n      <h2> {{code.title[1]}} </h2>\\n      <div class=\\\"spacer x3\\\"></div>\\n      <div class=\\\"container round-border\\\">\\n        <p>\" + code.html[1] + \"\\n        <ng2-tab>\\n          <div class=\\\"tabs\\\">\\n             <div index=\\\"html\\\">HTML</div>\\n             <div index=\\\"js\\\">Javascript</div>\\n           </div> \\n           <div class=\\\"tab-contents\\\">\\n             <div contents=\\\"html\\\">\\n               <pre><code>{{code.html[1]}}</code></pre>\\n             </div>\\n             <div contents=\\\"js\\\">\\n               <pre><code>{{code.js[1]}}</code></pre>\\n             </div>\\n           </div>\\n        </ng2-tab>\\n      </div>\\n      \\n      <div style=\\\"height: 400px\\\">\\n         This space is intentionally added for scrolling\\n      </div>\\n      \\n    </div>\"\n\t    }),\n\t    __metadata(\"design:paramtypes\", [])\n\t], ParallaxScrollComponent);\n\texports.ParallaxScrollComponent = ParallaxScrollComponent;\n\n\n/***/ },\n\n/***/ 368:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(2);\n\tvar ng2_ui_1 = __webpack_require__(61);\n\tvar code = { title: [], html: [], js: [], css: [] };\n\tcode.title[0] = \"Popup 1\";\n\tcode.html[0] = \"\\n  <ng2-popup #popup></ng2-popup>\\n  <br/>\\n  {{message}}\\n  <br/>\\n  \\n  <button (click)=\\\"openPopup('small', 'Hello Small Popup')\\\">open small message popup</button>\\n  <br/>\\n  <button (click)=\\\"openPopup('medium', 'Hello Medium Popup')\\\">open medium message popup</button>\\n  <br/>\\n\";\n\tcode.js[0] = \"\\n  import { Component, ViewChild } from '@angular/core';\\n  import { Ng2PopupComponent, Ng2MessagePopupComponent } from 'ng2-ui';\\n\\n  export class popupComponent {\\n    @ViewChild(Ng2PopupComponent) popup: Ng2PopupComponent;\\n    message: string;\\n\\n    openPopup(size, title) {\\n      this.popup.open(Ng2MessagePopupComponent, {\\n        classNames: size,\\n        title: title,\\n        message: \\\"This is message given using popup.open()\\\",\\n        buttons: {\\n          OK: () => {\\n            this.message = \\\"Ok button is pressed\\\";\\n          },\\n          CANCEL: () => {\\n            this.message = \\\"Cancel button is pressed\\\";\\n            this.popup.close();\\n          }\\n        }\\n      });\\n    }\\n  }\\n\";\n\tcode.title[1] = \"Custom Popup\";\n\tcode.html[1] = \"\\n  <div class=\\\"spacer\\\"></div>\\n  <button (click)=\\\"openCustomPopup()\\\">open custom popup</button>\\n  <br/>\\n  <div class=\\\"spacer\\\"></div>\\n\";\n\tcode.js[1] = \"\\n  import {Component, ViewChild} from '@angular/core';\\n  import { Ng2PopupComponent } from 'ng2-ui';\\n\\n  @Component({\\n    template: `\\n    &lt;p>This is custom popup&lt;/p>\\n    {{number}} &lt;button (click)=\\\"number = number+1\\\">increase number&lt;/button>&lt;br/>\\n    &lt;button (click)=\\\"popup.close()\\\">close&lt;/button>\\n    `\\n  })\\n  class CustomPopupComponent {\\n    number: number = 0;\\n  }\\n\\n  export class popupComponent {\\n    @ViewChild(Ng2PopupComponent) popup: Ng2PopupComponent;\\n    message: string;\\n\\n    openCustomPopup() {\\n      this.popup.open(CustomPopupComponent, {\\n        classNames: 'custom',\\n        closeButton: false\\n      });\\n    }\\n  }\\n\";\n\tvar CustomPopupComponent = (function () {\n\t    function CustomPopupComponent() {\n\t        this.number = 0;\n\t    }\n\t    return CustomPopupComponent;\n\t}());\n\tCustomPopupComponent = __decorate([\n\t    core_1.Component({\n\t        template: \"\\n    <p>This is custom popup</p>\\n    {{number}} <button (click)=\\\"number = number+1\\\">increase number</button><br/>\\n    <button (click)=\\\"popup.close()\\\">close</button>\"\n\t    }),\n\t    __metadata(\"design:paramtypes\", [])\n\t], CustomPopupComponent);\n\tvar PopupComponent = (function () {\n\t    function PopupComponent() {\n\t        this.code = code;\n\t    }\n\t    PopupComponent.prototype.ngafterviewinit = function () {\n\t        window.scroll(0, 0);\n\t    };\n\t    PopupComponent.prototype.openPopup = function (size, title) {\n\t        var _this = this;\n\t        this.popup.open(ng2_ui_1.Ng2MessagePopupComponent, {\n\t            classNames: size,\n\t            title: title,\n\t            message: \"This is message given using popup.open()\",\n\t            buttons: {\n\t                OK: function () {\n\t                    _this.message = \"Ok button is pressed\";\n\t                },\n\t                CANCEL: function () {\n\t                    _this.message = \"Cancel button is pressed\";\n\t                    _this.popup.close();\n\t                }\n\t            }\n\t        });\n\t    };\n\t    PopupComponent.prototype.openCustomPopup = function () {\n\t        this.popup.open(CustomPopupComponent, {\n\t            classNames: 'custom',\n\t            closeButton: false,\n\t        });\n\t    };\n\t    return PopupComponent;\n\t}());\n\t__decorate([\n\t    core_1.ViewChild(ng2_ui_1.Ng2PopupComponent),\n\t    __metadata(\"design:type\", ng2_ui_1.Ng2PopupComponent)\n\t], PopupComponent.prototype, \"popup\", void 0);\n\tPopupComponent = __decorate([\n\t    core_1.Component({\n\t        template: \"\\n    <div class=\\\"container page-title\\\">\\n      <h1>Popup</h1>\\n    </div>\\n    <div class=\\\"container\\\">\\n    \\n      <h2> {{code.title[0]}} </h2>\\n      <div class=\\\"spacer x3\\\"></div>\\n      <div class=\\\"container round-border\\\">\\n        <p>\" + code.html[0] + \"\\n        <ng2-tab>\\n          <div class=\\\"tabs\\\">\\n             <div index=\\\"html\\\">HTML</div>\\n             <div index=\\\"js\\\">Javascript</div>\\n           </div> \\n           <div class=\\\"tab-contents\\\">\\n             <div contents=\\\"html\\\">\\n               <pre><code>{{code.html[0]}}</code></pre>\\n             </div>\\n             <div contents=\\\"js\\\">\\n               <pre><code>{{code.js[0]}}</code></pre>\\n             </div>\\n           </div>\\n        </ng2-tab>\\n      </div>\\n      <div class=\\\"spacer x4\\\"></div>\\n      \\n      <h2> {{code.title[1]}} </h2>\\n      <div class=\\\"spacer x3\\\"></div>\\n      <div class=\\\"container round-border\\\">\\n        <p>\" + code.html[1] + \"\\n        <ng2-tab>\\n          <div class=\\\"tabs\\\">\\n             <div index=\\\"html\\\">HTML</div>\\n             <div index=\\\"js\\\">Javascript</div>\\n           </div> \\n           <div class=\\\"tab-contents\\\">\\n             <div contents=\\\"html\\\">\\n               <pre><code>{{code.html[1]}}</code></pre>\\n             </div>\\n             <div contents=\\\"js\\\">\\n               <pre><code>{{code.js[1]}}</code></pre>\\n             </div>\\n           </div>\\n        </ng2-tab>\\n      </div>\\n      <div class=\\\"spacer x4\\\"></div>\\n    </div>\"\n\t    }),\n\t    __metadata(\"design:paramtypes\", [])\n\t], PopupComponent);\n\texports.PopupComponent = PopupComponent;\n\n\n/***/ },\n\n/***/ 369:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(2);\n\tvar ng2_ui_1 = __webpack_require__(61);\n\tvar code = { title: [], html: [], js: [], css: [] };\n\tcode.title[0] = \"Scroll Within a Section Vertically\";\n\tcode.html[0] = \"\\n  <ul>\\n    <li *ngFor=\\\"let num of [1,2,3,4,5,6,7,8,9,10]\\\"\\n        [class.current]=\\\"id == 's'+ num \\\"\\n        (click)=\\\"scrollTo('#s'+num, '#v-scrollable')\\\">{{num}}\\n  </ul>\\n\\n  scrolled to: {{id}}\\n  <div id=\\\"v-scrollable\\\" class=\\\"scrollable section\\\"\\n       ng2-scrollable (elementVisible)=\\\"id = $event.id\\\">\\n    <div id=\\\"s1\\\">Section 1  (scroll to here)</div>\\n    <div id=\\\"s2\\\">Section 2  (scroll to here)</div>\\n    <div id=\\\"s3\\\">Section 3  (scroll to here)</div>\\n    <div id=\\\"s4\\\">Section 4  (scroll to here)</div>\\n    <div id=\\\"s5\\\">Section 5  (scroll to here)</div>\\n    <div id=\\\"s6\\\">Section 6  (scroll to here)</div>\\n    <div id=\\\"s7\\\">Section 7  (scroll to here)</div>\\n    <div id=\\\"s8\\\">Section 8  (scroll to here)</div>\\n    <div id=\\\"s9\\\">Section 9  (scroll to here)</div>\\n    <div id=\\\"s10\\\">Section 10  (scroll to here)</div>\\n  </div>\\n\";\n\tcode.js[0] = \"\\n  import { Component } from '@angular/core';\\n  import { Ng2ScrollableDirective } from 'ng2-ui';\\n\\n  @Component({\\n    templateUr: 'app.html'\\n  })\\n  export class AppComponent{\\n    id: string = 's1';\\n    hid: string = 'h1';\\n    wid: string = 'w1';\\n    scrollTo(selector: string, parentSelector: string, horizontal: boolean) {\\n      Ng2ScrollableDirective.scrollTo(\\n        selector,       // scroll to this\\n        parentSelector, // scroll within (null if window scrolling)\\n        horizontal,     // is it horizontal scrolling\\n        10              // distance from top or left\\n      );\\n    }\\n  }\\n\";\n\tcode.css[0] = \"\\n  ul {list-style: none}\\n  ul li {display: inline-block; border: 1px solid #999; padding: 10px; cursor: pointer;}\\n  ul li.current { background: #333; color: #fff}\\n  .scrollable { height: 200px; border: 1px solid #999; position: relative;}\\n  .scrollable > div {height: 110px}\\n  .scrollable > div:nth-child(odd) { background-color: #ccc}\\n  .scrollable.section {overflow:auto;}\\n\\n  .horizontal {\\n    height: 100px;\\n    width: 100%;\\n    max-width: 450px;\\n    white-space: nowrap;\\n    overflow-y: hidden !important;\\n  }\\n  .horizontal > div {\\n    border: 1px solid #666;\\n    width: 200px;\\n    height: 80px;\\n    display: inline-block;\\n    text-align: center;\\n  }\\n\";\n\tcode.title[1] = \"Scroll Within Window\";\n\tcode.html[1] = \"\\n  <div class=\\\"scrollable window\\\"\\n       (elementVisible)=\\\"wid = $event.id\\\"\\n       (elementHidden)=\\\"whid = $event.id\\\"\\n       ng2-scrollable>\\n    <div id=\\\"w1\\\">One</div>\\n    <div id=\\\"w2\\\">Two</div>\\n    <div id=\\\"w3\\\">Three</div>\\n    <div id=\\\"w4\\\">Four</div>\\n    <div id=\\\"w5\\\">Five</div>\\n    <div id=\\\"w6\\\">Six</div>\\n    <div id=\\\"w7\\\">Seven</div>\\n    <div id=\\\"w8\\\">Eight</div>\\n    <div id=\\\"w9\\\">Nine</div>\\n    <div id=\\\"w10\\\">Ten</div>\\n  </div>\\n\\n  <ul style=\\\"position: fixed; bottom: 0; z-index: 1; background-color: #999\\\">\\n    id: {{wid}}\\n    <li *ngFor=\\\"let num of [1,2,3,4,5,6,7,8,9,10]\\\"\\n        [class.current]=\\\"wid == 'w'+ num \\\"\\n        (click)=\\\"scrollTo('#w'+num)\\\">{{num}}</li>\\n  </ul> \\n\";\n\tvar ScrollableComponent = (function () {\n\t    function ScrollableComponent() {\n\t        this.code = code;\n\t        this.id = 's1';\n\t        this.hid = 'h1';\n\t        this.wid = 'w1';\n\t    }\n\t    ScrollableComponent.prototype.ngAfterViewInit = function () {\n\t        window.scroll(0, 0);\n\t    };\n\t    ScrollableComponent.prototype.scrollTo = function (selector, parentSelector, horizontal) {\n\t        ng2_ui_1.Ng2ScrollableDirective.scrollTo(selector, // scroll to this\n\t        parentSelector, // scroll within (null if window scrolling)\n\t        horizontal, // is it horizontal scrolling\n\t        10 // distance from top or left\n\t        );\n\t    };\n\t    return ScrollableComponent;\n\t}());\n\tScrollableComponent = __decorate([\n\t    core_1.Component({\n\t        template: \"\\n    <div class=\\\"container page-title\\\">\\n      <h1>Scrollable</h1>\\n    </div>\\n    <div class=\\\"container\\\">\\n    \\n      <h2> {{code.title[0]}} </h2>\\n      <div class=\\\"spacer x3\\\"></div>\\n      <div class=\\\"container round-border\\\">\\n        <p>\" + code.html[0] + \"\\n        <ng2-tab>\\n          <div class=\\\"tabs\\\">\\n             <div index=\\\"html\\\">HTML</div>\\n             <div index=\\\"js\\\">Javascript</div>\\n             <div index=\\\"css\\\">Css</div>\\n           </div> \\n           <div class=\\\"tab-contents\\\">\\n             <div contents=\\\"html\\\">\\n               <pre><code>{{code.html[0]}}</code></pre>\\n             </div>\\n             <div contents=\\\"js\\\">\\n               <pre><code>{{code.js[0]}}</code></pre>\\n             </div>\\n             <div contents=\\\"css\\\">\\n               <pre><code>{{code.css[0]}}</code></pre>\\n             </div>\\n           </div>\\n        </ng2-tab>\\n      </div>\\n      <div class=\\\"spacer x4\\\"></div>\\n      \\n      <h2> {{code.title[1]}} </h2>\\n      <div class=\\\"spacer x3\\\"></div>\\n      <div class=\\\"container round-border\\\">\\n        <p>\" + code.html[1] + \"\\n        <ng2-tab>\\n          <div class=\\\"tabs\\\">\\n             <div index=\\\"html\\\">HTML</div>\\n             <div index=\\\"js\\\">Javascript</div>\\n             <div index=\\\"css\\\">Css</div>\\n           </div> \\n           <div class=\\\"tab-contents\\\">\\n             <div contents=\\\"html\\\">\\n               <pre><code>{{code.html[1]}}</code></pre>\\n             </div>\\n             <div contents=\\\"js\\\">\\n               <pre><code>{{code.js[0]}}</code></pre>\\n             </div>\\n             <div contents=\\\"css\\\">\\n               <pre><code>{{code.css[0]}}</code></pre>\\n             </div>\\n           </div>\\n        </ng2-tab>\\n      </div>\\n      <div class=\\\"spacer x4\\\"></div>\\n      \\n    </div>\",\n\t        styles: [\"\\n    ul {list-style: none}\\n    ul li {display: inline-block; border: 1px solid #999; padding: 10px; cursor: pointer;}\\n    ul li.current { background: #333; color: #fff}\\n    .scrollable { height: 200px; border: 1px solid #999; position: relative;}\\n    .scrollable.window { height: auto;}\\n    .scrollable > div {height: 110px}\\n    .scrollable > div:nth-child(odd) { background-color: #ccc}\\n\\n    ul.window {position: fixed; top: 0; left: 0; background: yellow; z-index: 1;}\\n    ul.window li {display: block; }\\n    .scrollable.section {overflow:auto;}\\n    \\n    .horizontal {\\n      height: 100px;\\n      width: 100%;\\n      max-width: 450px;\\n      white-space: nowrap;\\n      overflow-y: hidden !important;\\n    }\\n    .horizontal > div {\\n      border: 1px solid #666;\\n      width: 200px;\\n      height: 80px;\\n      display: inline-block;\\n      text-align: center;\\n    }\\n  \"]\n\t    }),\n\t    __metadata(\"design:paramtypes\", [])\n\t], ScrollableComponent);\n\texports.ScrollableComponent = ScrollableComponent;\n\n\n/***/ },\n\n/***/ 370:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(2);\n\tvar code = { title: [], html: [], js: [], css: [] };\n\tcode.title[0] = \"Sticky On The Right Side\";\n\tcode.html[0] = \"\\n  <div class=\\\"sticky-container\\\">\\n    <div class=\\\"sticky-float-right\\\">\\n      <div ng2-sticky style=\\\"float: right\\\"> float: right </div>\\n    </div>\\n  </div>\\n\";\n\tcode.js[0] = \"\\n  import { Component } from '@angular/core';\\n\\n  @Component({\\n    templateUr: 'app.html'\\n  })\\n  export class AppComponent{\\n  }\\n\";\n\tcode.css[0] = \"\\n  .sticky-container > div {\\n    border: 1px solid #333;\\n    background-image: linear-gradient(rgba(255, 255, 255, 1) 50%, transparent 50%, transparent);\\n    background-size: 50px 50px;\\n    height: 300px;\\n  }\\n  .sticky-float-right {\\n    background-color: rgba(0,255,0, .2);\\n  }\\n  div[ng2-sticky] {\\n    min-width: 400px;\\n    text-align: center;\\n    background: #333;\\n    color: #fff;\\n    border: 1px solid #333;\\n    padding: 10px;\\n  }\\n\";\n\tcode.title[1] = \"Sticy On The Left-Side\";\n\tcode.html[1] = \"\\n  <div class=\\\"sticky-container\\\">\\n    <div class=\\\"sticky-float-left\\\">\\n      <div ng2-sticky style=\\\"float: left\\\"> float: left </div>\\n    </div>\\n  </div>\\n\";\n\tcode.js[1] = \"\\n  import { Component } from '@angular/core';\\n\\n  @Component({\\n    templateUr: 'app.html'\\n  })\\n  export class AppComponent{\\n  }\\n\";\n\tcode.css[1] = \"\\n  .sticky-container > div {\\n    border: 1px solid #333;\\n    background-image: linear-gradient(rgba(255, 255, 255, 1) 50%, transparent 50%, transparent);\\n    background-size: 50px 50px;\\n    height: 300px;\\n  }\\n  .sticky-float-left {\\n    background-color: rgba(255,0,0, .2);\\n  }\\n  div[ng2-sticky] {\\n    min-width: 400px;\\n    text-align: center;\\n    background: #333;\\n    color: #fff;\\n    border: 1px solid #333;\\n    padding: 10px;\\n  }\\n\";\n\tcode.title[2] = \"Sticky In The Middle\";\n\tcode.html[2] = \"\\n  <div class=\\\"sticky-container\\\">\\n    <div class=\\\"div-middle\\\">\\n      <div>One</div>\\n      <div>After</div>\\n      <div>Another</div>\\n      <div ng2-sticky> &lt;div> tag in the middle </div>\\n      <div>One</div>\\n      <div>After</div>\\n      <div>Another</div>\\n    </div>\\n  </div>\\n\";\n\tcode.js[2] = \"\\n  import { Component } from '@angular/core';\\n\\n  @Component({\\n    templateUr: 'app.html'\\n  })\\n  export class AppComponent{\\n  }\\n\";\n\tcode.css[2] = \"\\n  .sticky-container > div {\\n    border: 1px solid #333;\\n    background-image: linear-gradient(rgba(255, 255, 255, 1) 50%, transparent 50%, transparent);\\n    background-size: 50px 50px;\\n    height: 300px;\\n  }\\n  .div-middle {\\n    background-color: rgba(0,0,255, .2);\\n  }\\n  div[ng2-sticky] {\\n    min-width: 400px;\\n    text-align: center;\\n    background: #333;\\n    color: #fff;\\n    border: 1px solid #333;\\n    padding: 10px;\\n  }\\n  .div-middle div[ng2-sticky] {\\n    margin: 0;\\n  }\\n\";\n\tvar StickyComponent = (function () {\n\t    function StickyComponent() {\n\t        this.code = code;\n\t    }\n\t    StickyComponent.prototype.ngAfterViewInit = function () {\n\t        window.scroll(0, 0);\n\t    };\n\t    return StickyComponent;\n\t}());\n\tStickyComponent = __decorate([\n\t    core_1.Component({\n\t        template: \"\\n    <div class=\\\"container page-title\\\">\\n      <h1>Sticky</h1>\\n    </div>\\n    <div class=\\\"container\\\">\\n      \\n      <h2> {{code.title[0]}} </h2>\\n      <div class=\\\"spacer x3\\\"></div>\\n      <div class=\\\"container round-border\\\">\\n        <p>\" + code.html[0] + \"\\n        <ng2-tab>\\n          <div class=\\\"tabs\\\">\\n             <div index=\\\"html\\\">HTML</div>\\n             <div index=\\\"js\\\">Javascript</div>\\n             <div index=\\\"css\\\">Css</div>\\n           </div> \\n           <div class=\\\"tab-contents\\\">\\n             <div contents=\\\"html\\\">\\n               <pre><code>{{code.html[0]}}</code></pre>\\n             </div>\\n             <div contents=\\\"js\\\">\\n               <pre><code>{{code.js[0]}}</code></pre>\\n             </div>\\n             <div contents=\\\"css\\\">\\n               <pre><code>{{code.css[0]}}</code></pre>\\n             </div>\\n           </div>\\n        </ng2-tab>\\n      </div>\\n      \\n      <h2> {{code.title[1]}} </h2>\\n      <div class=\\\"spacer x3\\\"></div>\\n      <div class=\\\"container round-border\\\">\\n        <p>\" + code.html[1] + \"\\n        <ng2-tab>\\n          <div class=\\\"tabs\\\">\\n             <div index=\\\"html\\\">HTML</div>\\n             <div index=\\\"js\\\">Javascript</div>\\n             <div index=\\\"css\\\">CSS</div>\\n           </div> \\n           <div class=\\\"tab-contents\\\">\\n             <div contents=\\\"html\\\">\\n               <pre><code>{{code.html[1]}}</code></pre>\\n             </div>\\n             <div contents=\\\"js\\\">\\n               <pre><code>{{code.js[1]}}</code></pre>\\n             </div>\\n             <div contents=\\\"css\\\">\\n               <pre><code>{{code.css[0]}}</code></pre>\\n             </div>\\n           </div>\\n        </ng2-tab>\\n      </div>\\n      \\n      <h2> {{code.title[2]}} </h2>\\n      <div class=\\\"spacer x3\\\"></div>\\n      <div class=\\\"container round-border\\\">\\n        <p>\" + code.html[2] + \"\\n        <ng2-tab>\\n          <div class=\\\"tabs\\\">\\n             <div index=\\\"html\\\">HTML</div>\\n             <div index=\\\"js\\\">Javascript</div>\\n             <div index=\\\"css\\\">CSS</div>\\n           </div> \\n           <div class=\\\"tab-contents\\\">\\n             <div contents=\\\"html\\\">\\n               <pre><code>{{code.html[2]}}</code></pre>\\n             </div>\\n             <div contents=\\\"js\\\">\\n               <pre><code>{{code.js[2]}}</code></pre>\\n             </div>\\n             <div contents=\\\"css\\\">\\n               <pre><code>{{code.css[2]}}</code></pre>\\n             </div>\\n           </div>\\n        </ng2-tab>\\n      </div>\\n      \\n      <div class=\\\"spacer x4\\\"></div>\\n      <div style=\\\"height:300px\\\">\\n        This space is left-blank intentionally to see scroll effect\\n      </div>\\n    </div>\",\n\t        styles: [\"\\n    .sticky-container > div {\\n      /*margin: 20px;*/\\n      border: 1px solid #333;\\n      background-image: linear-gradient(rgba(255, 255, 255, 1) 50%, transparent 50%, transparent);\\n      background-size: 50px 50px;\\n      height: 300px;\\n    }\\n    .sticky-float-left {\\n      background-color: rgba(255,0,0, .2);\\n    }\\n    .sticky-float-right {\\n      background-color: rgba(0,255,0, .2);\\n    }\\n    .div-middle {\\n      background-color: rgba(0,0,255, .2);\\n    }\\n    div[ng2-sticky] {\\n      /*margin: 30px 10px 10px 10px;*/\\n      min-width: 400px;\\n      text-align: center;\\n      background: #333;\\n      color: #fff;\\n      border: 1px solid #333;\\n      padding: 10px;\\n    }\\n    .div-middle div[ng2-sticky] {\\n      margin: 0;\\n    }\\n  \"]\n\t    }),\n\t    __metadata(\"design:paramtypes\", [])\n\t], StickyComponent);\n\texports.StickyComponent = StickyComponent;\n\n\n/***/ },\n\n/***/ 371:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(2);\n\tvar code = { title: [], html: [], js: [], css: [] };\n\tcode.title[0] = \"Simple Tab\";\n\tcode.html[0] = \"\\n<div ng2-tab> \\n <div class=\\\"tabs\\\">\\n    <div index=\\\"html\\\">HTML</div>\\n    <div index=\\\"js\\\">Javascript</div>\\n  </div>\\n  <div class=\\\"tab-contents\\\">\\n    <div contents=\\\"html\\\">HTML  </div>\\n    <div contents=\\\"js\\\">Javascript  </div>\\n  </div>\\n</div>\\n\";\n\tcode.js[0] = \"\\n  import { Component } from '@angular/core';\\n  @Component({ templateUr: 'app.html' })\\n  export class AppComponent{ }\\n\";\n\tcode.title[1] = \"Tab With Animation\";\n\tcode.html[1] = \"\\n  <ng2-tab selected=\\\"js\\\" \\n    selected-contents-class=\\\"fadeIn animated\\\" \\n    selected-index-class=\\\"selected\\\">\\n    <div class=\\\"tabs\\\">\\n      <div index=\\\"html\\\">HTML</div>\\n      <div index=\\\"js\\\">Javascript</div>\\n    </div>\\n    <div class=\\\"tab-contents\\\">\\n      <div contents=\\\"html\\\">HTML</div>\\n      <div contents=\\\"js\\\">Javascript</div>\\n    </div>\\n  </ng2-tab>\\n\";\n\tcode.js[1] = \"\\n  import { Component } from '@angular/core';\\n  @Component({ templateUr: 'app.html' })\\n  export class AppComponent{ }\\n\";\n\tvar TabComponent = (function () {\n\t    function TabComponent() {\n\t        this.code = code;\n\t    }\n\t    TabComponent.prototype.ngAfterViewInit = function () {\n\t        window.scroll(0, 0);\n\t    };\n\t    return TabComponent;\n\t}());\n\tTabComponent = __decorate([\n\t    core_1.Component({\n\t        template: \"\\n    <div class=\\\"container page-title\\\">\\n      <h1>Tab</h1>\\n    </div>\\n    <div class=\\\"container\\\">\\n    \\n      <h2> {{code.title[0]}} </h2>\\n      <div class=\\\"spacer x3\\\"></div>\\n      <div class=\\\"container round-border\\\">\\n        <p>\" + code.html[0] + \"\\n        <ng2-tab>\\n          <div class=\\\"tabs\\\">\\n             <div index=\\\"html\\\">HTML</div>\\n             <div index=\\\"js\\\">Javascript</div>\\n           </div> \\n           <div class=\\\"tab-contents\\\">\\n             <div contents=\\\"html\\\">\\n               <pre><code>{{code.html[0]}}</code></pre>\\n             </div>\\n             <div contents=\\\"js\\\">\\n               <pre><code>{{code.js[0]}}</code></pre>\\n             </div>\\n           </div>\\n        </ng2-tab>\\n      </div>\\n      <div class=\\\"spacer x4\\\"></div>\\n      \\n      \\n      <h2> {{code.title[1]}} </h2>\\n      <div class=\\\"spacer x3\\\"></div>\\n      <div class=\\\"container round-border\\\">\\n        <p>\" + code.html[1] + \"\\n        <ng2-tab>\\n          <div class=\\\"tabs\\\">\\n             <div index=\\\"html\\\">HTML</div>\\n             <div index=\\\"js\\\">Javascript</div>\\n           </div> \\n           <div class=\\\"tab-contents\\\">\\n             <div contents=\\\"html\\\">\\n               <pre><code>{{code.html[1]}}</code></pre>\\n             </div>\\n             <div contents=\\\"js\\\">\\n               <pre><code>{{code.js[1]}}</code></pre>\\n             </div>\\n           </div>\\n        </ng2-tab>\\n      </div>\\n      <div class=\\\"spacer x4\\\"></div>\\n      NOTE: There is a default css given by component, but a user can override the tab style.\\n    </div>\\n\"\n\t    }),\n\t    __metadata(\"design:paramtypes\", [])\n\t], TabComponent);\n\texports.TabComponent = TabComponent;\n\n\n/***/ },\n\n/***/ 372:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(2);\n\tvar code = { title: [], html: [], js: [], css: [] };\n\tcode.title[0] = \"Tooltip Example\";\n\tcode.html[0] = \"\\n  <div ng2-tooltip=\\\"This is my tooltip\\\">\\n    tooltip 1\\n    <div ng2-tooltip=\\\"this is also tootip\\\">\\n      tooltip 2 \\n      <div ng2-tooltip=\\\"this is too tootip\\\">\\n        tooltip 3\\n      </div>\\n    </div>\\n  </div>\\n\";\n\tcode.js[0] = \"\\n  import { Component } from '@angular/core';\\n\\n  @Component({\\n    templateUr: 'app.html'\\n  })\\n  export class AppComponent{\\n  }\\n\";\n\tcode.css[0] = \"\\n  [ng2-tooltip] {margin: 40px; border: 1px solid #ccc }\\n\\n  [ng2-tooltip] .tooltip-contents {\\n    border: 1px solid #ccc; padding: 5px\\n  }\\n  [ng2-tooltip] .tooltip-down-arrow {\\n    height: 10px;\\n  }\\n  [ng2-tooltip] .tooltip-down-arrow:before {\\n    content: '';\\n    display: block;\\n    position: absolute;\\n    width: 10px;\\n    height: 10px;\\n    left: 45%;\\n    bottom: 5px;\\n    background: #FFFFFF;\\n    border-left:1px solid #ccc;\\n    border-bottom:1px solid #ccc;\\n    transform:rotate(-45deg);\\n  }\\n\";\n\tvar TooltipComponent = (function () {\n\t    function TooltipComponent() {\n\t        this.code = code;\n\t    }\n\t    TooltipComponent.prototype.ngAfterViewInit = function () {\n\t        window.scroll(0, 0);\n\t    };\n\t    return TooltipComponent;\n\t}());\n\tTooltipComponent = __decorate([\n\t    core_1.Component({\n\t        template: \"\\n    <div class=\\\"container page-title\\\">\\n      <h1>Tooltip</h1>\\n    </div>\\n    <div class=\\\"container\\\">\\n      \\n      <h2> {{code.title[0]}} </h2>\\n      <div class=\\\"spacer x3\\\"></div>\\n      <div class=\\\"container round-border\\\">\\n        <p>\" + code.html[0] + \"\\n        <ng2-tab>\\n          <div class=\\\"tabs\\\">\\n             <div index=\\\"html\\\">HTML</div>\\n             <div index=\\\"js\\\">Javascript</div>\\n           </div> \\n           <div class=\\\"tab-contents\\\">\\n             <div contents=\\\"html\\\">\\n               <pre><code>{{code.html[0]}}</code></pre>\\n             </div>\\n             <div contents=\\\"js\\\">\\n               <pre><code>{{code.js[0]}}</code></pre>\\n             </div>\\n           </div>\\n        </ng2-tab>\\n      </div>\\n      <div class=\\\"spacer x4\\\"></div>\\n      \\n    </div>\"\n\t    }),\n\t    __metadata(\"design:paramtypes\", [])\n\t], TooltipComponent);\n\texports.TooltipComponent = TooltipComponent;\n\n\n/***/ },\n\n/***/ 373:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(2);\n\tvar code = { title: [], html: [], js: [] };\n\tcode.title[0] = \"Simple Array Of String\";\n\tcode.html[0] = \"\\n  <input ng2-auto-complete\\n    [(ngModel)]=\\\"model1\\\"\\n    [source]=\\\"arrayOfStrings\\\"\\n    placeholder=\\\"enter text\\\"/>\\n  <p><b>model1</b>: {{ model1 | json }}\";\n\tcode.js[0] = \"\\n  import { Component } from '@angular/core';\\n  @Component({\\n    templaeUr: 'app.html'\\n  })\\n  export class AppComponent {\\n    model1: any;\\n    arrayOfStrings: string[] =\\n      [\\\"this\\\", \\\"is\\\", \\\"array\\\", \\\"of\\\", \\\"text\\\"];\\n  }\";\n\tcode.title[0] = \"Simple Array Of Object(id/value)\";\n\tcode.html[1] = \"\\n  <input ng2-auto-complete\\n    [(ngModel)]=\\\"model2\\\"\\n    [source]=\\\"arrayOfKeyValues\\\" \\n    placeholder=\\\"enter text\\\"/> \\n  <p><b>model2</b>: {{model2 | json }}\\n\";\n\tcode.js[1] = \"\\n  import { Component } from '@angular/core';\\n\\n  @Component({\\n    templateUr: 'app.html'\\n  })\\n  export class AppComponent{\\n    model2: any;\\n    arrayOfKeyValues: any[] =\\n      [{id:1, value:'One'}, {id:2, value:'Two'}, {id:3, value:'Three'}, {id:4, value:'Four'}];\\n  }\\n\";\n\tcode.title[0] = \"Simple Array Of Object(key/name)\";\n\tcode.html[2] = \"\\n  <input ng2-auto-complete \\n    [source]=\\\"arrayOfKeyValues2\\\"\\n    [(ngModel)]=\\\"model3\\\"\\n    placeholder=\\\"enter text\\\"\\n    list-formatter=\\\"(key) name\\\"\\n    display-property-name=\\\"name\\\"/>\\n  <p><b>model3:</b> {{ model3 | json }}\\n\";\n\tcode.js[2] = \"\\n  import { Component } from '@angular/core';\\n  @Component({\\n    templateUr: 'app.html'\\n  })\\n  export class AppComponent{\\n    model3: any;\\n    arrayOfKeyValues2: any[] =\\n      [{key:1, name:'Key One'}, {key:2, name:'Key Two'}, {key:3, name:'Key Three'}, {key:4, name:'Key Four'}];\\n  }\";\n\tcode.title[0] = \"Remote Source\";\n\tcode.html[3] = \"\\n  <input ng2-auto-complete\\n    [(ngModel)]=\\\"model4\\\"\\n    placeholder=\\\"Enter Address(min. 2 chars)\\\"\\n    [source]=\\\"googleGeoCode\\\" \\n    list-formatter=\\\"formatted_address\\\"\\n    path-to-data=\\\"results\\\"\\n    min-chars=\\\"2\\\" />\\n  <p><b>model4</b>: {{ model4 | json }}\\n\";\n\tcode.js[3] = \"\\n  import { Component } from '@angular/core';\\n\\n  @Component({\\n    templateUr: 'app.html'\\n  })\\n  export class AppComponent{\\n    model4: any;\\n    googleGeoCode: string = \\\"https://maps.googleapis.com/maps/api/geocode/json?address=:keyword\\\";\\n  }\\n\";\n\tvar AutoCompleteComponent = (function () {\n\t    function AutoCompleteComponent() {\n\t        this.code = code;\n\t        this.arrayOfStrings = [\"this\", \"is\", \"array\", \"of\", \"text\"];\n\t        this.arrayOfKeyValues = [{ id: 1, value: 'One' }, { id: 2, value: 'Two' }, { id: 3, value: 'Three' }, { id: 4, value: 'Four' }];\n\t        this.arrayOfKeyValues2 = [{ key: 1, name: 'Key One' }, { key: 2, name: 'Key Two' }, { key: 3, name: 'Key Three' }, { key: 4, name: 'Key Four' }];\n\t        this.googleGeoCode = \"https://maps.googleapis.com/maps/api/geocode/json?address=:keyword\";\n\t    }\n\t    AutoCompleteComponent.prototype.ngAfterViewInit = function () {\n\t        window.scroll(0, 0);\n\t    };\n\t    return AutoCompleteComponent;\n\t}());\n\tAutoCompleteComponent = __decorate([\n\t    core_1.Component({\n\t        template: \"\\n\\n    <div class=\\\"container page-title\\\">\\n      <h1>Auto Complete</h1>\\n    </div>\\n    \\n    <div class=\\\"container\\\">\\n      <h2> {{code.title[0]}} </h2>\\n      <div class=\\\"spacer x3\\\"></div>\\n      <div class=\\\"container round-border\\\">\\n        <div class=\\\"title\\\">Simple string of array as source</div>\\n        <p>\" + code.html[0] + \"\\n        <ng2-tab>\\n          <div class=\\\"tabs\\\">\\n             <div index=\\\"html\\\">HTML</div>\\n             <div index=\\\"js\\\">Javascript</div>\\n           </div> \\n           <div class=\\\"tab-contents\\\">\\n             <div contents=\\\"html\\\">\\n               <pre><code>{{code.html[0]}}</code></pre>\\n             </div>\\n             <div contents=\\\"js\\\">\\n               <pre><code>{{code.js[0]}}</code></pre>\\n             </div>\\n           </div>\\n        </ng2-tab>\\n      </div>\\n      <div class=\\\"spacer x4\\\"></div>\\n      \\n      <div class=\\\"container round-border\\\">\\n        <div class=\\\"title\\\">{{code.title[1]}}</div>\\n        <p>\" + code.html[1] + \"\\n        <ng2-tab>\\n          <div class=\\\"tabs\\\">\\n             <div index=\\\"html\\\">HTML</div>\\n             <div index=\\\"js\\\">Javascript</div>\\n           </div> \\n           <div class=\\\"tab-contents\\\">\\n             <div contents=\\\"html\\\">\\n               <pre><code>{{code.html[1]}}</code></pre>\\n             </div>\\n             <div contents=\\\"js\\\">\\n               <pre><code>{{code.js[1]}}</code></pre>\\n             </div>\\n           </div>\\n        </ng2-tab>\\n      </div>\\n      <div class=\\\"spacer x4\\\"></div>\\n      \\n      <div class=\\\"container round-border\\\">\\n        <div class=\\\"title\\\">{{code.title[2]}}</div>\\n        <p>\" + code.html[2] + \"\\n        <ng2-tab>\\n          <div class=\\\"tabs\\\">\\n             <div index=\\\"html\\\">HTML</div>\\n             <div index=\\\"js\\\">Javascript</div>\\n           </div> \\n           <div class=\\\"tab-contents\\\">\\n             <div contents=\\\"html\\\">\\n               <pre><code>{{code.html[2]}}</code></pre>\\n             </div>\\n             <div contents=\\\"js\\\">\\n               <pre><code>{{code.js[2]}}</code></pre>\\n             </div>\\n           </div>\\n        </ng2-tab>\\n      </div>\\n        \\n      <h2> Autocomplete From Remote Source </h2>\\n      \\n      <div class=\\\"spacer x3\\\"></div>\\n      <div class=\\\"container round-border\\\">\\n        <div class=\\\"title\\\">{{code.title[3]}}</div>\\n        <p>\" + code.html[3] + \"\\n        <ng2-tab>\\n          <div class=\\\"tabs\\\">\\n             <div index=\\\"html\\\">HTML</div>\\n             <div index=\\\"js\\\">Javascript</div>\\n           </div> \\n           <div class=\\\"tab-contents\\\">\\n             <div contents=\\\"html\\\">\\n               <pre><code>{{code.html[3]}}</code></pre>\\n             </div>\\n             <div contents=\\\"js\\\">\\n               <pre><code>{{code.js[3]}}</code></pre>\\n             </div>\\n           </div>\\n        </ng2-tab>\\n      </div>\\n      <div class=\\\"spacer x4\\\"></div>\\n      <div class=\\\"spacer x4\\\"></div>\\n      \\n    </div>\"\n\t    }),\n\t    __metadata(\"design:paramtypes\", [])\n\t], AutoCompleteComponent);\n\texports.AutoCompleteComponent = AutoCompleteComponent;\n\n\n/***/ },\n\n/***/ 374:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(2);\n\tvar code = { title: [], html: [], js: [], css: [] };\n\tcode.title[0] = \"Dropdown Menu\";\n\tcode.html[0] = \"\\n  <div>\\n    <ul class=\\\"horizontal-menu\\\">\\n      <li> Item 1\\n        <ul ng2-menu=\\\"bottom\\\">\\n          <li> Menu Item 1-1 </li>\\n          <li> Menu Item 1-2 </li>\\n          <li> Menu Item 1-3 </li>\\n        </ul>\\n      </li>\\n      \\n      <li> Item 2\\n        <ul ng2-menu=\\\"bottom\\\">\\n          <li> Menu Item 2-1 </li>\\n          <li> Item 2-2 \\n            <ul ng2-menu=\\\"right\\\">\\n              <li> Menu Item 2-2-1 </li> \\n              <li> Menu Item 2-2-2 </li>\\n              <li> Menu Item 2-2-3 </li>\\n            </ul>\\n          </li>\\n          <li> Menu Item 2-3 </li>\\n        </ul>\\n      </li>\\n      <li>Menu Item 3</li>\\n    </ul>\\n  </div>\\n\";\n\tcode.js[0] = \"\\n  import { Component } from '@angular/core';\\n\\n  @Component({\\n    templateUr: 'app.html',\\n    styles: [require('./app.css')]\\n  })\\n  export class AppComponent{\\n  }\\n\";\n\tcode.css[0] = \"ul.horizontal-menu,\\n  .has-ng2-menu ul[ng2-menu]\\n  {\\n    background: #3db2e1;\\n    background: -moz-linear-gradient(top, #69c4e8, #21a1d4);\\n    background: -ms-linear-gradient(top, #69c4e8, #21a1d4);\\n    background: -o-linear-gradient(top, #69c4e8, #21a1d4);\\n    background: -webkit-linear-gradient(top, #69c4e8, #21a1d4);\\n    background: linear-gradient(to bottom, #69c4e8, #21a1d4);\\n    border-radius: 2px;\\n    box-shadow: inset 0 -3px 0 #1f97c7, inset 0 -3px 3px #1f9acc, inset 0 2px 2px #9ad7ef, inset 1px 0 2px #22a4d9, inset -1px 0 2px #22a4d9, 0 1px 1px rgba(0, 0, 0, 0.1), 0 2px 2px rgba(0, 0, 0, 0.06), 0 3px 3px rgba(0, 0, 0, 0.17), 2px 1px 2px rgba(0, 0, 0, 0.05), -2px 1px 2px rgba(0, 0, 0, 0.05);\\n    display: inline-block;\\n    font-family: 'Open Sans', Helvetica, sans-serif;\\n    width: auto;\\n  }\\n  ul.horizontal-menu > li {\\n    -moz-transition: color .2s ease;\\n    -ms-transition: color .2s ease;\\n    -o-transition: color .2s ease;\\n    -webkit-transition: color .2s ease;\\n    color: #ffffff;\\n    display: inline-block !important;\\n    font-size: 13px;\\n    font-weight: 700;\\n    letter-spacing: 1px;\\n    padding: 20px 25px;\\n    text-decoration: none;\\n    text-shadow: 0 1px 0 rgba(0, 0, 0, 0.25);\\n    text-transform: uppercase;\\n    transition: color .2s ease;\\n  }\\n  ul.horizontal-menu > li:hover,\\n  .has-ng2-menu li:hover {\\n    color: #ccc;\\n  }\\n  ul.horizontal-menu > li:hover ul,\\n  .has-ng2-menu li:hover ul {\\n    color: #fff;\\n  }\\n  .dropdown-menu, .right-side-menu, .bottom-menu {\\n    display: inline-block;\\n  }\\n  ul.horizontal-menu li, \\n  ul.dropdown-menu li,\\n  ul.bottom-menu li {\\n    z-index: 100;\\n  \\n  .has-ng2-menu.active {\\n    color: #fff;\\n  }\\n  .has-ng2-menu::after {\\n    content: '25bc';\\n    display: inline-block;\\n    padding: 6px 12px;\\n    text-align: center;\\n    float: right;\\n    font-size: 8px;\\n    line-height: 13px;\\n  }\\n  .has-ng2-menu.active::after {\\n    color: #333;\\n  }\\n\\n  .has-ng2-menu ul[ng2-menu] {\\n    background-color: #fff;\\n    display: none;\\n    list-style: none;\\n    margin: 0;\\n    padding: 0\\n  }\\n  .has-ng2-menu.active > ul[ng2-menu] {\\n    display: inline-block;\\n  }\\n  .has-ng2-menu > ul[ng2-menu] > li {\\n    display: block;\\n    margin: 0;\\n    padding: 10px;\\n    white-space: nowrap;\\n  }\\n\";\n\tcode.title[1] = \"Right-Side Menu\";\n\tcode.html[1] = \"\\n  <div class=\\\"right-side-menu\\\">\\n    Menu\\n    <ul ng2-menu=\\\"right\\\">\\n      <li> Menu Item 1 \\n        <ul ng2-menu=\\\"right\\\">\\n          <li> Menu Item 1-1\\n          <li> Menu Item 1-2 \\n          <li> Menu Item 1-3\\n        </ul>\\n      <li> Menu Item 2\\n        <ul ng2-menu=\\\"right\\\">\\n          <li> Menu Item 2-1 &nbsp; &nbsp; &nbsp;\\n          <li> Menu Item 2-2 \\n            <ul ng2-menu=\\\"right\\\">\\n              <li> Menu Item 2-2-1 \\n              <li> Menu Item 2-2-2 \\n              <li> Menu Item 2-2-3 \\n            </ul>\\n          \\n          <li> Menu Item 2-3 \\n        </ul>\\n      <li>Menu Item 3 &nbsp; &nbsp; &nbsp;\\n    </ul>\\n  </div>\\n\";\n\tcode.js[1] = \"\\n  import { Component } from '@angular/core';\\n\\n  @Component({\\n    templateUr: 'app.html',\\n    styles: [require('./app.css')]\\n  })\\n  export class AppComponent{\\n  }\\n\";\n\tcode.title[2] = \"Bottom-Side Menu\";\n\tcode.html[2] = \"\\n  <div class=\\\"spacer x8\\\"></div>\\n  <div class=\\\"bottom-menu\\\">\\n    <ul class=\\\"horizontal-menu\\\">\\n      <li> Menu Item 1\\n        <ul ng2-menu=\\\"top\\\">\\n          <li> Menu Item 1-1\\n          <li> Menu Item 1-2 \\n          <li> Menu Item 1-3\\n        </ul>\\n      <li> Menu Item 2\\n        <ul ng2-menu=\\\"top\\\">\\n          <li> Menu Item 2-1 \\n          <li> Menu Item 2-2\\n          <li> Menu Item 2-3\\n        </ul>\\n      <li> Menu Item 3\\n        <ul ng2-menu=\\\"top\\\">\\n          <li> Menu Item 3-1\\n          <li> Menu Item 3-2\\n          <li> Menu Item 3-3\\n        </ul>\\n    </ul>\\n  </div>\\n\";\n\tcode.js[2] = \"\\n  import { Component } from '@angular/core';\\n\\n  @Component({\\n    templateUr: 'app.html',\\n    styles: [require('./app.css')]\\n  })\\n  export class AppComponent{\\n  }\\n\";\n\tvar MenuComponent = (function () {\n\t    function MenuComponent() {\n\t        this.code = code;\n\t    }\n\t    MenuComponent.prototype.ngAfterViewInit = function () {\n\t        window.scroll(0, 0);\n\t    };\n\t    return MenuComponent;\n\t}());\n\tMenuComponent = __decorate([\n\t    core_1.Component({\n\t        template: \"\\n    <div class=\\\"container page-title\\\">\\n      <h1>Menu</h1>\\n    </div>\\n    <div class=\\\"container\\\">\\n    \\n      <h2> {{code.title[0]}} </h2>\\n      <div class=\\\"spacer x3\\\"></div>\\n      <div class=\\\"container round-border\\\">\\n        <p>\" + code.html[0] + \"\\n        <ng2-tab>\\n          <div class=\\\"tabs\\\">\\n             <div index=\\\"html\\\">HTML</div>\\n             <div index=\\\"js\\\">Javascript</div>\\n             <div index=\\\"css\\\">Css</div>\\n           </div> \\n           <div class=\\\"tab-contents\\\">\\n             <div contents=\\\"html\\\">\\n               <pre><code>{{code.html[0]}}</code></pre>\\n             </div>\\n             <div contents=\\\"js\\\">\\n               <pre><code>{{code.js[0]}}</code></pre>\\n             </div>\\n             <div contents=\\\"css\\\">\\n               <pre><code>{{code.css[0]}}</code></pre>\\n             </div>\\n           </div>\\n        </ng2-tab>\\n      </div>\\n      <div class=\\\"spacer x4\\\"></div>\\n      \\n      <h2> {{code.title[1]}} </h2>\\n      <div class=\\\"spacer x3\\\"></div>\\n      <div class=\\\"container round-border\\\">\\n        <p>\" + code.html[1] + \"\\n        <ng2-tab>\\n          <div class=\\\"tabs\\\">\\n             <div index=\\\"html\\\">HTML</div>\\n             <div index=\\\"js\\\">Javascript</div>\\n             <div index=\\\"css\\\">Css</div>\\n           </div> \\n           <div class=\\\"tab-contents\\\">\\n             <div contents=\\\"html\\\">\\n               <pre><code>{{code.html[1]}}</code></pre>\\n             </div>\\n             <div contents=\\\"js\\\">\\n               <pre><code>{{code.js[1]}}</code></pre>\\n             </div>\\n             <div contents=\\\"css\\\">\\n               <pre><code>{{code.css[0]}}</code></pre>\\n             </div>\\n           </div>\\n        </ng2-tab>\\n      </div>\\n      <div class=\\\"spacer x4\\\"></div>\\n      \\n      \\n      <h2> {{code.title[2]}} </h2>\\n      <div class=\\\"spacer x3\\\"></div>\\n      <div class=\\\"container round-border\\\">\\n        <p>\" + code.html[2] + \"\\n        <ng2-tab>\\n          <div class=\\\"tabs\\\">\\n             <div index=\\\"html\\\">HTML</div>\\n             <div index=\\\"js\\\">Javascript</div>\\n             <div index=\\\"css\\\">Css</div>\\n           </div> \\n           <div class=\\\"tab-contents\\\">\\n             <div contents=\\\"html\\\">\\n               <pre><code>{{code.html[2]}}</code></pre>\\n             </div>\\n             <div contents=\\\"js\\\">\\n               <pre><code>{{code.js[2]}}</code></pre>\\n             </div>\\n             <div contents=\\\"css\\\">\\n               <pre><code>{{code.css[0]}}</code></pre>\\n             </div>\\n           </div>\\n        </ng2-tab>\\n      </div>\\n      <div class=\\\"spacer x4\\\"></div>\\n    </div>\"\n\t    }),\n\t    __metadata(\"design:paramtypes\", [])\n\t], MenuComponent);\n\texports.MenuComponent = MenuComponent;\n\n\n/***/ },\n\n/***/ 375:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(2);\n\tvar code = { title: [], html: [], js: [], css: [] };\n\tcode.title[0] = \"Drag and Drop Elements To Re-order\";\n\tcode.html[0] = \"\\n  <ul ng2-sortable>\\n    <li id=\\\"order\\\">Order</li>\\n    <li id=\\\"me\\\">Me</li>\\n    <li id=\\\"right\\\">Right</li>\\n    <li id=\\\"the\\\">The</li>\\n    <li id=\\\"into\\\">Into</li>\\n    <li id=\\\"put\\\">Put</li>\\n  </ul>\\n\";\n\tcode.js[0] = \"\\n  import { Component } from '@angular/core';\\n\\n  @Component({\\n    templateUr: 'app.html'\\n  })\\n  export class AppComponent {\\n    order: string[] = [];\\n  }\\n\";\n\tcode.css[0] = \"\\n  ul[ng2-sortable] }\\n     padding: 10px; \\n     border: 1px solid #ccc;\\n    list-style: none; \\n    display: block\\n  }\\n  ul[ng2-sortable] li {\\n    padding: 10px 5px;\\n    background: #4986e7;\\n    color: #fff; \\n    border: 1px solid #fff;\\n    display: block; \\n    position: relative\\n  }\\n  ul[ng2-sortable] li.drag-enter {\\n    border-top: 2px solid yellow;\\n  }\\n\";\n\tvar SortableComponent = (function () {\n\t    function SortableComponent() {\n\t        this.code = code;\n\t    }\n\t    SortableComponent.prototype.ngAfterViewInit = function () {\n\t        window.scroll(0, 0);\n\t    };\n\t    return SortableComponent;\n\t}());\n\tSortableComponent = __decorate([\n\t    core_1.Component({\n\t        template: \"\\n    <h1>Sortable</h1>\\n    \\n    <div class=\\\"container\\\">\\n    \\n      <h2> {{code.title[0]}} </h2>\\n      <div class=\\\"spacer x3\\\"></div>\\n      <div class=\\\"container round-border\\\">\\n        <p>\" + code.html[0] + \"\\n        <ng2-tab>\\n          <div class=\\\"tabs\\\">\\n             <div index=\\\"html\\\">HTML</div>\\n             <div index=\\\"js\\\">Javascript</div>\\n             <div index=\\\"css\\\">CSS</div>\\n           </div> \\n           <div class=\\\"tab-contents\\\">\\n             <div contents=\\\"html\\\">\\n               <pre><code>{{code.html[0]}}</code></pre>\\n             </div>\\n             <div contents=\\\"js\\\">\\n               <pre><code>{{code.js[0]}}</code></pre>\\n             </div>\\n             <div contents=\\\"css\\\">\\n               <pre><code>{{code.css[0]}}</code></pre>\\n             </div>\\n           </div>\\n        </ng2-tab>\\n      </div>\\n      <div class=\\\"spacer x4\\\"></div>\\n    </div>\",\n\t        styles: [\"\\n    ul[ng2-sortable] {\\n       padding: 10px; \\n       border: 1px solid #ccc;\\n      list-style: none; \\n      display: block\\n    }\\n    ul[ng2-sortable] li {\\n      padding: 10px 5px;\\n      background: #4986e7;\\n      color: #fff; \\n      border: 1px solid #fff;\\n      display: block; \\n      position: relative\\n    }\\n    ul[ng2-sortable] li.drag-enter {\\n      border-top: 2px solid yellow;\\n    }\\n  \"]\n\t    }),\n\t    __metadata(\"design:paramtypes\", [])\n\t], SortableComponent);\n\texports.SortableComponent = SortableComponent;\n\n\n/***/ },\n\n/***/ 376:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(2);\n\tvar GettingStartedComponent = (function () {\n\t    function GettingStartedComponent() {\n\t    }\n\t    GettingStartedComponent.prototype.ngAfterViewInit = function () {\n\t        window.scroll(0, 0);\n\t    };\n\t    return GettingStartedComponent;\n\t}());\n\tGettingStartedComponent = __decorate([\n\t    core_1.Component({\n\t        template: \"\\n<div class=\\\"container page-title\\\">\\n  <h1>Getting Started</h1>\\n</div>\\n<div class=\\\"container\\\">\\n  <p class=\\\"page-title-description\\\">\\n    ng2-ui is a collection of quality Angular2 directives.\\n    To make ng2-ui available to your project, you need to install a npm package and \\n    import NG2_DIRECTIVES.\\n  </p>\\n  \\n  <h2>NPM Install</h2>\\n  <pre><code class=\\\"language-bash\\\">$ npm install ng2-ui --save</code></pre>\\n  \\n  <h2>systemjs.config.js</h2>\\n  <pre><code class=\\\"language-javascript\\\">\\nmap: {{ '{' }}\\n  app: \\\"app\\\",\\n  ...\\n  'ng2-ui': 'https://npmcdn.com/ng2-ui' // <----- this\\n{{ '}' }},\\n\\npackages: {{ '{' }}\\n   app: {{ '{' }}main: './main.js', defaultExtension: 'js'{{ '}' }},\\n   ...\\n   'ng2-ui': {{ '{' }} main: 'dist/index.js', defaultExtension: 'js' {{ '}' }}  // <----- this\\n   {{ '}' }}\\n}</code></pre>\\n      \\n  <h2>Usage</h2>\\n  <p><b>Import and include directives for your application</b>\\n  <p>app.component.ts\\n  <pre><code class=\\\"language-javascript\\\">\\n//our root app component\\nimport {{ '{' }}Component, enableProdMode{{ '}' }} from '@angular/core'\\nenableProdMode();\\n\\n@Component({{ '{' }}\\n  selector: 'my-app',\\n  template: require('./src/app.tpl.html'),\\n{{ '}' }})\\nexport class AppComponent {{ '{' }} ... {{ '}' }}\\n</code></pre>\\n\\n<p><b>src/app.tpl.html</b></p>\\n<pre><code class=\\\"language-markup\\\">\\n&lt;input [(ngModel)]=\\\"date1\\\" ng2-datetime-picker /> \\n\\n&lt;ng2-map center=\\\"Brampton, Canada\\\">&lt;/ng2-map> \\n</code></pre>\\n</div>\\n  \"\n\t    }),\n\t    __metadata(\"design:paramtypes\", [])\n\t], GettingStartedComponent);\n\texports.GettingStartedComponent = GettingStartedComponent;\n\n\n/***/ },\n\n/***/ 377:\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function webpackUniversalModuleDefinition(root, factory) {\n\t\tif(true)\n\t\t\tmodule.exports = factory(__webpack_require__(2));\n\t\telse if(typeof define === 'function' && define.amd)\n\t\t\tdefine([\"@angular/core\"], factory);\n\t\telse if(typeof exports === 'object')\n\t\t\texports[\"ng2-utils\"] = factory(require(\"@angular/core\"));\n\t\telse\n\t\t\troot[\"ng2-utils\"] = factory(root[\"@angular/core\"]);\n\t})(this, function(__WEBPACK_EXTERNAL_MODULE_7__) {\n\treturn /******/ (function(modules) { // webpackBootstrap\n\t/******/ \t// The module cache\n\t/******/ \tvar installedModules = {};\n\t/******/\n\t/******/ \t// The require function\n\t/******/ \tfunction __webpack_require__(moduleId) {\n\t/******/\n\t/******/ \t\t// Check if module is in cache\n\t/******/ \t\tif(installedModules[moduleId])\n\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\t/******/\n\t/******/ \t\t// Create a new module (and put it into the cache)\n\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t/******/ \t\t\texports: {},\n\t/******/ \t\t\tid: moduleId,\n\t/******/ \t\t\tloaded: false\n\t/******/ \t\t};\n\t/******/\n\t/******/ \t\t// Execute the module function\n\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t/******/\n\t/******/ \t\t// Flag the module as loaded\n\t/******/ \t\tmodule.loaded = true;\n\t/******/\n\t/******/ \t\t// Return the exports of the module\n\t/******/ \t\treturn module.exports;\n\t/******/ \t}\n\t/******/\n\t/******/\n\t/******/ \t// expose the modules object (__webpack_modules__)\n\t/******/ \t__webpack_require__.m = modules;\n\t/******/\n\t/******/ \t// expose the module cache\n\t/******/ \t__webpack_require__.c = installedModules;\n\t/******/\n\t/******/ \t// __webpack_public_path__\n\t/******/ \t__webpack_require__.p = \"\";\n\t/******/\n\t/******/ \t// Load entry module and return exports\n\t/******/ \treturn __webpack_require__(0);\n\t/******/ })\n\t/************************************************************************/\n\t/******/ ([\n\t/* 0 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar scroll_to_1 = __webpack_require__(1);\n\t\texports.scrollTo = scroll_to_1.scrollTo;\n\t\tvar element_visible_1 = __webpack_require__(2);\n\t\texports.elementVisible = element_visible_1.elementVisible;\n\t\tvar computed_style_1 = __webpack_require__(3);\n\t\texports.computedStyle = computed_style_1.computedStyle;\n\t\tvar outer_width_1 = __webpack_require__(4);\n\t\texports.outerWidth = outer_width_1.outerWidth;\n\t\tvar outer_height_1 = __webpack_require__(5);\n\t\texports.outerHeight = outer_height_1.outerHeight;\n\t\tvar html_code_pipe_1 = __webpack_require__(6);\n\t\texports.HtmlCodePipe = html_code_pipe_1.HtmlCodePipe;\n\t\tvar javascript_code_pipe_1 = __webpack_require__(8);\n\t\texports.JavascriptCodePipe = javascript_code_pipe_1.JavascriptCodePipe;\n\t\tvar ng2_utils_module_1 = __webpack_require__(13);\n\t\texports.Ng2UtilsModule = ng2_utils_module_1.Ng2UtilsModule;\n\t\n\t\n\t/***/ },\n\t/* 1 */\n\t/***/ function(module, exports) {\n\t\n\t\t\"use strict\";\n\t\t/**\n\t\t * scroll to the selector within the parent selector by scrolling 10 times within 500ms\n\t\t * @param selector\n\t\t * @param parentSelector\n\t\t */\n\t\tfunction scrollTo(selector, parentSelector, horizontal, distance) {\n\t\t    // argument validation\n\t\t    var parentEl, targetEl;\n\t\t    parentSelector = parentSelector || 'body';\n\t\t    targetEl = document.querySelector(selector);\n\t\t    if (!targetEl) {\n\t\t        throw \"Invalid selector \" + selector;\n\t\t    }\n\t\t    parentEl = document.querySelector(parentSelector);\n\t\t    if (!parentEl) {\n\t\t        throw \"Invalid parent selector \" + parentSelector;\n\t\t    }\n\t\t    // detect the current environment\n\t\t    var parentElStyle = window.getComputedStyle(parentEl);\n\t\t    var scrollContainerEl = parentElStyle.overflow === 'auto' ? parentEl : document.body;\n\t\t    var currentScrollTop = scrollContainerEl.scrollTop;\n\t\t    var currentScrollLeft = scrollContainerEl.scrollLeft;\n\t\t    // determine targetOffsetTop(or Left);\n\t\t    var targetOffsetTop;\n\t\t    var targetOffsetLeft;\n\t\t    if (scrollContainerEl === document.body) {\n\t\t        var bodyRect = document.body.getBoundingClientRect();\n\t\t        var targetRect = targetEl.getBoundingClientRect();\n\t\t        targetOffsetTop = targetRect.top - bodyRect.top;\n\t\t        targetOffsetLeft = targetRect.left - bodyRect.left;\n\t\t    }\n\t\t    else {\n\t\t        targetOffsetTop = targetEl.offsetTop;\n\t\t        targetOffsetLeft = targetEl.offsetLeft;\n\t\t    }\n\t\t    if (distance) {\n\t\t        currentScrollTop += distance;\n\t\t        currentScrollLeft += distance;\n\t\t    }\n\t\t    // start scrolling\n\t\t    var step = horizontal ?\n\t\t        Math.ceil((targetOffsetLeft - currentScrollLeft) / 10) :\n\t\t        Math.ceil((targetOffsetTop - currentScrollTop) / 10);\n\t\t    var scrollProp = horizontal ? 'scrollLeft' : 'scrollTop';\n\t\t    (function loop(i, prop) {\n\t\t        setTimeout(function main() {\n\t\t            scrollContainerEl[prop] += step;\n\t\t            i > 1 && loop(i - 1, prop);\n\t\t        }, 50);\n\t\t    }(10, scrollProp));\n\t\t}\n\t\texports.scrollTo = scrollTo;\n\t\n\t\n\t/***/ },\n\t/* 2 */\n\t/***/ function(module, exports) {\n\t\n\t\t\"use strict\";\n\t\t/**\n\t\t * Returns an element is visible within outer element\n\t\t * @param innerEl\n\t\t * @param outerEl\n\t\t * @param adjustment\n\t\t * @returns {{top: boolean, bottom: boolean, left: boolean, right: boolean}}\n\t\t */\n\t\tfunction elementVisible(innerElement, outerElement, adjustment) {\n\t\t    var innerEl;\n\t\t    var outerEl;\n\t\t    innerEl = (typeof innerElement === 'string') ?\n\t\t        document.querySelector(innerElement) : innerElement;\n\t\t    outerEl = (typeof outerElement === 'string') ?\n\t\t        document.querySelector(outerElement) : outerElement;\n\t\t    var innerRect = innerEl.getBoundingClientRect();\n\t\t    var bottomAdjustment = (adjustment && adjustment.bottom || 0);\n\t\t    if (outerEl === window) {\n\t\t        return {\n\t\t            top: innerRect.bottom - bottomAdjustment > window.innerHeight\n\t\t                && innerRect.top < window.innerHeight,\n\t\t            bottom: innerRect.bottom - bottomAdjustment > 0\n\t\t                && innerRect.bottom < window.innerHeight,\n\t\t            left: innerRect.right > window.innerWidth\n\t\t                && innerRect.left < window.innerWidth,\n\t\t            right: innerRect.right > 0\n\t\t                && innerRect.right < window.innerWidth\n\t\t        };\n\t\t    }\n\t\t    else {\n\t\t        var outerRect = outerEl.getBoundingClientRect();\n\t\t        var defaultView = (innerEl.ownerDocument || document).defaultView;\n\t\t        var computedStyle = defaultView.getComputedStyle(outerEl, null);\n\t\t        var outerRectBorderTopWidth = parseInt(computedStyle.getPropertyValue('border-top-width'), 10);\n\t\t        var outerRectBorderLeftWidth = parseInt(computedStyle.getPropertyValue('border-left-width'), 10);\n\t\t        /* top is visible or bottom is visible */\n\t\t        var topVisible = (innerRect.top >= outerRect.top\n\t\t            && innerRect.top < outerRect.bottom);\n\t\t        var bottomVisible = (innerRect.bottom > (outerRect.top + outerRectBorderTopWidth)\n\t\t            && innerRect.bottom < outerRect.bottom);\n\t\t        var leftVisible = (innerRect.left >= outerRect.left\n\t\t            && innerRect.left < outerRect.right);\n\t\t        var rightVisible = (innerRect.right > (outerRect.left + outerRectBorderLeftWidth)\n\t\t            && innerRect.right < outerRect.right);\n\t\t        return {\n\t\t            top: topVisible,\n\t\t            bottom: bottomVisible,\n\t\t            left: leftVisible,\n\t\t            right: rightVisible\n\t\t        };\n\t\t    }\n\t\t}\n\t\texports.elementVisible = elementVisible;\n\t\n\t\n\t/***/ },\n\t/* 3 */\n\t/***/ function(module, exports) {\n\t\n\t\t\"use strict\";\n\t\t/**\n\t\t * returns coumputed style of given element\n\t\t * @param el\n\t\t * @param styleProp\n\t\t * @returns {any}\n\t\t */\n\t\tfunction computedStyle(element, styleProp) {\n\t\t    var el;\n\t\t    el = (typeof element === 'string') ? document.querySelector(element) : element;\n\t\t    var value, defaultView = (el.ownerDocument || document).defaultView;\n\t\t    // W3C standard way:\n\t\t    if (defaultView && defaultView.getComputedStyle) {\n\t\t        // sanitize property name to css notation\n\t\t        // (hypen separated words eg. font-Size)\n\t\t        styleProp = styleProp.replace(/([A-Z])/g, \"-$1\").toLowerCase();\n\t\t        return defaultView.getComputedStyle(el, null).getPropertyValue(styleProp);\n\t\t    }\n\t\t    else if (el['currentStyle']) {\n\t\t        // sanitize property name to camelCase\n\t\t        styleProp = styleProp.replace(/\\-(\\w)/g, function (str, letter) {\n\t\t            return letter.toUpperCase();\n\t\t        });\n\t\t        value = el['currentStyle'][styleProp];\n\t\t        // convert other units to pixels on IE\n\t\t        if (/^\\d+(em|pt|%|ex)?$/i.test(value)) {\n\t\t            return (function (value) {\n\t\t                var oldLeft = el.style.left, oldRsLeft = el['runtimeStyle'].left;\n\t\t                el['runtimeStyle'].left = el['currentStyle'].left;\n\t\t                el.style.left = value || 0;\n\t\t                value = el.style['pixelLeft'] + \"px\";\n\t\t                el.style.left = oldLeft;\n\t\t                el['runtimeStyle'].left = oldRsLeft;\n\t\t                return value;\n\t\t            })(value);\n\t\t        }\n\t\t        return value;\n\t\t    }\n\t\t}\n\t\texports.computedStyle = computedStyle;\n\t\n\t\n\t/***/ },\n\t/* 4 */\n\t/***/ function(module, exports) {\n\t\n\t\t\"use strict\";\n\t\tfunction outerWidth(element) {\n\t\t    var el;\n\t\t    (typeof element === 'string') ? (el = document.querySelector(element)) : element;\n\t\t    var style = getComputedStyle(el);\n\t\t    return el.offsetWidth +\n\t\t        parseInt(style.getPropertyValue('margin-left')) +\n\t\t        parseInt(style.getPropertyValue('margin-right'));\n\t\t}\n\t\texports.outerWidth = outerWidth;\n\t\n\t\n\t/***/ },\n\t/* 5 */\n\t/***/ function(module, exports) {\n\t\n\t\t\"use strict\";\n\t\tfunction outerHeight(element) {\n\t\t    var el;\n\t\t    (typeof element === 'string') ? (el = document.querySelector(element)) : element;\n\t\t    var style = getComputedStyle(el);\n\t\t    return el.offsetHeight +\n\t\t        parseInt(style.getPropertyValue('margin-top')) +\n\t\t        parseInt(style.getPropertyValue('margin-bottom'));\n\t\t}\n\t\texports.outerHeight = outerHeight;\n\t\n\t\n\t/***/ },\n\t/* 6 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(7);\n\t\tvar HtmlCodePipe = (function () {\n\t\t    function HtmlCodePipe() {\n\t\t    }\n\t\t    HtmlCodePipe.prototype.transform = function (html, tagsIncludeExclude) {\n\t\t        var ret;\n\t\t        var tagsInclude = [];\n\t\t        var tagsExclude = [];\n\t\t        (tagsIncludeExclude || '').split(',').forEach(function (tag) {\n\t\t            if (tag.match(/^-/)) {\n\t\t                tag = tag.replace(/^-/, '');\n\t\t                tagsExclude.push(tag);\n\t\t            }\n\t\t            else if (tag !== '') {\n\t\t                tagsInclude.push(tag);\n\t\t            }\n\t\t        });\n\t\t        ret = tagsInclude.length > 0 ? '' : html;\n\t\t        if (tagsInclude.length > 0) {\n\t\t            tagsInclude.forEach(function (tag) {\n\t\t                var regEx = new RegExp(\"<\" + tag + \">([\\\\s\\\\S]*?)</\" + tag + \">\");\n\t\t                var matches = html.match(regEx);\n\t\t                var output = matches[0].replace(/<\\/?ng2-utils-[0-9]+>\\s*/g, ''); //remove <ng2-utils-xxx> and </ng2-utils-xxx>\n\t\t                ret = ret + output;\n\t\t            });\n\t\t        }\n\t\t        if (tagsExclude.length > 0) {\n\t\t            tagsExclude.forEach(function (tag) {\n\t\t                var regEx = new RegExp(\"<\" + tag + \">([\\\\s\\\\S]*?)</\" + tag + \">\");\n\t\t                ret = ret.replace(regEx, '');\n\t\t            });\n\t\t        }\n\t\t        return ret;\n\t\t    };\n\t\t    return HtmlCodePipe;\n\t\t}());\n\t\tHtmlCodePipe = __decorate([\n\t\t    core_1.Pipe({ name: 'htmlCode' }),\n\t\t    __metadata(\"design:paramtypes\", [])\n\t\t], HtmlCodePipe);\n\t\texports.HtmlCodePipe = HtmlCodePipe;\n\t\n\t\n\t/***/ },\n\t/* 7 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_7__;\n\t\n\t/***/ },\n\t/* 8 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(7);\n\t\tvar js_beautify = __webpack_require__(9);\n\t\tvar JavascriptCodePipe = (function () {\n\t\t    function JavascriptCodePipe() {\n\t\t    }\n\t\t    JavascriptCodePipe.prototype.transform = function (value) {\n\t\t        value = value.toString();\n\t\t        var ret = value;\n\t\t        return js_beautify(value);\n\t\t    };\n\t\t    return JavascriptCodePipe;\n\t\t}());\n\t\tJavascriptCodePipe = __decorate([\n\t\t    core_1.Pipe({ name: 'jsCode' }),\n\t\t    __metadata(\"design:paramtypes\", [])\n\t\t], JavascriptCodePipe);\n\t\texports.JavascriptCodePipe = JavascriptCodePipe;\n\t\n\t\n\t/***/ },\n\t/* 9 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n\t\tThe following batches are equivalent:\n\t\t\n\t\tvar beautify_js = require('js-beautify');\n\t\tvar beautify_js = require('js-beautify').js;\n\t\tvar beautify_js = require('js-beautify').js_beautify;\n\t\t\n\t\tvar beautify_css = require('js-beautify').css;\n\t\tvar beautify_css = require('js-beautify').css_beautify;\n\t\t\n\t\tvar beautify_html = require('js-beautify').html;\n\t\tvar beautify_html = require('js-beautify').html_beautify;\n\t\t\n\t\tAll methods returned accept two arguments, the source string and an options object.\n\t\t**/\n\t\t\n\t\tfunction get_beautify(js_beautify, css_beautify, html_beautify) {\n\t\t    // the default is js\n\t\t    var beautify = function(src, config) {\n\t\t        return js_beautify.js_beautify(src, config);\n\t\t    };\n\t\t\n\t\t    // short aliases\n\t\t    beautify.js = js_beautify.js_beautify;\n\t\t    beautify.css = css_beautify.css_beautify;\n\t\t    beautify.html = html_beautify.html_beautify;\n\t\t\n\t\t    // legacy aliases\n\t\t    beautify.js_beautify = js_beautify.js_beautify;\n\t\t    beautify.css_beautify = css_beautify.css_beautify;\n\t\t    beautify.html_beautify = html_beautify.html_beautify;\n\t\t\n\t\t    return beautify;\n\t\t}\n\t\t\n\t\tif (true) {\n\t\t    // Add support for AMD ( https://github.com/amdjs/amdjs-api/wiki/AMD#defineamd-property- )\n\t\t    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t\t        __webpack_require__(10),\n\t\t        __webpack_require__(11),\n\t\t        __webpack_require__(12)\n\t\t    ], __WEBPACK_AMD_DEFINE_RESULT__ = function(js_beautify, css_beautify, html_beautify) {\n\t\t        return get_beautify(js_beautify, css_beautify, html_beautify);\n\t\t    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\t} else {\n\t\t    (function(mod) {\n\t\t        var js_beautify = require('./lib/beautify');\n\t\t        var css_beautify = require('./lib/beautify-css');\n\t\t        var html_beautify = require('./lib/beautify-html');\n\t\t\n\t\t        mod.exports = get_beautify(js_beautify, css_beautify, html_beautify);\n\t\t\n\t\t    })(module);\n\t\t}\n\t\n\t/***/ },\n\t/* 10 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*jshint curly:true, eqeqeq:true, laxbreak:true, noempty:false */\n\t\t/*\n\t\t\n\t\t  The MIT License (MIT)\n\t\t\n\t\t  Copyright (c) 2007-2013 Einar Lielmanis and contributors.\n\t\t\n\t\t  Permission is hereby granted, free of charge, to any person\n\t\t  obtaining a copy of this software and associated documentation files\n\t\t  (the \"Software\"), to deal in the Software without restriction,\n\t\t  including without limitation the rights to use, copy, modify, merge,\n\t\t  publish, distribute, sublicense, and/or sell copies of the Software,\n\t\t  and to permit persons to whom the Software is furnished to do so,\n\t\t  subject to the following conditions:\n\t\t\n\t\t  The above copyright notice and this permission notice shall be\n\t\t  included in all copies or substantial portions of the Software.\n\t\t\n\t\t  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n\t\t  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t\t  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n\t\t  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n\t\t  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n\t\t  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n\t\t  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\t\t  SOFTWARE.\n\t\t\n\t\t JS Beautifier\n\t\t---------------\n\t\t\n\t\t\n\t\t  Written by Einar Lielmanis, <einar@jsbeautifier.org>\n\t\t      http://jsbeautifier.org/\n\t\t\n\t\t  Originally converted to javascript by Vital, <vital76@gmail.com>\n\t\t  \"End braces on own line\" added by Chris J. Shull, <chrisjshull@gmail.com>\n\t\t  Parsing improvements for brace-less statements by Liam Newman <bitwiseman@gmail.com>\n\t\t\n\t\t\n\t\t  Usage:\n\t\t    js_beautify(js_source_text);\n\t\t    js_beautify(js_source_text, options);\n\t\t\n\t\t  The options are:\n\t\t    indent_size (default 4)          - indentation size,\n\t\t    indent_char (default space)      - character to indent with,\n\t\t    preserve_newlines (default true) - whether existing line breaks should be preserved,\n\t\t    max_preserve_newlines (default unlimited) - maximum number of line breaks to be preserved in one chunk,\n\t\t\n\t\t    jslint_happy (default false) - if true, then jslint-stricter mode is enforced.\n\t\t\n\t\t            jslint_happy        !jslint_happy\n\t\t            ---------------------------------\n\t\t            function ()         function()\n\t\t\n\t\t            switch () {         switch() {\n\t\t            case 1:               case 1:\n\t\t              break;                break;\n\t\t            }                   }\n\t\t\n\t\t    space_after_anon_function (default false) - should the space before an anonymous function's parens be added, \"function()\" vs \"function ()\",\n\t\t          NOTE: This option is overriden by jslint_happy (i.e. if jslint_happy is true, space_after_anon_function is true by design)\n\t\t\n\t\t    brace_style (default \"collapse\") - \"collapse-preserve-inline\" | \"collapse\" | \"expand\" | \"end-expand\" | \"none\"\n\t\t            put braces on the same line as control statements (default), or put braces on own line (Allman / ANSI style), or just put end braces on own line, or attempt to keep them where they are.\n\t\t\n\t\t    space_before_conditional (default true) - should the space before conditional statement be added, \"if(true)\" vs \"if (true)\",\n\t\t\n\t\t    unescape_strings (default false) - should printable characters in strings encoded in \\xNN notation be unescaped, \"example\" vs \"\\x65\\x78\\x61\\x6d\\x70\\x6c\\x65\"\n\t\t\n\t\t    wrap_line_length (default unlimited) - lines should wrap at next opportunity after this number of characters.\n\t\t          NOTE: This is not a hard limit. Lines will continue until a point where a newline would\n\t\t                be preserved if it were present.\n\t\t\n\t\t    end_with_newline (default false)  - end output with a newline\n\t\t\n\t\t\n\t\t    e.g\n\t\t\n\t\t    js_beautify(js_source_text, {\n\t\t      'indent_size': 1,\n\t\t      'indent_char': '\\t'\n\t\t    });\n\t\t\n\t\t*/\n\t\t\n\t\t// Object.values polyfill found here:\n\t\t// http://tokenposts.blogspot.com.au/2012/04/javascript-objectkeys-browser.html\n\t\tif (!Object.values) {\n\t\t    Object.values = function(o) {\n\t\t        if (o !== Object(o)) {\n\t\t            throw new TypeError('Object.values called on a non-object');\n\t\t        }\n\t\t        var k = [],\n\t\t            p;\n\t\t        for (p in o) {\n\t\t            if (Object.prototype.hasOwnProperty.call(o, p)) {\n\t\t                k.push(o[p]);\n\t\t            }\n\t\t        }\n\t\t        return k;\n\t\t    };\n\t\t}\n\t\t\n\t\t(function() {\n\t\t\n\t\t    function js_beautify(js_source_text, options) {\n\t\t\n\t\t        var acorn = {};\n\t\t        (function(exports) {\n\t\t            /* jshint curly: false */\n\t\t            // This section of code is taken from acorn.\n\t\t            //\n\t\t            // Acorn was written by Marijn Haverbeke and released under an MIT\n\t\t            // license. The Unicode regexps (for identifiers and whitespace) were\n\t\t            // taken from [Esprima](http://esprima.org) by Ariya Hidayat.\n\t\t            //\n\t\t            // Git repositories for Acorn are available at\n\t\t            //\n\t\t            //     http://marijnhaverbeke.nl/git/acorn\n\t\t            //     https://github.com/marijnh/acorn.git\n\t\t\n\t\t            // ## Character categories\n\t\t\n\t\t            // Big ugly regular expressions that match characters in the\n\t\t            // whitespace, identifier, and identifier-start categories. These\n\t\t            // are only applied when a character is found to actually have a\n\t\t            // code point above 128.\n\t\t\n\t\t            var nonASCIIwhitespace = /[\\u1680\\u180e\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/; // jshint ignore:line\n\t\t            var nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u08a0\\u08a2-\\u08ac\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097f\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d\\u0c58\\u0c59\\u0c60\\u0c61\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d60\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19c1-\\u19c7\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2e2f\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua697\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa80-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\n\t\t            var nonASCIIidentifierChars = \"\\u0300-\\u036f\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u0620-\\u0649\\u0672-\\u06d3\\u06e7-\\u06e8\\u06fb-\\u06fc\\u0730-\\u074a\\u0800-\\u0814\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0840-\\u0857\\u08e4-\\u08fe\\u0900-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962-\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09d7\\u09df-\\u09e0\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2-\\u0ae3\\u0ae6-\\u0aef\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b5f-\\u0b60\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c01-\\u0c03\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62-\\u0c63\\u0c66-\\u0c6f\\u0c82\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2-\\u0ce3\\u0ce6-\\u0cef\\u0d02\\u0d03\\u0d46-\\u0d48\\u0d57\\u0d62-\\u0d63\\u0d66-\\u0d6f\\u0d82\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0df2\\u0df3\\u0e34-\\u0e3a\\u0e40-\\u0e45\\u0e50-\\u0e59\\u0eb4-\\u0eb9\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f41-\\u0f47\\u0f71-\\u0f84\\u0f86-\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u1000-\\u1029\\u1040-\\u1049\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u170e-\\u1710\\u1720-\\u1730\\u1740-\\u1750\\u1772\\u1773\\u1780-\\u17b2\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u1920-\\u192b\\u1930-\\u193b\\u1951-\\u196d\\u19b0-\\u19c0\\u19c8-\\u19c9\\u19d0-\\u19d9\\u1a00-\\u1a15\\u1a20-\\u1a53\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1b46-\\u1b4b\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c00-\\u1c22\\u1c40-\\u1c49\\u1c5b-\\u1c7d\\u1cd0-\\u1cd2\\u1d00-\\u1dbe\\u1e01-\\u1f15\\u200c\\u200d\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2d81-\\u2d96\\u2de0-\\u2dff\\u3021-\\u3028\\u3099\\u309a\\ua640-\\ua66d\\ua674-\\ua67d\\ua69f\\ua6f0-\\ua6f1\\ua7f8-\\ua800\\ua806\\ua80b\\ua823-\\ua827\\ua880-\\ua881\\ua8b4-\\ua8c4\\ua8d0-\\ua8d9\\ua8f3-\\ua8f7\\ua900-\\ua909\\ua926-\\ua92d\\ua930-\\ua945\\ua980-\\ua983\\ua9b3-\\ua9c0\\uaa00-\\uaa27\\uaa40-\\uaa41\\uaa4c-\\uaa4d\\uaa50-\\uaa59\\uaa7b\\uaae0-\\uaae9\\uaaf2-\\uaaf3\\uabc0-\\uabe1\\uabec\\uabed\\uabf0-\\uabf9\\ufb20-\\ufb28\\ufe00-\\ufe0f\\ufe20-\\ufe26\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\n\t\t            var nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\n\t\t            var nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\n\t\t\n\t\t            // Whether a single character denotes a newline.\n\t\t\n\t\t            exports.newline = /[\\n\\r\\u2028\\u2029]/;\n\t\t\n\t\t            // Matches a whole line break (where CRLF is considered a single\n\t\t            // line break). Used to count lines.\n\t\t\n\t\t            // in javascript, these two differ\n\t\t            // in python they are the same, different methods are called on them\n\t\t            exports.lineBreak = new RegExp('\\r\\n|' + exports.newline.source);\n\t\t            exports.allLineBreaks = new RegExp(exports.lineBreak.source, 'g');\n\t\t\n\t\t\n\t\t            // Test whether a given character code starts an identifier.\n\t\t\n\t\t            exports.isIdentifierStart = function(code) {\n\t\t                // permit $ (36) and @ (64). @ is used in ES7 decorators.\n\t\t                if (code < 65) return code === 36 || code === 64;\n\t\t                // 65 through 91 are uppercase letters.\n\t\t                if (code < 91) return true;\n\t\t                // permit _ (95).\n\t\t                if (code < 97) return code === 95;\n\t\t                // 97 through 123 are lowercase letters.\n\t\t                if (code < 123) return true;\n\t\t                return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\n\t\t            };\n\t\t\n\t\t            // Test whether a given character is part of an identifier.\n\t\t\n\t\t            exports.isIdentifierChar = function(code) {\n\t\t                if (code < 48) return code === 36;\n\t\t                if (code < 58) return true;\n\t\t                if (code < 65) return false;\n\t\t                if (code < 91) return true;\n\t\t                if (code < 97) return code === 95;\n\t\t                if (code < 123) return true;\n\t\t                return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n\t\t            };\n\t\t        })(acorn);\n\t\t        /* jshint curly: true */\n\t\t\n\t\t        function in_array(what, arr) {\n\t\t            for (var i = 0; i < arr.length; i += 1) {\n\t\t                if (arr[i] === what) {\n\t\t                    return true;\n\t\t                }\n\t\t            }\n\t\t            return false;\n\t\t        }\n\t\t\n\t\t        function trim(s) {\n\t\t            return s.replace(/^\\s+|\\s+$/g, '');\n\t\t        }\n\t\t\n\t\t        function ltrim(s) {\n\t\t            return s.replace(/^\\s+/g, '');\n\t\t        }\n\t\t\n\t\t        // function rtrim(s) {\n\t\t        //     return s.replace(/\\s+$/g, '');\n\t\t        // }\n\t\t\n\t\t        function sanitizeOperatorPosition(opPosition) {\n\t\t            opPosition = opPosition || OPERATOR_POSITION.before_newline;\n\t\t\n\t\t            var validPositionValues = Object.values(OPERATOR_POSITION);\n\t\t\n\t\t            if (!in_array(opPosition, validPositionValues)) {\n\t\t                throw new Error(\"Invalid Option Value: The option 'operator_position' must be one of the following values\\n\" +\n\t\t                    validPositionValues +\n\t\t                    \"\\nYou passed in: '\" + opPosition + \"'\");\n\t\t            }\n\t\t\n\t\t            return opPosition;\n\t\t        }\n\t\t\n\t\t        var OPERATOR_POSITION = {\n\t\t            before_newline: 'before-newline',\n\t\t            after_newline: 'after-newline',\n\t\t            preserve_newline: 'preserve-newline',\n\t\t        };\n\t\t\n\t\t        var OPERATOR_POSITION_BEFORE_OR_PRESERVE = [OPERATOR_POSITION.before_newline, OPERATOR_POSITION.preserve_newline];\n\t\t\n\t\t        var MODE = {\n\t\t            BlockStatement: 'BlockStatement', // 'BLOCK'\n\t\t            Statement: 'Statement', // 'STATEMENT'\n\t\t            ObjectLiteral: 'ObjectLiteral', // 'OBJECT',\n\t\t            ArrayLiteral: 'ArrayLiteral', //'[EXPRESSION]',\n\t\t            ForInitializer: 'ForInitializer', //'(FOR-EXPRESSION)',\n\t\t            Conditional: 'Conditional', //'(COND-EXPRESSION)',\n\t\t            Expression: 'Expression' //'(EXPRESSION)'\n\t\t        };\n\t\t\n\t\t        function Beautifier(js_source_text, options) {\n\t\t            \"use strict\";\n\t\t            var output;\n\t\t            var tokens = [],\n\t\t                token_pos;\n\t\t            var Tokenizer;\n\t\t            var current_token;\n\t\t            var last_type, last_last_text, indent_string;\n\t\t            var flags, previous_flags, flag_store;\n\t\t            var prefix;\n\t\t\n\t\t            var handlers, opt;\n\t\t            var baseIndentString = '';\n\t\t\n\t\t            handlers = {\n\t\t                'TK_START_EXPR': handle_start_expr,\n\t\t                'TK_END_EXPR': handle_end_expr,\n\t\t                'TK_START_BLOCK': handle_start_block,\n\t\t                'TK_END_BLOCK': handle_end_block,\n\t\t                'TK_WORD': handle_word,\n\t\t                'TK_RESERVED': handle_word,\n\t\t                'TK_SEMICOLON': handle_semicolon,\n\t\t                'TK_STRING': handle_string,\n\t\t                'TK_EQUALS': handle_equals,\n\t\t                'TK_OPERATOR': handle_operator,\n\t\t                'TK_COMMA': handle_comma,\n\t\t                'TK_BLOCK_COMMENT': handle_block_comment,\n\t\t                'TK_COMMENT': handle_comment,\n\t\t                'TK_DOT': handle_dot,\n\t\t                'TK_UNKNOWN': handle_unknown,\n\t\t                'TK_EOF': handle_eof\n\t\t            };\n\t\t\n\t\t            function create_flags(flags_base, mode) {\n\t\t                var next_indent_level = 0;\n\t\t                if (flags_base) {\n\t\t                    next_indent_level = flags_base.indentation_level;\n\t\t                    if (!output.just_added_newline() &&\n\t\t                        flags_base.line_indent_level > next_indent_level) {\n\t\t                        next_indent_level = flags_base.line_indent_level;\n\t\t                    }\n\t\t                }\n\t\t\n\t\t                var next_flags = {\n\t\t                    mode: mode,\n\t\t                    parent: flags_base,\n\t\t                    last_text: flags_base ? flags_base.last_text : '', // last token text\n\t\t                    last_word: flags_base ? flags_base.last_word : '', // last 'TK_WORD' passed\n\t\t                    declaration_statement: false,\n\t\t                    declaration_assignment: false,\n\t\t                    multiline_frame: false,\n\t\t                    inline_frame: false,\n\t\t                    if_block: false,\n\t\t                    else_block: false,\n\t\t                    do_block: false,\n\t\t                    do_while: false,\n\t\t                    import_block: false,\n\t\t                    in_case_statement: false, // switch(..){ INSIDE HERE }\n\t\t                    in_case: false, // we're on the exact line with \"case 0:\"\n\t\t                    case_body: false, // the indented case-action block\n\t\t                    indentation_level: next_indent_level,\n\t\t                    line_indent_level: flags_base ? flags_base.line_indent_level : next_indent_level,\n\t\t                    start_line_index: output.get_line_number(),\n\t\t                    ternary_depth: 0\n\t\t                };\n\t\t                return next_flags;\n\t\t            }\n\t\t\n\t\t            // Some interpreters have unexpected results with foo = baz || bar;\n\t\t            options = options ? options : {};\n\t\t            opt = {};\n\t\t\n\t\t            // compatibility\n\t\t            if (options.braces_on_own_line !== undefined) { //graceful handling of deprecated option\n\t\t                opt.brace_style = options.braces_on_own_line ? \"expand\" : \"collapse\";\n\t\t            }\n\t\t            opt.brace_style = options.brace_style ? options.brace_style : (opt.brace_style ? opt.brace_style : \"collapse\");\n\t\t\n\t\t            // graceful handling of deprecated option\n\t\t            if (opt.brace_style === \"expand-strict\") {\n\t\t                opt.brace_style = \"expand\";\n\t\t            }\n\t\t\n\t\t            opt.indent_size = options.indent_size ? parseInt(options.indent_size, 10) : 4;\n\t\t            opt.indent_char = options.indent_char ? options.indent_char : ' ';\n\t\t            opt.eol = options.eol ? options.eol : 'auto';\n\t\t            opt.preserve_newlines = (options.preserve_newlines === undefined) ? true : options.preserve_newlines;\n\t\t            opt.break_chained_methods = (options.break_chained_methods === undefined) ? false : options.break_chained_methods;\n\t\t            opt.max_preserve_newlines = (options.max_preserve_newlines === undefined) ? 0 : parseInt(options.max_preserve_newlines, 10);\n\t\t            opt.space_in_paren = (options.space_in_paren === undefined) ? false : options.space_in_paren;\n\t\t            opt.space_in_empty_paren = (options.space_in_empty_paren === undefined) ? false : options.space_in_empty_paren;\n\t\t            opt.jslint_happy = (options.jslint_happy === undefined) ? false : options.jslint_happy;\n\t\t            opt.space_after_anon_function = (options.space_after_anon_function === undefined) ? false : options.space_after_anon_function;\n\t\t            opt.keep_array_indentation = (options.keep_array_indentation === undefined) ? false : options.keep_array_indentation;\n\t\t            opt.space_before_conditional = (options.space_before_conditional === undefined) ? true : options.space_before_conditional;\n\t\t            opt.unescape_strings = (options.unescape_strings === undefined) ? false : options.unescape_strings;\n\t\t            opt.wrap_line_length = (options.wrap_line_length === undefined) ? 0 : parseInt(options.wrap_line_length, 10);\n\t\t            opt.e4x = (options.e4x === undefined) ? false : options.e4x;\n\t\t            opt.end_with_newline = (options.end_with_newline === undefined) ? false : options.end_with_newline;\n\t\t            opt.comma_first = (options.comma_first === undefined) ? false : options.comma_first;\n\t\t            opt.operator_position = sanitizeOperatorPosition(options.operator_position);\n\t\t\n\t\t            // For testing of beautify ignore:start directive\n\t\t            opt.test_output_raw = (options.test_output_raw === undefined) ? false : options.test_output_raw;\n\t\t\n\t\t            // force opt.space_after_anon_function to true if opt.jslint_happy\n\t\t            if (opt.jslint_happy) {\n\t\t                opt.space_after_anon_function = true;\n\t\t            }\n\t\t\n\t\t            if (options.indent_with_tabs) {\n\t\t                opt.indent_char = '\\t';\n\t\t                opt.indent_size = 1;\n\t\t            }\n\t\t\n\t\t            if (opt.eol === 'auto') {\n\t\t                opt.eol = '\\n';\n\t\t                if (js_source_text && acorn.lineBreak.test(js_source_text || '')) {\n\t\t                    opt.eol = js_source_text.match(acorn.lineBreak)[0];\n\t\t                }\n\t\t            }\n\t\t\n\t\t            opt.eol = opt.eol.replace(/\\\\r/, '\\r').replace(/\\\\n/, '\\n');\n\t\t\n\t\t            //----------------------------------\n\t\t            indent_string = '';\n\t\t            while (opt.indent_size > 0) {\n\t\t                indent_string += opt.indent_char;\n\t\t                opt.indent_size -= 1;\n\t\t            }\n\t\t\n\t\t            var preindent_index = 0;\n\t\t            if (js_source_text && js_source_text.length) {\n\t\t                while ((js_source_text.charAt(preindent_index) === ' ' ||\n\t\t                        js_source_text.charAt(preindent_index) === '\\t')) {\n\t\t                    baseIndentString += js_source_text.charAt(preindent_index);\n\t\t                    preindent_index += 1;\n\t\t                }\n\t\t                js_source_text = js_source_text.substring(preindent_index);\n\t\t            }\n\t\t\n\t\t            last_type = 'TK_START_BLOCK'; // last token type\n\t\t            last_last_text = ''; // pre-last token text\n\t\t            output = new Output(indent_string, baseIndentString);\n\t\t\n\t\t            // If testing the ignore directive, start with output disable set to true\n\t\t            output.raw = opt.test_output_raw;\n\t\t\n\t\t\n\t\t            // Stack of parsing/formatting states, including MODE.\n\t\t            // We tokenize, parse, and output in an almost purely a forward-only stream of token input\n\t\t            // and formatted output.  This makes the beautifier less accurate than full parsers\n\t\t            // but also far more tolerant of syntax errors.\n\t\t            //\n\t\t            // For example, the default mode is MODE.BlockStatement. If we see a '{' we push a new frame of type\n\t\t            // MODE.BlockStatement on the the stack, even though it could be object literal.  If we later\n\t\t            // encounter a \":\", we'll switch to to MODE.ObjectLiteral.  If we then see a \";\",\n\t\t            // most full parsers would die, but the beautifier gracefully falls back to\n\t\t            // MODE.BlockStatement and continues on.\n\t\t            flag_store = [];\n\t\t            set_mode(MODE.BlockStatement);\n\t\t\n\t\t            this.beautify = function() {\n\t\t\n\t\t                /*jshint onevar:true */\n\t\t                var local_token, sweet_code;\n\t\t                Tokenizer = new tokenizer(js_source_text, opt, indent_string);\n\t\t                tokens = Tokenizer.tokenize();\n\t\t                token_pos = 0;\n\t\t\n\t\t                function get_local_token() {\n\t\t                    local_token = get_token();\n\t\t                    return local_token;\n\t\t                }\n\t\t\n\t\t                while (get_local_token()) {\n\t\t                    for (var i = 0; i < local_token.comments_before.length; i++) {\n\t\t                        // The cleanest handling of inline comments is to treat them as though they aren't there.\n\t\t                        // Just continue formatting and the behavior should be logical.\n\t\t                        // Also ignore unknown tokens.  Again, this should result in better behavior.\n\t\t                        handle_token(local_token.comments_before[i]);\n\t\t                    }\n\t\t                    handle_token(local_token);\n\t\t\n\t\t                    last_last_text = flags.last_text;\n\t\t                    last_type = local_token.type;\n\t\t                    flags.last_text = local_token.text;\n\t\t\n\t\t                    token_pos += 1;\n\t\t                }\n\t\t\n\t\t                sweet_code = output.get_code();\n\t\t                if (opt.end_with_newline) {\n\t\t                    sweet_code += '\\n';\n\t\t                }\n\t\t\n\t\t                if (opt.eol !== '\\n') {\n\t\t                    sweet_code = sweet_code.replace(/[\\n]/g, opt.eol);\n\t\t                }\n\t\t\n\t\t                return sweet_code;\n\t\t            };\n\t\t\n\t\t            function handle_token(local_token) {\n\t\t                var newlines = local_token.newlines;\n\t\t                var keep_whitespace = opt.keep_array_indentation && is_array(flags.mode);\n\t\t\n\t\t                if (keep_whitespace) {\n\t\t                    for (var i = 0; i < newlines; i += 1) {\n\t\t                        print_newline(i > 0);\n\t\t                    }\n\t\t                } else {\n\t\t                    if (opt.max_preserve_newlines && newlines > opt.max_preserve_newlines) {\n\t\t                        newlines = opt.max_preserve_newlines;\n\t\t                    }\n\t\t\n\t\t                    if (opt.preserve_newlines) {\n\t\t                        if (local_token.newlines > 1) {\n\t\t                            print_newline();\n\t\t                            for (var j = 1; j < newlines; j += 1) {\n\t\t                                print_newline(true);\n\t\t                            }\n\t\t                        }\n\t\t                    }\n\t\t                }\n\t\t\n\t\t                current_token = local_token;\n\t\t                handlers[current_token.type]();\n\t\t            }\n\t\t\n\t\t            // we could use just string.split, but\n\t\t            // IE doesn't like returning empty strings\n\t\t            function split_linebreaks(s) {\n\t\t                //return s.split(/\\x0d\\x0a|\\x0a/);\n\t\t\n\t\t                s = s.replace(acorn.allLineBreaks, '\\n');\n\t\t                var out = [],\n\t\t                    idx = s.indexOf(\"\\n\");\n\t\t                while (idx !== -1) {\n\t\t                    out.push(s.substring(0, idx));\n\t\t                    s = s.substring(idx + 1);\n\t\t                    idx = s.indexOf(\"\\n\");\n\t\t                }\n\t\t                if (s.length) {\n\t\t                    out.push(s);\n\t\t                }\n\t\t                return out;\n\t\t            }\n\t\t\n\t\t            var newline_restricted_tokens = ['break', 'continue', 'return', 'throw'];\n\t\t\n\t\t            function allow_wrap_or_preserved_newline(force_linewrap) {\n\t\t                force_linewrap = (force_linewrap === undefined) ? false : force_linewrap;\n\t\t\n\t\t                // Never wrap the first token on a line\n\t\t                if (output.just_added_newline()) {\n\t\t                    return;\n\t\t                }\n\t\t\n\t\t                var shouldPreserveOrForce = (opt.preserve_newlines && current_token.wanted_newline) || force_linewrap;\n\t\t                var operatorLogicApplies = in_array(flags.last_text, Tokenizer.positionable_operators) || in_array(current_token.text, Tokenizer.positionable_operators);\n\t\t\n\t\t                if (operatorLogicApplies) {\n\t\t                    var shouldPrintOperatorNewline = (\n\t\t                            in_array(flags.last_text, Tokenizer.positionable_operators) &&\n\t\t                            in_array(opt.operator_position, OPERATOR_POSITION_BEFORE_OR_PRESERVE)\n\t\t                        ) ||\n\t\t                        in_array(current_token.text, Tokenizer.positionable_operators);\n\t\t                    shouldPreserveOrForce = shouldPreserveOrForce && shouldPrintOperatorNewline;\n\t\t                }\n\t\t\n\t\t                if (shouldPreserveOrForce) {\n\t\t                    print_newline(false, true);\n\t\t                } else if (opt.wrap_line_length) {\n\t\t                    if (last_type === 'TK_RESERVED' && in_array(flags.last_text, newline_restricted_tokens)) {\n\t\t                        // These tokens should never have a newline inserted\n\t\t                        // between them and the following expression.\n\t\t                        return;\n\t\t                    }\n\t\t                    var proposed_line_length = output.current_line.get_character_count() + current_token.text.length +\n\t\t                        (output.space_before_token ? 1 : 0);\n\t\t                    if (proposed_line_length >= opt.wrap_line_length) {\n\t\t                        print_newline(false, true);\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t\n\t\t            function print_newline(force_newline, preserve_statement_flags) {\n\t\t                if (!preserve_statement_flags) {\n\t\t                    if (flags.last_text !== ';' && flags.last_text !== ',' && flags.last_text !== '=' && last_type !== 'TK_OPERATOR') {\n\t\t                        while (flags.mode === MODE.Statement && !flags.if_block && !flags.do_block) {\n\t\t                            restore_mode();\n\t\t                        }\n\t\t                    }\n\t\t                }\n\t\t\n\t\t                if (output.add_new_line(force_newline)) {\n\t\t                    flags.multiline_frame = true;\n\t\t                }\n\t\t            }\n\t\t\n\t\t            function print_token_line_indentation() {\n\t\t                if (output.just_added_newline()) {\n\t\t                    if (opt.keep_array_indentation && is_array(flags.mode) && current_token.wanted_newline) {\n\t\t                        output.current_line.push(current_token.whitespace_before);\n\t\t                        output.space_before_token = false;\n\t\t                    } else if (output.set_indent(flags.indentation_level)) {\n\t\t                        flags.line_indent_level = flags.indentation_level;\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t\n\t\t            function print_token(printable_token) {\n\t\t                if (output.raw) {\n\t\t                    output.add_raw_token(current_token);\n\t\t                    return;\n\t\t                }\n\t\t\n\t\t                if (opt.comma_first && last_type === 'TK_COMMA' &&\n\t\t                    output.just_added_newline()) {\n\t\t                    if (output.previous_line.last() === ',') {\n\t\t                        var popped = output.previous_line.pop();\n\t\t                        // if the comma was already at the start of the line,\n\t\t                        // pull back onto that line and reprint the indentation\n\t\t                        if (output.previous_line.is_empty()) {\n\t\t                            output.previous_line.push(popped);\n\t\t                            output.trim(true);\n\t\t                            output.current_line.pop();\n\t\t                            output.trim();\n\t\t                        }\n\t\t\n\t\t                        // add the comma in front of the next token\n\t\t                        print_token_line_indentation();\n\t\t                        output.add_token(',');\n\t\t                        output.space_before_token = true;\n\t\t                    }\n\t\t                }\n\t\t\n\t\t                printable_token = printable_token || current_token.text;\n\t\t                print_token_line_indentation();\n\t\t                output.add_token(printable_token);\n\t\t            }\n\t\t\n\t\t            function indent() {\n\t\t                flags.indentation_level += 1;\n\t\t            }\n\t\t\n\t\t            function deindent() {\n\t\t                if (flags.indentation_level > 0 &&\n\t\t                    ((!flags.parent) || flags.indentation_level > flags.parent.indentation_level)) {\n\t\t                    flags.indentation_level -= 1;\n\t\t\n\t\t                }\n\t\t            }\n\t\t\n\t\t            function set_mode(mode) {\n\t\t                if (flags) {\n\t\t                    flag_store.push(flags);\n\t\t                    previous_flags = flags;\n\t\t                } else {\n\t\t                    previous_flags = create_flags(null, mode);\n\t\t                }\n\t\t\n\t\t                flags = create_flags(previous_flags, mode);\n\t\t            }\n\t\t\n\t\t            function is_array(mode) {\n\t\t                return mode === MODE.ArrayLiteral;\n\t\t            }\n\t\t\n\t\t            function is_expression(mode) {\n\t\t                return in_array(mode, [MODE.Expression, MODE.ForInitializer, MODE.Conditional]);\n\t\t            }\n\t\t\n\t\t            function restore_mode() {\n\t\t                if (flag_store.length > 0) {\n\t\t                    previous_flags = flags;\n\t\t                    flags = flag_store.pop();\n\t\t                    if (previous_flags.mode === MODE.Statement) {\n\t\t                        output.remove_redundant_indentation(previous_flags);\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t\n\t\t            function start_of_object_property() {\n\t\t                return flags.parent.mode === MODE.ObjectLiteral && flags.mode === MODE.Statement && (\n\t\t                    (flags.last_text === ':' && flags.ternary_depth === 0) || (last_type === 'TK_RESERVED' && in_array(flags.last_text, ['get', 'set'])));\n\t\t            }\n\t\t\n\t\t            function start_of_statement() {\n\t\t                if (\n\t\t                    (last_type === 'TK_RESERVED' && in_array(flags.last_text, ['var', 'let', 'const']) && current_token.type === 'TK_WORD') ||\n\t\t                    (last_type === 'TK_RESERVED' && flags.last_text === 'do') ||\n\t\t                    (last_type === 'TK_RESERVED' && in_array(flags.last_text, ['return', 'throw']) && !current_token.wanted_newline) ||\n\t\t                    (last_type === 'TK_RESERVED' && flags.last_text === 'else' && !(current_token.type === 'TK_RESERVED' && current_token.text === 'if')) ||\n\t\t                    (last_type === 'TK_END_EXPR' && (previous_flags.mode === MODE.ForInitializer || previous_flags.mode === MODE.Conditional)) ||\n\t\t                    (last_type === 'TK_WORD' && flags.mode === MODE.BlockStatement &&\n\t\t                        !flags.in_case &&\n\t\t                        !(current_token.text === '--' || current_token.text === '++') &&\n\t\t                        last_last_text !== 'function' &&\n\t\t                        current_token.type !== 'TK_WORD' && current_token.type !== 'TK_RESERVED') ||\n\t\t                    (flags.mode === MODE.ObjectLiteral && (\n\t\t                        (flags.last_text === ':' && flags.ternary_depth === 0) || (last_type === 'TK_RESERVED' && in_array(flags.last_text, ['get', 'set']))))\n\t\t                ) {\n\t\t\n\t\t                    set_mode(MODE.Statement);\n\t\t                    indent();\n\t\t\n\t\t                    if (last_type === 'TK_RESERVED' && in_array(flags.last_text, ['var', 'let', 'const']) && current_token.type === 'TK_WORD') {\n\t\t                        flags.declaration_statement = true;\n\t\t                    }\n\t\t\n\t\t                    // Issue #276:\n\t\t                    // If starting a new statement with [if, for, while, do], push to a new line.\n\t\t                    // if (a) if (b) if(c) d(); else e(); else f();\n\t\t                    if (!start_of_object_property()) {\n\t\t                        allow_wrap_or_preserved_newline(\n\t\t                            current_token.type === 'TK_RESERVED' && in_array(current_token.text, ['do', 'for', 'if', 'while']));\n\t\t                    }\n\t\t\n\t\t                    return true;\n\t\t                }\n\t\t                return false;\n\t\t            }\n\t\t\n\t\t            function all_lines_start_with(lines, c) {\n\t\t                for (var i = 0; i < lines.length; i++) {\n\t\t                    var line = trim(lines[i]);\n\t\t                    if (line.charAt(0) !== c) {\n\t\t                        return false;\n\t\t                    }\n\t\t                }\n\t\t                return true;\n\t\t            }\n\t\t\n\t\t            function each_line_matches_indent(lines, indent) {\n\t\t                var i = 0,\n\t\t                    len = lines.length,\n\t\t                    line;\n\t\t                for (; i < len; i++) {\n\t\t                    line = lines[i];\n\t\t                    // allow empty lines to pass through\n\t\t                    if (line && line.indexOf(indent) !== 0) {\n\t\t                        return false;\n\t\t                    }\n\t\t                }\n\t\t                return true;\n\t\t            }\n\t\t\n\t\t            function is_special_word(word) {\n\t\t                return in_array(word, ['case', 'return', 'do', 'if', 'throw', 'else']);\n\t\t            }\n\t\t\n\t\t            function get_token(offset) {\n\t\t                var index = token_pos + (offset || 0);\n\t\t                return (index < 0 || index >= tokens.length) ? null : tokens[index];\n\t\t            }\n\t\t\n\t\t            function handle_start_expr() {\n\t\t                if (start_of_statement()) {\n\t\t                    // The conditional starts the statement if appropriate.\n\t\t                }\n\t\t\n\t\t                var next_mode = MODE.Expression;\n\t\t                if (current_token.text === '[') {\n\t\t\n\t\t                    if (last_type === 'TK_WORD' || flags.last_text === ')') {\n\t\t                        // this is array index specifier, break immediately\n\t\t                        // a[x], fn()[x]\n\t\t                        if (last_type === 'TK_RESERVED' && in_array(flags.last_text, Tokenizer.line_starters)) {\n\t\t                            output.space_before_token = true;\n\t\t                        }\n\t\t                        set_mode(next_mode);\n\t\t                        print_token();\n\t\t                        indent();\n\t\t                        if (opt.space_in_paren) {\n\t\t                            output.space_before_token = true;\n\t\t                        }\n\t\t                        return;\n\t\t                    }\n\t\t\n\t\t                    next_mode = MODE.ArrayLiteral;\n\t\t                    if (is_array(flags.mode)) {\n\t\t                        if (flags.last_text === '[' ||\n\t\t                            (flags.last_text === ',' && (last_last_text === ']' || last_last_text === '}'))) {\n\t\t                            // ], [ goes to new line\n\t\t                            // }, [ goes to new line\n\t\t                            if (!opt.keep_array_indentation) {\n\t\t                                print_newline();\n\t\t                            }\n\t\t                        }\n\t\t                    }\n\t\t\n\t\t                } else {\n\t\t                    if (last_type === 'TK_RESERVED' && flags.last_text === 'for') {\n\t\t                        next_mode = MODE.ForInitializer;\n\t\t                    } else if (last_type === 'TK_RESERVED' && in_array(flags.last_text, ['if', 'while'])) {\n\t\t                        next_mode = MODE.Conditional;\n\t\t                    } else {\n\t\t                        // next_mode = MODE.Expression;\n\t\t                    }\n\t\t                }\n\t\t\n\t\t                if (flags.last_text === ';' || last_type === 'TK_START_BLOCK') {\n\t\t                    print_newline();\n\t\t                } else if (last_type === 'TK_END_EXPR' || last_type === 'TK_START_EXPR' || last_type === 'TK_END_BLOCK' || flags.last_text === '.') {\n\t\t                    // TODO: Consider whether forcing this is required.  Review failing tests when removed.\n\t\t                    allow_wrap_or_preserved_newline(current_token.wanted_newline);\n\t\t                    // do nothing on (( and )( and ][ and ]( and .(\n\t\t                } else if (!(last_type === 'TK_RESERVED' && current_token.text === '(') && last_type !== 'TK_WORD' && last_type !== 'TK_OPERATOR') {\n\t\t                    output.space_before_token = true;\n\t\t                } else if ((last_type === 'TK_RESERVED' && (flags.last_word === 'function' || flags.last_word === 'typeof')) ||\n\t\t                    (flags.last_text === '*' &&\n\t\t                        (in_array(last_last_text, ['function', 'yield']) ||\n\t\t                            (flags.mode === MODE.ObjectLiteral && in_array(last_last_text, ['{', ',']))))) {\n\t\t                    // function() vs function ()\n\t\t                    // yield*() vs yield* ()\n\t\t                    // function*() vs function* ()\n\t\t                    if (opt.space_after_anon_function) {\n\t\t                        output.space_before_token = true;\n\t\t                    }\n\t\t                } else if (last_type === 'TK_RESERVED' && (in_array(flags.last_text, Tokenizer.line_starters) || flags.last_text === 'catch')) {\n\t\t                    if (opt.space_before_conditional) {\n\t\t                        output.space_before_token = true;\n\t\t                    }\n\t\t                }\n\t\t\n\t\t                // Should be a space between await and an IIFE\n\t\t                if (current_token.text === '(' && last_type === 'TK_RESERVED' && flags.last_word === 'await') {\n\t\t                    output.space_before_token = true;\n\t\t                }\n\t\t\n\t\t                // Support of this kind of newline preservation.\n\t\t                // a = (b &&\n\t\t                //     (c || d));\n\t\t                if (current_token.text === '(') {\n\t\t                    if (last_type === 'TK_EQUALS' || last_type === 'TK_OPERATOR') {\n\t\t                        if (!start_of_object_property()) {\n\t\t                            allow_wrap_or_preserved_newline();\n\t\t                        }\n\t\t                    }\n\t\t                }\n\t\t\n\t\t                // Support preserving wrapped arrow function expressions\n\t\t                // a.b('c',\n\t\t                //     () => d.e\n\t\t                // )\n\t\t                if (current_token.text === '(' && last_type !== 'TK_WORD' && last_type !== 'TK_RESERVED') {\n\t\t                    allow_wrap_or_preserved_newline();\n\t\t                }\n\t\t\n\t\t                set_mode(next_mode);\n\t\t                print_token();\n\t\t                if (opt.space_in_paren) {\n\t\t                    output.space_before_token = true;\n\t\t                }\n\t\t\n\t\t                // In all cases, if we newline while inside an expression it should be indented.\n\t\t                indent();\n\t\t            }\n\t\t\n\t\t            function handle_end_expr() {\n\t\t                // statements inside expressions are not valid syntax, but...\n\t\t                // statements must all be closed when their container closes\n\t\t                while (flags.mode === MODE.Statement) {\n\t\t                    restore_mode();\n\t\t                }\n\t\t\n\t\t                if (flags.multiline_frame) {\n\t\t                    allow_wrap_or_preserved_newline(current_token.text === ']' && is_array(flags.mode) && !opt.keep_array_indentation);\n\t\t                }\n\t\t\n\t\t                if (opt.space_in_paren) {\n\t\t                    if (last_type === 'TK_START_EXPR' && !opt.space_in_empty_paren) {\n\t\t                        // () [] no inner space in empty parens like these, ever, ref #320\n\t\t                        output.trim();\n\t\t                        output.space_before_token = false;\n\t\t                    } else {\n\t\t                        output.space_before_token = true;\n\t\t                    }\n\t\t                }\n\t\t                if (current_token.text === ']' && opt.keep_array_indentation) {\n\t\t                    print_token();\n\t\t                    restore_mode();\n\t\t                } else {\n\t\t                    restore_mode();\n\t\t                    print_token();\n\t\t                }\n\t\t                output.remove_redundant_indentation(previous_flags);\n\t\t\n\t\t                // do {} while () // no statement required after\n\t\t                if (flags.do_while && previous_flags.mode === MODE.Conditional) {\n\t\t                    previous_flags.mode = MODE.Expression;\n\t\t                    flags.do_block = false;\n\t\t                    flags.do_while = false;\n\t\t\n\t\t                }\n\t\t            }\n\t\t\n\t\t            function handle_start_block() {\n\t\t                // Check if this is should be treated as a ObjectLiteral\n\t\t                var next_token = get_token(1);\n\t\t                var second_token = get_token(2);\n\t\t                if (second_token && (\n\t\t                        (in_array(second_token.text, [':', ',']) && in_array(next_token.type, ['TK_STRING', 'TK_WORD', 'TK_RESERVED'])) ||\n\t\t                        (in_array(next_token.text, ['get', 'set']) && in_array(second_token.type, ['TK_WORD', 'TK_RESERVED']))\n\t\t                    )) {\n\t\t                    // We don't support TypeScript,but we didn't break it for a very long time.\n\t\t                    // We'll try to keep not breaking it.\n\t\t                    if (!in_array(last_last_text, ['class', 'interface'])) {\n\t\t                        set_mode(MODE.ObjectLiteral);\n\t\t                    } else {\n\t\t                        set_mode(MODE.BlockStatement);\n\t\t                    }\n\t\t                } else if (last_type === 'TK_OPERATOR' && flags.last_text === '=>') {\n\t\t                    // arrow function: (param1, paramN) => { statements }\n\t\t                    set_mode(MODE.BlockStatement);\n\t\t                } else if (in_array(last_type, ['TK_EQUALS', 'TK_START_EXPR', 'TK_COMMA', 'TK_OPERATOR']) ||\n\t\t                    (last_type === 'TK_RESERVED' && in_array(flags.last_text, ['return', 'throw', 'import', 'default']))\n\t\t                ) {\n\t\t                    // Detecting shorthand function syntax is difficult by scanning forward,\n\t\t                    //     so check the surrounding context.\n\t\t                    // If the block is being returned, imported, export default, passed as arg,\n\t\t                    //     assigned with = or assigned in a nested object, treat as an ObjectLiteral.\n\t\t                    set_mode(MODE.ObjectLiteral);\n\t\t                } else {\n\t\t                    set_mode(MODE.BlockStatement);\n\t\t                }\n\t\t\n\t\t                var empty_braces = !next_token.comments_before.length && next_token.text === '}';\n\t\t                var empty_anonymous_function = empty_braces && flags.last_word === 'function' &&\n\t\t                    last_type === 'TK_END_EXPR';\n\t\t\n\t\t\n\t\t                if (opt.brace_style === \"expand\" ||\n\t\t                    (opt.brace_style === \"none\" && current_token.wanted_newline)) {\n\t\t                    if (last_type !== 'TK_OPERATOR' &&\n\t\t                        (empty_anonymous_function ||\n\t\t                            last_type === 'TK_EQUALS' ||\n\t\t                            (last_type === 'TK_RESERVED' && is_special_word(flags.last_text) && flags.last_text !== 'else'))) {\n\t\t                        output.space_before_token = true;\n\t\t                    } else {\n\t\t                        print_newline(false, true);\n\t\t                    }\n\t\t                } else { // collapse\n\t\t                    if (opt.brace_style === 'collapse-preserve-inline') {\n\t\t                        // search forward for a newline wanted inside this block\n\t\t                        var index = 0;\n\t\t                        var check_token = null;\n\t\t                        flags.inline_frame = true;\n\t\t                        do {\n\t\t                            index += 1;\n\t\t                            check_token = get_token(index);\n\t\t                            if (check_token.wanted_newline) {\n\t\t                                flags.inline_frame = false;\n\t\t                                break;\n\t\t                            }\n\t\t                        } while (check_token.type !== 'TK_EOF' &&\n\t\t                            !(check_token.type === 'TK_END_BLOCK' && check_token.opened === current_token));\n\t\t                    }\n\t\t\n\t\t                    if (is_array(previous_flags.mode) && (last_type === 'TK_START_EXPR' || last_type === 'TK_COMMA')) {\n\t\t                        // if we're preserving inline,\n\t\t                        // allow newline between comma and next brace.\n\t\t                        if (last_type === 'TK_COMMA' || opt.space_in_paren) {\n\t\t                            output.space_before_token = true;\n\t\t                        }\n\t\t\n\t\t                        if (opt.brace_style === 'collapse-preserve-inline' &&\n\t\t                            (last_type === 'TK_COMMA' || (last_type === 'TK_START_EXPR' && flags.inline_frame))) {\n\t\t                            allow_wrap_or_preserved_newline();\n\t\t                            previous_flags.multiline_frame = previous_flags.multiline_frame || flags.multiline_frame;\n\t\t                            flags.multiline_frame = false;\n\t\t                        }\n\t\t                    } else if (last_type !== 'TK_OPERATOR' && last_type !== 'TK_START_EXPR') {\n\t\t                        if (last_type === 'TK_START_BLOCK') {\n\t\t                            print_newline();\n\t\t                        } else {\n\t\t                            output.space_before_token = true;\n\t\t                        }\n\t\t                    }\n\t\t                }\n\t\t                print_token();\n\t\t                indent();\n\t\t            }\n\t\t\n\t\t            function handle_end_block() {\n\t\t                // statements must all be closed when their container closes\n\t\t                while (flags.mode === MODE.Statement) {\n\t\t                    restore_mode();\n\t\t                }\n\t\t                var empty_braces = last_type === 'TK_START_BLOCK';\n\t\t\n\t\t                if (opt.brace_style === \"expand\") {\n\t\t                    if (!empty_braces) {\n\t\t                        print_newline();\n\t\t                    }\n\t\t                } else {\n\t\t                    // skip {}\n\t\t                    if (!empty_braces) {\n\t\t                        if (flags.inline_frame) {\n\t\t                            output.space_before_token = true;\n\t\t                        } else if (is_array(flags.mode) && opt.keep_array_indentation) {\n\t\t                            // we REALLY need a newline here, but newliner would skip that\n\t\t                            opt.keep_array_indentation = false;\n\t\t                            print_newline();\n\t\t                            opt.keep_array_indentation = true;\n\t\t\n\t\t                        } else {\n\t\t                            print_newline();\n\t\t                        }\n\t\t                    }\n\t\t                }\n\t\t                restore_mode();\n\t\t                print_token();\n\t\t            }\n\t\t\n\t\t            function handle_word() {\n\t\t                if (current_token.type === 'TK_RESERVED') {\n\t\t                    if (in_array(current_token.text, ['set', 'get']) && flags.mode !== MODE.ObjectLiteral) {\n\t\t                        current_token.type = 'TK_WORD';\n\t\t                    } else if (in_array(current_token.text, ['as', 'from']) && !flags.import_block) {\n\t\t                        current_token.type = 'TK_WORD';\n\t\t                    } else if (flags.mode === MODE.ObjectLiteral) {\n\t\t                        var next_token = get_token(1);\n\t\t                        if (next_token.text === ':') {\n\t\t                            current_token.type = 'TK_WORD';\n\t\t                        }\n\t\t                    }\n\t\t                }\n\t\t\n\t\t                if (start_of_statement()) {\n\t\t                    // The conditional starts the statement if appropriate.\n\t\t                } else if (current_token.wanted_newline && !is_expression(flags.mode) &&\n\t\t                    (last_type !== 'TK_OPERATOR' || (flags.last_text === '--' || flags.last_text === '++')) &&\n\t\t                    last_type !== 'TK_EQUALS' &&\n\t\t                    (opt.preserve_newlines || !(last_type === 'TK_RESERVED' && in_array(flags.last_text, ['var', 'let', 'const', 'set', 'get'])))) {\n\t\t\n\t\t                    print_newline();\n\t\t                }\n\t\t\n\t\t                if (flags.do_block && !flags.do_while) {\n\t\t                    if (current_token.type === 'TK_RESERVED' && current_token.text === 'while') {\n\t\t                        // do {} ## while ()\n\t\t                        output.space_before_token = true;\n\t\t                        print_token();\n\t\t                        output.space_before_token = true;\n\t\t                        flags.do_while = true;\n\t\t                        return;\n\t\t                    } else {\n\t\t                        // do {} should always have while as the next word.\n\t\t                        // if we don't see the expected while, recover\n\t\t                        print_newline();\n\t\t                        flags.do_block = false;\n\t\t                    }\n\t\t                }\n\t\t\n\t\t                // if may be followed by else, or not\n\t\t                // Bare/inline ifs are tricky\n\t\t                // Need to unwind the modes correctly: if (a) if (b) c(); else d(); else e();\n\t\t                if (flags.if_block) {\n\t\t                    if (!flags.else_block && (current_token.type === 'TK_RESERVED' && current_token.text === 'else')) {\n\t\t                        flags.else_block = true;\n\t\t                    } else {\n\t\t                        while (flags.mode === MODE.Statement) {\n\t\t                            restore_mode();\n\t\t                        }\n\t\t                        flags.if_block = false;\n\t\t                        flags.else_block = false;\n\t\t                    }\n\t\t                }\n\t\t\n\t\t                if (current_token.type === 'TK_RESERVED' && (current_token.text === 'case' || (current_token.text === 'default' && flags.in_case_statement))) {\n\t\t                    print_newline();\n\t\t                    if (flags.case_body || opt.jslint_happy) {\n\t\t                        // switch cases following one another\n\t\t                        deindent();\n\t\t                        flags.case_body = false;\n\t\t                    }\n\t\t                    print_token();\n\t\t                    flags.in_case = true;\n\t\t                    flags.in_case_statement = true;\n\t\t                    return;\n\t\t                }\n\t\t\n\t\t                if (current_token.type === 'TK_RESERVED' && current_token.text === 'function') {\n\t\t                    if (in_array(flags.last_text, ['}', ';']) || (output.just_added_newline() && !in_array(flags.last_text, ['[', '{', ':', '=', ',']))) {\n\t\t                        // make sure there is a nice clean space of at least one blank line\n\t\t                        // before a new function definition\n\t\t                        if (!output.just_added_blankline() && !current_token.comments_before.length) {\n\t\t                            print_newline();\n\t\t                            print_newline(true);\n\t\t                        }\n\t\t                    }\n\t\t                    if (last_type === 'TK_RESERVED' || last_type === 'TK_WORD') {\n\t\t                        if (last_type === 'TK_RESERVED' && in_array(flags.last_text, ['get', 'set', 'new', 'return', 'export', 'async'])) {\n\t\t                            output.space_before_token = true;\n\t\t                        } else if (last_type === 'TK_RESERVED' && flags.last_text === 'default' && last_last_text === 'export') {\n\t\t                            output.space_before_token = true;\n\t\t                        } else {\n\t\t                            print_newline();\n\t\t                        }\n\t\t                    } else if (last_type === 'TK_OPERATOR' || flags.last_text === '=') {\n\t\t                        // foo = function\n\t\t                        output.space_before_token = true;\n\t\t                    } else if (!flags.multiline_frame && (is_expression(flags.mode) || is_array(flags.mode))) {\n\t\t                        // (function\n\t\t                    } else {\n\t\t                        print_newline();\n\t\t                    }\n\t\t                }\n\t\t\n\t\t                if (last_type === 'TK_COMMA' || last_type === 'TK_START_EXPR' || last_type === 'TK_EQUALS' || last_type === 'TK_OPERATOR') {\n\t\t                    if (!start_of_object_property()) {\n\t\t                        allow_wrap_or_preserved_newline();\n\t\t                    }\n\t\t                }\n\t\t\n\t\t                if (current_token.type === 'TK_RESERVED' && in_array(current_token.text, ['function', 'get', 'set'])) {\n\t\t                    print_token();\n\t\t                    flags.last_word = current_token.text;\n\t\t                    return;\n\t\t                }\n\t\t\n\t\t                prefix = 'NONE';\n\t\t\n\t\t                if (last_type === 'TK_END_BLOCK') {\n\t\t\n\t\t                    if (!(current_token.type === 'TK_RESERVED' && in_array(current_token.text, ['else', 'catch', 'finally', 'from']))) {\n\t\t                        prefix = 'NEWLINE';\n\t\t                    } else {\n\t\t                        if (opt.brace_style === \"expand\" ||\n\t\t                            opt.brace_style === \"end-expand\" ||\n\t\t                            (opt.brace_style === \"none\" && current_token.wanted_newline)) {\n\t\t                            prefix = 'NEWLINE';\n\t\t                        } else {\n\t\t                            prefix = 'SPACE';\n\t\t                            output.space_before_token = true;\n\t\t                        }\n\t\t                    }\n\t\t                } else if (last_type === 'TK_SEMICOLON' && flags.mode === MODE.BlockStatement) {\n\t\t                    // TODO: Should this be for STATEMENT as well?\n\t\t                    prefix = 'NEWLINE';\n\t\t                } else if (last_type === 'TK_SEMICOLON' && is_expression(flags.mode)) {\n\t\t                    prefix = 'SPACE';\n\t\t                } else if (last_type === 'TK_STRING') {\n\t\t                    prefix = 'NEWLINE';\n\t\t                } else if (last_type === 'TK_RESERVED' || last_type === 'TK_WORD' ||\n\t\t                    (flags.last_text === '*' &&\n\t\t                        (in_array(last_last_text, ['function', 'yield']) ||\n\t\t                            (flags.mode === MODE.ObjectLiteral && in_array(last_last_text, ['{', ',']))))) {\n\t\t                    prefix = 'SPACE';\n\t\t                } else if (last_type === 'TK_START_BLOCK') {\n\t\t                    if (flags.inline_frame) {\n\t\t                        prefix = 'SPACE';\n\t\t                    } else {\n\t\t                        prefix = 'NEWLINE';\n\t\t                    }\n\t\t                } else if (last_type === 'TK_END_EXPR') {\n\t\t                    output.space_before_token = true;\n\t\t                    prefix = 'NEWLINE';\n\t\t                }\n\t\t\n\t\t                if (current_token.type === 'TK_RESERVED' && in_array(current_token.text, Tokenizer.line_starters) && flags.last_text !== ')') {\n\t\t                    if (flags.inline_frame || flags.last_text === 'else' || flags.last_text === 'export') {\n\t\t                        prefix = 'SPACE';\n\t\t                    } else {\n\t\t                        prefix = 'NEWLINE';\n\t\t                    }\n\t\t\n\t\t                }\n\t\t\n\t\t                if (current_token.type === 'TK_RESERVED' && in_array(current_token.text, ['else', 'catch', 'finally'])) {\n\t\t                    if (!(last_type === 'TK_END_BLOCK' && previous_flags.mode === MODE.BlockStatement) ||\n\t\t                        opt.brace_style === \"expand\" ||\n\t\t                        opt.brace_style === \"end-expand\" ||\n\t\t                        (opt.brace_style === \"none\" && current_token.wanted_newline)) {\n\t\t                        print_newline();\n\t\t                    } else {\n\t\t                        output.trim(true);\n\t\t                        var line = output.current_line;\n\t\t                        // If we trimmed and there's something other than a close block before us\n\t\t                        // put a newline back in.  Handles '} // comment' scenario.\n\t\t                        if (line.last() !== '}') {\n\t\t                            print_newline();\n\t\t                        }\n\t\t                        output.space_before_token = true;\n\t\t                    }\n\t\t                } else if (prefix === 'NEWLINE') {\n\t\t                    if (last_type === 'TK_RESERVED' && is_special_word(flags.last_text)) {\n\t\t                        // no newline between 'return nnn'\n\t\t                        output.space_before_token = true;\n\t\t                    } else if (last_type !== 'TK_END_EXPR') {\n\t\t                        if ((last_type !== 'TK_START_EXPR' || !(current_token.type === 'TK_RESERVED' && in_array(current_token.text, ['var', 'let', 'const']))) && flags.last_text !== ':') {\n\t\t                            // no need to force newline on 'var': for (var x = 0...)\n\t\t                            if (current_token.type === 'TK_RESERVED' && current_token.text === 'if' && flags.last_text === 'else') {\n\t\t                                // no newline for } else if {\n\t\t                                output.space_before_token = true;\n\t\t                            } else {\n\t\t                                print_newline();\n\t\t                            }\n\t\t                        }\n\t\t                    } else if (current_token.type === 'TK_RESERVED' && in_array(current_token.text, Tokenizer.line_starters) && flags.last_text !== ')') {\n\t\t                        print_newline();\n\t\t                    }\n\t\t                } else if (flags.multiline_frame && is_array(flags.mode) && flags.last_text === ',' && last_last_text === '}') {\n\t\t                    print_newline(); // }, in lists get a newline treatment\n\t\t                } else if (prefix === 'SPACE') {\n\t\t                    output.space_before_token = true;\n\t\t                }\n\t\t                print_token();\n\t\t                flags.last_word = current_token.text;\n\t\t\n\t\t                if (current_token.type === 'TK_RESERVED') {\n\t\t                    if (current_token.text === 'do') {\n\t\t                        flags.do_block = true;\n\t\t                    } else if (current_token.text === 'if') {\n\t\t                        flags.if_block = true;\n\t\t                    } else if (current_token.text === 'import') {\n\t\t                        flags.import_block = true;\n\t\t                    } else if (flags.import_block && current_token.type === 'TK_RESERVED' && current_token.text === 'from') {\n\t\t                        flags.import_block = false;\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t\n\t\t            function handle_semicolon() {\n\t\t                if (start_of_statement()) {\n\t\t                    // The conditional starts the statement if appropriate.\n\t\t                    // Semicolon can be the start (and end) of a statement\n\t\t                    output.space_before_token = false;\n\t\t                }\n\t\t                while (flags.mode === MODE.Statement && !flags.if_block && !flags.do_block) {\n\t\t                    restore_mode();\n\t\t                }\n\t\t\n\t\t                // hacky but effective for the moment\n\t\t                if (flags.import_block) {\n\t\t                    flags.import_block = false;\n\t\t                }\n\t\t                print_token();\n\t\t            }\n\t\t\n\t\t            function handle_string() {\n\t\t                if (start_of_statement()) {\n\t\t                    // The conditional starts the statement if appropriate.\n\t\t                    // One difference - strings want at least a space before\n\t\t                    output.space_before_token = true;\n\t\t                } else if (last_type === 'TK_RESERVED' || last_type === 'TK_WORD' || flags.inline_frame) {\n\t\t                    output.space_before_token = true;\n\t\t                } else if (last_type === 'TK_COMMA' || last_type === 'TK_START_EXPR' || last_type === 'TK_EQUALS' || last_type === 'TK_OPERATOR') {\n\t\t                    if (!start_of_object_property()) {\n\t\t                        allow_wrap_or_preserved_newline();\n\t\t                    }\n\t\t                } else {\n\t\t                    print_newline();\n\t\t                }\n\t\t                print_token();\n\t\t            }\n\t\t\n\t\t            function handle_equals() {\n\t\t                if (start_of_statement()) {\n\t\t                    // The conditional starts the statement if appropriate.\n\t\t                }\n\t\t\n\t\t                if (flags.declaration_statement) {\n\t\t                    // just got an '=' in a var-line, different formatting/line-breaking, etc will now be done\n\t\t                    flags.declaration_assignment = true;\n\t\t                }\n\t\t                output.space_before_token = true;\n\t\t                print_token();\n\t\t                output.space_before_token = true;\n\t\t            }\n\t\t\n\t\t            function handle_comma() {\n\t\t                print_token();\n\t\t                output.space_before_token = true;\n\t\t                if (flags.declaration_statement) {\n\t\t                    if (is_expression(flags.parent.mode)) {\n\t\t                        // do not break on comma, for(var a = 1, b = 2)\n\t\t                        flags.declaration_assignment = false;\n\t\t                    }\n\t\t\n\t\t                    if (flags.declaration_assignment) {\n\t\t                        flags.declaration_assignment = false;\n\t\t                        print_newline(false, true);\n\t\t                    } else if (opt.comma_first) {\n\t\t                        // for comma-first, we want to allow a newline before the comma\n\t\t                        // to turn into a newline after the comma, which we will fixup later\n\t\t                        allow_wrap_or_preserved_newline();\n\t\t                    }\n\t\t                } else if (flags.mode === MODE.ObjectLiteral ||\n\t\t                    (flags.mode === MODE.Statement && flags.parent.mode === MODE.ObjectLiteral)) {\n\t\t                    if (flags.mode === MODE.Statement) {\n\t\t                        restore_mode();\n\t\t                    }\n\t\t\n\t\t                    if (!flags.inline_frame) {\n\t\t                        print_newline();\n\t\t                    }\n\t\t                } else if (opt.comma_first) {\n\t\t                    // EXPR or DO_BLOCK\n\t\t                    // for comma-first, we want to allow a newline before the comma\n\t\t                    // to turn into a newline after the comma, which we will fixup later\n\t\t                    allow_wrap_or_preserved_newline();\n\t\t                }\n\t\t            }\n\t\t\n\t\t            function handle_operator() {\n\t\t                if (start_of_statement()) {\n\t\t                    // The conditional starts the statement if appropriate.\n\t\t                }\n\t\t\n\t\t                if (last_type === 'TK_RESERVED' && is_special_word(flags.last_text)) {\n\t\t                    // \"return\" had a special handling in TK_WORD. Now we need to return the favor\n\t\t                    output.space_before_token = true;\n\t\t                    print_token();\n\t\t                    return;\n\t\t                }\n\t\t\n\t\t                // hack for actionscript's import .*;\n\t\t                if (current_token.text === '*' && last_type === 'TK_DOT') {\n\t\t                    print_token();\n\t\t                    return;\n\t\t                }\n\t\t\n\t\t                if (current_token.text === '::') {\n\t\t                    // no spaces around exotic namespacing syntax operator\n\t\t                    print_token();\n\t\t                    return;\n\t\t                }\n\t\t\n\t\t                // Allow line wrapping between operators when operator_position is\n\t\t                //   set to before or preserve\n\t\t                if (last_type === 'TK_OPERATOR' && in_array(opt.operator_position, OPERATOR_POSITION_BEFORE_OR_PRESERVE)) {\n\t\t                    allow_wrap_or_preserved_newline();\n\t\t                }\n\t\t\n\t\t                if (current_token.text === ':' && flags.in_case) {\n\t\t                    flags.case_body = true;\n\t\t                    indent();\n\t\t                    print_token();\n\t\t                    print_newline();\n\t\t                    flags.in_case = false;\n\t\t                    return;\n\t\t                }\n\t\t\n\t\t                var space_before = true;\n\t\t                var space_after = true;\n\t\t                var in_ternary = false;\n\t\t                var isGeneratorAsterisk = current_token.text === '*' &&\n\t\t                    ((last_type === 'TK_RESERVED' && in_array(flags.last_text, ['function', 'yield'])) ||\n\t\t                        (flags.mode === MODE.ObjectLiteral && in_array(last_type, ['TK_START_BLOCK', 'TK_COMMA'])));\n\t\t                var isUnary = in_array(current_token.text, ['-', '+']) && (\n\t\t                    in_array(last_type, ['TK_START_BLOCK', 'TK_START_EXPR', 'TK_EQUALS', 'TK_OPERATOR']) ||\n\t\t                    in_array(flags.last_text, Tokenizer.line_starters) ||\n\t\t                    flags.last_text === ','\n\t\t                );\n\t\t\n\t\t                if (current_token.text === ':') {\n\t\t                    if (flags.ternary_depth === 0) {\n\t\t                        // Colon is invalid javascript outside of ternary and object, but do our best to guess what was meant.\n\t\t                        space_before = false;\n\t\t                    } else {\n\t\t                        flags.ternary_depth -= 1;\n\t\t                        in_ternary = true;\n\t\t                    }\n\t\t                } else if (current_token.text === '?') {\n\t\t                    flags.ternary_depth += 1;\n\t\t                }\n\t\t\n\t\t                // let's handle the operator_position option prior to any conflicting logic\n\t\t                if (!isUnary && !isGeneratorAsterisk && opt.preserve_newlines && in_array(current_token.text, Tokenizer.positionable_operators)) {\n\t\t                    var isColon = current_token.text === ':';\n\t\t                    var isTernaryColon = (isColon && in_ternary);\n\t\t                    var isOtherColon = (isColon && !in_ternary);\n\t\t\n\t\t                    switch (opt.operator_position) {\n\t\t                        case OPERATOR_POSITION.before_newline:\n\t\t                            // if the current token is : and it's not a ternary statement then we set space_before to false\n\t\t                            output.space_before_token = !isOtherColon;\n\t\t\n\t\t                            print_token();\n\t\t\n\t\t                            if (!isColon || isTernaryColon) {\n\t\t                                allow_wrap_or_preserved_newline();\n\t\t                            }\n\t\t\n\t\t                            output.space_before_token = true;\n\t\t                            return;\n\t\t\n\t\t                        case OPERATOR_POSITION.after_newline:\n\t\t                            // if the current token is anything but colon, or (via deduction) it's a colon and in a ternary statement,\n\t\t                            //   then print a newline.\n\t\t\n\t\t                            output.space_before_token = true;\n\t\t\n\t\t                            if (!isColon || isTernaryColon) {\n\t\t                                if (get_token(1).wanted_newline) {\n\t\t                                    print_newline(false, true);\n\t\t                                } else {\n\t\t                                    allow_wrap_or_preserved_newline();\n\t\t                                }\n\t\t                            } else {\n\t\t                                output.space_before_token = false;\n\t\t                            }\n\t\t\n\t\t                            print_token();\n\t\t\n\t\t                            output.space_before_token = true;\n\t\t                            return;\n\t\t\n\t\t                        case OPERATOR_POSITION.preserve_newline:\n\t\t                            if (!isOtherColon) {\n\t\t                                allow_wrap_or_preserved_newline();\n\t\t                            }\n\t\t\n\t\t                            // if we just added a newline, or the current token is : and it's not a ternary statement,\n\t\t                            //   then we set space_before to false\n\t\t                            space_before = !(output.just_added_newline() || isOtherColon);\n\t\t\n\t\t                            output.space_before_token = space_before;\n\t\t                            print_token();\n\t\t                            output.space_before_token = true;\n\t\t                            return;\n\t\t                    }\n\t\t                }\n\t\t\n\t\t                if (in_array(current_token.text, ['--', '++', '!', '~']) || isUnary) {\n\t\t                    // unary operators (and binary +/- pretending to be unary) special cases\n\t\t\n\t\t                    space_before = false;\n\t\t                    space_after = false;\n\t\t\n\t\t                    // http://www.ecma-international.org/ecma-262/5.1/#sec-7.9.1\n\t\t                    // if there is a newline between -- or ++ and anything else we should preserve it.\n\t\t                    if (current_token.wanted_newline && (current_token.text === '--' || current_token.text === '++')) {\n\t\t                        print_newline(false, true);\n\t\t                    }\n\t\t\n\t\t                    if (flags.last_text === ';' && is_expression(flags.mode)) {\n\t\t                        // for (;; ++i)\n\t\t                        //        ^^^\n\t\t                        space_before = true;\n\t\t                    }\n\t\t\n\t\t                    if (last_type === 'TK_RESERVED') {\n\t\t                        space_before = true;\n\t\t                    } else if (last_type === 'TK_END_EXPR') {\n\t\t                        space_before = !(flags.last_text === ']' && (current_token.text === '--' || current_token.text === '++'));\n\t\t                    } else if (last_type === 'TK_OPERATOR') {\n\t\t                        // a++ + ++b;\n\t\t                        // a - -b\n\t\t                        space_before = in_array(current_token.text, ['--', '-', '++', '+']) && in_array(flags.last_text, ['--', '-', '++', '+']);\n\t\t                        // + and - are not unary when preceeded by -- or ++ operator\n\t\t                        // a-- + b\n\t\t                        // a * +b\n\t\t                        // a - -b\n\t\t                        if (in_array(current_token.text, ['+', '-']) && in_array(flags.last_text, ['--', '++'])) {\n\t\t                            space_after = true;\n\t\t                        }\n\t\t                    }\n\t\t\n\t\t\n\t\t                    if (((flags.mode === MODE.BlockStatement && !flags.inline_frame) || flags.mode === MODE.Statement) &&\n\t\t                        (flags.last_text === '{' || flags.last_text === ';')) {\n\t\t                        // { foo; --i }\n\t\t                        // foo(); --bar;\n\t\t                        print_newline();\n\t\t                    }\n\t\t                } else if (isGeneratorAsterisk) {\n\t\t                    allow_wrap_or_preserved_newline();\n\t\t                    space_before = false;\n\t\t                    space_after = false;\n\t\t                }\n\t\t                output.space_before_token = output.space_before_token || space_before;\n\t\t                print_token();\n\t\t                output.space_before_token = space_after;\n\t\t            }\n\t\t\n\t\t            function handle_block_comment() {\n\t\t                if (output.raw) {\n\t\t                    output.add_raw_token(current_token);\n\t\t                    if (current_token.directives && current_token.directives.preserve === 'end') {\n\t\t                        // If we're testing the raw output behavior, do not allow a directive to turn it off.\n\t\t                        output.raw = opt.test_output_raw;\n\t\t                    }\n\t\t                    return;\n\t\t                }\n\t\t\n\t\t                if (current_token.directives) {\n\t\t                    print_newline(false, true);\n\t\t                    print_token();\n\t\t                    if (current_token.directives.preserve === 'start') {\n\t\t                        output.raw = true;\n\t\t                    }\n\t\t                    print_newline(false, true);\n\t\t                    return;\n\t\t                }\n\t\t\n\t\t                // inline block\n\t\t                if (!acorn.newline.test(current_token.text) && !current_token.wanted_newline) {\n\t\t                    output.space_before_token = true;\n\t\t                    print_token();\n\t\t                    output.space_before_token = true;\n\t\t                    return;\n\t\t                }\n\t\t\n\t\t                var lines = split_linebreaks(current_token.text);\n\t\t                var j; // iterator for this case\n\t\t                var javadoc = false;\n\t\t                var starless = false;\n\t\t                var lastIndent = current_token.whitespace_before;\n\t\t                var lastIndentLength = lastIndent.length;\n\t\t\n\t\t                // block comment starts with a new line\n\t\t                print_newline(false, true);\n\t\t                if (lines.length > 1) {\n\t\t                    javadoc = all_lines_start_with(lines.slice(1), '*');\n\t\t                    starless = each_line_matches_indent(lines.slice(1), lastIndent);\n\t\t                }\n\t\t\n\t\t                // first line always indented\n\t\t                print_token(lines[0]);\n\t\t                for (j = 1; j < lines.length; j++) {\n\t\t                    print_newline(false, true);\n\t\t                    if (javadoc) {\n\t\t                        // javadoc: reformat and re-indent\n\t\t                        print_token(' ' + ltrim(lines[j]));\n\t\t                    } else if (starless && lines[j].length > lastIndentLength) {\n\t\t                        // starless: re-indent non-empty content, avoiding trim\n\t\t                        print_token(lines[j].substring(lastIndentLength));\n\t\t                    } else {\n\t\t                        // normal comments output raw\n\t\t                        output.add_token(lines[j]);\n\t\t                    }\n\t\t                }\n\t\t\n\t\t                // for comments of more than one line, make sure there's a new line after\n\t\t                print_newline(false, true);\n\t\t            }\n\t\t\n\t\t            function handle_comment() {\n\t\t                if (current_token.wanted_newline) {\n\t\t                    print_newline(false, true);\n\t\t                } else {\n\t\t                    output.trim(true);\n\t\t                }\n\t\t\n\t\t                output.space_before_token = true;\n\t\t                print_token();\n\t\t                print_newline(false, true);\n\t\t            }\n\t\t\n\t\t            function handle_dot() {\n\t\t                if (start_of_statement()) {\n\t\t                    // The conditional starts the statement if appropriate.\n\t\t                }\n\t\t\n\t\t                if (last_type === 'TK_RESERVED' && is_special_word(flags.last_text)) {\n\t\t                    output.space_before_token = true;\n\t\t                } else {\n\t\t                    // allow preserved newlines before dots in general\n\t\t                    // force newlines on dots after close paren when break_chained - for bar().baz()\n\t\t                    allow_wrap_or_preserved_newline(flags.last_text === ')' && opt.break_chained_methods);\n\t\t                }\n\t\t\n\t\t                print_token();\n\t\t            }\n\t\t\n\t\t            function handle_unknown() {\n\t\t                print_token();\n\t\t\n\t\t                if (current_token.text[current_token.text.length - 1] === '\\n') {\n\t\t                    print_newline();\n\t\t                }\n\t\t            }\n\t\t\n\t\t            function handle_eof() {\n\t\t                // Unwind any open statements\n\t\t                while (flags.mode === MODE.Statement) {\n\t\t                    restore_mode();\n\t\t                }\n\t\t            }\n\t\t        }\n\t\t\n\t\t\n\t\t        function OutputLine(parent) {\n\t\t            var _character_count = 0;\n\t\t            // use indent_count as a marker for lines that have preserved indentation\n\t\t            var _indent_count = -1;\n\t\t\n\t\t            var _items = [];\n\t\t            var _empty = true;\n\t\t\n\t\t            this.set_indent = function(level) {\n\t\t                _character_count = parent.baseIndentLength + level * parent.indent_length;\n\t\t                _indent_count = level;\n\t\t            };\n\t\t\n\t\t            this.get_character_count = function() {\n\t\t                return _character_count;\n\t\t            };\n\t\t\n\t\t            this.is_empty = function() {\n\t\t                return _empty;\n\t\t            };\n\t\t\n\t\t            this.last = function() {\n\t\t                if (!this._empty) {\n\t\t                    return _items[_items.length - 1];\n\t\t                } else {\n\t\t                    return null;\n\t\t                }\n\t\t            };\n\t\t\n\t\t            this.push = function(input) {\n\t\t                _items.push(input);\n\t\t                _character_count += input.length;\n\t\t                _empty = false;\n\t\t            };\n\t\t\n\t\t            this.pop = function() {\n\t\t                var item = null;\n\t\t                if (!_empty) {\n\t\t                    item = _items.pop();\n\t\t                    _character_count -= item.length;\n\t\t                    _empty = _items.length === 0;\n\t\t                }\n\t\t                return item;\n\t\t            };\n\t\t\n\t\t            this.remove_indent = function() {\n\t\t                if (_indent_count > 0) {\n\t\t                    _indent_count -= 1;\n\t\t                    _character_count -= parent.indent_length;\n\t\t                }\n\t\t            };\n\t\t\n\t\t            this.trim = function() {\n\t\t                while (this.last() === ' ') {\n\t\t                    _items.pop();\n\t\t                    _character_count -= 1;\n\t\t                }\n\t\t                _empty = _items.length === 0;\n\t\t            };\n\t\t\n\t\t            this.toString = function() {\n\t\t                var result = '';\n\t\t                if (!this._empty) {\n\t\t                    if (_indent_count >= 0) {\n\t\t                        result = parent.indent_cache[_indent_count];\n\t\t                    }\n\t\t                    result += _items.join('');\n\t\t                }\n\t\t                return result;\n\t\t            };\n\t\t        }\n\t\t\n\t\t        function Output(indent_string, baseIndentString) {\n\t\t            baseIndentString = baseIndentString || '';\n\t\t            this.indent_cache = [baseIndentString];\n\t\t            this.baseIndentLength = baseIndentString.length;\n\t\t            this.indent_length = indent_string.length;\n\t\t            this.raw = false;\n\t\t\n\t\t            var lines = [];\n\t\t            this.baseIndentString = baseIndentString;\n\t\t            this.indent_string = indent_string;\n\t\t            this.previous_line = null;\n\t\t            this.current_line = null;\n\t\t            this.space_before_token = false;\n\t\t\n\t\t            this.add_outputline = function() {\n\t\t                this.previous_line = this.current_line;\n\t\t                this.current_line = new OutputLine(this);\n\t\t                lines.push(this.current_line);\n\t\t            };\n\t\t\n\t\t            // initialize\n\t\t            this.add_outputline();\n\t\t\n\t\t\n\t\t            this.get_line_number = function() {\n\t\t                return lines.length;\n\t\t            };\n\t\t\n\t\t            // Using object instead of string to allow for later expansion of info about each line\n\t\t            this.add_new_line = function(force_newline) {\n\t\t                if (this.get_line_number() === 1 && this.just_added_newline()) {\n\t\t                    return false; // no newline on start of file\n\t\t                }\n\t\t\n\t\t                if (force_newline || !this.just_added_newline()) {\n\t\t                    if (!this.raw) {\n\t\t                        this.add_outputline();\n\t\t                    }\n\t\t                    return true;\n\t\t                }\n\t\t\n\t\t                return false;\n\t\t            };\n\t\t\n\t\t            this.get_code = function() {\n\t\t                var sweet_code = lines.join('\\n').replace(/[\\r\\n\\t ]+$/, '');\n\t\t                return sweet_code;\n\t\t            };\n\t\t\n\t\t            this.set_indent = function(level) {\n\t\t                // Never indent your first output indent at the start of the file\n\t\t                if (lines.length > 1) {\n\t\t                    while (level >= this.indent_cache.length) {\n\t\t                        this.indent_cache.push(this.indent_cache[this.indent_cache.length - 1] + this.indent_string);\n\t\t                    }\n\t\t\n\t\t                    this.current_line.set_indent(level);\n\t\t                    return true;\n\t\t                }\n\t\t                this.current_line.set_indent(0);\n\t\t                return false;\n\t\t            };\n\t\t\n\t\t            this.add_raw_token = function(token) {\n\t\t                for (var x = 0; x < token.newlines; x++) {\n\t\t                    this.add_outputline();\n\t\t                }\n\t\t                this.current_line.push(token.whitespace_before);\n\t\t                this.current_line.push(token.text);\n\t\t                this.space_before_token = false;\n\t\t            };\n\t\t\n\t\t            this.add_token = function(printable_token) {\n\t\t                this.add_space_before_token();\n\t\t                this.current_line.push(printable_token);\n\t\t            };\n\t\t\n\t\t            this.add_space_before_token = function() {\n\t\t                if (this.space_before_token && !this.just_added_newline()) {\n\t\t                    this.current_line.push(' ');\n\t\t                }\n\t\t                this.space_before_token = false;\n\t\t            };\n\t\t\n\t\t            this.remove_redundant_indentation = function(frame) {\n\t\t                // This implementation is effective but has some issues:\n\t\t                //     - can cause line wrap to happen too soon due to indent removal\n\t\t                //           after wrap points are calculated\n\t\t                // These issues are minor compared to ugly indentation.\n\t\t\n\t\t                if (frame.multiline_frame ||\n\t\t                    frame.mode === MODE.ForInitializer ||\n\t\t                    frame.mode === MODE.Conditional) {\n\t\t                    return;\n\t\t                }\n\t\t\n\t\t                // remove one indent from each line inside this section\n\t\t                var index = frame.start_line_index;\n\t\t\n\t\t                var output_length = lines.length;\n\t\t                while (index < output_length) {\n\t\t                    lines[index].remove_indent();\n\t\t                    index++;\n\t\t                }\n\t\t            };\n\t\t\n\t\t            this.trim = function(eat_newlines) {\n\t\t                eat_newlines = (eat_newlines === undefined) ? false : eat_newlines;\n\t\t\n\t\t                this.current_line.trim(indent_string, baseIndentString);\n\t\t\n\t\t                while (eat_newlines && lines.length > 1 &&\n\t\t                    this.current_line.is_empty()) {\n\t\t                    lines.pop();\n\t\t                    this.current_line = lines[lines.length - 1];\n\t\t                    this.current_line.trim();\n\t\t                }\n\t\t\n\t\t                this.previous_line = lines.length > 1 ? lines[lines.length - 2] : null;\n\t\t            };\n\t\t\n\t\t            this.just_added_newline = function() {\n\t\t                return this.current_line.is_empty();\n\t\t            };\n\t\t\n\t\t            this.just_added_blankline = function() {\n\t\t                if (this.just_added_newline()) {\n\t\t                    if (lines.length === 1) {\n\t\t                        return true; // start of the file and newline = blank\n\t\t                    }\n\t\t\n\t\t                    var line = lines[lines.length - 2];\n\t\t                    return line.is_empty();\n\t\t                }\n\t\t                return false;\n\t\t            };\n\t\t        }\n\t\t\n\t\t        var InputScanner = function(input) {\n\t\t            var _input = input;\n\t\t            var _input_length = _input.length;\n\t\t            var _position = 0;\n\t\t\n\t\t            this.back = function() {\n\t\t                _position -= 1;\n\t\t            };\n\t\t\n\t\t            this.hasNext = function() {\n\t\t                return _position < _input_length;\n\t\t            };\n\t\t\n\t\t            this.next = function() {\n\t\t                var val = null;\n\t\t                if (this.hasNext()) {\n\t\t                    val = _input.charAt(_position);\n\t\t                    _position += 1;\n\t\t                }\n\t\t                return val;\n\t\t            };\n\t\t\n\t\t            this.peek = function(index) {\n\t\t                var val = null;\n\t\t                index = index || 0;\n\t\t                index += _position;\n\t\t                if (index >= 0 && index < _input_length) {\n\t\t                    val = _input.charAt(index);\n\t\t                }\n\t\t                return val;\n\t\t            };\n\t\t\n\t\t            this.peekCharCode = function(index) {\n\t\t                var val = 0;\n\t\t                index = index || 0;\n\t\t                index += _position;\n\t\t                if (index >= 0 && index < _input_length) {\n\t\t                    val = _input.charCodeAt(index);\n\t\t                }\n\t\t                return val;\n\t\t            };\n\t\t\n\t\t            this.test = function(pattern, index) {\n\t\t                index = index || 0;\n\t\t                pattern.lastIndex = _position + index;\n\t\t                return pattern.test(_input);\n\t\t            };\n\t\t\n\t\t            this.testChar = function(pattern, index) {\n\t\t                var val = this.peek(index);\n\t\t                return val !== null && pattern.test(val);\n\t\t            };\n\t\t\n\t\t            this.match = function(pattern) {\n\t\t                pattern.lastIndex = _position;\n\t\t                var pattern_match = pattern.exec(_input);\n\t\t                if (pattern_match && pattern_match.index === _position) {\n\t\t                    _position += pattern_match[0].length;\n\t\t                } else {\n\t\t                    pattern_match = null;\n\t\t                }\n\t\t                return pattern_match;\n\t\t            };\n\t\t        };\n\t\t\n\t\t        var Token = function(type, text, newlines, whitespace_before, parent) {\n\t\t            this.type = type;\n\t\t            this.text = text;\n\t\t            this.comments_before = [];\n\t\t            this.newlines = newlines || 0;\n\t\t            this.wanted_newline = newlines > 0;\n\t\t            this.whitespace_before = whitespace_before || '';\n\t\t            this.parent = parent || null;\n\t\t            this.opened = null;\n\t\t            this.directives = null;\n\t\t        };\n\t\t\n\t\t        function tokenizer(input_string, opts) {\n\t\t\n\t\t            var whitespace = \"\\n\\r\\t \".split('');\n\t\t            var digit = /[0-9]/;\n\t\t            var digit_bin = /[01]/;\n\t\t            var digit_oct = /[01234567]/;\n\t\t            var digit_hex = /[0123456789abcdefABCDEF]/;\n\t\t\n\t\t            this.positionable_operators = '!= !== % & && * ** + - / : < << <= == === > >= >> >>> ? ^ | ||'.split(' ');\n\t\t            var punct = this.positionable_operators.concat(\n\t\t                // non-positionable operators - these do not follow operator position settings\n\t\t                '! %= &= *= **= ++ += , -- -= /= :: <<= = => >>= >>>= ^= |= ~'.split(' '));\n\t\t\n\t\t            // words which should always start on new line.\n\t\t            this.line_starters = 'continue,try,throw,return,var,let,const,if,switch,case,default,for,while,break,function,import,export'.split(',');\n\t\t            var reserved_words = this.line_starters.concat(['do', 'in', 'else', 'get', 'set', 'new', 'catch', 'finally', 'typeof', 'yield', 'async', 'await', 'from', 'as']);\n\t\t\n\t\t            //  /* ... */ comment ends with nearest */ or end of file\n\t\t            var block_comment_pattern = /([\\s\\S]*?)((?:\\*\\/)|$)/g;\n\t\t\n\t\t            // comment ends just before nearest linefeed or end of file\n\t\t            var comment_pattern = /([^\\n\\r\\u2028\\u2029]*)/g;\n\t\t\n\t\t            var directives_block_pattern = /\\/\\* beautify( \\w+[:]\\w+)+ \\*\\//g;\n\t\t            var directive_pattern = / (\\w+)[:](\\w+)/g;\n\t\t            var directives_end_ignore_pattern = /([\\s\\S]*?)((?:\\/\\*\\sbeautify\\signore:end\\s\\*\\/)|$)/g;\n\t\t\n\t\t            var template_pattern = /((<\\?php|<\\?=)[\\s\\S]*?\\?>)|(<%[\\s\\S]*?%>)/g;\n\t\t\n\t\t            var n_newlines, whitespace_before_token, in_html_comment, tokens;\n\t\t            var input;\n\t\t\n\t\t            this.tokenize = function() {\n\t\t                input = new InputScanner(input_string);\n\t\t                in_html_comment = false;\n\t\t                tokens = [];\n\t\t\n\t\t                var next, last;\n\t\t                var token_values;\n\t\t                var open = null;\n\t\t                var open_stack = [];\n\t\t                var comments = [];\n\t\t\n\t\t                while (!(last && last.type === 'TK_EOF')) {\n\t\t                    token_values = tokenize_next();\n\t\t                    next = new Token(token_values[1], token_values[0], n_newlines, whitespace_before_token);\n\t\t                    while (next.type === 'TK_COMMENT' || next.type === 'TK_BLOCK_COMMENT' || next.type === 'TK_UNKNOWN') {\n\t\t                        if (next.type === 'TK_BLOCK_COMMENT') {\n\t\t                            next.directives = token_values[2];\n\t\t                        }\n\t\t                        comments.push(next);\n\t\t                        token_values = tokenize_next();\n\t\t                        next = new Token(token_values[1], token_values[0], n_newlines, whitespace_before_token);\n\t\t                    }\n\t\t\n\t\t                    if (comments.length) {\n\t\t                        next.comments_before = comments;\n\t\t                        comments = [];\n\t\t                    }\n\t\t\n\t\t                    if (next.type === 'TK_START_BLOCK' || next.type === 'TK_START_EXPR') {\n\t\t                        next.parent = last;\n\t\t                        open_stack.push(open);\n\t\t                        open = next;\n\t\t                    } else if ((next.type === 'TK_END_BLOCK' || next.type === 'TK_END_EXPR') &&\n\t\t                        (open && (\n\t\t                            (next.text === ']' && open.text === '[') ||\n\t\t                            (next.text === ')' && open.text === '(') ||\n\t\t                            (next.text === '}' && open.text === '{')))) {\n\t\t                        next.parent = open.parent;\n\t\t                        next.opened = open;\n\t\t\n\t\t                        open = open_stack.pop();\n\t\t                    }\n\t\t\n\t\t                    tokens.push(next);\n\t\t                    last = next;\n\t\t                }\n\t\t\n\t\t                return tokens;\n\t\t            };\n\t\t\n\t\t            function get_directives(text) {\n\t\t                if (!text.match(directives_block_pattern)) {\n\t\t                    return null;\n\t\t                }\n\t\t\n\t\t                var directives = {};\n\t\t                directive_pattern.lastIndex = 0;\n\t\t                var directive_match = directive_pattern.exec(text);\n\t\t\n\t\t                while (directive_match) {\n\t\t                    directives[directive_match[1]] = directive_match[2];\n\t\t                    directive_match = directive_pattern.exec(text);\n\t\t                }\n\t\t\n\t\t                return directives;\n\t\t            }\n\t\t\n\t\t            function tokenize_next() {\n\t\t                var resulting_string;\n\t\t                var whitespace_on_this_line = [];\n\t\t\n\t\t                n_newlines = 0;\n\t\t                whitespace_before_token = '';\n\t\t\n\t\t                var c = input.next();\n\t\t\n\t\t                if (c === null) {\n\t\t                    return ['', 'TK_EOF'];\n\t\t                }\n\t\t\n\t\t                var last_token;\n\t\t                if (tokens.length) {\n\t\t                    last_token = tokens[tokens.length - 1];\n\t\t                } else {\n\t\t                    // For the sake of tokenizing we can pretend that there was on open brace to start\n\t\t                    last_token = new Token('TK_START_BLOCK', '{');\n\t\t                }\n\t\t\n\t\t                while (in_array(c, whitespace)) {\n\t\t\n\t\t                    if (acorn.newline.test(c)) {\n\t\t                        if (!(c === '\\n' && input.peek(-2) === '\\r')) {\n\t\t                            n_newlines += 1;\n\t\t                            whitespace_on_this_line = [];\n\t\t                        }\n\t\t                    } else {\n\t\t                        whitespace_on_this_line.push(c);\n\t\t                    }\n\t\t\n\t\t                    c = input.next();\n\t\t\n\t\t                    if (c === null) {\n\t\t                        return ['', 'TK_EOF'];\n\t\t                    }\n\t\t                }\n\t\t\n\t\t                if (whitespace_on_this_line.length) {\n\t\t                    whitespace_before_token = whitespace_on_this_line.join('');\n\t\t                }\n\t\t\n\t\t                if (digit.test(c) || (c === '.' && input.testChar(digit))) {\n\t\t                    var allow_decimal = true;\n\t\t                    var allow_e = true;\n\t\t                    var local_digit = digit;\n\t\t\n\t\t                    if (c === '0' && input.testChar(/[XxOoBb]/)) {\n\t\t                        // switch to hex/oct/bin number, no decimal or e, just hex/oct/bin digits\n\t\t                        allow_decimal = false;\n\t\t                        allow_e = false;\n\t\t                        if (input.testChar(/[Bb]/)) {\n\t\t                            local_digit = digit_bin;\n\t\t                        } else if (input.testChar(/[Oo]/)) {\n\t\t                            local_digit = digit_oct;\n\t\t                        } else {\n\t\t                            local_digit = digit_hex;\n\t\t                        }\n\t\t                        c += input.next();\n\t\t                    } else if (c === '.') {\n\t\t                        // Already have a decimal for this literal, don't allow another\n\t\t                        allow_decimal = false;\n\t\t                    } else {\n\t\t                        // we know this first loop will run.  It keeps the logic simpler.\n\t\t                        c = '';\n\t\t                        input.back();\n\t\t                    }\n\t\t\n\t\t                    // Add the digits\n\t\t                    while (input.testChar(local_digit)) {\n\t\t                        c += input.next();\n\t\t\n\t\t                        if (allow_decimal && input.peek() === '.') {\n\t\t                            c += input.next();\n\t\t                            allow_decimal = false;\n\t\t                        } else if (allow_e && input.testChar(/[Ee]/)) {\n\t\t                            c += input.next();\n\t\t\n\t\t                            if (input.testChar(/[+-]/)) {\n\t\t                                c += input.next();\n\t\t                            }\n\t\t\n\t\t                            allow_e = false;\n\t\t                            allow_decimal = false;\n\t\t                        }\n\t\t                    }\n\t\t\n\t\t                    return [c, 'TK_WORD'];\n\t\t                }\n\t\t\n\t\t                if (acorn.isIdentifierStart(input.peekCharCode(-1))) {\n\t\t                    if (input.hasNext()) {\n\t\t                        while (acorn.isIdentifierChar(input.peekCharCode())) {\n\t\t                            c += input.next();\n\t\t                            if (!input.hasNext()) {\n\t\t                                break;\n\t\t                            }\n\t\t                        }\n\t\t                    }\n\t\t\n\t\t                    if (!(last_token.type === 'TK_DOT' ||\n\t\t                            (last_token.type === 'TK_RESERVED' && in_array(last_token.text, ['set', 'get']))) &&\n\t\t                        in_array(c, reserved_words)) {\n\t\t                        if (c === 'in') { // hack for 'in' operator\n\t\t                            return [c, 'TK_OPERATOR'];\n\t\t                        }\n\t\t                        return [c, 'TK_RESERVED'];\n\t\t                    }\n\t\t\n\t\t                    return [c, 'TK_WORD'];\n\t\t                }\n\t\t\n\t\t                if (c === '(' || c === '[') {\n\t\t                    return [c, 'TK_START_EXPR'];\n\t\t                }\n\t\t\n\t\t                if (c === ')' || c === ']') {\n\t\t                    return [c, 'TK_END_EXPR'];\n\t\t                }\n\t\t\n\t\t                if (c === '{') {\n\t\t                    return [c, 'TK_START_BLOCK'];\n\t\t                }\n\t\t\n\t\t                if (c === '}') {\n\t\t                    return [c, 'TK_END_BLOCK'];\n\t\t                }\n\t\t\n\t\t                if (c === ';') {\n\t\t                    return [c, 'TK_SEMICOLON'];\n\t\t                }\n\t\t\n\t\t                if (c === '/') {\n\t\t                    var comment = '';\n\t\t                    var comment_match;\n\t\t                    // peek for comment /* ... */\n\t\t                    if (input.peek() === '*') {\n\t\t                        input.next();\n\t\t                        comment_match = input.match(block_comment_pattern);\n\t\t                        comment = '/*' + comment_match[0];\n\t\t                        var directives = get_directives(comment);\n\t\t                        if (directives && directives.ignore === 'start') {\n\t\t                            comment_match = input.match(directives_end_ignore_pattern);\n\t\t                            comment += comment_match[0];\n\t\t                        }\n\t\t                        comment = comment.replace(acorn.allLineBreaks, '\\n');\n\t\t                        return [comment, 'TK_BLOCK_COMMENT', directives];\n\t\t                    }\n\t\t                    // peek for comment // ...\n\t\t                    if (input.peek() === '/') {\n\t\t                        input.next();\n\t\t                        comment_match = input.match(comment_pattern);\n\t\t                        comment = '//' + comment_match[0];\n\t\t                        return [comment, 'TK_COMMENT'];\n\t\t                    }\n\t\t\n\t\t                }\n\t\t\n\t\t                var startXmlRegExp = /<()([-a-zA-Z:0-9_.]+|{[\\s\\S]+?}|!\\[CDATA\\[[\\s\\S]*?\\]\\])(\\s+{[\\s\\S]+?}|\\s+[-a-zA-Z:0-9_.]+|\\s+[-a-zA-Z:0-9_.]+\\s*=\\s*('[^']*'|\"[^\"]*\"|{[\\s\\S]+?}))*\\s*(\\/?)\\s*>/g;\n\t\t\n\t\t                if (c === '`' || c === \"'\" || c === '\"' || // string\n\t\t                    (\n\t\t                        (c === '/') || // regexp\n\t\t                        (opts.e4x && c === \"<\" && input.test(startXmlRegExp, -1)) // xml\n\t\t                    ) && ( // regex and xml can only appear in specific locations during parsing\n\t\t                        (last_token.type === 'TK_RESERVED' && in_array(last_token.text, ['return', 'case', 'throw', 'else', 'do', 'typeof', 'yield'])) ||\n\t\t                        (last_token.type === 'TK_END_EXPR' && last_token.text === ')' &&\n\t\t                            last_token.parent && last_token.parent.type === 'TK_RESERVED' && in_array(last_token.parent.text, ['if', 'while', 'for'])) ||\n\t\t                        (in_array(last_token.type, ['TK_COMMENT', 'TK_START_EXPR', 'TK_START_BLOCK',\n\t\t                            'TK_END_BLOCK', 'TK_OPERATOR', 'TK_EQUALS', 'TK_EOF', 'TK_SEMICOLON', 'TK_COMMA'\n\t\t                        ]))\n\t\t                    )) {\n\t\t\n\t\t                    var sep = c,\n\t\t                        esc = false,\n\t\t                        has_char_escapes = false;\n\t\t\n\t\t                    resulting_string = c;\n\t\t\n\t\t                    if (sep === '/') {\n\t\t                        //\n\t\t                        // handle regexp\n\t\t                        //\n\t\t                        var in_char_class = false;\n\t\t                        while (input.hasNext() &&\n\t\t                            ((esc || in_char_class || input.peek() !== sep) &&\n\t\t                                !input.testChar(acorn.newline))) {\n\t\t                            resulting_string += input.peek();\n\t\t                            if (!esc) {\n\t\t                                esc = input.peek() === '\\\\';\n\t\t                                if (input.peek() === '[') {\n\t\t                                    in_char_class = true;\n\t\t                                } else if (input.peek() === ']') {\n\t\t                                    in_char_class = false;\n\t\t                                }\n\t\t                            } else {\n\t\t                                esc = false;\n\t\t                            }\n\t\t                            input.next();\n\t\t                        }\n\t\t                    } else if (opts.e4x && sep === '<') {\n\t\t                        //\n\t\t                        // handle e4x xml literals\n\t\t                        //\n\t\t\n\t\t                        var xmlRegExp = /[\\s\\S]*?<(\\/?)([-a-zA-Z:0-9_.]+|{[\\s\\S]+?}|!\\[CDATA\\[[\\s\\S]*?\\]\\])(\\s+{[\\s\\S]+?}|\\s+[-a-zA-Z:0-9_.]+|\\s+[-a-zA-Z:0-9_.]+\\s*=\\s*('[^']*'|\"[^\"]*\"|{[\\s\\S]+?}))*\\s*(\\/?)\\s*>/g;\n\t\t                        input.back();\n\t\t                        var xmlStr = '';\n\t\t                        var match = input.match(startXmlRegExp);\n\t\t                        if (match) {\n\t\t                            // Trim root tag to attempt to\n\t\t                            var rootTag = match[2].replace(/^{\\s+/, '{').replace(/\\s+}$/, '}');\n\t\t                            var isCurlyRoot = rootTag.indexOf('{') === 0;\n\t\t                            var depth = 0;\n\t\t                            while (match) {\n\t\t                                var isEndTag = !!match[1];\n\t\t                                var tagName = match[2];\n\t\t                                var isSingletonTag = (!!match[match.length - 1]) || (tagName.slice(0, 8) === \"![CDATA[\");\n\t\t                                if (!isSingletonTag &&\n\t\t                                    (tagName === rootTag || (isCurlyRoot && tagName.replace(/^{\\s+/, '{').replace(/\\s+}$/, '}')))) {\n\t\t                                    if (isEndTag) {\n\t\t                                        --depth;\n\t\t                                    } else {\n\t\t                                        ++depth;\n\t\t                                    }\n\t\t                                }\n\t\t                                xmlStr += match[0];\n\t\t                                if (depth <= 0) {\n\t\t                                    break;\n\t\t                                }\n\t\t                                match = input.match(xmlRegExp);\n\t\t                            }\n\t\t                            // if we didn't close correctly, keep unformatted.\n\t\t                            if (!match) {\n\t\t                                xmlStr += input.match(/[\\s\\S]*/g)[0];\n\t\t                            }\n\t\t                            xmlStr = xmlStr.replace(acorn.allLineBreaks, '\\n');\n\t\t                            return [xmlStr, \"TK_STRING\"];\n\t\t                        }\n\t\t                    } else {\n\t\t                        //\n\t\t                        // handle string\n\t\t                        //\n\t\t                        var parse_string = function(delimiter, allow_unescaped_newlines, start_sub) {\n\t\t                            // Template strings can travers lines without escape characters.\n\t\t                            // Other strings cannot\n\t\t                            var current_char;\n\t\t                            while (input.hasNext()) {\n\t\t                                current_char = input.peek();\n\t\t                                if (!(esc || (current_char !== delimiter &&\n\t\t                                        (allow_unescaped_newlines || !acorn.newline.test(current_char))))) {\n\t\t                                    break;\n\t\t                                }\n\t\t\n\t\t                                // Handle \\r\\n linebreaks after escapes or in template strings\n\t\t                                if ((esc || allow_unescaped_newlines) && acorn.newline.test(current_char)) {\n\t\t                                    if (current_char === '\\r' && input.peek(1) === '\\n') {\n\t\t                                        input.next();\n\t\t                                        current_char = input.peek();\n\t\t                                    }\n\t\t                                    resulting_string += '\\n';\n\t\t                                } else {\n\t\t                                    resulting_string += current_char;\n\t\t                                }\n\t\t\n\t\t                                if (esc) {\n\t\t                                    if (current_char === 'x' || current_char === 'u') {\n\t\t                                        has_char_escapes = true;\n\t\t                                    }\n\t\t                                    esc = false;\n\t\t                                } else {\n\t\t                                    esc = current_char === '\\\\';\n\t\t                                }\n\t\t\n\t\t                                input.next();\n\t\t\n\t\t                                if (start_sub && resulting_string.indexOf(start_sub, resulting_string.length - start_sub.length) !== -1) {\n\t\t                                    if (delimiter === '`') {\n\t\t                                        parse_string('}', allow_unescaped_newlines, '`');\n\t\t                                    } else {\n\t\t                                        parse_string('`', allow_unescaped_newlines, '${');\n\t\t                                    }\n\t\t                                }\n\t\t                            }\n\t\t                        };\n\t\t\n\t\t                        if (sep === '`') {\n\t\t                            parse_string('`', true, '${');\n\t\t                        } else {\n\t\t                            parse_string(sep);\n\t\t                        }\n\t\t                    }\n\t\t\n\t\t                    if (has_char_escapes && opts.unescape_strings) {\n\t\t                        resulting_string = unescape_string(resulting_string);\n\t\t                    }\n\t\t\n\t\t                    if (input.peek() === sep) {\n\t\t                        resulting_string += sep;\n\t\t                        input.next();\n\t\t\n\t\t                        if (sep === '/') {\n\t\t                            // regexps may have modifiers /regexp/MOD , so fetch those, too\n\t\t                            // Only [gim] are valid, but if the user puts in garbage, do what we can to take it.\n\t\t                            while (input.hasNext() && acorn.isIdentifierStart(input.peekCharCode())) {\n\t\t                                resulting_string += input.next();\n\t\t                            }\n\t\t                        }\n\t\t                    }\n\t\t                    return [resulting_string, 'TK_STRING'];\n\t\t                }\n\t\t\n\t\t                if (c === '#') {\n\t\t\n\t\t                    if (tokens.length === 0 && input.peek() === '!') {\n\t\t                        // shebang\n\t\t                        resulting_string = c;\n\t\t                        while (input.hasNext() && c !== '\\n') {\n\t\t                            c = input.next();\n\t\t                            resulting_string += c;\n\t\t                        }\n\t\t                        return [trim(resulting_string) + '\\n', 'TK_UNKNOWN'];\n\t\t                    }\n\t\t\n\t\t\n\t\t\n\t\t                    // Spidermonkey-specific sharp variables for circular references\n\t\t                    // https://developer.mozilla.org/En/Sharp_variables_in_JavaScript\n\t\t                    // http://mxr.mozilla.org/mozilla-central/source/js/src/jsscan.cpp around line 1935\n\t\t                    var sharp = '#';\n\t\t                    if (input.hasNext() && input.testChar(digit)) {\n\t\t                        do {\n\t\t                            c = input.next();\n\t\t                            sharp += c;\n\t\t                        } while (input.hasNext() && c !== '#' && c !== '=');\n\t\t                        if (c === '#') {\n\t\t                            //\n\t\t                        } else if (input.peek() === '[' && input.peek(1) === ']') {\n\t\t                            sharp += '[]';\n\t\t                            input.next();\n\t\t                            input.next();\n\t\t                        } else if (input.peek() === '{' && input.peek(1) === '}') {\n\t\t                            sharp += '{}';\n\t\t                            input.next();\n\t\t                            input.next();\n\t\t                        }\n\t\t                        return [sharp, 'TK_WORD'];\n\t\t                    }\n\t\t                }\n\t\t\n\t\t                if (c === '<' && (input.peek() === '?' || input.peek() === '%')) {\n\t\t                    input.back();\n\t\t                    var template_match = input.match(template_pattern);\n\t\t                    if (template_match) {\n\t\t                        c = template_match[0];\n\t\t                        c = c.replace(acorn.allLineBreaks, '\\n');\n\t\t                        return [c, 'TK_STRING'];\n\t\t                    }\n\t\t                }\n\t\t\n\t\t                if (c === '<' && input.match(/\\!--/g)) {\n\t\t                    c = '<!--';\n\t\t                    while (input.hasNext() && !input.testChar(acorn.newline)) {\n\t\t                        c += input.next();\n\t\t                    }\n\t\t                    in_html_comment = true;\n\t\t                    return [c, 'TK_COMMENT'];\n\t\t                }\n\t\t\n\t\t                if (c === '-' && in_html_comment && input.match(/->/g)) {\n\t\t                    in_html_comment = false;\n\t\t                    return ['-->', 'TK_COMMENT'];\n\t\t                }\n\t\t\n\t\t                if (c === '.') {\n\t\t                    return [c, 'TK_DOT'];\n\t\t                }\n\t\t\n\t\t                if (in_array(c, punct)) {\n\t\t                    while (input.hasNext() && in_array(c + input.peek(), punct)) {\n\t\t                        c += input.next();\n\t\t                        if (!input.hasNext()) {\n\t\t                            break;\n\t\t                        }\n\t\t                    }\n\t\t\n\t\t                    if (c === ',') {\n\t\t                        return [c, 'TK_COMMA'];\n\t\t                    } else if (c === '=') {\n\t\t                        return [c, 'TK_EQUALS'];\n\t\t                    } else {\n\t\t                        return [c, 'TK_OPERATOR'];\n\t\t                    }\n\t\t                }\n\t\t\n\t\t                return [c, 'TK_UNKNOWN'];\n\t\t            }\n\t\t\n\t\t\n\t\t            function unescape_string(s) {\n\t\t                // You think that a regex would work for this\n\t\t                // return s.replace(/\\\\x([0-9a-f]{2})/gi, function(match, val) {\n\t\t                //         return String.fromCharCode(parseInt(val, 16));\n\t\t                //     })\n\t\t                // However, dealing with '\\xff', '\\\\xff', '\\\\\\xff' makes this more fun.\n\t\t                var out = '',\n\t\t                    escaped = 0;\n\t\t\n\t\t                var input_scan = new InputScanner(s);\n\t\t                var matched = null;\n\t\t\n\t\t                while (input_scan.hasNext()) {\n\t\t                    // Keep any whitespace, non-slash characters\n\t\t                    // also keep slash pairs.\n\t\t                    matched = input_scan.match(/([\\s]|[^\\\\]|\\\\\\\\)+/g);\n\t\t\n\t\t                    if (matched) {\n\t\t                        out += matched[0];\n\t\t                    }\n\t\t\n\t\t                    if (input_scan.peek() === '\\\\') {\n\t\t                        input_scan.next();\n\t\t                        if (input_scan.peek() === 'x') {\n\t\t                            matched = input_scan.match(/x([0-9A-Fa-f]{2})/g);\n\t\t                        } else if (input_scan.peek() === 'u') {\n\t\t                            matched = input_scan.match(/u([0-9A-Fa-f]{4})/g);\n\t\t                        } else {\n\t\t                            out += '\\\\';\n\t\t                            if (input_scan.hasNext()) {\n\t\t                                out += input_scan.next();\n\t\t                            }\n\t\t                            continue;\n\t\t                        }\n\t\t\n\t\t                        // If there's some error decoding, return the original string\n\t\t                        if (!matched) {\n\t\t                            return s;\n\t\t                        }\n\t\t\n\t\t                        escaped = parseInt(matched[1], 16);\n\t\t\n\t\t                        if (escaped > 0x7e && escaped <= 0xff && matched[0].indexOf('x') === 0) {\n\t\t                            // we bail out on \\x7f..\\xff,\n\t\t                            // leaving whole string escaped,\n\t\t                            // as it's probably completely binary\n\t\t                            return s;\n\t\t                        } else if (escaped >= 0x00 && escaped < 0x20) {\n\t\t                            // leave 0x00...0x1f escaped\n\t\t                            out += '\\\\' + matched[0];\n\t\t                            continue;\n\t\t                        } else if (escaped === 0x22 || escaped === 0x27 || escaped === 0x5c) {\n\t\t                            // single-quote, apostrophe, backslash - escape these\n\t\t                            out += '\\\\' + String.fromCharCode(escaped);\n\t\t                        } else {\n\t\t                            out += String.fromCharCode(escaped);\n\t\t                        }\n\t\t                    }\n\t\t                }\n\t\t\n\t\t                return out;\n\t\t            }\n\t\t        }\n\t\t\n\t\t        var beautifier = new Beautifier(js_source_text, options);\n\t\t        return beautifier.beautify();\n\t\t\n\t\t    }\n\t\t\n\t\t    if (true) {\n\t\t        // Add support for AMD ( https://github.com/amdjs/amdjs-api/wiki/AMD#defineamd-property- )\n\t\t        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t\t            return { js_beautify: js_beautify };\n\t\t        }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\t    } else if (typeof exports !== \"undefined\") {\n\t\t        // Add support for CommonJS. Just put this file somewhere on your require.paths\n\t\t        // and you will be able to `var js_beautify = require(\"beautify\").js_beautify`.\n\t\t        exports.js_beautify = js_beautify;\n\t\t    } else if (typeof window !== \"undefined\") {\n\t\t        // If we're running a web page and don't have either of the above, add our one global\n\t\t        window.js_beautify = js_beautify;\n\t\t    } else if (typeof global !== \"undefined\") {\n\t\t        // If we don't even have window, try global.\n\t\t        global.js_beautify = js_beautify;\n\t\t    }\n\t\t\n\t\t}());\n\t\n\t/***/ },\n\t/* 11 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*jshint curly:true, eqeqeq:true, laxbreak:true, noempty:false */\n\t\t/*\n\t\t\n\t\t  The MIT License (MIT)\n\t\t\n\t\t  Copyright (c) 2007-2013 Einar Lielmanis and contributors.\n\t\t\n\t\t  Permission is hereby granted, free of charge, to any person\n\t\t  obtaining a copy of this software and associated documentation files\n\t\t  (the \"Software\"), to deal in the Software without restriction,\n\t\t  including without limitation the rights to use, copy, modify, merge,\n\t\t  publish, distribute, sublicense, and/or sell copies of the Software,\n\t\t  and to permit persons to whom the Software is furnished to do so,\n\t\t  subject to the following conditions:\n\t\t\n\t\t  The above copyright notice and this permission notice shall be\n\t\t  included in all copies or substantial portions of the Software.\n\t\t\n\t\t  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n\t\t  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t\t  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n\t\t  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n\t\t  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n\t\t  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n\t\t  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\t\t  SOFTWARE.\n\t\t\n\t\t\n\t\t CSS Beautifier\n\t\t---------------\n\t\t\n\t\t    Written by Harutyun Amirjanyan, (amirjanyan@gmail.com)\n\t\t\n\t\t    Based on code initially developed by: Einar Lielmanis, <einar@jsbeautifier.org>\n\t\t        http://jsbeautifier.org/\n\t\t\n\t\t    Usage:\n\t\t        css_beautify(source_text);\n\t\t        css_beautify(source_text, options);\n\t\t\n\t\t    The options are (default in brackets):\n\t\t        indent_size (4)                         — indentation size,\n\t\t        indent_char (space)                     — character to indent with,\n\t\t        selector_separator_newline (true)       - separate selectors with newline or\n\t\t                                                  not (e.g. \"a,\\nbr\" or \"a, br\")\n\t\t        end_with_newline (false)                - end with a newline\n\t\t        newline_between_rules (true)            - add a new line after every css rule\n\t\t        space_around_selector_separator (false) - ensure space around selector separators:\n\t\t                                                  '>', '+', '~' (e.g. \"a>b\" -> \"a > b\")\n\t\t    e.g\n\t\t\n\t\t    css_beautify(css_source_text, {\n\t\t      'indent_size': 1,\n\t\t      'indent_char': '\\t',\n\t\t      'selector_separator': ' ',\n\t\t      'end_with_newline': false,\n\t\t      'newline_between_rules': true,\n\t\t      'space_around_selector_separator': true\n\t\t    });\n\t\t*/\n\t\t\n\t\t// http://www.w3.org/TR/CSS21/syndata.html#tokenization\n\t\t// http://www.w3.org/TR/css3-syntax/\n\t\t\n\t\t(function() {\n\t\t    function css_beautify(source_text, options) {\n\t\t        options = options || {};\n\t\t        source_text = source_text || '';\n\t\t        // HACK: newline parsing inconsistent. This brute force normalizes the input.\n\t\t        source_text = source_text.replace(/\\r\\n|[\\r\\u2028\\u2029]/g, '\\n');\n\t\t\n\t\t        var indentSize = options.indent_size || 4;\n\t\t        var indentCharacter = options.indent_char || ' ';\n\t\t        var selectorSeparatorNewline = (options.selector_separator_newline === undefined) ? true : options.selector_separator_newline;\n\t\t        var end_with_newline = (options.end_with_newline === undefined) ? false : options.end_with_newline;\n\t\t        var newline_between_rules = (options.newline_between_rules === undefined) ? true : options.newline_between_rules;\n\t\t        var space_around_combinator = (options.space_around_combinator === undefined) ? false : options.space_around_combinator;\n\t\t        space_around_combinator = space_around_combinator || ((options.space_around_selector_separator === undefined) ? false : options.space_around_selector_separator);\n\t\t        var eol = options.eol ? options.eol : '\\n';\n\t\t\n\t\t        // compatibility\n\t\t        if (typeof indentSize === \"string\") {\n\t\t            indentSize = parseInt(indentSize, 10);\n\t\t        }\n\t\t\n\t\t        if (options.indent_with_tabs) {\n\t\t            indentCharacter = '\\t';\n\t\t            indentSize = 1;\n\t\t        }\n\t\t\n\t\t        eol = eol.replace(/\\\\r/, '\\r').replace(/\\\\n/, '\\n');\n\t\t\n\t\t\n\t\t        // tokenizer\n\t\t        var whiteRe = /^\\s+$/;\n\t\t\n\t\t        var pos = -1,\n\t\t            ch;\n\t\t        var parenLevel = 0;\n\t\t\n\t\t        function next() {\n\t\t            ch = source_text.charAt(++pos);\n\t\t            return ch || '';\n\t\t        }\n\t\t\n\t\t        function peek(skipWhitespace) {\n\t\t            var result = '';\n\t\t            var prev_pos = pos;\n\t\t            if (skipWhitespace) {\n\t\t                eatWhitespace();\n\t\t            }\n\t\t            result = source_text.charAt(pos + 1) || '';\n\t\t            pos = prev_pos - 1;\n\t\t            next();\n\t\t            return result;\n\t\t        }\n\t\t\n\t\t        function eatString(endChars) {\n\t\t            var start = pos;\n\t\t            while (next()) {\n\t\t                if (ch === \"\\\\\") {\n\t\t                    next();\n\t\t                } else if (endChars.indexOf(ch) !== -1) {\n\t\t                    break;\n\t\t                } else if (ch === \"\\n\") {\n\t\t                    break;\n\t\t                }\n\t\t            }\n\t\t            return source_text.substring(start, pos + 1);\n\t\t        }\n\t\t\n\t\t        function peekString(endChar) {\n\t\t            var prev_pos = pos;\n\t\t            var str = eatString(endChar);\n\t\t            pos = prev_pos - 1;\n\t\t            next();\n\t\t            return str;\n\t\t        }\n\t\t\n\t\t        function eatWhitespace() {\n\t\t            var result = '';\n\t\t            while (whiteRe.test(peek())) {\n\t\t                next();\n\t\t                result += ch;\n\t\t            }\n\t\t            return result;\n\t\t        }\n\t\t\n\t\t        function skipWhitespace() {\n\t\t            var result = '';\n\t\t            if (ch && whiteRe.test(ch)) {\n\t\t                result = ch;\n\t\t            }\n\t\t            while (whiteRe.test(next())) {\n\t\t                result += ch;\n\t\t            }\n\t\t            return result;\n\t\t        }\n\t\t\n\t\t        function eatComment(singleLine) {\n\t\t            var start = pos;\n\t\t            singleLine = peek() === \"/\";\n\t\t            next();\n\t\t            while (next()) {\n\t\t                if (!singleLine && ch === \"*\" && peek() === \"/\") {\n\t\t                    next();\n\t\t                    break;\n\t\t                } else if (singleLine && ch === \"\\n\") {\n\t\t                    return source_text.substring(start, pos);\n\t\t                }\n\t\t            }\n\t\t\n\t\t            return source_text.substring(start, pos) + ch;\n\t\t        }\n\t\t\n\t\t\n\t\t        function lookBack(str) {\n\t\t            return source_text.substring(pos - str.length, pos).toLowerCase() ===\n\t\t                str;\n\t\t        }\n\t\t\n\t\t        // Nested pseudo-class if we are insideRule\n\t\t        // and the next special character found opens\n\t\t        // a new block\n\t\t        function foundNestedPseudoClass() {\n\t\t            var openParen = 0;\n\t\t            for (var i = pos + 1; i < source_text.length; i++) {\n\t\t                var ch = source_text.charAt(i);\n\t\t                if (ch === \"{\") {\n\t\t                    return true;\n\t\t                } else if (ch === '(') {\n\t\t                    // pseudoclasses can contain ()\n\t\t                    openParen += 1;\n\t\t                } else if (ch === ')') {\n\t\t                    if (openParen === 0) {\n\t\t                        return false;\n\t\t                    }\n\t\t                    openParen -= 1;\n\t\t                } else if (ch === \";\" || ch === \"}\") {\n\t\t                    return false;\n\t\t                }\n\t\t            }\n\t\t            return false;\n\t\t        }\n\t\t\n\t\t        // printer\n\t\t        var basebaseIndentString = source_text.match(/^[\\t ]*/)[0];\n\t\t        var singleIndent = new Array(indentSize + 1).join(indentCharacter);\n\t\t        var indentLevel = 0;\n\t\t        var nestedLevel = 0;\n\t\t\n\t\t        function indent() {\n\t\t            indentLevel++;\n\t\t            basebaseIndentString += singleIndent;\n\t\t        }\n\t\t\n\t\t        function outdent() {\n\t\t            indentLevel--;\n\t\t            basebaseIndentString = basebaseIndentString.slice(0, -indentSize);\n\t\t        }\n\t\t\n\t\t        var print = {};\n\t\t        print[\"{\"] = function(ch) {\n\t\t            print.singleSpace();\n\t\t            output.push(ch);\n\t\t            print.newLine();\n\t\t        };\n\t\t        print[\"}\"] = function(ch) {\n\t\t            print.newLine();\n\t\t            output.push(ch);\n\t\t            print.newLine();\n\t\t        };\n\t\t\n\t\t        print._lastCharWhitespace = function() {\n\t\t            return whiteRe.test(output[output.length - 1]);\n\t\t        };\n\t\t\n\t\t        print.newLine = function(keepWhitespace) {\n\t\t            if (output.length) {\n\t\t                if (!keepWhitespace && output[output.length - 1] !== '\\n') {\n\t\t                    print.trim();\n\t\t                }\n\t\t\n\t\t                output.push('\\n');\n\t\t\n\t\t                if (basebaseIndentString) {\n\t\t                    output.push(basebaseIndentString);\n\t\t                }\n\t\t            }\n\t\t        };\n\t\t        print.singleSpace = function() {\n\t\t            if (output.length && !print._lastCharWhitespace()) {\n\t\t                output.push(' ');\n\t\t            }\n\t\t        };\n\t\t\n\t\t        print.preserveSingleSpace = function() {\n\t\t            if (isAfterSpace) {\n\t\t                print.singleSpace();\n\t\t            }\n\t\t        };\n\t\t\n\t\t        print.trim = function() {\n\t\t            while (print._lastCharWhitespace()) {\n\t\t                output.pop();\n\t\t            }\n\t\t        };\n\t\t\n\t\t\n\t\t        var output = [];\n\t\t        /*_____________________--------------------_____________________*/\n\t\t\n\t\t        var insideRule = false;\n\t\t        var insidePropertyValue = false;\n\t\t        var enteringConditionalGroup = false;\n\t\t        var top_ch = '';\n\t\t        var last_top_ch = '';\n\t\t\n\t\t        while (true) {\n\t\t            var whitespace = skipWhitespace();\n\t\t            var isAfterSpace = whitespace !== '';\n\t\t            var isAfterNewline = whitespace.indexOf('\\n') !== -1;\n\t\t            last_top_ch = top_ch;\n\t\t            top_ch = ch;\n\t\t\n\t\t            if (!ch) {\n\t\t                break;\n\t\t            } else if (ch === '/' && peek() === '*') { /* css comment */\n\t\t                var header = indentLevel === 0;\n\t\t\n\t\t                if (isAfterNewline || header) {\n\t\t                    print.newLine();\n\t\t                }\n\t\t\n\t\t                output.push(eatComment());\n\t\t                print.newLine();\n\t\t                if (header) {\n\t\t                    print.newLine(true);\n\t\t                }\n\t\t            } else if (ch === '/' && peek() === '/') { // single line comment\n\t\t                if (!isAfterNewline && last_top_ch !== '{') {\n\t\t                    print.trim();\n\t\t                }\n\t\t                print.singleSpace();\n\t\t                output.push(eatComment());\n\t\t                print.newLine();\n\t\t            } else if (ch === '@') {\n\t\t                print.preserveSingleSpace();\n\t\t\n\t\t                // deal with less propery mixins @{...}\n\t\t                if (peek() === '{') {\n\t\t                    output.push(eatString('}'));\n\t\t                } else {\n\t\t                    output.push(ch);\n\t\t\n\t\t                    // strip trailing space, if present, for hash property checks\n\t\t                    var variableOrRule = peekString(\": ,;{}()[]/='\\\"\");\n\t\t\n\t\t                    if (variableOrRule.match(/[ :]$/)) {\n\t\t                        // we have a variable or pseudo-class, add it and insert one space before continuing\n\t\t                        next();\n\t\t                        variableOrRule = eatString(\": \").replace(/\\s$/, '');\n\t\t                        output.push(variableOrRule);\n\t\t                        print.singleSpace();\n\t\t                    }\n\t\t\n\t\t                    variableOrRule = variableOrRule.replace(/\\s$/, '');\n\t\t\n\t\t                    // might be a nesting at-rule\n\t\t                    if (variableOrRule in css_beautify.NESTED_AT_RULE) {\n\t\t                        nestedLevel += 1;\n\t\t                        if (variableOrRule in css_beautify.CONDITIONAL_GROUP_RULE) {\n\t\t                            enteringConditionalGroup = true;\n\t\t                        }\n\t\t                    }\n\t\t                }\n\t\t            } else if (ch === '#' && peek() === '{') {\n\t\t                print.preserveSingleSpace();\n\t\t                output.push(eatString('}'));\n\t\t            } else if (ch === '{') {\n\t\t                if (peek(true) === '}') {\n\t\t                    eatWhitespace();\n\t\t                    next();\n\t\t                    print.singleSpace();\n\t\t                    output.push(\"{}\");\n\t\t                    print.newLine();\n\t\t                    if (newline_between_rules && indentLevel === 0) {\n\t\t                        print.newLine(true);\n\t\t                    }\n\t\t                } else {\n\t\t                    indent();\n\t\t                    print[\"{\"](ch);\n\t\t                    // when entering conditional groups, only rulesets are allowed\n\t\t                    if (enteringConditionalGroup) {\n\t\t                        enteringConditionalGroup = false;\n\t\t                        insideRule = (indentLevel > nestedLevel);\n\t\t                    } else {\n\t\t                        // otherwise, declarations are also allowed\n\t\t                        insideRule = (indentLevel >= nestedLevel);\n\t\t                    }\n\t\t                }\n\t\t            } else if (ch === '}') {\n\t\t                outdent();\n\t\t                print[\"}\"](ch);\n\t\t                insideRule = false;\n\t\t                insidePropertyValue = false;\n\t\t                if (nestedLevel) {\n\t\t                    nestedLevel--;\n\t\t                }\n\t\t                if (newline_between_rules && indentLevel === 0) {\n\t\t                    print.newLine(true);\n\t\t                }\n\t\t            } else if (ch === \":\") {\n\t\t                eatWhitespace();\n\t\t                if ((insideRule || enteringConditionalGroup) &&\n\t\t                    !(lookBack(\"&\") || foundNestedPseudoClass()) &&\n\t\t                    !lookBack(\"(\")) {\n\t\t                    // 'property: value' delimiter\n\t\t                    // which could be in a conditional group query\n\t\t                    insidePropertyValue = true;\n\t\t                    output.push(':');\n\t\t                    print.singleSpace();\n\t\t                } else {\n\t\t                    // sass/less parent reference don't use a space\n\t\t                    // sass nested pseudo-class don't use a space\n\t\t\n\t\t                    // preserve space before pseudoclasses/pseudoelements, as it means \"in any child\"\n\t\t                    if (lookBack(\" \") && output[output.length - 1] !== \" \") {\n\t\t                        output.push(\" \");\n\t\t                    }\n\t\t                    if (peek() === \":\") {\n\t\t                        // pseudo-element\n\t\t                        next();\n\t\t                        output.push(\"::\");\n\t\t                    } else {\n\t\t                        // pseudo-class\n\t\t                        output.push(':');\n\t\t                    }\n\t\t                }\n\t\t            } else if (ch === '\"' || ch === '\\'') {\n\t\t                print.preserveSingleSpace();\n\t\t                output.push(eatString(ch));\n\t\t            } else if (ch === ';') {\n\t\t                insidePropertyValue = false;\n\t\t                output.push(ch);\n\t\t                print.newLine();\n\t\t            } else if (ch === '(') { // may be a url\n\t\t                if (lookBack(\"url\")) {\n\t\t                    output.push(ch);\n\t\t                    eatWhitespace();\n\t\t                    if (next()) {\n\t\t                        if (ch !== ')' && ch !== '\"' && ch !== '\\'') {\n\t\t                            output.push(eatString(')'));\n\t\t                        } else {\n\t\t                            pos--;\n\t\t                        }\n\t\t                    }\n\t\t                } else {\n\t\t                    parenLevel++;\n\t\t                    print.preserveSingleSpace();\n\t\t                    output.push(ch);\n\t\t                    eatWhitespace();\n\t\t                }\n\t\t            } else if (ch === ')') {\n\t\t                output.push(ch);\n\t\t                parenLevel--;\n\t\t            } else if (ch === ',') {\n\t\t                output.push(ch);\n\t\t                eatWhitespace();\n\t\t                if (selectorSeparatorNewline && !insidePropertyValue && parenLevel < 1) {\n\t\t                    print.newLine();\n\t\t                } else {\n\t\t                    print.singleSpace();\n\t\t                }\n\t\t            } else if ((ch === '>' || ch === '+' || ch === '~') &&\n\t\t                !insidePropertyValue && parenLevel < 1) {\n\t\t                //handle combinator spacing\n\t\t                if (space_around_combinator) {\n\t\t                    print.singleSpace();\n\t\t                    output.push(ch);\n\t\t                    print.singleSpace();\n\t\t                } else {\n\t\t                    output.push(ch);\n\t\t                    eatWhitespace();\n\t\t                    // squash extra whitespace\n\t\t                    if (ch && whiteRe.test(ch)) {\n\t\t                        ch = '';\n\t\t                    }\n\t\t                }\n\t\t            } else if (ch === ']') {\n\t\t                output.push(ch);\n\t\t            } else if (ch === '[') {\n\t\t                print.preserveSingleSpace();\n\t\t                output.push(ch);\n\t\t            } else if (ch === '=') { // no whitespace before or after\n\t\t                eatWhitespace();\n\t\t                ch = '=';\n\t\t                output.push(ch);\n\t\t            } else {\n\t\t                print.preserveSingleSpace();\n\t\t                output.push(ch);\n\t\t            }\n\t\t        }\n\t\t\n\t\t\n\t\t        var sweetCode = '';\n\t\t        if (basebaseIndentString) {\n\t\t            sweetCode += basebaseIndentString;\n\t\t        }\n\t\t\n\t\t        sweetCode += output.join('').replace(/[\\r\\n\\t ]+$/, '');\n\t\t\n\t\t        // establish end_with_newline\n\t\t        if (end_with_newline) {\n\t\t            sweetCode += '\\n';\n\t\t        }\n\t\t\n\t\t        if (eol !== '\\n') {\n\t\t            sweetCode = sweetCode.replace(/[\\n]/g, eol);\n\t\t        }\n\t\t\n\t\t        return sweetCode;\n\t\t    }\n\t\t\n\t\t    // https://developer.mozilla.org/en-US/docs/Web/CSS/At-rule\n\t\t    css_beautify.NESTED_AT_RULE = {\n\t\t        \"@page\": true,\n\t\t        \"@font-face\": true,\n\t\t        \"@keyframes\": true,\n\t\t        // also in CONDITIONAL_GROUP_RULE below\n\t\t        \"@media\": true,\n\t\t        \"@supports\": true,\n\t\t        \"@document\": true\n\t\t    };\n\t\t    css_beautify.CONDITIONAL_GROUP_RULE = {\n\t\t        \"@media\": true,\n\t\t        \"@supports\": true,\n\t\t        \"@document\": true\n\t\t    };\n\t\t\n\t\t    /*global define */\n\t\t    if (true) {\n\t\t        // Add support for AMD ( https://github.com/amdjs/amdjs-api/wiki/AMD#defineamd-property- )\n\t\t        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t\t            return {\n\t\t                css_beautify: css_beautify\n\t\t            };\n\t\t        }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\t    } else if (typeof exports !== \"undefined\") {\n\t\t        // Add support for CommonJS. Just put this file somewhere on your require.paths\n\t\t        // and you will be able to `var html_beautify = require(\"beautify\").html_beautify`.\n\t\t        exports.css_beautify = css_beautify;\n\t\t    } else if (typeof window !== \"undefined\") {\n\t\t        // If we're running a web page and don't have either of the above, add our one global\n\t\t        window.css_beautify = css_beautify;\n\t\t    } else if (typeof global !== \"undefined\") {\n\t\t        // If we don't even have window, try global.\n\t\t        global.css_beautify = css_beautify;\n\t\t    }\n\t\t\n\t\t}());\n\t\n\t/***/ },\n\t/* 12 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*jshint curly:true, eqeqeq:true, laxbreak:true, noempty:false */\n\t\t/*\n\t\t\n\t\t  The MIT License (MIT)\n\t\t\n\t\t  Copyright (c) 2007-2013 Einar Lielmanis and contributors.\n\t\t\n\t\t  Permission is hereby granted, free of charge, to any person\n\t\t  obtaining a copy of this software and associated documentation files\n\t\t  (the \"Software\"), to deal in the Software without restriction,\n\t\t  including without limitation the rights to use, copy, modify, merge,\n\t\t  publish, distribute, sublicense, and/or sell copies of the Software,\n\t\t  and to permit persons to whom the Software is furnished to do so,\n\t\t  subject to the following conditions:\n\t\t\n\t\t  The above copyright notice and this permission notice shall be\n\t\t  included in all copies or substantial portions of the Software.\n\t\t\n\t\t  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n\t\t  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t\t  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n\t\t  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n\t\t  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n\t\t  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n\t\t  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\t\t  SOFTWARE.\n\t\t\n\t\t\n\t\t Style HTML\n\t\t---------------\n\t\t\n\t\t  Written by Nochum Sossonko, (nsossonko@hotmail.com)\n\t\t\n\t\t  Based on code initially developed by: Einar Lielmanis, <einar@jsbeautifier.org>\n\t\t    http://jsbeautifier.org/\n\t\t\n\t\t  Usage:\n\t\t    style_html(html_source);\n\t\t\n\t\t    style_html(html_source, options);\n\t\t\n\t\t  The options are:\n\t\t    indent_inner_html (default false)  — indent <head> and <body> sections,\n\t\t    indent_size (default 4)          — indentation size,\n\t\t    indent_char (default space)      — character to indent with,\n\t\t    wrap_line_length (default 250)            -  maximum amount of characters per line (0 = disable)\n\t\t    brace_style (default \"collapse\") - \"collapse\" | \"expand\" | \"end-expand\" | \"none\"\n\t\t            put braces on the same line as control statements (default), or put braces on own line (Allman / ANSI style), or just put end braces on own line, or attempt to keep them where they are.\n\t\t    unformatted (defaults to inline tags) - list of tags, that shouldn't be reformatted\n\t\t    indent_scripts (default normal)  - \"keep\"|\"separate\"|\"normal\"\n\t\t    preserve_newlines (default true) - whether existing line breaks before elements should be preserved\n\t\t                                        Only works before elements, not inside tags or for text.\n\t\t    max_preserve_newlines (default unlimited) - maximum number of line breaks to be preserved in one chunk\n\t\t    indent_handlebars (default false) - format and indent {{#foo}} and {{/foo}}\n\t\t    end_with_newline (false)          - end with a newline\n\t\t    extra_liners (default [head,body,/html]) -List of tags that should have an extra newline before them.\n\t\t\n\t\t    e.g.\n\t\t\n\t\t    style_html(html_source, {\n\t\t      'indent_inner_html': false,\n\t\t      'indent_size': 2,\n\t\t      'indent_char': ' ',\n\t\t      'wrap_line_length': 78,\n\t\t      'brace_style': 'expand',\n\t\t      'preserve_newlines': true,\n\t\t      'max_preserve_newlines': 5,\n\t\t      'indent_handlebars': false,\n\t\t      'extra_liners': ['/html']\n\t\t    });\n\t\t*/\n\t\t\n\t\t(function() {\n\t\t\n\t\t    // function trim(s) {\n\t\t    //     return s.replace(/^\\s+|\\s+$/g, '');\n\t\t    // }\n\t\t\n\t\t    function ltrim(s) {\n\t\t        return s.replace(/^\\s+/g, '');\n\t\t    }\n\t\t\n\t\t    function rtrim(s) {\n\t\t        return s.replace(/\\s+$/g, '');\n\t\t    }\n\t\t\n\t\t    function style_html(html_source, options, js_beautify, css_beautify) {\n\t\t        //Wrapper function to invoke all the necessary constructors and deal with the output.\n\t\t\n\t\t        var multi_parser,\n\t\t            indent_inner_html,\n\t\t            indent_body_inner_html,\n\t\t            indent_head_inner_html,\n\t\t            indent_size,\n\t\t            indent_character,\n\t\t            wrap_line_length,\n\t\t            brace_style,\n\t\t            unformatted,\n\t\t            preserve_newlines,\n\t\t            max_preserve_newlines,\n\t\t            indent_handlebars,\n\t\t            wrap_attributes,\n\t\t            wrap_attributes_indent_size,\n\t\t            end_with_newline,\n\t\t            extra_liners,\n\t\t            eol;\n\t\t\n\t\t        options = options || {};\n\t\t\n\t\t        // backwards compatibility to 1.3.4\n\t\t        if ((options.wrap_line_length === undefined || parseInt(options.wrap_line_length, 10) === 0) &&\n\t\t            (options.max_char !== undefined && parseInt(options.max_char, 10) !== 0)) {\n\t\t            options.wrap_line_length = options.max_char;\n\t\t        }\n\t\t\n\t\t        indent_inner_html = (options.indent_inner_html === undefined) ? false : options.indent_inner_html;\n\t\t        indent_body_inner_html = (options.indent_body_inner_html === undefined) ? true : options.indent_body_inner_html;\n\t\t        indent_head_inner_html = (options.indent_head_inner_html === undefined) ? true : options.indent_head_inner_html;\n\t\t        indent_size = (options.indent_size === undefined) ? 4 : parseInt(options.indent_size, 10);\n\t\t        indent_character = (options.indent_char === undefined) ? ' ' : options.indent_char;\n\t\t        brace_style = (options.brace_style === undefined) ? 'collapse' : options.brace_style;\n\t\t        wrap_line_length = parseInt(options.wrap_line_length, 10) === 0 ? 32786 : parseInt(options.wrap_line_length || 250, 10);\n\t\t        unformatted = options.unformatted || [\n\t\t            // https://www.w3.org/TR/html5/dom.html#phrasing-content\n\t\t            'a', 'abbr', 'area', 'audio', 'b', 'bdi', 'bdo', 'br', 'button', 'canvas', 'cite',\n\t\t            'code', 'data', 'datalist', 'del', 'dfn', 'em', 'embed', 'i', 'iframe', 'img',\n\t\t            'input', 'ins', 'kbd', 'keygen', 'label', 'map', 'mark', 'math', 'meter', 'noscript',\n\t\t            'object', 'output', 'progress', 'q', 'ruby', 's', 'samp', /* 'script', */ 'select', 'small',\n\t\t            'span', 'strong', 'sub', 'sup', 'svg', 'template', 'textarea', 'time', 'u', 'var',\n\t\t            'video', 'wbr', 'text',\n\t\t            // prexisting - not sure of full effect of removing, leaving in\n\t\t            'acronym', 'address', 'big', 'dt', 'ins', 'small', 'strike', 'tt',\n\t\t            'pre',\n\t\t        ];\n\t\t        preserve_newlines = (options.preserve_newlines === undefined) ? true : options.preserve_newlines;\n\t\t        max_preserve_newlines = preserve_newlines ?\n\t\t            (isNaN(parseInt(options.max_preserve_newlines, 10)) ? 32786 : parseInt(options.max_preserve_newlines, 10)) :\n\t\t            0;\n\t\t        indent_handlebars = (options.indent_handlebars === undefined) ? false : options.indent_handlebars;\n\t\t        wrap_attributes = (options.wrap_attributes === undefined) ? 'auto' : options.wrap_attributes;\n\t\t        wrap_attributes_indent_size = (isNaN(parseInt(options.wrap_attributes_indent_size, 10))) ? indent_size : parseInt(options.wrap_attributes_indent_size, 10);\n\t\t        end_with_newline = (options.end_with_newline === undefined) ? false : options.end_with_newline;\n\t\t        extra_liners = (typeof options.extra_liners === 'object') && options.extra_liners ?\n\t\t            options.extra_liners.concat() : (typeof options.extra_liners === 'string') ?\n\t\t            options.extra_liners.split(',') : 'head,body,/html'.split(',');\n\t\t        eol = options.eol ? options.eol : '\\n';\n\t\t\n\t\t        if (options.indent_with_tabs) {\n\t\t            indent_character = '\\t';\n\t\t            indent_size = 1;\n\t\t        }\n\t\t\n\t\t        eol = eol.replace(/\\\\r/, '\\r').replace(/\\\\n/, '\\n');\n\t\t\n\t\t        function Parser() {\n\t\t\n\t\t            this.pos = 0; //Parser position\n\t\t            this.token = '';\n\t\t            this.current_mode = 'CONTENT'; //reflects the current Parser mode: TAG/CONTENT\n\t\t            this.tags = { //An object to hold tags, their position, and their parent-tags, initiated with default values\n\t\t                parent: 'parent1',\n\t\t                parentcount: 1,\n\t\t                parent1: ''\n\t\t            };\n\t\t            this.tag_type = '';\n\t\t            this.token_text = this.last_token = this.last_text = this.token_type = '';\n\t\t            this.newlines = 0;\n\t\t            this.indent_content = indent_inner_html;\n\t\t            this.indent_body_inner_html = indent_body_inner_html;\n\t\t            this.indent_head_inner_html = indent_head_inner_html;\n\t\t\n\t\t            this.Utils = { //Uilities made available to the various functions\n\t\t                whitespace: \"\\n\\r\\t \".split(''),\n\t\t\n\t\t                single_token: [\n\t\t                    // HTLM void elements - aka self-closing tags - aka singletons\n\t\t                    // https://www.w3.org/html/wg/drafts/html/master/syntax.html#void-elements\n\t\t                    'area', 'base', 'br', 'col', 'embed', 'hr', 'img', 'input', 'keygen',\n\t\t                    'link', 'menuitem', 'meta', 'param', 'source', 'track', 'wbr',\n\t\t                    // NOTE: Optional tags - are not understood.\n\t\t                    // https://www.w3.org/TR/html5/syntax.html#optional-tags\n\t\t                    // The rules for optional tags are too complex for a simple list\n\t\t                    // Also, the content of these tags should still be indented in many cases.\n\t\t                    // 'li' is a good exmple.\n\t\t\n\t\t                    // Doctype and xml elements\n\t\t                    '!doctype', '?xml',\n\t\t                    // ?php tag\n\t\t                    '?php',\n\t\t                    // other tags that were in this list, keeping just in case\n\t\t                    'basefont', 'isindex'\n\t\t                ],\n\t\t                extra_liners: extra_liners, //for tags that need a line of whitespace before them\n\t\t                in_array: function(what, arr) {\n\t\t                    for (var i = 0; i < arr.length; i++) {\n\t\t                        if (what === arr[i]) {\n\t\t                            return true;\n\t\t                        }\n\t\t                    }\n\t\t                    return false;\n\t\t                }\n\t\t            };\n\t\t\n\t\t            // Return true if the given text is composed entirely of whitespace.\n\t\t            this.is_whitespace = function(text) {\n\t\t                for (var n = 0; n < text.length; n++) {\n\t\t                    if (!this.Utils.in_array(text.charAt(n), this.Utils.whitespace)) {\n\t\t                        return false;\n\t\t                    }\n\t\t                }\n\t\t                return true;\n\t\t            };\n\t\t\n\t\t            this.traverse_whitespace = function() {\n\t\t                var input_char = '';\n\t\t\n\t\t                input_char = this.input.charAt(this.pos);\n\t\t                if (this.Utils.in_array(input_char, this.Utils.whitespace)) {\n\t\t                    this.newlines = 0;\n\t\t                    while (this.Utils.in_array(input_char, this.Utils.whitespace)) {\n\t\t                        if (preserve_newlines && input_char === '\\n' && this.newlines <= max_preserve_newlines) {\n\t\t                            this.newlines += 1;\n\t\t                        }\n\t\t\n\t\t                        this.pos++;\n\t\t                        input_char = this.input.charAt(this.pos);\n\t\t                    }\n\t\t                    return true;\n\t\t                }\n\t\t                return false;\n\t\t            };\n\t\t\n\t\t            // Append a space to the given content (string array) or, if we are\n\t\t            // at the wrap_line_length, append a newline/indentation.\n\t\t            // return true if a newline was added, false if a space was added\n\t\t            this.space_or_wrap = function(content) {\n\t\t                if (this.line_char_count >= this.wrap_line_length) { //insert a line when the wrap_line_length is reached\n\t\t                    this.print_newline(false, content);\n\t\t                    this.print_indentation(content);\n\t\t                    return true;\n\t\t                } else {\n\t\t                    this.line_char_count++;\n\t\t                    content.push(' ');\n\t\t                    return false;\n\t\t                }\n\t\t            };\n\t\t\n\t\t            this.get_content = function() { //function to capture regular content between tags\n\t\t                var input_char = '',\n\t\t                    content = [];\n\t\t\n\t\t                while (this.input.charAt(this.pos) !== '<') {\n\t\t                    if (this.pos >= this.input.length) {\n\t\t                        return content.length ? content.join('') : ['', 'TK_EOF'];\n\t\t                    }\n\t\t\n\t\t                    if (this.traverse_whitespace()) {\n\t\t                        this.space_or_wrap(content);\n\t\t                        continue;\n\t\t                    }\n\t\t\n\t\t                    if (indent_handlebars) {\n\t\t                        // Handlebars parsing is complicated.\n\t\t                        // {{#foo}} and {{/foo}} are formatted tags.\n\t\t                        // {{something}} should get treated as content, except:\n\t\t                        // {{else}} specifically behaves like {{#if}} and {{/if}}\n\t\t                        var peek3 = this.input.substr(this.pos, 3);\n\t\t                        if (peek3 === '{{#' || peek3 === '{{/') {\n\t\t                            // These are tags and not content.\n\t\t                            break;\n\t\t                        } else if (peek3 === '{{!') {\n\t\t                            return [this.get_tag(), 'TK_TAG_HANDLEBARS_COMMENT'];\n\t\t                        } else if (this.input.substr(this.pos, 2) === '{{') {\n\t\t                            if (this.get_tag(true) === '{{else}}') {\n\t\t                                break;\n\t\t                            }\n\t\t                        }\n\t\t                    }\n\t\t\n\t\t                    input_char = this.input.charAt(this.pos);\n\t\t                    this.pos++;\n\t\t                    this.line_char_count++;\n\t\t                    content.push(input_char); //letter at-a-time (or string) inserted to an array\n\t\t                }\n\t\t                return content.length ? content.join('') : '';\n\t\t            };\n\t\t\n\t\t            this.get_contents_to = function(name) { //get the full content of a script or style to pass to js_beautify\n\t\t                if (this.pos === this.input.length) {\n\t\t                    return ['', 'TK_EOF'];\n\t\t                }\n\t\t                var content = '';\n\t\t                var reg_match = new RegExp('</' + name + '\\\\s*>', 'igm');\n\t\t                reg_match.lastIndex = this.pos;\n\t\t                var reg_array = reg_match.exec(this.input);\n\t\t                var end_script = reg_array ? reg_array.index : this.input.length; //absolute end of script\n\t\t                if (this.pos < end_script) { //get everything in between the script tags\n\t\t                    content = this.input.substring(this.pos, end_script);\n\t\t                    this.pos = end_script;\n\t\t                }\n\t\t                return content;\n\t\t            };\n\t\t\n\t\t            this.record_tag = function(tag) { //function to record a tag and its parent in this.tags Object\n\t\t                if (this.tags[tag + 'count']) { //check for the existence of this tag type\n\t\t                    this.tags[tag + 'count']++;\n\t\t                    this.tags[tag + this.tags[tag + 'count']] = this.indent_level; //and record the present indent level\n\t\t                } else { //otherwise initialize this tag type\n\t\t                    this.tags[tag + 'count'] = 1;\n\t\t                    this.tags[tag + this.tags[tag + 'count']] = this.indent_level; //and record the present indent level\n\t\t                }\n\t\t                this.tags[tag + this.tags[tag + 'count'] + 'parent'] = this.tags.parent; //set the parent (i.e. in the case of a div this.tags.div1parent)\n\t\t                this.tags.parent = tag + this.tags[tag + 'count']; //and make this the current parent (i.e. in the case of a div 'div1')\n\t\t            };\n\t\t\n\t\t            this.retrieve_tag = function(tag) { //function to retrieve the opening tag to the corresponding closer\n\t\t                if (this.tags[tag + 'count']) { //if the openener is not in the Object we ignore it\n\t\t                    var temp_parent = this.tags.parent; //check to see if it's a closable tag.\n\t\t                    while (temp_parent) { //till we reach '' (the initial value);\n\t\t                        if (tag + this.tags[tag + 'count'] === temp_parent) { //if this is it use it\n\t\t                            break;\n\t\t                        }\n\t\t                        temp_parent = this.tags[temp_parent + 'parent']; //otherwise keep on climbing up the DOM Tree\n\t\t                    }\n\t\t                    if (temp_parent) { //if we caught something\n\t\t                        this.indent_level = this.tags[tag + this.tags[tag + 'count']]; //set the indent_level accordingly\n\t\t                        this.tags.parent = this.tags[temp_parent + 'parent']; //and set the current parent\n\t\t                    }\n\t\t                    delete this.tags[tag + this.tags[tag + 'count'] + 'parent']; //delete the closed tags parent reference...\n\t\t                    delete this.tags[tag + this.tags[tag + 'count']]; //...and the tag itself\n\t\t                    if (this.tags[tag + 'count'] === 1) {\n\t\t                        delete this.tags[tag + 'count'];\n\t\t                    } else {\n\t\t                        this.tags[tag + 'count']--;\n\t\t                    }\n\t\t                }\n\t\t            };\n\t\t\n\t\t            this.indent_to_tag = function(tag) {\n\t\t                // Match the indentation level to the last use of this tag, but don't remove it.\n\t\t                if (!this.tags[tag + 'count']) {\n\t\t                    return;\n\t\t                }\n\t\t                var temp_parent = this.tags.parent;\n\t\t                while (temp_parent) {\n\t\t                    if (tag + this.tags[tag + 'count'] === temp_parent) {\n\t\t                        break;\n\t\t                    }\n\t\t                    temp_parent = this.tags[temp_parent + 'parent'];\n\t\t                }\n\t\t                if (temp_parent) {\n\t\t                    this.indent_level = this.tags[tag + this.tags[tag + 'count']];\n\t\t                }\n\t\t            };\n\t\t\n\t\t            this.get_tag = function(peek) { //function to get a full tag and parse its type\n\t\t                var input_char = '',\n\t\t                    content = [],\n\t\t                    comment = '',\n\t\t                    space = false,\n\t\t                    first_attr = true,\n\t\t                    tag_start, tag_end,\n\t\t                    tag_start_char,\n\t\t                    orig_pos = this.pos,\n\t\t                    orig_line_char_count = this.line_char_count;\n\t\t\n\t\t                peek = peek !== undefined ? peek : false;\n\t\t\n\t\t                do {\n\t\t                    if (this.pos >= this.input.length) {\n\t\t                        if (peek) {\n\t\t                            this.pos = orig_pos;\n\t\t                            this.line_char_count = orig_line_char_count;\n\t\t                        }\n\t\t                        return content.length ? content.join('') : ['', 'TK_EOF'];\n\t\t                    }\n\t\t\n\t\t                    input_char = this.input.charAt(this.pos);\n\t\t                    this.pos++;\n\t\t\n\t\t                    if (this.Utils.in_array(input_char, this.Utils.whitespace)) { //don't want to insert unnecessary space\n\t\t                        space = true;\n\t\t                        continue;\n\t\t                    }\n\t\t\n\t\t                    if (input_char === \"'\" || input_char === '\"') {\n\t\t                        input_char += this.get_unformatted(input_char);\n\t\t                        space = true;\n\t\t\n\t\t                    }\n\t\t\n\t\t                    if (input_char === '=') { //no space before =\n\t\t                        space = false;\n\t\t                    }\n\t\t\n\t\t                    if (content.length && content[content.length - 1] !== '=' && input_char !== '>' && space) {\n\t\t                        //no space after = or before >\n\t\t                        var wrapped = this.space_or_wrap(content);\n\t\t                        var indentAttrs = wrapped && input_char !== '/' && wrap_attributes !== 'force';\n\t\t                        space = false;\n\t\t                        if (!first_attr && wrap_attributes === 'force' && input_char !== '/') {\n\t\t                            this.print_newline(false, content);\n\t\t                            this.print_indentation(content);\n\t\t                            indentAttrs = true;\n\t\t                        }\n\t\t                        if (indentAttrs) {\n\t\t                            //indent attributes an auto or forced line-wrap\n\t\t                            for (var count = 0; count < wrap_attributes_indent_size; count++) {\n\t\t                                content.push(indent_character);\n\t\t                            }\n\t\t                        }\n\t\t                        for (var i = 0; i < content.length; i++) {\n\t\t                            if (content[i] === ' ') {\n\t\t                                first_attr = false;\n\t\t                                break;\n\t\t                            }\n\t\t                        }\n\t\t                    }\n\t\t\n\t\t                    if (indent_handlebars && tag_start_char === '<') {\n\t\t                        // When inside an angle-bracket tag, put spaces around\n\t\t                        // handlebars not inside of strings.\n\t\t                        if ((input_char + this.input.charAt(this.pos)) === '{{') {\n\t\t                            input_char += this.get_unformatted('}}');\n\t\t                            if (content.length && content[content.length - 1] !== ' ' && content[content.length - 1] !== '<') {\n\t\t                                input_char = ' ' + input_char;\n\t\t                            }\n\t\t                            space = true;\n\t\t                        }\n\t\t                    }\n\t\t\n\t\t                    if (input_char === '<' && !tag_start_char) {\n\t\t                        tag_start = this.pos - 1;\n\t\t                        tag_start_char = '<';\n\t\t                    }\n\t\t\n\t\t                    if (indent_handlebars && !tag_start_char) {\n\t\t                        if (content.length >= 2 && content[content.length - 1] === '{' && content[content.length - 2] === '{') {\n\t\t                            if (input_char === '#' || input_char === '/' || input_char === '!') {\n\t\t                                tag_start = this.pos - 3;\n\t\t                            } else {\n\t\t                                tag_start = this.pos - 2;\n\t\t                            }\n\t\t                            tag_start_char = '{';\n\t\t                        }\n\t\t                    }\n\t\t\n\t\t                    this.line_char_count++;\n\t\t                    content.push(input_char); //inserts character at-a-time (or string)\n\t\t\n\t\t                    if (content[1] && (content[1] === '!' || content[1] === '?' || content[1] === '%')) { //if we're in a comment, do something special\n\t\t                        // We treat all comments as literals, even more than preformatted tags\n\t\t                        // we just look for the appropriate close tag\n\t\t                        content = [this.get_comment(tag_start)];\n\t\t                        break;\n\t\t                    }\n\t\t\n\t\t                    if (indent_handlebars && content[1] && content[1] === '{' && content[2] && content[2] === '!') { //if we're in a comment, do something special\n\t\t                        // We treat all comments as literals, even more than preformatted tags\n\t\t                        // we just look for the appropriate close tag\n\t\t                        content = [this.get_comment(tag_start)];\n\t\t                        break;\n\t\t                    }\n\t\t\n\t\t                    if (indent_handlebars && tag_start_char === '{' && content.length > 2 && content[content.length - 2] === '}' && content[content.length - 1] === '}') {\n\t\t                        break;\n\t\t                    }\n\t\t                } while (input_char !== '>');\n\t\t\n\t\t                var tag_complete = content.join('');\n\t\t                var tag_index;\n\t\t                var tag_offset;\n\t\t\n\t\t                if (tag_complete.indexOf(' ') !== -1) { //if there's whitespace, thats where the tag name ends\n\t\t                    tag_index = tag_complete.indexOf(' ');\n\t\t                } else if (tag_complete.charAt(0) === '{') {\n\t\t                    tag_index = tag_complete.indexOf('}');\n\t\t                } else { //otherwise go with the tag ending\n\t\t                    tag_index = tag_complete.indexOf('>');\n\t\t                }\n\t\t                if (tag_complete.charAt(0) === '<' || !indent_handlebars) {\n\t\t                    tag_offset = 1;\n\t\t                } else {\n\t\t                    tag_offset = tag_complete.charAt(2) === '#' ? 3 : 2;\n\t\t                }\n\t\t                var tag_check = tag_complete.substring(tag_offset, tag_index).toLowerCase();\n\t\t                if (tag_complete.charAt(tag_complete.length - 2) === '/' ||\n\t\t                    this.Utils.in_array(tag_check, this.Utils.single_token)) { //if this tag name is a single tag type (either in the list or has a closing /)\n\t\t                    if (!peek) {\n\t\t                        this.tag_type = 'SINGLE';\n\t\t                    }\n\t\t                } else if (indent_handlebars && tag_complete.charAt(0) === '{' && tag_check === 'else') {\n\t\t                    if (!peek) {\n\t\t                        this.indent_to_tag('if');\n\t\t                        this.tag_type = 'HANDLEBARS_ELSE';\n\t\t                        this.indent_content = true;\n\t\t                        this.traverse_whitespace();\n\t\t                    }\n\t\t                } else if (this.is_unformatted(tag_check, unformatted)) { // do not reformat the \"unformatted\" tags\n\t\t                    comment = this.get_unformatted('</' + tag_check + '>', tag_complete); //...delegate to get_unformatted function\n\t\t                    content.push(comment);\n\t\t                    tag_end = this.pos - 1;\n\t\t                    this.tag_type = 'SINGLE';\n\t\t                } else if (tag_check === 'script' &&\n\t\t                    (tag_complete.search('type') === -1 ||\n\t\t                        (tag_complete.search('type') > -1 &&\n\t\t                            tag_complete.search(/\\b(text|application|dojo)\\/(x-)?(javascript|ecmascript|jscript|livescript|(ld\\+)?json|method|aspect)/) > -1))) {\n\t\t                    if (!peek) {\n\t\t                        this.record_tag(tag_check);\n\t\t                        this.tag_type = 'SCRIPT';\n\t\t                    }\n\t\t                } else if (tag_check === 'style' &&\n\t\t                    (tag_complete.search('type') === -1 ||\n\t\t                        (tag_complete.search('type') > -1 && tag_complete.search('text/css') > -1))) {\n\t\t                    if (!peek) {\n\t\t                        this.record_tag(tag_check);\n\t\t                        this.tag_type = 'STYLE';\n\t\t                    }\n\t\t                } else if (tag_check.charAt(0) === '!') { //peek for <! comment\n\t\t                    // for comments content is already correct.\n\t\t                    if (!peek) {\n\t\t                        this.tag_type = 'SINGLE';\n\t\t                        this.traverse_whitespace();\n\t\t                    }\n\t\t                } else if (!peek) {\n\t\t                    if (tag_check.charAt(0) === '/') { //this tag is a double tag so check for tag-ending\n\t\t                        this.retrieve_tag(tag_check.substring(1)); //remove it and all ancestors\n\t\t                        this.tag_type = 'END';\n\t\t                    } else { //otherwise it's a start-tag\n\t\t                        this.record_tag(tag_check); //push it on the tag stack\n\t\t                        if (tag_check.toLowerCase() !== 'html') {\n\t\t                            this.indent_content = true;\n\t\t                        }\n\t\t                        this.tag_type = 'START';\n\t\t                    }\n\t\t\n\t\t                    // Allow preserving of newlines after a start or end tag\n\t\t                    if (this.traverse_whitespace()) {\n\t\t                        this.space_or_wrap(content);\n\t\t                    }\n\t\t\n\t\t                    if (this.Utils.in_array(tag_check, this.Utils.extra_liners)) { //check if this double needs an extra line\n\t\t                        this.print_newline(false, this.output);\n\t\t                        if (this.output.length && this.output[this.output.length - 2] !== '\\n') {\n\t\t                            this.print_newline(true, this.output);\n\t\t                        }\n\t\t                    }\n\t\t                }\n\t\t\n\t\t                if (peek) {\n\t\t                    this.pos = orig_pos;\n\t\t                    this.line_char_count = orig_line_char_count;\n\t\t                }\n\t\t\n\t\t                return content.join(''); //returns fully formatted tag\n\t\t            };\n\t\t\n\t\t            this.get_comment = function(start_pos) { //function to return comment content in its entirety\n\t\t                // this is will have very poor perf, but will work for now.\n\t\t                var comment = '',\n\t\t                    delimiter = '>',\n\t\t                    matched = false;\n\t\t\n\t\t                this.pos = start_pos;\n\t\t                var input_char = this.input.charAt(this.pos);\n\t\t                this.pos++;\n\t\t\n\t\t                while (this.pos <= this.input.length) {\n\t\t                    comment += input_char;\n\t\t\n\t\t                    // only need to check for the delimiter if the last chars match\n\t\t                    if (comment.charAt(comment.length - 1) === delimiter.charAt(delimiter.length - 1) &&\n\t\t                        comment.indexOf(delimiter) !== -1) {\n\t\t                        break;\n\t\t                    }\n\t\t\n\t\t                    // only need to search for custom delimiter for the first few characters\n\t\t                    if (!matched && comment.length < 10) {\n\t\t                        if (comment.indexOf('<![if') === 0) { //peek for <![if conditional comment\n\t\t                            delimiter = '<![endif]>';\n\t\t                            matched = true;\n\t\t                        } else if (comment.indexOf('<![cdata[') === 0) { //if it's a <[cdata[ comment...\n\t\t                            delimiter = ']]>';\n\t\t                            matched = true;\n\t\t                        } else if (comment.indexOf('<![') === 0) { // some other ![ comment? ...\n\t\t                            delimiter = ']>';\n\t\t                            matched = true;\n\t\t                        } else if (comment.indexOf('<!--') === 0) { // <!-- comment ...\n\t\t                            delimiter = '-->';\n\t\t                            matched = true;\n\t\t                        } else if (comment.indexOf('{{!') === 0) { // {{! handlebars comment\n\t\t                            delimiter = '}}';\n\t\t                            matched = true;\n\t\t                        } else if (comment.indexOf('<?') === 0) { // {{! handlebars comment\n\t\t                            delimiter = '?>';\n\t\t                            matched = true;\n\t\t                        } else if (comment.indexOf('<%') === 0) { // {{! handlebars comment\n\t\t                            delimiter = '%>';\n\t\t                            matched = true;\n\t\t                        }\n\t\t                    }\n\t\t\n\t\t                    input_char = this.input.charAt(this.pos);\n\t\t                    this.pos++;\n\t\t                }\n\t\t\n\t\t                return comment;\n\t\t            };\n\t\t\n\t\t            function tokenMatcher(delimiter) {\n\t\t                var token = '';\n\t\t\n\t\t                var add = function(str) {\n\t\t                    var newToken = token + str.toLowerCase();\n\t\t                    token = newToken.length <= delimiter.length ? newToken : newToken.substr(newToken.length - delimiter.length, delimiter.length);\n\t\t                };\n\t\t\n\t\t                var doesNotMatch = function() {\n\t\t                    return token.indexOf(delimiter) === -1;\n\t\t                };\n\t\t\n\t\t                return {\n\t\t                    add: add,\n\t\t                    doesNotMatch: doesNotMatch\n\t\t                };\n\t\t            }\n\t\t\n\t\t            this.get_unformatted = function(delimiter, orig_tag) { //function to return unformatted content in its entirety\n\t\t                if (orig_tag && orig_tag.toLowerCase().indexOf(delimiter) !== -1) {\n\t\t                    return '';\n\t\t                }\n\t\t                var input_char = '';\n\t\t                var content = '';\n\t\t                var space = true;\n\t\t\n\t\t                var delimiterMatcher = tokenMatcher(delimiter);\n\t\t\n\t\t                do {\n\t\t\n\t\t                    if (this.pos >= this.input.length) {\n\t\t                        return content;\n\t\t                    }\n\t\t\n\t\t                    input_char = this.input.charAt(this.pos);\n\t\t                    this.pos++;\n\t\t\n\t\t                    if (this.Utils.in_array(input_char, this.Utils.whitespace)) {\n\t\t                        if (!space) {\n\t\t                            this.line_char_count--;\n\t\t                            continue;\n\t\t                        }\n\t\t                        if (input_char === '\\n' || input_char === '\\r') {\n\t\t                            content += '\\n';\n\t\t                            /*  Don't change tab indention for unformatted blocks.  If using code for html editing, this will greatly affect <pre> tags if they are specified in the 'unformatted array'\n\t\t                for (var i=0; i<this.indent_level; i++) {\n\t\t                  content += this.indent_string;\n\t\t                }\n\t\t                space = false; //...and make sure other indentation is erased\n\t\t                */\n\t\t                            this.line_char_count = 0;\n\t\t                            continue;\n\t\t                        }\n\t\t                    }\n\t\t                    content += input_char;\n\t\t                    delimiterMatcher.add(input_char);\n\t\t                    this.line_char_count++;\n\t\t                    space = true;\n\t\t\n\t\t                    if (indent_handlebars && input_char === '{' && content.length && content.charAt(content.length - 2) === '{') {\n\t\t                        // Handlebars expressions in strings should also be unformatted.\n\t\t                        content += this.get_unformatted('}}');\n\t\t                        // Don't consider when stopping for delimiters.\n\t\t                    }\n\t\t                } while (delimiterMatcher.doesNotMatch());\n\t\t\n\t\t                return content;\n\t\t            };\n\t\t\n\t\t            this.get_token = function() { //initial handler for token-retrieval\n\t\t                var token;\n\t\t\n\t\t                if (this.last_token === 'TK_TAG_SCRIPT' || this.last_token === 'TK_TAG_STYLE') { //check if we need to format javascript\n\t\t                    var type = this.last_token.substr(7);\n\t\t                    token = this.get_contents_to(type);\n\t\t                    if (typeof token !== 'string') {\n\t\t                        return token;\n\t\t                    }\n\t\t                    return [token, 'TK_' + type];\n\t\t                }\n\t\t                if (this.current_mode === 'CONTENT') {\n\t\t                    token = this.get_content();\n\t\t                    if (typeof token !== 'string') {\n\t\t                        return token;\n\t\t                    } else {\n\t\t                        return [token, 'TK_CONTENT'];\n\t\t                    }\n\t\t                }\n\t\t\n\t\t                if (this.current_mode === 'TAG') {\n\t\t                    token = this.get_tag();\n\t\t                    if (typeof token !== 'string') {\n\t\t                        return token;\n\t\t                    } else {\n\t\t                        var tag_name_type = 'TK_TAG_' + this.tag_type;\n\t\t                        return [token, tag_name_type];\n\t\t                    }\n\t\t                }\n\t\t            };\n\t\t\n\t\t            this.get_full_indent = function(level) {\n\t\t                level = this.indent_level + level || 0;\n\t\t                if (level < 1) {\n\t\t                    return '';\n\t\t                }\n\t\t\n\t\t                return Array(level + 1).join(this.indent_string);\n\t\t            };\n\t\t\n\t\t            this.is_unformatted = function(tag_check, unformatted) {\n\t\t                //is this an HTML5 block-level link?\n\t\t                if (!this.Utils.in_array(tag_check, unformatted)) {\n\t\t                    return false;\n\t\t                }\n\t\t\n\t\t                if (tag_check.toLowerCase() !== 'a' || !this.Utils.in_array('a', unformatted)) {\n\t\t                    return true;\n\t\t                }\n\t\t\n\t\t                //at this point we have an  tag; is its first child something we want to remain\n\t\t                //unformatted?\n\t\t                var next_tag = this.get_tag(true /* peek. */ );\n\t\t\n\t\t                // test next_tag to see if it is just html tag (no external content)\n\t\t                var tag = (next_tag || \"\").match(/^\\s*<\\s*\\/?([a-z]*)\\s*[^>]*>\\s*$/);\n\t\t\n\t\t                // if next_tag comes back but is not an isolated tag, then\n\t\t                // let's treat the 'a' tag as having content\n\t\t                // and respect the unformatted option\n\t\t                if (!tag || this.Utils.in_array(tag, unformatted)) {\n\t\t                    return true;\n\t\t                } else {\n\t\t                    return false;\n\t\t                }\n\t\t            };\n\t\t\n\t\t            this.printer = function(js_source, indent_character, indent_size, wrap_line_length, brace_style) { //handles input/output and some other printing functions\n\t\t\n\t\t                this.input = js_source || ''; //gets the input for the Parser\n\t\t\n\t\t                // HACK: newline parsing inconsistent. This brute force normalizes the input.\n\t\t                this.input = this.input.replace(/\\r\\n|[\\r\\u2028\\u2029]/g, '\\n');\n\t\t\n\t\t                this.output = [];\n\t\t                this.indent_character = indent_character;\n\t\t                this.indent_string = '';\n\t\t                this.indent_size = indent_size;\n\t\t                this.brace_style = brace_style;\n\t\t                this.indent_level = 0;\n\t\t                this.wrap_line_length = wrap_line_length;\n\t\t                this.line_char_count = 0; //count to see if wrap_line_length was exceeded\n\t\t\n\t\t                for (var i = 0; i < this.indent_size; i++) {\n\t\t                    this.indent_string += this.indent_character;\n\t\t                }\n\t\t\n\t\t                this.print_newline = function(force, arr) {\n\t\t                    this.line_char_count = 0;\n\t\t                    if (!arr || !arr.length) {\n\t\t                        return;\n\t\t                    }\n\t\t                    if (force || (arr[arr.length - 1] !== '\\n')) { //we might want the extra line\n\t\t                        if ((arr[arr.length - 1] !== '\\n')) {\n\t\t                            arr[arr.length - 1] = rtrim(arr[arr.length - 1]);\n\t\t                        }\n\t\t                        arr.push('\\n');\n\t\t                    }\n\t\t                };\n\t\t\n\t\t                this.print_indentation = function(arr) {\n\t\t                    for (var i = 0; i < this.indent_level; i++) {\n\t\t                        arr.push(this.indent_string);\n\t\t                        this.line_char_count += this.indent_string.length;\n\t\t                    }\n\t\t                };\n\t\t\n\t\t                this.print_token = function(text) {\n\t\t                    // Avoid printing initial whitespace.\n\t\t                    if (this.is_whitespace(text) && !this.output.length) {\n\t\t                        return;\n\t\t                    }\n\t\t                    if (text || text !== '') {\n\t\t                        if (this.output.length && this.output[this.output.length - 1] === '\\n') {\n\t\t                            this.print_indentation(this.output);\n\t\t                            text = ltrim(text);\n\t\t                        }\n\t\t                    }\n\t\t                    this.print_token_raw(text);\n\t\t                };\n\t\t\n\t\t                this.print_token_raw = function(text) {\n\t\t                    // If we are going to print newlines, truncate trailing\n\t\t                    // whitespace, as the newlines will represent the space.\n\t\t                    if (this.newlines > 0) {\n\t\t                        text = rtrim(text);\n\t\t                    }\n\t\t\n\t\t                    if (text && text !== '') {\n\t\t                        if (text.length > 1 && text.charAt(text.length - 1) === '\\n') {\n\t\t                            // unformatted tags can grab newlines as their last character\n\t\t                            this.output.push(text.slice(0, -1));\n\t\t                            this.print_newline(false, this.output);\n\t\t                        } else {\n\t\t                            this.output.push(text);\n\t\t                        }\n\t\t                    }\n\t\t\n\t\t                    for (var n = 0; n < this.newlines; n++) {\n\t\t                        this.print_newline(n > 0, this.output);\n\t\t                    }\n\t\t                    this.newlines = 0;\n\t\t                };\n\t\t\n\t\t                this.indent = function() {\n\t\t                    this.indent_level++;\n\t\t                };\n\t\t\n\t\t                this.unindent = function() {\n\t\t                    if (this.indent_level > 0) {\n\t\t                        this.indent_level--;\n\t\t                    }\n\t\t                };\n\t\t            };\n\t\t            return this;\n\t\t        }\n\t\t\n\t\t        /*_____________________--------------------_____________________*/\n\t\t\n\t\t        multi_parser = new Parser(); //wrapping functions Parser\n\t\t        multi_parser.printer(html_source, indent_character, indent_size, wrap_line_length, brace_style); //initialize starting values\n\t\t\n\t\t        while (true) {\n\t\t            var t = multi_parser.get_token();\n\t\t            multi_parser.token_text = t[0];\n\t\t            multi_parser.token_type = t[1];\n\t\t\n\t\t            if (multi_parser.token_type === 'TK_EOF') {\n\t\t                break;\n\t\t            }\n\t\t\n\t\t            switch (multi_parser.token_type) {\n\t\t                case 'TK_TAG_START':\n\t\t                    multi_parser.print_newline(false, multi_parser.output);\n\t\t                    multi_parser.print_token(multi_parser.token_text);\n\t\t                    if (multi_parser.indent_content) {\n\t\t                        if ((multi_parser.indent_body_inner_html || !multi_parser.token_text.match(/<body(?:.*)>/)) &&\n\t\t                            (multi_parser.indent_head_inner_html || !multi_parser.token_text.match(/<head(?:.*)>/))) {\n\t\t\n\t\t                            multi_parser.indent();\n\t\t                        }\n\t\t\n\t\t                        multi_parser.indent_content = false;\n\t\t                    }\n\t\t                    multi_parser.current_mode = 'CONTENT';\n\t\t                    break;\n\t\t                case 'TK_TAG_STYLE':\n\t\t                case 'TK_TAG_SCRIPT':\n\t\t                    multi_parser.print_newline(false, multi_parser.output);\n\t\t                    multi_parser.print_token(multi_parser.token_text);\n\t\t                    multi_parser.current_mode = 'CONTENT';\n\t\t                    break;\n\t\t                case 'TK_TAG_END':\n\t\t                    //Print new line only if the tag has no content and has child\n\t\t                    if (multi_parser.last_token === 'TK_CONTENT' && multi_parser.last_text === '') {\n\t\t                        var tag_name = (multi_parser.token_text.match(/\\w+/) || [])[0];\n\t\t                        var tag_extracted_from_last_output = null;\n\t\t                        if (multi_parser.output.length) {\n\t\t                            tag_extracted_from_last_output = multi_parser.output[multi_parser.output.length - 1].match(/(?:<|{{#)\\s*(\\w+)/);\n\t\t                        }\n\t\t                        if (tag_extracted_from_last_output === null ||\n\t\t                            (tag_extracted_from_last_output[1] !== tag_name && !multi_parser.Utils.in_array(tag_extracted_from_last_output[1], unformatted))) {\n\t\t                            multi_parser.print_newline(false, multi_parser.output);\n\t\t                        }\n\t\t                    }\n\t\t                    multi_parser.print_token(multi_parser.token_text);\n\t\t                    multi_parser.current_mode = 'CONTENT';\n\t\t                    break;\n\t\t                case 'TK_TAG_SINGLE':\n\t\t                    // Don't add a newline before elements that should remain unformatted.\n\t\t                    var tag_check = multi_parser.token_text.match(/^\\s*<([a-z-]+)/i);\n\t\t                    if (!tag_check || !multi_parser.Utils.in_array(tag_check[1], unformatted)) {\n\t\t                        multi_parser.print_newline(false, multi_parser.output);\n\t\t                    }\n\t\t                    multi_parser.print_token(multi_parser.token_text);\n\t\t                    multi_parser.current_mode = 'CONTENT';\n\t\t                    break;\n\t\t                case 'TK_TAG_HANDLEBARS_ELSE':\n\t\t                    // Don't add a newline if opening {{#if}} tag is on the current line\n\t\t                    var foundIfOnCurrentLine = false;\n\t\t                    for (var lastCheckedOutput = multi_parser.output.length - 1; lastCheckedOutput >= 0; lastCheckedOutput--) {\n\t\t                        if (multi_parser.output[lastCheckedOutput] === '\\n') {\n\t\t                            break;\n\t\t                        } else {\n\t\t                            if (multi_parser.output[lastCheckedOutput].match(/{{#if/)) {\n\t\t                                foundIfOnCurrentLine = true;\n\t\t                                break;\n\t\t                            }\n\t\t                        }\n\t\t                    }\n\t\t                    if (!foundIfOnCurrentLine) {\n\t\t                        multi_parser.print_newline(false, multi_parser.output);\n\t\t                    }\n\t\t                    multi_parser.print_token(multi_parser.token_text);\n\t\t                    if (multi_parser.indent_content) {\n\t\t                        multi_parser.indent();\n\t\t                        multi_parser.indent_content = false;\n\t\t                    }\n\t\t                    multi_parser.current_mode = 'CONTENT';\n\t\t                    break;\n\t\t                case 'TK_TAG_HANDLEBARS_COMMENT':\n\t\t                    multi_parser.print_token(multi_parser.token_text);\n\t\t                    multi_parser.current_mode = 'TAG';\n\t\t                    break;\n\t\t                case 'TK_CONTENT':\n\t\t                    multi_parser.print_token(multi_parser.token_text);\n\t\t                    multi_parser.current_mode = 'TAG';\n\t\t                    break;\n\t\t                case 'TK_STYLE':\n\t\t                case 'TK_SCRIPT':\n\t\t                    if (multi_parser.token_text !== '') {\n\t\t                        multi_parser.print_newline(false, multi_parser.output);\n\t\t                        var text = multi_parser.token_text,\n\t\t                            _beautifier,\n\t\t                            script_indent_level = 1;\n\t\t                        if (multi_parser.token_type === 'TK_SCRIPT') {\n\t\t                            _beautifier = typeof js_beautify === 'function' && js_beautify;\n\t\t                        } else if (multi_parser.token_type === 'TK_STYLE') {\n\t\t                            _beautifier = typeof css_beautify === 'function' && css_beautify;\n\t\t                        }\n\t\t\n\t\t                        if (options.indent_scripts === \"keep\") {\n\t\t                            script_indent_level = 0;\n\t\t                        } else if (options.indent_scripts === \"separate\") {\n\t\t                            script_indent_level = -multi_parser.indent_level;\n\t\t                        }\n\t\t\n\t\t                        var indentation = multi_parser.get_full_indent(script_indent_level);\n\t\t                        if (_beautifier) {\n\t\t\n\t\t                            // call the Beautifier if avaliable\n\t\t                            var Child_options = function() {\n\t\t                                this.eol = '\\n';\n\t\t                            };\n\t\t                            Child_options.prototype = options;\n\t\t                            var child_options = new Child_options();\n\t\t                            text = _beautifier(text.replace(/^\\s*/, indentation), child_options);\n\t\t                        } else {\n\t\t                            // simply indent the string otherwise\n\t\t                            var white = text.match(/^\\s*/)[0];\n\t\t                            var _level = white.match(/[^\\n\\r]*$/)[0].split(multi_parser.indent_string).length - 1;\n\t\t                            var reindent = multi_parser.get_full_indent(script_indent_level - _level);\n\t\t                            text = text.replace(/^\\s*/, indentation)\n\t\t                                .replace(/\\r\\n|\\r|\\n/g, '\\n' + reindent)\n\t\t                                .replace(/\\s+$/, '');\n\t\t                        }\n\t\t                        if (text) {\n\t\t                            multi_parser.print_token_raw(text);\n\t\t                            multi_parser.print_newline(true, multi_parser.output);\n\t\t                        }\n\t\t                    }\n\t\t                    multi_parser.current_mode = 'TAG';\n\t\t                    break;\n\t\t                default:\n\t\t                    // We should not be getting here but we don't want to drop input on the floor\n\t\t                    // Just output the text and move on\n\t\t                    if (multi_parser.token_text !== '') {\n\t\t                        multi_parser.print_token(multi_parser.token_text);\n\t\t                    }\n\t\t                    break;\n\t\t            }\n\t\t            multi_parser.last_token = multi_parser.token_type;\n\t\t            multi_parser.last_text = multi_parser.token_text;\n\t\t        }\n\t\t        var sweet_code = multi_parser.output.join('').replace(/[\\r\\n\\t ]+$/, '');\n\t\t\n\t\t        // establish end_with_newline\n\t\t        if (end_with_newline) {\n\t\t            sweet_code += '\\n';\n\t\t        }\n\t\t\n\t\t        if (eol !== '\\n') {\n\t\t            sweet_code = sweet_code.replace(/[\\n]/g, eol);\n\t\t        }\n\t\t\n\t\t        return sweet_code;\n\t\t    }\n\t\t\n\t\t    if (true) {\n\t\t        // Add support for AMD ( https://github.com/amdjs/amdjs-api/wiki/AMD#defineamd-property- )\n\t\t        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, __webpack_require__(10), __webpack_require__(11)], __WEBPACK_AMD_DEFINE_RESULT__ = function(requireamd) {\n\t\t            var js_beautify = __webpack_require__(10);\n\t\t            var css_beautify = __webpack_require__(11);\n\t\t\n\t\t            return {\n\t\t                html_beautify: function(html_source, options) {\n\t\t                    return style_html(html_source, options, js_beautify.js_beautify, css_beautify.css_beautify);\n\t\t                }\n\t\t            };\n\t\t        }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\t    } else if (typeof exports !== \"undefined\") {\n\t\t        // Add support for CommonJS. Just put this file somewhere on your require.paths\n\t\t        // and you will be able to `var html_beautify = require(\"beautify\").html_beautify`.\n\t\t        var js_beautify = require('./beautify.js');\n\t\t        var css_beautify = require('./beautify-css.js');\n\t\t\n\t\t        exports.html_beautify = function(html_source, options) {\n\t\t            return style_html(html_source, options, js_beautify.js_beautify, css_beautify.css_beautify);\n\t\t        };\n\t\t    } else if (typeof window !== \"undefined\") {\n\t\t        // If we're running a web page and don't have either of the above, add our one global\n\t\t        window.html_beautify = function(html_source, options) {\n\t\t            return style_html(html_source, options, window.js_beautify, window.css_beautify);\n\t\t        };\n\t\t    } else if (typeof global !== \"undefined\") {\n\t\t        // If we don't even have window, try global.\n\t\t        global.html_beautify = function(html_source, options) {\n\t\t            return style_html(html_source, options, global.js_beautify, global.css_beautify);\n\t\t        };\n\t\t    }\n\t\t\n\t\t}());\n\t\n\t/***/ },\n\t/* 13 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(7);\n\t\tvar html_code_pipe_1 = __webpack_require__(6);\n\t\tvar javascript_code_pipe_1 = __webpack_require__(8);\n\t\tvar ng2_utils_directive_1 = __webpack_require__(14);\n\t\tvar Ng2UtilsModule = (function () {\n\t\t    function Ng2UtilsModule() {\n\t\t    }\n\t\t    return Ng2UtilsModule;\n\t\t}());\n\t\tNg2UtilsModule = __decorate([\n\t\t    core_1.NgModule({\n\t\t        declarations: [\n\t\t            html_code_pipe_1.HtmlCodePipe,\n\t\t            javascript_code_pipe_1.JavascriptCodePipe,\n\t\t            ng2_utils_directive_1.Ng2UtilsDirective\n\t\t        ],\n\t\t        exports: [\n\t\t            html_code_pipe_1.HtmlCodePipe,\n\t\t            javascript_code_pipe_1.JavascriptCodePipe,\n\t\t            ng2_utils_directive_1.Ng2UtilsDirective\n\t\t        ]\n\t\t    }),\n\t\t    __metadata(\"design:paramtypes\", [])\n\t\t], Ng2UtilsModule);\n\t\texports.Ng2UtilsModule = Ng2UtilsModule;\n\t\n\t\n\t/***/ },\n\t/* 14 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(7);\n\t\tvar Ng2UtilsDirective = (function () {\n\t\t    function Ng2UtilsDirective() {\n\t\t    }\n\t\t    return Ng2UtilsDirective;\n\t\t}()); // dummy directive to allow non-standard tags\n\t\tNg2UtilsDirective = __decorate([\n\t\t    core_1.Directive({\n\t\t        selector: 'ng2-utils-1, ng2-utils-2, ng2-utils-3, ng2-utils-4, ng2-utils-5,' +\n\t\t            'ng2-utils-6, ng2-utils-7, ng2-utils-8, ng2-utils-9, ng2-utils-10,' +\n\t\t            'ng2-utils-11, ng2-utils-12, ng2-utils-13, ng2-utils-14, ng2-utils-15,' +\n\t\t            'ng2-utils-16, ng2-utils-17, ng2-utils-18, ng2-utils-19, ng2-utils-20'\n\t\t    }),\n\t\t    __metadata(\"design:paramtypes\", [])\n\t\t], Ng2UtilsDirective);\n\t\texports.Ng2UtilsDirective = Ng2UtilsDirective;\n\t\n\t\n\t/***/ }\n\t/******/ ])\n\t});\n\t;\n\t//# sourceMappingURL=ng2-utils.umd.js.map\n\n/***/ }\n\n});\n\n\n// WEBPACK FOOTER //\n// js/app.js","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { AppModule } from './app.module';\n\n// depending on the env mode, enable prod mode or add debugging modules\nif (process.env.ENV === 'build') {\n  enableProdMode();\n}\n\nexport function main(): any {\n  return platformBrowserDynamic().bootstrapModule(AppModule);\n}\n\nif (document.readyState === 'complete') {\n  main();\n} else {\n  document.addEventListener('DOMContentLoaded', main);\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/strip-loader/lib?strip[]=debug,strip[]=console.log!./app/main.ts","import { NgModule }       from '@angular/core';\nimport { BrowserModule }  from '@angular/platform-browser';\nimport { FormsModule }    from \"@angular/forms\";\nimport { HttpModule } from \"@angular/http\";\nimport { LocationStrategy, HashLocationStrategy } from '@angular/common';\n\nimport { AppComponent }   from './app.component';\nimport { DrawerComponent } from \"./drawer.component\";\nimport { RepoInfoComponent } from \"./repo-info.component\";\nimport { HttpCache } from \"./http-cache\";\nimport { Ng2Storage } from \"./ng2-storage\";\nimport { APP_ROUTER_PROVIDERS } from './app.routes';\nimport {GettingStartedComponent} from \"./getting-started.component\";\nimport {AccordionComponent} from \"./ng2-ui-components/accordion.component\";\nimport {DatetimePickerComponent} from \"./ng2-ui-components/datetime-picker.component\";\nimport {GoogleMapComponent} from \"./ng2-ui-components/google-map.component\";\nimport {InfiniteListComponent} from \"./ng2-ui-components/infinite-list.component\";\nimport {MenuComponent} from \"./ng2-ui-components/menu.component\";\nimport {OverlayComponent} from \"./ng2-ui-components/overlay.component\";\nimport {ParallaxScrollComponent} from \"./ng2-ui-components/parallax-scroll.component\";\nimport {PopupComponent} from \"./ng2-ui-components/popup.component\";\nimport {ScrollableComponent} from \"./ng2-ui-components/scrollable.component\";\nimport {StickyComponent} from \"./ng2-ui-components/sticky.component\";\nimport {TabComponent} from \"./ng2-ui-components/tab.component\";\nimport {TooltipComponent} from \"./ng2-ui-components/tooltip.component\";\nimport {AutoCompleteComponent} from \"./ng2-ui-components/auto-complete.component\";\nimport {SortableComponent} from \"./ng2-ui-components/sortable.component\";\nimport {Ng2UIModule, Ng2MapModule} from 'ng2-ui';\nimport {Ng2UtilsModule} from 'ng2-utils';\n\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    APP_ROUTER_PROVIDERS,\n    Ng2UIModule,\n    Ng2MapModule['forRoot']({\n      apiUrl: 'https://maps.google.com/maps/api/js?key=AIzaSyCbMGRUwcqKjlYX4h4-P6t-xcDryRYLmCM' +\n      '&libraries=visualization,places,drawing',\n    }),\n    Ng2UtilsModule\n  ],\n  declarations: [\n    AppComponent,\n    DrawerComponent,\n    RepoInfoComponent,\n    GettingStartedComponent,\n    AccordionComponent,\n    AutoCompleteComponent,\n    DatetimePickerComponent,\n    GoogleMapComponent,\n    InfiniteListComponent,\n    MenuComponent,\n    OverlayComponent,\n    ParallaxScrollComponent,\n    PopupComponent,\n    ScrollableComponent,\n    StickyComponent,\n    TabComponent,\n    TooltipComponent,\n    SortableComponent\n  ],\n  providers: [\n    HttpCache,\n    Ng2Storage,\n    {provide: LocationStrategy, useClass: HashLocationStrategy}\n  ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/strip-loader/lib?strip[]=debug,strip[]=console.log!./app/app.module.ts","/**\n * @license Angular v2.3.0\n * (c) 2010-2016 Google, Inc. https://angular.io/\n * License: MIT\n */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('rxjs/operator/toPromise'), require('rxjs/Subject'), require('rxjs/Observable'), require('rxjs/observable/fromPromise')) :\n    typeof define === 'function' && define.amd ? define(['exports', '@angular/core', 'rxjs/operator/toPromise', 'rxjs/Subject', 'rxjs/Observable', 'rxjs/observable/fromPromise'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.forms = global.ng.forms || {}),global.ng.core,global.Rx.Observable.prototype,global.Rx,global.Rx,global.Rx.Observable));\n}(this, function (exports,_angular_core,rxjs_operator_toPromise,rxjs_Subject,rxjs_Observable,rxjs_observable_fromPromise) { 'use strict';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *  Base class for control directives.\n      * *\n      * Only used internally in the forms module.\n      * *\n     * @abstract\n     */\n    var AbstractControlDirective = (function () {\n        function AbstractControlDirective() {\n        }\n        Object.defineProperty(AbstractControlDirective.prototype, \"control\", {\n            /**\n             * @return {?}\n             */\n            get: function () { throw new Error('unimplemented'); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"value\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.control ? this.control.value : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"valid\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.control ? this.control.valid : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"invalid\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.control ? this.control.invalid : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"pending\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.control ? this.control.pending : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"errors\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.control ? this.control.errors : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"pristine\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.control ? this.control.pristine : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"dirty\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.control ? this.control.dirty : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"touched\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.control ? this.control.touched : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"untouched\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.control ? this.control.untouched : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"disabled\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.control ? this.control.disabled : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"enabled\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.control ? this.control.enabled : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"statusChanges\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.control ? this.control.statusChanges : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"valueChanges\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.control ? this.control.valueChanges : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"path\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @param {?=} value\n         * @return {?}\n         */\n        AbstractControlDirective.prototype.reset = function (value) {\n            if (value === void 0) { value = undefined; }\n            if (this.control)\n                this.control.reset(value);\n        };\n        /**\n         * @param {?} errorCode\n         * @param {?=} path\n         * @return {?}\n         */\n        AbstractControlDirective.prototype.hasError = function (errorCode, path) {\n            if (path === void 0) { path = null; }\n            return this.control ? this.control.hasError(errorCode, path) : false;\n        };\n        /**\n         * @param {?} errorCode\n         * @param {?=} path\n         * @return {?}\n         */\n        AbstractControlDirective.prototype.getError = function (errorCode, path) {\n            if (path === void 0) { path = null; }\n            return this.control ? this.control.getError(errorCode, path) : null;\n        };\n        return AbstractControlDirective;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$1 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     *  A directive that contains multiple {@link NgControl}s.\n      * *\n      * Only used by the forms module.\n      * *\n     */\n    var ControlContainer = (function (_super) {\n        __extends$1(ControlContainer, _super);\n        function ControlContainer() {\n            _super.apply(this, arguments);\n        }\n        Object.defineProperty(ControlContainer.prototype, \"formDirective\", {\n            /**\n             *  Get the form to which this container belongs.\n             * @return {?}\n             */\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ControlContainer.prototype, \"path\", {\n            /**\n             *  Get the path to this container.\n             * @return {?}\n             */\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        return ControlContainer;\n    }(AbstractControlDirective));\n\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function isPresent(obj) {\n        return obj != null;\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function isBlank(obj) {\n        return obj == null;\n    }\n    /**\n     * @param {?} a\n     * @param {?} b\n     * @return {?}\n     */\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    /**\n     * @param {?} o\n     * @return {?}\n     */\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function isPrimitive(obj) {\n        return !isJsObject(obj);\n    }\n\n    /**\n     *  Wraps Javascript Objects\n     */\n    var StringMapWrapper = (function () {\n        function StringMapWrapper() {\n        }\n        /**\n         * @param {?} m1\n         * @param {?} m2\n         * @return {?}\n         */\n        StringMapWrapper.merge = function (m1, m2) {\n            var /** @type {?} */ m = {};\n            for (var _i = 0, _a = Object.keys(m1); _i < _a.length; _i++) {\n                var k = _a[_i];\n                m[k] = m1[k];\n            }\n            for (var _b = 0, _c = Object.keys(m2); _b < _c.length; _b++) {\n                var k = _c[_b];\n                m[k] = m2[k];\n            }\n            return m;\n        };\n        /**\n         * @param {?} m1\n         * @param {?} m2\n         * @return {?}\n         */\n        StringMapWrapper.equals = function (m1, m2) {\n            var /** @type {?} */ k1 = Object.keys(m1);\n            var /** @type {?} */ k2 = Object.keys(m2);\n            if (k1.length != k2.length) {\n                return false;\n            }\n            for (var /** @type {?} */ i = 0; i < k1.length; i++) {\n                var /** @type {?} */ key = k1[i];\n                if (m1[key] !== m2[key]) {\n                    return false;\n                }\n            }\n            return true;\n        };\n        return StringMapWrapper;\n    }());\n    var ListWrapper = (function () {\n        function ListWrapper() {\n        }\n        /**\n         * @param {?} arr\n         * @param {?} condition\n         * @return {?}\n         */\n        ListWrapper.findLast = function (arr, condition) {\n            for (var /** @type {?} */ i = arr.length - 1; i >= 0; i--) {\n                if (condition(arr[i])) {\n                    return arr[i];\n                }\n            }\n            return null;\n        };\n        /**\n         * @param {?} list\n         * @param {?} items\n         * @return {?}\n         */\n        ListWrapper.removeAll = function (list, items) {\n            for (var /** @type {?} */ i = 0; i < items.length; ++i) {\n                var /** @type {?} */ index = list.indexOf(items[i]);\n                if (index > -1) {\n                    list.splice(index, 1);\n                }\n            }\n        };\n        /**\n         * @param {?} list\n         * @param {?} el\n         * @return {?}\n         */\n        ListWrapper.remove = function (list, el) {\n            var /** @type {?} */ index = list.indexOf(el);\n            if (index > -1) {\n                list.splice(index, 1);\n                return true;\n            }\n            return false;\n        };\n        /**\n         * @param {?} a\n         * @param {?} b\n         * @return {?}\n         */\n        ListWrapper.equals = function (a, b) {\n            if (a.length != b.length)\n                return false;\n            for (var /** @type {?} */ i = 0; i < a.length; ++i) {\n                if (a[i] !== b[i])\n                    return false;\n            }\n            return true;\n        };\n        /**\n         * @param {?} list\n         * @return {?}\n         */\n        ListWrapper.flatten = function (list) {\n            return list.reduce(function (flat, item) {\n                var /** @type {?} */ flatItem = Array.isArray(item) ? ListWrapper.flatten(item) : item;\n                return ((flat)).concat(flatItem);\n            }, []);\n        };\n        return ListWrapper;\n    }());\n\n    var /** @type {?} */ isPromise = _angular_core.__core_private__.isPromise;\n\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    function isEmptyInputValue(value) {\n        return value == null || typeof value === 'string' && value.length === 0;\n    }\n    /**\n     * Providers for validators to be used for {@link FormControl}s in a form.\n     *\n     * Provide this using `multi: true` to add validators.\n     *\n     * ### Example\n     *\n     * {@example core/forms/ts/ng_validators/ng_validators.ts region='ng_validators'}\n     * @stable\n     */\n    var /** @type {?} */ NG_VALIDATORS = new _angular_core.OpaqueToken('NgValidators');\n    /**\n     * Providers for asynchronous validators to be used for {@link FormControl}s\n     * in a form.\n     *\n     * Provide this using `multi: true` to add validators.\n     *\n     * See {@link NG_VALIDATORS} for more details.\n     *\n     * @stable\n     */\n    var /** @type {?} */ NG_ASYNC_VALIDATORS = new _angular_core.OpaqueToken('NgAsyncValidators');\n    /**\n     *  Provides a set of validators used by form controls.\n      * *\n      * A validator is a function that processes a {@link FormControl} or collection of\n      * controls and returns a map of errors. A null map means that validation has passed.\n      * *\n      * ### Example\n      * *\n      * ```typescript\n      * var loginControl = new FormControl(\"\", Validators.required)\n      * ```\n      * *\n     */\n    var Validators = (function () {\n        function Validators() {\n        }\n        /**\n         *  Validator that requires controls to have a non-empty value.\n         * @param {?} control\n         * @return {?}\n         */\n        Validators.required = function (control) {\n            return isEmptyInputValue(control.value) ? { 'required': true } : null;\n        };\n        /**\n         *  Validator that requires controls to have a value of a minimum length.\n         * @param {?} minLength\n         * @return {?}\n         */\n        Validators.minLength = function (minLength) {\n            return function (control) {\n                if (isEmptyInputValue(control.value)) {\n                    return null; // don't validate empty values to allow optional controls\n                }\n                var /** @type {?} */ length = typeof control.value === 'string' ? control.value.length : 0;\n                return length < minLength ?\n                    { 'minlength': { 'requiredLength': minLength, 'actualLength': length } } :\n                    null;\n            };\n        };\n        /**\n         *  Validator that requires controls to have a value of a maximum length.\n         * @param {?} maxLength\n         * @return {?}\n         */\n        Validators.maxLength = function (maxLength) {\n            return function (control) {\n                var /** @type {?} */ length = typeof control.value === 'string' ? control.value.length : 0;\n                return length > maxLength ?\n                    { 'maxlength': { 'requiredLength': maxLength, 'actualLength': length } } :\n                    null;\n            };\n        };\n        /**\n         *  Validator that requires a control to match a regex to its value.\n         * @param {?} pattern\n         * @return {?}\n         */\n        Validators.pattern = function (pattern) {\n            if (!pattern)\n                return Validators.nullValidator;\n            var /** @type {?} */ regex;\n            var /** @type {?} */ regexStr;\n            if (typeof pattern === 'string') {\n                regexStr = \"^\" + pattern + \"$\";\n                regex = new RegExp(regexStr);\n            }\n            else {\n                regexStr = pattern.toString();\n                regex = pattern;\n            }\n            return function (control) {\n                if (isEmptyInputValue(control.value)) {\n                    return null; // don't validate empty values to allow optional controls\n                }\n                var /** @type {?} */ value = control.value;\n                return regex.test(value) ? null :\n                    { 'pattern': { 'requiredPattern': regexStr, 'actualValue': value } };\n            };\n        };\n        /**\n         *  No-op validator.\n         * @param {?} c\n         * @return {?}\n         */\n        Validators.nullValidator = function (c) { return null; };\n        /**\n         *  Compose multiple validators into a single function that returns the union\n          * of the individual error maps.\n         * @param {?} validators\n         * @return {?}\n         */\n        Validators.compose = function (validators) {\n            if (!validators)\n                return null;\n            var /** @type {?} */ presentValidators = validators.filter(isPresent);\n            if (presentValidators.length == 0)\n                return null;\n            return function (control) {\n                return _mergeErrors(_executeValidators(control, presentValidators));\n            };\n        };\n        /**\n         * @param {?} validators\n         * @return {?}\n         */\n        Validators.composeAsync = function (validators) {\n            if (!validators)\n                return null;\n            var /** @type {?} */ presentValidators = validators.filter(isPresent);\n            if (presentValidators.length == 0)\n                return null;\n            return function (control) {\n                var /** @type {?} */ promises = _executeAsyncValidators(control, presentValidators).map(_convertToPromise);\n                return Promise.all(promises).then(_mergeErrors);\n            };\n        };\n        return Validators;\n    }());\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function _convertToPromise(obj) {\n        return isPromise(obj) ? obj : rxjs_operator_toPromise.toPromise.call(obj);\n    }\n    /**\n     * @param {?} control\n     * @param {?} validators\n     * @return {?}\n     */\n    function _executeValidators(control, validators) {\n        return validators.map(function (v) { return v(control); });\n    }\n    /**\n     * @param {?} control\n     * @param {?} validators\n     * @return {?}\n     */\n    function _executeAsyncValidators(control, validators) {\n        return validators.map(function (v) { return v(control); });\n    }\n    /**\n     * @param {?} arrayOfErrors\n     * @return {?}\n     */\n    function _mergeErrors(arrayOfErrors) {\n        var /** @type {?} */ res = arrayOfErrors.reduce(function (res, errors) {\n            return isPresent(errors) ? StringMapWrapper.merge(res, errors) : res;\n        }, {});\n        return Object.keys(res).length === 0 ? null : res;\n    }\n\n    /**\n     * Used to provide a {@link ControlValueAccessor} for form controls.\n     *\n     * See {@link DefaultValueAccessor} for how to implement one.\n     * @stable\n     */\n    var /** @type {?} */ NG_VALUE_ACCESSOR = new _angular_core.OpaqueToken('NgValueAccessor');\n\n    var /** @type {?} */ CHECKBOX_VALUE_ACCESSOR = {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: _angular_core.forwardRef(function () { return CheckboxControlValueAccessor; }),\n        multi: true,\n    };\n    /**\n     *  The accessor for writing a value and listening to changes on a checkbox input element.\n      * *\n      * ### Example\n      * ```\n      * <input type=\"checkbox\" name=\"rememberLogin\" ngModel>\n      * ```\n      * *\n      * @stable\n     */\n    var CheckboxControlValueAccessor = (function () {\n        /**\n         * @param {?} _renderer\n         * @param {?} _elementRef\n         */\n        function CheckboxControlValueAccessor(_renderer, _elementRef) {\n            this._renderer = _renderer;\n            this._elementRef = _elementRef;\n            this.onChange = function (_) { };\n            this.onTouched = function () { };\n        }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        CheckboxControlValueAccessor.prototype.writeValue = function (value) {\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'checked', value);\n        };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        CheckboxControlValueAccessor.prototype.registerOnChange = function (fn) { this.onChange = fn; };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        CheckboxControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n        /**\n         * @param {?} isDisabled\n         * @return {?}\n         */\n        CheckboxControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n        };\n        CheckboxControlValueAccessor.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: 'input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]',\n                        host: { '(change)': 'onChange($event.target.checked)', '(blur)': 'onTouched()' },\n                        providers: [CHECKBOX_VALUE_ACCESSOR]\n                    },] },\n        ];\n        /** @nocollapse */\n        CheckboxControlValueAccessor.ctorParameters = function () { return [\n            { type: _angular_core.Renderer, },\n            { type: _angular_core.ElementRef, },\n        ]; };\n        return CheckboxControlValueAccessor;\n    }());\n\n    var /** @type {?} */ DEFAULT_VALUE_ACCESSOR = {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: _angular_core.forwardRef(function () { return DefaultValueAccessor; }),\n        multi: true\n    };\n    /**\n     *  The default accessor for writing a value and listening to changes that is used by the\n      * {@link NgModel}, {@link FormControlDirective}, and {@link FormControlName} directives.\n      * *\n      * ### Example\n      * ```\n      * <input type=\"text\" name=\"searchQuery\" ngModel>\n      * ```\n      * *\n      * @stable\n     */\n    var DefaultValueAccessor = (function () {\n        /**\n         * @param {?} _renderer\n         * @param {?} _elementRef\n         */\n        function DefaultValueAccessor(_renderer, _elementRef) {\n            this._renderer = _renderer;\n            this._elementRef = _elementRef;\n            this.onChange = function (_) { };\n            this.onTouched = function () { };\n        }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        DefaultValueAccessor.prototype.writeValue = function (value) {\n            var /** @type {?} */ normalizedValue = value == null ? '' : value;\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'value', normalizedValue);\n        };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        DefaultValueAccessor.prototype.registerOnChange = function (fn) { this.onChange = fn; };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        DefaultValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n        /**\n         * @param {?} isDisabled\n         * @return {?}\n         */\n        DefaultValueAccessor.prototype.setDisabledState = function (isDisabled) {\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n        };\n        DefaultValueAccessor.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: 'input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]',\n                        // TODO: vsavkin replace the above selector with the one below it once\n                        // https://github.com/angular/angular/issues/3011 is implemented\n                        // selector: '[ngControl],[ngModel],[ngFormControl]',\n                        host: { '(input)': 'onChange($event.target.value)', '(blur)': 'onTouched()' },\n                        providers: [DEFAULT_VALUE_ACCESSOR]\n                    },] },\n        ];\n        /** @nocollapse */\n        DefaultValueAccessor.ctorParameters = function () { return [\n            { type: _angular_core.Renderer, },\n            { type: _angular_core.ElementRef, },\n        ]; };\n        return DefaultValueAccessor;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @param {?} validator\n     * @return {?}\n     */\n    function normalizeValidator(validator) {\n        if (((validator)).validate) {\n            return function (c) { return ((validator)).validate(c); };\n        }\n        else {\n            return (validator);\n        }\n    }\n    /**\n     * @param {?} validator\n     * @return {?}\n     */\n    function normalizeAsyncValidator(validator) {\n        if (((validator)).validate) {\n            return function (c) { return ((validator)).validate(c); };\n        }\n        else {\n            return (validator);\n        }\n    }\n\n    var /** @type {?} */ NUMBER_VALUE_ACCESSOR = {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: _angular_core.forwardRef(function () { return NumberValueAccessor; }),\n        multi: true\n    };\n    /**\n     *  The accessor for writing a number value and listening to changes that is used by the\n      * {@link NgModel}, {@link FormControlDirective}, and {@link FormControlName} directives.\n      * *\n      * ### Example\n      * ```\n      * <input type=\"number\" [(ngModel)]=\"age\">\n      * ```\n     */\n    var NumberValueAccessor = (function () {\n        /**\n         * @param {?} _renderer\n         * @param {?} _elementRef\n         */\n        function NumberValueAccessor(_renderer, _elementRef) {\n            this._renderer = _renderer;\n            this._elementRef = _elementRef;\n            this.onChange = function (_) { };\n            this.onTouched = function () { };\n        }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        NumberValueAccessor.prototype.writeValue = function (value) {\n            // The value needs to be normalized for IE9, otherwise it is set to 'null' when null\n            var /** @type {?} */ normalizedValue = value == null ? '' : value;\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'value', normalizedValue);\n        };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        NumberValueAccessor.prototype.registerOnChange = function (fn) {\n            this.onChange = function (value) { fn(value == '' ? null : parseFloat(value)); };\n        };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        NumberValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n        /**\n         * @param {?} isDisabled\n         * @return {?}\n         */\n        NumberValueAccessor.prototype.setDisabledState = function (isDisabled) {\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n        };\n        NumberValueAccessor.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: 'input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]',\n                        host: {\n                            '(change)': 'onChange($event.target.value)',\n                            '(input)': 'onChange($event.target.value)',\n                            '(blur)': 'onTouched()'\n                        },\n                        providers: [NUMBER_VALUE_ACCESSOR]\n                    },] },\n        ];\n        /** @nocollapse */\n        NumberValueAccessor.ctorParameters = function () { return [\n            { type: _angular_core.Renderer, },\n            { type: _angular_core.ElementRef, },\n        ]; };\n        return NumberValueAccessor;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$2 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * @return {?}\n     */\n    function unimplemented() {\n        throw new Error('unimplemented');\n    }\n    /**\n     *  A base class that all control directive extend.\n      * It binds a {@link FormControl} object to a DOM element.\n      * *\n      * Used internally by Angular forms.\n      * *\n     * @abstract\n     */\n    var NgControl = (function (_super) {\n        __extends$2(NgControl, _super);\n        function NgControl() {\n            _super.apply(this, arguments);\n            /** @internal */\n            this._parent = null;\n            this.name = null;\n            this.valueAccessor = null;\n            /** @internal */\n            this._rawValidators = [];\n            /** @internal */\n            this._rawAsyncValidators = [];\n        }\n        Object.defineProperty(NgControl.prototype, \"validator\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return (unimplemented()); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgControl.prototype, \"asyncValidator\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return (unimplemented()); },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @abstract\n         * @param {?} newValue\n         * @return {?}\n         */\n        NgControl.prototype.viewToModelUpdate = function (newValue) { };\n        return NgControl;\n    }(AbstractControlDirective));\n\n    var /** @type {?} */ RADIO_VALUE_ACCESSOR = {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: _angular_core.forwardRef(function () { return RadioControlValueAccessor; }),\n        multi: true\n    };\n    /**\n     *  Internal class used by Angular to uncheck radio buttons with the matching name.\n     */\n    var RadioControlRegistry = (function () {\n        function RadioControlRegistry() {\n            this._accessors = [];\n        }\n        /**\n         * @param {?} control\n         * @param {?} accessor\n         * @return {?}\n         */\n        RadioControlRegistry.prototype.add = function (control, accessor) {\n            this._accessors.push([control, accessor]);\n        };\n        /**\n         * @param {?} accessor\n         * @return {?}\n         */\n        RadioControlRegistry.prototype.remove = function (accessor) {\n            for (var /** @type {?} */ i = this._accessors.length - 1; i >= 0; --i) {\n                if (this._accessors[i][1] === accessor) {\n                    this._accessors.splice(i, 1);\n                    return;\n                }\n            }\n        };\n        /**\n         * @param {?} accessor\n         * @return {?}\n         */\n        RadioControlRegistry.prototype.select = function (accessor) {\n            var _this = this;\n            this._accessors.forEach(function (c) {\n                if (_this._isSameGroup(c, accessor) && c[1] !== accessor) {\n                    c[1].fireUncheck(accessor.value);\n                }\n            });\n        };\n        /**\n         * @param {?} controlPair\n         * @param {?} accessor\n         * @return {?}\n         */\n        RadioControlRegistry.prototype._isSameGroup = function (controlPair, accessor) {\n            if (!controlPair[0].control)\n                return false;\n            return controlPair[0]._parent === accessor._control._parent &&\n                controlPair[1].name === accessor.name;\n        };\n        RadioControlRegistry.decorators = [\n            { type: _angular_core.Injectable },\n        ];\n        /** @nocollapse */\n        RadioControlRegistry.ctorParameters = function () { return []; };\n        return RadioControlRegistry;\n    }());\n    /**\n     *  *\n      * Used by {@link NgModel}, {@link FormControlDirective}, and {@link FormControlName}\n      * to keep the view synced with the {@link FormControl} model.\n      * *\n      * *\n      * If you have imported the {@link FormsModule} or the {@link ReactiveFormsModule}, this\n      * value accessor will be active on any radio control that has a form directive. You do\n      * **not** need to add a special selector to activate it.\n      * *\n      * ### How to use radio buttons with form directives\n      * *\n      * To use radio buttons in a template-driven form, you'll want to ensure that radio buttons\n      * in the same group have the same `name` attribute.  Radio buttons with different `name`\n      * attributes do not affect each other.\n      * *\n      * {@example forms/ts/radioButtons/radio_button_example.ts region='TemplateDriven'}\n      * *\n      * When using radio buttons in a reactive form, radio buttons in the same group should have the\n      * same `formControlName`. You can also add a `name` attribute, but it's optional.\n      * *\n      * {@example forms/ts/reactiveRadioButtons/reactive_radio_button_example.ts region='Reactive'}\n      * *\n      * * **npm package**: `@angular/forms`\n      * *\n      * @stable\n     */\n    var RadioControlValueAccessor = (function () {\n        /**\n         * @param {?} _renderer\n         * @param {?} _elementRef\n         * @param {?} _registry\n         * @param {?} _injector\n         */\n        function RadioControlValueAccessor(_renderer, _elementRef, _registry, _injector) {\n            this._renderer = _renderer;\n            this._elementRef = _elementRef;\n            this._registry = _registry;\n            this._injector = _injector;\n            this.onChange = function () { };\n            this.onTouched = function () { };\n        }\n        /**\n         * @return {?}\n         */\n        RadioControlValueAccessor.prototype.ngOnInit = function () {\n            this._control = this._injector.get(NgControl);\n            this._checkName();\n            this._registry.add(this._control, this);\n        };\n        /**\n         * @return {?}\n         */\n        RadioControlValueAccessor.prototype.ngOnDestroy = function () { this._registry.remove(this); };\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        RadioControlValueAccessor.prototype.writeValue = function (value) {\n            this._state = value === this.value;\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'checked', this._state);\n        };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        RadioControlValueAccessor.prototype.registerOnChange = function (fn) {\n            var _this = this;\n            this._fn = fn;\n            this.onChange = function () {\n                fn(_this.value);\n                _this._registry.select(_this);\n            };\n        };\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        RadioControlValueAccessor.prototype.fireUncheck = function (value) { this.writeValue(value); };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        RadioControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n        /**\n         * @param {?} isDisabled\n         * @return {?}\n         */\n        RadioControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n        };\n        /**\n         * @return {?}\n         */\n        RadioControlValueAccessor.prototype._checkName = function () {\n            if (this.name && this.formControlName && this.name !== this.formControlName) {\n                this._throwNameError();\n            }\n            if (!this.name && this.formControlName)\n                this.name = this.formControlName;\n        };\n        /**\n         * @return {?}\n         */\n        RadioControlValueAccessor.prototype._throwNameError = function () {\n            throw new Error(\"\\n      If you define both a name and a formControlName attribute on your radio button, their values\\n      must match. Ex: <input type=\\\"radio\\\" formControlName=\\\"food\\\" name=\\\"food\\\">\\n    \");\n        };\n        RadioControlValueAccessor.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: 'input[type=radio][formControlName],input[type=radio][formControl],input[type=radio][ngModel]',\n                        host: { '(change)': 'onChange()', '(blur)': 'onTouched()' },\n                        providers: [RADIO_VALUE_ACCESSOR]\n                    },] },\n        ];\n        /** @nocollapse */\n        RadioControlValueAccessor.ctorParameters = function () { return [\n            { type: _angular_core.Renderer, },\n            { type: _angular_core.ElementRef, },\n            { type: RadioControlRegistry, },\n            { type: _angular_core.Injector, },\n        ]; };\n        RadioControlValueAccessor.propDecorators = {\n            'name': [{ type: _angular_core.Input },],\n            'formControlName': [{ type: _angular_core.Input },],\n            'value': [{ type: _angular_core.Input },],\n        };\n        return RadioControlValueAccessor;\n    }());\n\n    var /** @type {?} */ RANGE_VALUE_ACCESSOR = {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: _angular_core.forwardRef(function () { return RangeValueAccessor; }),\n        multi: true\n    };\n    /**\n     *  The accessor for writing a range value and listening to changes that is used by the\n      * {@link NgModel}, {@link FormControlDirective}, and {@link FormControlName} directives.\n      * *\n      * ### Example\n      * ```\n      * <input type=\"range\" [(ngModel)]=\"age\" >\n      * ```\n     */\n    var RangeValueAccessor = (function () {\n        /**\n         * @param {?} _renderer\n         * @param {?} _elementRef\n         */\n        function RangeValueAccessor(_renderer, _elementRef) {\n            this._renderer = _renderer;\n            this._elementRef = _elementRef;\n            this.onChange = function (_) { };\n            this.onTouched = function () { };\n        }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        RangeValueAccessor.prototype.writeValue = function (value) {\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'value', parseFloat(value));\n        };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        RangeValueAccessor.prototype.registerOnChange = function (fn) {\n            this.onChange = function (value) { fn(value == '' ? null : parseFloat(value)); };\n        };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        RangeValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n        /**\n         * @param {?} isDisabled\n         * @return {?}\n         */\n        RangeValueAccessor.prototype.setDisabledState = function (isDisabled) {\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n        };\n        RangeValueAccessor.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: 'input[type=range][formControlName],input[type=range][formControl],input[type=range][ngModel]',\n                        host: {\n                            '(change)': 'onChange($event.target.value)',\n                            '(input)': 'onChange($event.target.value)',\n                            '(blur)': 'onTouched()'\n                        },\n                        providers: [RANGE_VALUE_ACCESSOR]\n                    },] },\n        ];\n        /** @nocollapse */\n        RangeValueAccessor.ctorParameters = function () { return [\n            { type: _angular_core.Renderer, },\n            { type: _angular_core.ElementRef, },\n        ]; };\n        return RangeValueAccessor;\n    }());\n\n    var /** @type {?} */ SELECT_VALUE_ACCESSOR = {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: _angular_core.forwardRef(function () { return SelectControlValueAccessor; }),\n        multi: true\n    };\n    /**\n     * @param {?} id\n     * @param {?} value\n     * @return {?}\n     */\n    function _buildValueString(id, value) {\n        if (id == null)\n            return \"\" + value;\n        if (!isPrimitive(value))\n            value = 'Object';\n        return (id + \": \" + value).slice(0, 50);\n    }\n    /**\n     * @param {?} valueString\n     * @return {?}\n     */\n    function _extractId(valueString) {\n        return valueString.split(':')[0];\n    }\n    /**\n     *  *\n      * Used by {@link NgModel}, {@link FormControlDirective}, and {@link FormControlName}\n      * to keep the view synced with the {@link FormControl} model.\n      * *\n      * *\n      * If you have imported the {@link FormsModule} or the {@link ReactiveFormsModule}, this\n      * value accessor will be active on any select control that has a form directive. You do\n      * **not** need to add a special selector to activate it.\n      * *\n      * ### How to use select controls with form directives\n      * *\n      * To use a select in a template-driven form, simply add an `ngModel` and a `name`\n      * attribute to the main `<select>` tag.\n      * *\n      * If your option values are simple strings, you can bind to the normal `value` property\n      * on the option.  If your option values happen to be objects (and you'd like to save the\n      * selection in your form as an object), use `ngValue` instead:\n      * *\n      * {@example forms/ts/selectControl/select_control_example.ts region='Component'}\n      * *\n      * In reactive forms, you'll also want to add your form directive (`formControlName` or\n      * `formControl`) on the main `<select>` tag. Like in the former example, you have the\n      * choice of binding to the  `value` or `ngValue` property on the select's options.\n      * *\n      * {@example forms/ts/reactiveSelectControl/reactive_select_control_example.ts region='Component'}\n      * *\n      * Note: We listen to the 'change' event because 'input' events aren't fired\n      * for selects in Firefox and IE:\n      * https://bugzilla.mozilla.org/show_bug.cgi?id=1024350\n      * https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/4660045/\n      * *\n      * * **npm package**: `@angular/forms`\n      * *\n     */\n    var SelectControlValueAccessor = (function () {\n        /**\n         * @param {?} _renderer\n         * @param {?} _elementRef\n         */\n        function SelectControlValueAccessor(_renderer, _elementRef) {\n            this._renderer = _renderer;\n            this._elementRef = _elementRef;\n            /** @internal */\n            this._optionMap = new Map();\n            /** @internal */\n            this._idCounter = 0;\n            this.onChange = function (_) { };\n            this.onTouched = function () { };\n        }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        SelectControlValueAccessor.prototype.writeValue = function (value) {\n            this.value = value;\n            var /** @type {?} */ valueString = _buildValueString(this._getOptionId(value), value);\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'value', valueString);\n        };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        SelectControlValueAccessor.prototype.registerOnChange = function (fn) {\n            var _this = this;\n            this.onChange = function (valueString) {\n                _this.value = valueString;\n                fn(_this._getOptionValue(valueString));\n            };\n        };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        SelectControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n        /**\n         * @param {?} isDisabled\n         * @return {?}\n         */\n        SelectControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n        };\n        /**\n         * @return {?}\n         */\n        SelectControlValueAccessor.prototype._registerOption = function () { return (this._idCounter++).toString(); };\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        SelectControlValueAccessor.prototype._getOptionId = function (value) {\n            for (var _i = 0, _a = Array.from(this._optionMap.keys()); _i < _a.length; _i++) {\n                var id = _a[_i];\n                if (looseIdentical(this._optionMap.get(id), value))\n                    return id;\n            }\n            return null;\n        };\n        /**\n         * @param {?} valueString\n         * @return {?}\n         */\n        SelectControlValueAccessor.prototype._getOptionValue = function (valueString) {\n            var /** @type {?} */ id = _extractId(valueString);\n            return this._optionMap.has(id) ? this._optionMap.get(id) : valueString;\n        };\n        SelectControlValueAccessor.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: 'select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]',\n                        host: { '(change)': 'onChange($event.target.value)', '(blur)': 'onTouched()' },\n                        providers: [SELECT_VALUE_ACCESSOR]\n                    },] },\n        ];\n        /** @nocollapse */\n        SelectControlValueAccessor.ctorParameters = function () { return [\n            { type: _angular_core.Renderer, },\n            { type: _angular_core.ElementRef, },\n        ]; };\n        return SelectControlValueAccessor;\n    }());\n    /**\n     *  *\n      * *\n      * See docs for {@link SelectControlValueAccessor} for usage examples.\n      * *\n     */\n    var NgSelectOption = (function () {\n        /**\n         * @param {?} _element\n         * @param {?} _renderer\n         * @param {?} _select\n         */\n        function NgSelectOption(_element, _renderer, _select) {\n            this._element = _element;\n            this._renderer = _renderer;\n            this._select = _select;\n            if (this._select)\n                this.id = this._select._registerOption();\n        }\n        Object.defineProperty(NgSelectOption.prototype, \"ngValue\", {\n            /**\n             * @param {?} value\n             * @return {?}\n             */\n            set: function (value) {\n                if (this._select == null)\n                    return;\n                this._select._optionMap.set(this.id, value);\n                this._setElementValue(_buildValueString(this.id, value));\n                this._select.writeValue(this._select.value);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgSelectOption.prototype, \"value\", {\n            /**\n             * @param {?} value\n             * @return {?}\n             */\n            set: function (value) {\n                this._setElementValue(value);\n                if (this._select)\n                    this._select.writeValue(this._select.value);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        NgSelectOption.prototype._setElementValue = function (value) {\n            this._renderer.setElementProperty(this._element.nativeElement, 'value', value);\n        };\n        /**\n         * @return {?}\n         */\n        NgSelectOption.prototype.ngOnDestroy = function () {\n            if (this._select) {\n                this._select._optionMap.delete(this.id);\n                this._select.writeValue(this._select.value);\n            }\n        };\n        NgSelectOption.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: 'option' },] },\n        ];\n        /** @nocollapse */\n        NgSelectOption.ctorParameters = function () { return [\n            { type: _angular_core.ElementRef, },\n            { type: _angular_core.Renderer, },\n            { type: SelectControlValueAccessor, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Host },] },\n        ]; };\n        NgSelectOption.propDecorators = {\n            'ngValue': [{ type: _angular_core.Input, args: ['ngValue',] },],\n            'value': [{ type: _angular_core.Input, args: ['value',] },],\n        };\n        return NgSelectOption;\n    }());\n\n    var /** @type {?} */ SELECT_MULTIPLE_VALUE_ACCESSOR = {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: _angular_core.forwardRef(function () { return SelectMultipleControlValueAccessor; }),\n        multi: true\n    };\n    /**\n     * @param {?} id\n     * @param {?} value\n     * @return {?}\n     */\n    function _buildValueString$1(id, value) {\n        if (id == null)\n            return \"\" + value;\n        if (typeof value === 'string')\n            value = \"'\" + value + \"'\";\n        if (!isPrimitive(value))\n            value = 'Object';\n        return (id + \": \" + value).slice(0, 50);\n    }\n    /**\n     * @param {?} valueString\n     * @return {?}\n     */\n    function _extractId$1(valueString) {\n        return valueString.split(':')[0];\n    }\n    /**\n     *  The accessor for writing a value and listening to changes on a select element.\n      * *\n     */\n    var SelectMultipleControlValueAccessor = (function () {\n        /**\n         * @param {?} _renderer\n         * @param {?} _elementRef\n         */\n        function SelectMultipleControlValueAccessor(_renderer, _elementRef) {\n            this._renderer = _renderer;\n            this._elementRef = _elementRef;\n            /** @internal */\n            this._optionMap = new Map();\n            /** @internal */\n            this._idCounter = 0;\n            this.onChange = function (_) { };\n            this.onTouched = function () { };\n        }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        SelectMultipleControlValueAccessor.prototype.writeValue = function (value) {\n            var _this = this;\n            this.value = value;\n            if (value == null)\n                return;\n            var /** @type {?} */ values = (value);\n            // convert values to ids\n            var /** @type {?} */ ids = values.map(function (v) { return _this._getOptionId(v); });\n            this._optionMap.forEach(function (opt, o) { opt._setSelected(ids.indexOf(o.toString()) > -1); });\n        };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        SelectMultipleControlValueAccessor.prototype.registerOnChange = function (fn) {\n            var _this = this;\n            this.onChange = function (_) {\n                var /** @type {?} */ selected = [];\n                if (_.hasOwnProperty('selectedOptions')) {\n                    var /** @type {?} */ options = _.selectedOptions;\n                    for (var /** @type {?} */ i = 0; i < options.length; i++) {\n                        var /** @type {?} */ opt = options.item(i);\n                        var /** @type {?} */ val = _this._getOptionValue(opt.value);\n                        selected.push(val);\n                    }\n                }\n                else {\n                    var /** @type {?} */ options = (_.options);\n                    for (var /** @type {?} */ i = 0; i < options.length; i++) {\n                        var /** @type {?} */ opt = options.item(i);\n                        if (opt.selected) {\n                            var /** @type {?} */ val = _this._getOptionValue(opt.value);\n                            selected.push(val);\n                        }\n                    }\n                }\n                fn(selected);\n            };\n        };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        SelectMultipleControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n        /**\n         * @param {?} isDisabled\n         * @return {?}\n         */\n        SelectMultipleControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n        };\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        SelectMultipleControlValueAccessor.prototype._registerOption = function (value) {\n            var /** @type {?} */ id = (this._idCounter++).toString();\n            this._optionMap.set(id, value);\n            return id;\n        };\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        SelectMultipleControlValueAccessor.prototype._getOptionId = function (value) {\n            for (var _i = 0, _a = Array.from(this._optionMap.keys()); _i < _a.length; _i++) {\n                var id = _a[_i];\n                if (looseIdentical(this._optionMap.get(id)._value, value))\n                    return id;\n            }\n            return null;\n        };\n        /**\n         * @param {?} valueString\n         * @return {?}\n         */\n        SelectMultipleControlValueAccessor.prototype._getOptionValue = function (valueString) {\n            var /** @type {?} */ id = _extractId$1(valueString);\n            return this._optionMap.has(id) ? this._optionMap.get(id)._value : valueString;\n        };\n        SelectMultipleControlValueAccessor.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: 'select[multiple][formControlName],select[multiple][formControl],select[multiple][ngModel]',\n                        host: { '(change)': 'onChange($event.target)', '(blur)': 'onTouched()' },\n                        providers: [SELECT_MULTIPLE_VALUE_ACCESSOR]\n                    },] },\n        ];\n        /** @nocollapse */\n        SelectMultipleControlValueAccessor.ctorParameters = function () { return [\n            { type: _angular_core.Renderer, },\n            { type: _angular_core.ElementRef, },\n        ]; };\n        return SelectMultipleControlValueAccessor;\n    }());\n    /**\n     *  Marks `<option>` as dynamic, so Angular can be notified when options change.\n      * *\n      * ### Example\n      * *\n      * ```\n      * <select multiple name=\"city\" ngModel>\n      * <option *ngFor=\"let c of cities\" [value]=\"c\"></option>\n      * </select>\n      * ```\n     */\n    var NgSelectMultipleOption = (function () {\n        /**\n         * @param {?} _element\n         * @param {?} _renderer\n         * @param {?} _select\n         */\n        function NgSelectMultipleOption(_element, _renderer, _select) {\n            this._element = _element;\n            this._renderer = _renderer;\n            this._select = _select;\n            if (this._select) {\n                this.id = this._select._registerOption(this);\n            }\n        }\n        Object.defineProperty(NgSelectMultipleOption.prototype, \"ngValue\", {\n            /**\n             * @param {?} value\n             * @return {?}\n             */\n            set: function (value) {\n                if (this._select == null)\n                    return;\n                this._value = value;\n                this._setElementValue(_buildValueString$1(this.id, value));\n                this._select.writeValue(this._select.value);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgSelectMultipleOption.prototype, \"value\", {\n            /**\n             * @param {?} value\n             * @return {?}\n             */\n            set: function (value) {\n                if (this._select) {\n                    this._value = value;\n                    this._setElementValue(_buildValueString$1(this.id, value));\n                    this._select.writeValue(this._select.value);\n                }\n                else {\n                    this._setElementValue(value);\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        NgSelectMultipleOption.prototype._setElementValue = function (value) {\n            this._renderer.setElementProperty(this._element.nativeElement, 'value', value);\n        };\n        /**\n         * @param {?} selected\n         * @return {?}\n         */\n        NgSelectMultipleOption.prototype._setSelected = function (selected) {\n            this._renderer.setElementProperty(this._element.nativeElement, 'selected', selected);\n        };\n        /**\n         * @return {?}\n         */\n        NgSelectMultipleOption.prototype.ngOnDestroy = function () {\n            if (this._select) {\n                this._select._optionMap.delete(this.id);\n                this._select.writeValue(this._select.value);\n            }\n        };\n        NgSelectMultipleOption.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: 'option' },] },\n        ];\n        /** @nocollapse */\n        NgSelectMultipleOption.ctorParameters = function () { return [\n            { type: _angular_core.ElementRef, },\n            { type: _angular_core.Renderer, },\n            { type: SelectMultipleControlValueAccessor, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Host },] },\n        ]; };\n        NgSelectMultipleOption.propDecorators = {\n            'ngValue': [{ type: _angular_core.Input, args: ['ngValue',] },],\n            'value': [{ type: _angular_core.Input, args: ['value',] },],\n        };\n        return NgSelectMultipleOption;\n    }());\n\n    /**\n     * @param {?} name\n     * @param {?} parent\n     * @return {?}\n     */\n    function controlPath(name, parent) {\n        return parent.path.concat([name]);\n    }\n    /**\n     * @param {?} control\n     * @param {?} dir\n     * @return {?}\n     */\n    function setUpControl(control, dir) {\n        if (!control)\n            _throwError(dir, 'Cannot find control with');\n        if (!dir.valueAccessor)\n            _throwError(dir, 'No value accessor for form control with');\n        control.validator = Validators.compose([control.validator, dir.validator]);\n        control.asyncValidator = Validators.composeAsync([control.asyncValidator, dir.asyncValidator]);\n        dir.valueAccessor.writeValue(control.value);\n        // view -> model\n        dir.valueAccessor.registerOnChange(function (newValue) {\n            dir.viewToModelUpdate(newValue);\n            control.markAsDirty();\n            control.setValue(newValue, { emitModelToViewChange: false });\n        });\n        // touched\n        dir.valueAccessor.registerOnTouched(function () { return control.markAsTouched(); });\n        control.registerOnChange(function (newValue, emitModelEvent) {\n            // control -> view\n            dir.valueAccessor.writeValue(newValue);\n            // control -> ngModel\n            if (emitModelEvent)\n                dir.viewToModelUpdate(newValue);\n        });\n        if (dir.valueAccessor.setDisabledState) {\n            control.registerOnDisabledChange(function (isDisabled) { dir.valueAccessor.setDisabledState(isDisabled); });\n        }\n        // re-run validation when validator binding changes, e.g. minlength=3 -> minlength=4\n        dir._rawValidators.forEach(function (validator) {\n            if (((validator)).registerOnValidatorChange)\n                ((validator)).registerOnValidatorChange(function () { return control.updateValueAndValidity(); });\n        });\n        dir._rawAsyncValidators.forEach(function (validator) {\n            if (((validator)).registerOnValidatorChange)\n                ((validator)).registerOnValidatorChange(function () { return control.updateValueAndValidity(); });\n        });\n    }\n    /**\n     * @param {?} control\n     * @param {?} dir\n     * @return {?}\n     */\n    function cleanUpControl(control, dir) {\n        dir.valueAccessor.registerOnChange(function () { return _noControlError(dir); });\n        dir.valueAccessor.registerOnTouched(function () { return _noControlError(dir); });\n        dir._rawValidators.forEach(function (validator) {\n            if (validator.registerOnValidatorChange) {\n                validator.registerOnValidatorChange(null);\n            }\n        });\n        dir._rawAsyncValidators.forEach(function (validator) {\n            if (validator.registerOnValidatorChange) {\n                validator.registerOnValidatorChange(null);\n            }\n        });\n        if (control)\n            control._clearChangeFns();\n    }\n    /**\n     * @param {?} control\n     * @param {?} dir\n     * @return {?}\n     */\n    function setUpFormContainer(control, dir) {\n        if (isBlank(control))\n            _throwError(dir, 'Cannot find control with');\n        control.validator = Validators.compose([control.validator, dir.validator]);\n        control.asyncValidator = Validators.composeAsync([control.asyncValidator, dir.asyncValidator]);\n    }\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    function _noControlError(dir) {\n        return _throwError(dir, 'There is no FormControl instance attached to form control element with');\n    }\n    /**\n     * @param {?} dir\n     * @param {?} message\n     * @return {?}\n     */\n    function _throwError(dir, message) {\n        var /** @type {?} */ messageEnd;\n        if (dir.path.length > 1) {\n            messageEnd = \"path: '\" + dir.path.join(' -> ') + \"'\";\n        }\n        else if (dir.path[0]) {\n            messageEnd = \"name: '\" + dir.path + \"'\";\n        }\n        else {\n            messageEnd = 'unspecified name attribute';\n        }\n        throw new Error(message + \" \" + messageEnd);\n    }\n    /**\n     * @param {?} validators\n     * @return {?}\n     */\n    function composeValidators(validators) {\n        return isPresent(validators) ? Validators.compose(validators.map(normalizeValidator)) : null;\n    }\n    /**\n     * @param {?} validators\n     * @return {?}\n     */\n    function composeAsyncValidators(validators) {\n        return isPresent(validators) ? Validators.composeAsync(validators.map(normalizeAsyncValidator)) :\n            null;\n    }\n    /**\n     * @param {?} changes\n     * @param {?} viewModel\n     * @return {?}\n     */\n    function isPropertyUpdated(changes, viewModel) {\n        if (!changes.hasOwnProperty('model'))\n            return false;\n        var /** @type {?} */ change = changes['model'];\n        if (change.isFirstChange())\n            return true;\n        return !looseIdentical(viewModel, change.currentValue);\n    }\n    var /** @type {?} */ BUILTIN_ACCESSORS = [\n        CheckboxControlValueAccessor,\n        RangeValueAccessor,\n        NumberValueAccessor,\n        SelectControlValueAccessor,\n        SelectMultipleControlValueAccessor,\n        RadioControlValueAccessor,\n    ];\n    /**\n     * @param {?} valueAccessor\n     * @return {?}\n     */\n    function isBuiltInAccessor(valueAccessor) {\n        return BUILTIN_ACCESSORS.some(function (a) { return valueAccessor.constructor === a; });\n    }\n    /**\n     * @param {?} dir\n     * @param {?} valueAccessors\n     * @return {?}\n     */\n    function selectValueAccessor(dir, valueAccessors) {\n        if (!valueAccessors)\n            return null;\n        var /** @type {?} */ defaultAccessor;\n        var /** @type {?} */ builtinAccessor;\n        var /** @type {?} */ customAccessor;\n        valueAccessors.forEach(function (v) {\n            if (v.constructor === DefaultValueAccessor) {\n                defaultAccessor = v;\n            }\n            else if (isBuiltInAccessor(v)) {\n                if (builtinAccessor)\n                    _throwError(dir, 'More than one built-in value accessor matches form control with');\n                builtinAccessor = v;\n            }\n            else {\n                if (customAccessor)\n                    _throwError(dir, 'More than one custom value accessor matches form control with');\n                customAccessor = v;\n            }\n        });\n        if (customAccessor)\n            return customAccessor;\n        if (builtinAccessor)\n            return builtinAccessor;\n        if (defaultAccessor)\n            return defaultAccessor;\n        _throwError(dir, 'No valid value accessor for form control with');\n        return null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     *  This is a base class for code shared between {@link NgModelGroup} and {@link FormGroupName}.\n      * *\n     */\n    var AbstractFormGroupDirective = (function (_super) {\n        __extends(AbstractFormGroupDirective, _super);\n        function AbstractFormGroupDirective() {\n            _super.apply(this, arguments);\n        }\n        /**\n         * @return {?}\n         */\n        AbstractFormGroupDirective.prototype.ngOnInit = function () {\n            this._checkParentType();\n            this.formDirective.addFormGroup(this);\n        };\n        /**\n         * @return {?}\n         */\n        AbstractFormGroupDirective.prototype.ngOnDestroy = function () {\n            if (this.formDirective) {\n                this.formDirective.removeFormGroup(this);\n            }\n        };\n        Object.defineProperty(AbstractFormGroupDirective.prototype, \"control\", {\n            /**\n             *  Get the {@link FormGroup} backing this binding.\n             * @return {?}\n             */\n            get: function () { return this.formDirective.getFormGroup(this); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractFormGroupDirective.prototype, \"path\", {\n            /**\n             *  Get the path to this control group.\n             * @return {?}\n             */\n            get: function () { return controlPath(this.name, this._parent); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractFormGroupDirective.prototype, \"formDirective\", {\n            /**\n             *  Get the {@link Form} to which this group belongs.\n             * @return {?}\n             */\n            get: function () { return this._parent ? this._parent.formDirective : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractFormGroupDirective.prototype, \"validator\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return composeValidators(this._validators); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractFormGroupDirective.prototype, \"asyncValidator\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return composeAsyncValidators(this._asyncValidators); },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @return {?}\n         */\n        AbstractFormGroupDirective.prototype._checkParentType = function () { };\n        return AbstractFormGroupDirective;\n    }(ControlContainer));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$3 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var AbstractControlStatus = (function () {\n        /**\n         * @param {?} cd\n         */\n        function AbstractControlStatus(cd) {\n            this._cd = cd;\n        }\n        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassUntouched\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._cd.control ? this._cd.control.untouched : false; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassTouched\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._cd.control ? this._cd.control.touched : false; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassPristine\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._cd.control ? this._cd.control.pristine : false; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassDirty\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._cd.control ? this._cd.control.dirty : false; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassValid\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._cd.control ? this._cd.control.valid : false; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassInvalid\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._cd.control ? this._cd.control.invalid : false; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassPending\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._cd.control ? this._cd.control.pending : false; },\n            enumerable: true,\n            configurable: true\n        });\n        return AbstractControlStatus;\n    }());\n    var /** @type {?} */ ngControlStatusHost = {\n        '[class.ng-untouched]': 'ngClassUntouched',\n        '[class.ng-touched]': 'ngClassTouched',\n        '[class.ng-pristine]': 'ngClassPristine',\n        '[class.ng-dirty]': 'ngClassDirty',\n        '[class.ng-valid]': 'ngClassValid',\n        '[class.ng-invalid]': 'ngClassInvalid',\n        '[class.ng-pending]': 'ngClassPending',\n    };\n    /**\n     *  Directive automatically applied to Angular form controls that sets CSS classes\n      * based on control status (valid/invalid/dirty/etc).\n      * *\n     */\n    var NgControlStatus = (function (_super) {\n        __extends$3(NgControlStatus, _super);\n        /**\n         * @param {?} cd\n         */\n        function NgControlStatus(cd) {\n            _super.call(this, cd);\n        }\n        NgControlStatus.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[formControlName],[ngModel],[formControl]', host: ngControlStatusHost },] },\n        ];\n        /** @nocollapse */\n        NgControlStatus.ctorParameters = function () { return [\n            { type: NgControl, decorators: [{ type: _angular_core.Self },] },\n        ]; };\n        return NgControlStatus;\n    }(AbstractControlStatus));\n    /**\n     *  Directive automatically applied to Angular form groups that sets CSS classes\n      * based on control status (valid/invalid/dirty/etc).\n      * *\n     */\n    var NgControlStatusGroup = (function (_super) {\n        __extends$3(NgControlStatusGroup, _super);\n        /**\n         * @param {?} cd\n         */\n        function NgControlStatusGroup(cd) {\n            _super.call(this, cd);\n        }\n        NgControlStatusGroup.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: '[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]',\n                        host: ngControlStatusHost\n                    },] },\n        ];\n        /** @nocollapse */\n        NgControlStatusGroup.ctorParameters = function () { return [\n            { type: ControlContainer, decorators: [{ type: _angular_core.Self },] },\n        ]; };\n        return NgControlStatusGroup;\n    }(AbstractControlStatus));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$5 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     *  Use by directives and components to emit custom Events.\n      * *\n      * ### Examples\n      * *\n      * In the following example, `Zippy` alternatively emits `open` and `close` events when its\n      * title gets clicked:\n      * *\n      * ```\n      * selector: 'zippy',\n      * template: `\n      * <div class=\"zippy\">\n      * <div (click)=\"toggle()\">Toggle</div>\n      * <div [hidden]=\"!visible\">\n      * <ng-content></ng-content>\n      * </div>\n      * </div>`})\n      * export class Zippy {\n      * visible: boolean = true;\n      * @Output() open: EventEmitter<any> = new EventEmitter();\n      * @Output() close: EventEmitter<any> = new EventEmitter();\n      * *\n      * toggle() {\n      * this.visible = !this.visible;\n      * if (this.visible) {\n      * this.open.emit(null);\n      * } else {\n      * this.close.emit(null);\n      * }\n      * }\n      * }\n      * ```\n      * *\n      * The events payload can be accessed by the parameter `$event` on the components output event\n      * handler:\n      * *\n      * ```\n      * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n      * ```\n      * *\n      * Uses Rx.Observable but provides an adapter to make it work as specified here:\n      * https://github.com/jhusain/observable-spec\n      * *\n      * Once a reference implementation of the spec is available, switch to it.\n     */\n    var EventEmitter = (function (_super) {\n        __extends$5(EventEmitter, _super);\n        /**\n         *  Creates an instance of [EventEmitter], which depending on [isAsync],\n          * delivers events synchronously or asynchronously.\n         * @param {?=} isAsync\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            _super.call(this);\n            this.__isAsync = isAsync;\n        }\n        /**\n         * @param {?=} value\n         * @return {?}\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * @param {?=} generatorOrNext\n         * @param {?=} error\n         * @param {?=} complete\n         * @return {?}\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var /** @type {?} */ schedulerFn;\n            var /** @type {?} */ errorFn = function (err) { return null; };\n            var /** @type {?} */ completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            return _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n        };\n        return EventEmitter;\n    }(rxjs_Subject.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$6 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * Indicates that a FormControl is valid, i.e. that no errors exist in the input value.\n     */\n    var /** @type {?} */ VALID = 'VALID';\n    /**\n     * Indicates that a FormControl is invalid, i.e. that an error exists in the input value.\n     */\n    var /** @type {?} */ INVALID = 'INVALID';\n    /**\n     * Indicates that a FormControl is pending, i.e. that async validation is occurring and\n     * errors are not yet available for the input value.\n     */\n    var /** @type {?} */ PENDING = 'PENDING';\n    /**\n     * Indicates that a FormControl is disabled, i.e. that the control is exempt from ancestor\n     * calculations of validity or value.\n     */\n    var /** @type {?} */ DISABLED = 'DISABLED';\n    /**\n     * @param {?} control\n     * @param {?} path\n     * @param {?} delimiter\n     * @return {?}\n     */\n    function _find(control, path, delimiter) {\n        if (path == null)\n            return null;\n        if (!(path instanceof Array)) {\n            path = ((path)).split(delimiter);\n        }\n        if (path instanceof Array && (path.length === 0))\n            return null;\n        return ((path)).reduce(function (v, name) {\n            if (v instanceof FormGroup) {\n                return v.controls[name] || null;\n            }\n            if (v instanceof FormArray) {\n                return v.at(/** @type {?} */ (name)) || null;\n            }\n            return null;\n        }, control);\n    }\n    /**\n     * @param {?} r\n     * @return {?}\n     */\n    function toObservable(r) {\n        return isPromise(r) ? rxjs_observable_fromPromise.fromPromise(r) : r;\n    }\n    /**\n     * @param {?} validator\n     * @return {?}\n     */\n    function coerceToValidator(validator) {\n        return Array.isArray(validator) ? composeValidators(validator) : validator;\n    }\n    /**\n     * @param {?} asyncValidator\n     * @return {?}\n     */\n    function coerceToAsyncValidator(asyncValidator) {\n        return Array.isArray(asyncValidator) ? composeAsyncValidators(asyncValidator) : asyncValidator;\n    }\n    /**\n     *  {@link FormArray}.\n      * *\n      * It provides some of the shared behavior that all controls and groups of controls have, like\n      * running validators, calculating status, and resetting state. It also defines the properties\n      * that are shared between all sub-classes, like `value`, `valid`, and `dirty`. It shouldn't be\n      * instantiated directly.\n      * *\n     * @abstract\n     */\n    var AbstractControl = (function () {\n        /**\n         * @param {?} validator\n         * @param {?} asyncValidator\n         */\n        function AbstractControl(validator, asyncValidator) {\n            this.validator = validator;\n            this.asyncValidator = asyncValidator;\n            /** @internal */\n            this._onCollectionChange = function () { };\n            this._pristine = true;\n            this._touched = false;\n            /** @internal */\n            this._onDisabledChange = [];\n        }\n        Object.defineProperty(AbstractControl.prototype, \"value\", {\n            /**\n             *  The value of the control.\n             * @return {?}\n             */\n            get: function () { return this._value; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"parent\", {\n            /**\n             *  The parent control.\n             * @return {?}\n             */\n            get: function () { return this._parent; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"status\", {\n            /**\n             *  The validation status of the control. There are four possible\n              * validation statuses:\n              * *\n              * * **VALID**:  control has passed all validation checks\n              * * **INVALID**: control has failed at least one validation check\n              * * **PENDING**: control is in the midst of conducting a validation check\n              * * **DISABLED**: control is exempt from validation checks\n              * *\n              * These statuses are mutually exclusive, so a control cannot be\n              * both valid AND invalid or invalid AND disabled.\n             * @return {?}\n             */\n            get: function () { return this._status; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"valid\", {\n            /**\n             *  A control is `valid` when its `status === VALID`.\n              * *\n              * In order to have this status, the control must have passed all its\n              * validation checks.\n             * @return {?}\n             */\n            get: function () { return this._status === VALID; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"invalid\", {\n            /**\n             *  A control is `invalid` when its `status === INVALID`.\n              * *\n              * In order to have this status, the control must have failed\n              * at least one of its validation checks.\n             * @return {?}\n             */\n            get: function () { return this._status === INVALID; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"pending\", {\n            /**\n             *  A control is `pending` when its `status === PENDING`.\n              * *\n              * In order to have this status, the control must be in the\n              * middle of conducting a validation check.\n             * @return {?}\n             */\n            get: function () { return this._status == PENDING; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"disabled\", {\n            /**\n             *  A control is `disabled` when its `status === DISABLED`.\n              * *\n              * Disabled controls are exempt from validation checks and\n              * are not included in the aggregate value of their ancestor\n              * controls.\n             * @return {?}\n             */\n            get: function () { return this._status === DISABLED; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"enabled\", {\n            /**\n             *  A control is `enabled` as long as its `status !== DISABLED`.\n              * *\n              * In other words, it has a status of `VALID`, `INVALID`, or\n              * `PENDING`.\n             * @return {?}\n             */\n            get: function () { return this._status !== DISABLED; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"errors\", {\n            /**\n             *  Returns any errors generated by failing validation. If there\n              * are no errors, it will return null.\n             * @return {?}\n             */\n            get: function () { return this._errors; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"pristine\", {\n            /**\n             *  A control is `pristine` if the user has not yet changed\n              * the value in the UI.\n              * *\n              * Note that programmatic changes to a control's value will\n              * *not* mark it dirty.\n             * @return {?}\n             */\n            get: function () { return this._pristine; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"dirty\", {\n            /**\n             *  A control is `dirty` if the user has changed the value\n              * in the UI.\n              * *\n              * Note that programmatic changes to a control's value will\n              * *not* mark it dirty.\n             * @return {?}\n             */\n            get: function () { return !this.pristine; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"touched\", {\n            /**\n             *  A control is marked `touched` once the user has triggered\n              * a `blur` event on it.\n             * @return {?}\n             */\n            get: function () { return this._touched; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"untouched\", {\n            /**\n             *  A control is `untouched` if the user has not yet triggered\n              * a `blur` event on it.\n             * @return {?}\n             */\n            get: function () { return !this._touched; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"valueChanges\", {\n            /**\n             *  Emits an event every time the value of the control changes, in\n              * the UI or programmatically.\n             * @return {?}\n             */\n            get: function () { return this._valueChanges; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"statusChanges\", {\n            /**\n             *  Emits an event every time the validation status of the control\n              * is re-calculated.\n             * @return {?}\n             */\n            get: function () { return this._statusChanges; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         *  Sets the synchronous validators that are active on this control.  Calling\n          * this will overwrite any existing sync validators.\n         * @param {?} newValidator\n         * @return {?}\n         */\n        AbstractControl.prototype.setValidators = function (newValidator) {\n            this.validator = coerceToValidator(newValidator);\n        };\n        /**\n         *  Sets the async validators that are active on this control. Calling this\n          * will overwrite any existing async validators.\n         * @param {?} newValidator\n         * @return {?}\n         */\n        AbstractControl.prototype.setAsyncValidators = function (newValidator) {\n            this.asyncValidator = coerceToAsyncValidator(newValidator);\n        };\n        /**\n         *  Empties out the sync validator list.\n         * @return {?}\n         */\n        AbstractControl.prototype.clearValidators = function () { this.validator = null; };\n        /**\n         *  Empties out the async validator list.\n         * @return {?}\n         */\n        AbstractControl.prototype.clearAsyncValidators = function () { this.asyncValidator = null; };\n        /**\n         *  Marks the control as `touched`.\n          * *\n          * This will also mark all direct ancestors as `touched` to maintain\n          * the model.\n         * @param {?=} __0\n         * @return {?}\n         */\n        AbstractControl.prototype.markAsTouched = function (_a) {\n            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n            this._touched = true;\n            if (this._parent && !onlySelf) {\n                this._parent.markAsTouched({ onlySelf: onlySelf });\n            }\n        };\n        /**\n         *  Marks the control as `untouched`.\n          * *\n          * If the control has any children, it will also mark all children as `untouched`\n          * to maintain the model, and re-calculate the `touched` status of all parent\n          * controls.\n         * @param {?=} __0\n         * @return {?}\n         */\n        AbstractControl.prototype.markAsUntouched = function (_a) {\n            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n            this._touched = false;\n            this._forEachChild(function (control) { control.markAsUntouched({ onlySelf: true }); });\n            if (this._parent && !onlySelf) {\n                this._parent._updateTouched({ onlySelf: onlySelf });\n            }\n        };\n        /**\n         *  Marks the control as `dirty`.\n          * *\n          * This will also mark all direct ancestors as `dirty` to maintain\n          * the model.\n         * @param {?=} __0\n         * @return {?}\n         */\n        AbstractControl.prototype.markAsDirty = function (_a) {\n            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n            this._pristine = false;\n            if (this._parent && !onlySelf) {\n                this._parent.markAsDirty({ onlySelf: onlySelf });\n            }\n        };\n        /**\n         *  Marks the control as `pristine`.\n          * *\n          * If the control has any children, it will also mark all children as `pristine`\n          * to maintain the model, and re-calculate the `pristine` status of all parent\n          * controls.\n         * @param {?=} __0\n         * @return {?}\n         */\n        AbstractControl.prototype.markAsPristine = function (_a) {\n            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n            this._pristine = true;\n            this._forEachChild(function (control) { control.markAsPristine({ onlySelf: true }); });\n            if (this._parent && !onlySelf) {\n                this._parent._updatePristine({ onlySelf: onlySelf });\n            }\n        };\n        /**\n         *  Marks the control as `pending`.\n         * @param {?=} __0\n         * @return {?}\n         */\n        AbstractControl.prototype.markAsPending = function (_a) {\n            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n            this._status = PENDING;\n            if (this._parent && !onlySelf) {\n                this._parent.markAsPending({ onlySelf: onlySelf });\n            }\n        };\n        /**\n         *  Disables the control. This means the control will be exempt from validation checks and\n          * excluded from the aggregate value of any parent. Its status is `DISABLED`.\n          * *\n          * If the control has children, all children will be disabled to maintain the model.\n         * @param {?=} __0\n         * @return {?}\n         */\n        AbstractControl.prototype.disable = function (_a) {\n            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n            this._status = DISABLED;\n            this._errors = null;\n            this._forEachChild(function (control) { control.disable({ onlySelf: true }); });\n            this._updateValue();\n            if (emitEvent !== false) {\n                this._valueChanges.emit(this._value);\n                this._statusChanges.emit(this._status);\n            }\n            this._updateAncestors(onlySelf);\n            this._onDisabledChange.forEach(function (changeFn) { return changeFn(true); });\n        };\n        /**\n         *  Enables the control. This means the control will be included in validation checks and\n          * the aggregate value of its parent. Its status is re-calculated based on its value and\n          * its validators.\n          * *\n          * If the control has children, all children will be enabled.\n         * @param {?=} __0\n         * @return {?}\n         */\n        AbstractControl.prototype.enable = function (_a) {\n            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n            this._status = VALID;\n            this._forEachChild(function (control) { control.enable({ onlySelf: true }); });\n            this.updateValueAndValidity({ onlySelf: true, emitEvent: emitEvent });\n            this._updateAncestors(onlySelf);\n            this._onDisabledChange.forEach(function (changeFn) { return changeFn(false); });\n        };\n        /**\n         * @param {?} onlySelf\n         * @return {?}\n         */\n        AbstractControl.prototype._updateAncestors = function (onlySelf) {\n            if (this._parent && !onlySelf) {\n                this._parent.updateValueAndValidity();\n                this._parent._updatePristine();\n                this._parent._updateTouched();\n            }\n        };\n        /**\n         * @param {?} parent\n         * @return {?}\n         */\n        AbstractControl.prototype.setParent = function (parent) { this._parent = parent; };\n        /**\n         *  Sets the value of the control. Abstract method (implemented in sub-classes).\n         * @abstract\n         * @param {?} value\n         * @param {?=} options\n         * @return {?}\n         */\n        AbstractControl.prototype.setValue = function (value, options) { };\n        /**\n         *  Patches the value of the control. Abstract method (implemented in sub-classes).\n         * @abstract\n         * @param {?} value\n         * @param {?=} options\n         * @return {?}\n         */\n        AbstractControl.prototype.patchValue = function (value, options) { };\n        /**\n         *  Resets the control. Abstract method (implemented in sub-classes).\n         * @abstract\n         * @param {?=} value\n         * @param {?=} options\n         * @return {?}\n         */\n        AbstractControl.prototype.reset = function (value, options) { };\n        /**\n         *  Re-calculates the value and validation status of the control.\n          * *\n          * By default, it will also update the value and validity of its ancestors.\n         * @param {?=} __0\n         * @return {?}\n         */\n        AbstractControl.prototype.updateValueAndValidity = function (_a) {\n            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n            this._setInitialStatus();\n            this._updateValue();\n            if (this.enabled) {\n                this._errors = this._runValidator();\n                this._status = this._calculateStatus();\n                if (this._status === VALID || this._status === PENDING) {\n                    this._runAsyncValidator(emitEvent);\n                }\n            }\n            if (emitEvent !== false) {\n                this._valueChanges.emit(this._value);\n                this._statusChanges.emit(this._status);\n            }\n            if (this._parent && !onlySelf) {\n                this._parent.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n            }\n        };\n        /**\n         * @param {?=} __0\n         * @return {?}\n         */\n        AbstractControl.prototype._updateTreeValidity = function (_a) {\n            var emitEvent = (_a === void 0 ? { emitEvent: true } : _a).emitEvent;\n            this._forEachChild(function (ctrl) { return ctrl._updateTreeValidity({ emitEvent: emitEvent }); });\n            this.updateValueAndValidity({ onlySelf: true, emitEvent: emitEvent });\n        };\n        /**\n         * @return {?}\n         */\n        AbstractControl.prototype._setInitialStatus = function () { this._status = this._allControlsDisabled() ? DISABLED : VALID; };\n        /**\n         * @return {?}\n         */\n        AbstractControl.prototype._runValidator = function () {\n            return this.validator ? this.validator(this) : null;\n        };\n        /**\n         * @param {?} emitEvent\n         * @return {?}\n         */\n        AbstractControl.prototype._runAsyncValidator = function (emitEvent) {\n            var _this = this;\n            if (this.asyncValidator) {\n                this._status = PENDING;\n                this._cancelExistingSubscription();\n                var /** @type {?} */ obs = toObservable(this.asyncValidator(this));\n                this._asyncValidationSubscription =\n                    obs.subscribe({ next: function (res) { return _this.setErrors(res, { emitEvent: emitEvent }); } });\n            }\n        };\n        /**\n         * @return {?}\n         */\n        AbstractControl.prototype._cancelExistingSubscription = function () {\n            if (this._asyncValidationSubscription) {\n                this._asyncValidationSubscription.unsubscribe();\n            }\n        };\n        /**\n         *  Sets errors on a form control.\n          * *\n          * This is used when validations are run manually by the user, rather than automatically.\n          * *\n          * Calling `setErrors` will also update the validity of the parent control.\n          * *\n          * ### Example\n          * *\n          * ```\n          * const login = new FormControl(\"someLogin\");\n          * login.setErrors({\n          * \"notUnique\": true\n          * });\n          * *\n          * expect(login.valid).toEqual(false);\n          * expect(login.errors).toEqual({\"notUnique\": true});\n          * *\n          * login.setValue(\"someOtherLogin\");\n          * *\n          * expect(login.valid).toEqual(true);\n          * ```\n         * @param {?} errors\n         * @param {?=} __1\n         * @return {?}\n         */\n        AbstractControl.prototype.setErrors = function (errors, _a) {\n            var emitEvent = (_a === void 0 ? {} : _a).emitEvent;\n            this._errors = errors;\n            this._updateControlsErrors(emitEvent !== false);\n        };\n        /**\n         *  Retrieves a child control given the control's name or path.\n          * *\n          * Paths can be passed in as an array or a string delimited by a dot.\n          * *\n          * To get a control nested within a `person` sub-group:\n          * *\n          * * `this.form.get('person.name');`\n          * *\n          * -OR-\n          * *\n          * * `this.form.get(['person', 'name']);`\n         * @param {?} path\n         * @return {?}\n         */\n        AbstractControl.prototype.get = function (path) { return _find(this, path, '.'); };\n        /**\n         *  Returns true if the control with the given path has the error specified. Otherwise\n          * returns null or undefined.\n          * *\n          * If no path is given, it checks for the error on the present control.\n         * @param {?} errorCode\n         * @param {?=} path\n         * @return {?}\n         */\n        AbstractControl.prototype.getError = function (errorCode, path) {\n            if (path === void 0) { path = null; }\n            var /** @type {?} */ control = path ? this.get(path) : this;\n            return control && control._errors ? control._errors[errorCode] : null;\n        };\n        /**\n         *  Returns true if the control with the given path has the error specified. Otherwise\n          * returns false.\n          * *\n          * If no path is given, it checks for the error on the present control.\n         * @param {?} errorCode\n         * @param {?=} path\n         * @return {?}\n         */\n        AbstractControl.prototype.hasError = function (errorCode, path) {\n            if (path === void 0) { path = null; }\n            return !!this.getError(errorCode, path);\n        };\n        Object.defineProperty(AbstractControl.prototype, \"root\", {\n            /**\n             *  Retrieves the top-level ancestor of this control.\n             * @return {?}\n             */\n            get: function () {\n                var /** @type {?} */ x = this;\n                while (x._parent) {\n                    x = x._parent;\n                }\n                return x;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @param {?} emitEvent\n         * @return {?}\n         */\n        AbstractControl.prototype._updateControlsErrors = function (emitEvent) {\n            this._status = this._calculateStatus();\n            if (emitEvent) {\n                this._statusChanges.emit(this._status);\n            }\n            if (this._parent) {\n                this._parent._updateControlsErrors(emitEvent);\n            }\n        };\n        /**\n         * @return {?}\n         */\n        AbstractControl.prototype._initObservables = function () {\n            this._valueChanges = new EventEmitter();\n            this._statusChanges = new EventEmitter();\n        };\n        /**\n         * @return {?}\n         */\n        AbstractControl.prototype._calculateStatus = function () {\n            if (this._allControlsDisabled())\n                return DISABLED;\n            if (this._errors)\n                return INVALID;\n            if (this._anyControlsHaveStatus(PENDING))\n                return PENDING;\n            if (this._anyControlsHaveStatus(INVALID))\n                return INVALID;\n            return VALID;\n        };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        AbstractControl.prototype._updateValue = function () { };\n        /**\n         * @abstract\n         * @param {?} cb\n         * @return {?}\n         */\n        AbstractControl.prototype._forEachChild = function (cb) { };\n        /**\n         * @abstract\n         * @param {?} condition\n         * @return {?}\n         */\n        AbstractControl.prototype._anyControls = function (condition) { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        AbstractControl.prototype._allControlsDisabled = function () { };\n        /**\n         * @param {?} status\n         * @return {?}\n         */\n        AbstractControl.prototype._anyControlsHaveStatus = function (status) {\n            return this._anyControls(function (control) { return control.status === status; });\n        };\n        /**\n         * @return {?}\n         */\n        AbstractControl.prototype._anyControlsDirty = function () {\n            return this._anyControls(function (control) { return control.dirty; });\n        };\n        /**\n         * @return {?}\n         */\n        AbstractControl.prototype._anyControlsTouched = function () {\n            return this._anyControls(function (control) { return control.touched; });\n        };\n        /**\n         * @param {?=} __0\n         * @return {?}\n         */\n        AbstractControl.prototype._updatePristine = function (_a) {\n            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n            this._pristine = !this._anyControlsDirty();\n            if (this._parent && !onlySelf) {\n                this._parent._updatePristine({ onlySelf: onlySelf });\n            }\n        };\n        /**\n         * @param {?=} __0\n         * @return {?}\n         */\n        AbstractControl.prototype._updateTouched = function (_a) {\n            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n            this._touched = this._anyControlsTouched();\n            if (this._parent && !onlySelf) {\n                this._parent._updateTouched({ onlySelf: onlySelf });\n            }\n        };\n        /**\n         * @param {?} formState\n         * @return {?}\n         */\n        AbstractControl.prototype._isBoxedValue = function (formState) {\n            return typeof formState === 'object' && formState !== null &&\n                Object.keys(formState).length === 2 && 'value' in formState && 'disabled' in formState;\n        };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        AbstractControl.prototype._registerOnCollectionChange = function (fn) { this._onCollectionChange = fn; };\n        return AbstractControl;\n    }());\n    /**\n     *  *\n      * It is one of the three fundamental building blocks of Angular forms, along with\n      * {@link FormGroup} and {@link FormArray}.\n      * *\n      * *\n      * When instantiating a {@link FormControl}, you can pass in an initial value as the\n      * first argument. Example:\n      * *\n      * ```ts\n      * const ctrl = new FormControl('some value');\n      * console.log(ctrl.value);     // 'some value'\n      * *```\n      * *\n      * You can also initialize the control with a form state object on instantiation,\n      * which includes both the value and whether or not the control is disabled.\n      * You can't use the value key without the disabled key; both are required\n      * to use this way of initialization.\n      * *\n      * ```ts\n      * const ctrl = new FormControl({value: 'n/a', disabled: true});\n      * console.log(ctrl.value);     // 'n/a'\n      * console.log(ctrl.status);   // 'DISABLED'\n      * ```\n      * *\n      * To include a sync validator (or an array of sync validators) with the control,\n      * pass it in as the second argument. Async validators are also supported, but\n      * have to be passed in separately as the third arg.\n      * *\n      * ```ts\n      * const ctrl = new FormControl('', Validators.required);\n      * console.log(ctrl.value);     // ''\n      * console.log(ctrl.status);   // 'INVALID'\n      * ```\n      * *\n      * See its superclass, {@link AbstractControl}, for more properties and methods.\n      * *\n      * * **npm package**: `@angular/forms`\n      * *\n     */\n    var FormControl = (function (_super) {\n        __extends$6(FormControl, _super);\n        /**\n         * @param {?=} formState\n         * @param {?=} validator\n         * @param {?=} asyncValidator\n         */\n        function FormControl(formState, validator, asyncValidator) {\n            if (formState === void 0) { formState = null; }\n            if (validator === void 0) { validator = null; }\n            if (asyncValidator === void 0) { asyncValidator = null; }\n            _super.call(this, coerceToValidator(validator), coerceToAsyncValidator(asyncValidator));\n            /** @internal */\n            this._onChange = [];\n            this._applyFormState(formState);\n            this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n            this._initObservables();\n        }\n        /**\n         *  Set the value of the form control to `value`.\n          * *\n          * If `onlySelf` is `true`, this change will only affect the validation of this `FormControl`\n          * and not its parent component. This defaults to false.\n          * *\n          * If `emitEvent` is `true`, this\n          * change will cause a `valueChanges` event on the `FormControl` to be emitted. This defaults\n          * to true (as it falls through to `updateValueAndValidity`).\n          * *\n          * If `emitModelToViewChange` is `true`, the view will be notified about the new value\n          * via an `onChange` event. This is the default behavior if `emitModelToViewChange` is not\n          * specified.\n          * *\n          * If `emitViewToModelChange` is `true`, an ngModelChange event will be fired to update the\n          * model.  This is the default behavior if `emitViewToModelChange` is not specified.\n         * @param {?} value\n         * @param {?=} __1\n         * @return {?}\n         */\n        FormControl.prototype.setValue = function (value, _a) {\n            var _this = this;\n            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent, emitModelToViewChange = _b.emitModelToViewChange, emitViewToModelChange = _b.emitViewToModelChange;\n            this._value = value;\n            if (this._onChange.length && emitModelToViewChange !== false) {\n                this._onChange.forEach(function (changeFn) { return changeFn(_this._value, emitViewToModelChange !== false); });\n            }\n            this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n        };\n        /**\n         *  Patches the value of a control.\n          * *\n          * This function is functionally the same as {@link FormControl.setValue} at this level.\n          * It exists for symmetry with {@link FormGroup.patchValue} on `FormGroups` and `FormArrays`,\n          * where it does behave differently.\n         * @param {?} value\n         * @param {?=} options\n         * @return {?}\n         */\n        FormControl.prototype.patchValue = function (value, options) {\n            if (options === void 0) { options = {}; }\n            this.setValue(value, options);\n        };\n        /**\n         *  Resets the form control. This means by default:\n          * *\n          * * it is marked as `pristine`\n          * * it is marked as `untouched`\n          * * value is set to null\n          * *\n          * You can also reset to a specific form state by passing through a standalone\n          * value or a form state object that contains both a value and a disabled state\n          * (these are the only two properties that cannot be calculated).\n          * *\n          * Ex:\n          * *\n          * ```ts\n          * this.control.reset('Nancy');\n          * *\n          * console.log(this.control.value);  // 'Nancy'\n          * ```\n          * *\n          * OR\n          * *\n          * ```\n          * this.control.reset({value: 'Nancy', disabled: true});\n          * *\n          * console.log(this.control.value);  // 'Nancy'\n          * console.log(this.control.status);  // 'DISABLED'\n          * ```\n         * @param {?=} formState\n         * @param {?=} __1\n         * @return {?}\n         */\n        FormControl.prototype.reset = function (formState, _a) {\n            if (formState === void 0) { formState = null; }\n            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n            this._applyFormState(formState);\n            this.markAsPristine({ onlySelf: onlySelf });\n            this.markAsUntouched({ onlySelf: onlySelf });\n            this.setValue(this._value, { onlySelf: onlySelf, emitEvent: emitEvent });\n        };\n        /**\n         * @return {?}\n         */\n        FormControl.prototype._updateValue = function () { };\n        /**\n         * @param {?} condition\n         * @return {?}\n         */\n        FormControl.prototype._anyControls = function (condition) { return false; };\n        /**\n         * @return {?}\n         */\n        FormControl.prototype._allControlsDisabled = function () { return this.disabled; };\n        /**\n         *  Register a listener for change events.\n         * @param {?} fn\n         * @return {?}\n         */\n        FormControl.prototype.registerOnChange = function (fn) { this._onChange.push(fn); };\n        /**\n         * @return {?}\n         */\n        FormControl.prototype._clearChangeFns = function () {\n            this._onChange = [];\n            this._onDisabledChange = [];\n            this._onCollectionChange = function () { };\n        };\n        /**\n         *  Register a listener for disabled events.\n         * @param {?} fn\n         * @return {?}\n         */\n        FormControl.prototype.registerOnDisabledChange = function (fn) {\n            this._onDisabledChange.push(fn);\n        };\n        /**\n         * @param {?} cb\n         * @return {?}\n         */\n        FormControl.prototype._forEachChild = function (cb) { };\n        /**\n         * @param {?} formState\n         * @return {?}\n         */\n        FormControl.prototype._applyFormState = function (formState) {\n            if (this._isBoxedValue(formState)) {\n                this._value = formState.value;\n                formState.disabled ? this.disable({ onlySelf: true, emitEvent: false }) :\n                    this.enable({ onlySelf: true, emitEvent: false });\n            }\n            else {\n                this._value = formState;\n            }\n        };\n        return FormControl;\n    }(AbstractControl));\n    /**\n     *  instances.\n      * *\n      * A `FormGroup` aggregates the values of each child {@link FormControl} into one object,\n      * with each control name as the key.  It calculates its status by reducing the statuses\n      * of its children. For example, if one of the controls in a group is invalid, the entire\n      * group becomes invalid.\n      * *\n      * `FormGroup` is one of the three fundamental building blocks used to define forms in Angular,\n      * along with {@link FormControl} and {@link FormArray}.\n      * *\n      * *\n      * When instantiating a {@link FormGroup}, pass in a collection of child controls as the first\n      * argument. The key for each child will be the name under which it is registered.\n      * *\n      * ### Example\n      * *\n      * ```\n      * const form = new FormGroup({\n      * first: new FormControl('Nancy', Validators.minLength(2)),\n      * last: new FormControl('Drew'),\n      * });\n      * *\n      * console.log(form.value);   // {first: 'Nancy', last; 'Drew'}\n      * console.log(form.status);  // 'VALID'\n      * ```\n      * *\n      * You can also include group-level validators as the second arg, or group-level async\n      * validators as the third arg. These come in handy when you want to perform validation\n      * that considers the value of more than one child control.\n      * *\n      * ### Example\n      * *\n      * ```\n      * const form = new FormGroup({\n      * password: new FormControl('', Validators.minLength(2)),\n      * passwordConfirm: new FormControl('', Validators.minLength(2)),\n      * }, passwordMatchValidator);\n      * *\n      * *\n      * function passwordMatchValidator(g: FormGroup) {\n      * return g.get('password').value === g.get('passwordConfirm').value\n      * ? null : {'mismatch': true};\n      * }\n      * ```\n      * *\n      * * **npm package**: `@angular/forms`\n      * *\n     */\n    var FormGroup = (function (_super) {\n        __extends$6(FormGroup, _super);\n        /**\n         * @param {?} controls\n         * @param {?=} validator\n         * @param {?=} asyncValidator\n         */\n        function FormGroup(controls, validator, asyncValidator) {\n            if (validator === void 0) { validator = null; }\n            if (asyncValidator === void 0) { asyncValidator = null; }\n            _super.call(this, validator, asyncValidator);\n            this.controls = controls;\n            this._initObservables();\n            this._setUpControls();\n            this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n        }\n        /**\n         *  Registers a control with the group's list of controls.\n          * *\n          * This method does not update value or validity of the control, so for\n          * most cases you'll want to use {@link FormGroup.addControl} instead.\n         * @param {?} name\n         * @param {?} control\n         * @return {?}\n         */\n        FormGroup.prototype.registerControl = function (name, control) {\n            if (this.controls[name])\n                return this.controls[name];\n            this.controls[name] = control;\n            control.setParent(this);\n            control._registerOnCollectionChange(this._onCollectionChange);\n            return control;\n        };\n        /**\n         *  Add a control to this group.\n         * @param {?} name\n         * @param {?} control\n         * @return {?}\n         */\n        FormGroup.prototype.addControl = function (name, control) {\n            this.registerControl(name, control);\n            this.updateValueAndValidity();\n            this._onCollectionChange();\n        };\n        /**\n         *  Remove a control from this group.\n         * @param {?} name\n         * @return {?}\n         */\n        FormGroup.prototype.removeControl = function (name) {\n            if (this.controls[name])\n                this.controls[name]._registerOnCollectionChange(function () { });\n            delete (this.controls[name]);\n            this.updateValueAndValidity();\n            this._onCollectionChange();\n        };\n        /**\n         *  Replace an existing control.\n         * @param {?} name\n         * @param {?} control\n         * @return {?}\n         */\n        FormGroup.prototype.setControl = function (name, control) {\n            if (this.controls[name])\n                this.controls[name]._registerOnCollectionChange(function () { });\n            delete (this.controls[name]);\n            if (control)\n                this.registerControl(name, control);\n            this.updateValueAndValidity();\n            this._onCollectionChange();\n        };\n        /**\n         *  Check whether there is an enabled control with the given name in the group.\n          * *\n          * It will return false for disabled controls. If you'd like to check for\n          * existence in the group only, use {@link AbstractControl.get} instead.\n         * @param {?} controlName\n         * @return {?}\n         */\n        FormGroup.prototype.contains = function (controlName) {\n            return this.controls.hasOwnProperty(controlName) && this.controls[controlName].enabled;\n        };\n        /**\n         *  Sets the value of the {@link FormGroup}. It accepts an object that matches\n          * the structure of the group, with control names as keys.\n          * *\n          * This method performs strict checks, so it will throw an error if you try\n          * to set the value of a control that doesn't exist or if you exclude the\n          * value of a control.\n          * *\n          * ### Example\n          * *\n          * ```\n          * const form = new FormGroup({\n          * first: new FormControl(),\n          * last: new FormControl()\n          * });\n          * console.log(form.value);   // {first: null, last: null}\n          * *\n          * form.setValue({first: 'Nancy', last: 'Drew'});\n          * console.log(form.value);   // {first: 'Nancy', last: 'Drew'}\n          * *\n          * ```\n         * @param {?} value\n         * @param {?=} __1\n         * @return {?}\n         */\n        FormGroup.prototype.setValue = function (value, _a) {\n            var _this = this;\n            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n            this._checkAllValuesPresent(value);\n            Object.keys(value).forEach(function (name) {\n                _this._throwIfControlMissing(name);\n                _this.controls[name].setValue(value[name], { onlySelf: true, emitEvent: emitEvent });\n            });\n            this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n        };\n        /**\n         *  Patches the value of the {@link FormGroup}. It accepts an object with control\n          * names as keys, and will do its best to match the values to the correct controls\n          * in the group.\n          * *\n          * It accepts both super-sets and sub-sets of the group without throwing an error.\n          * *\n          * ### Example\n          * *\n          * ```\n          * const form = new FormGroup({\n          * first: new FormControl(),\n          * last: new FormControl()\n          * });\n          * console.log(form.value);   // {first: null, last: null}\n          * *\n          * form.patchValue({first: 'Nancy'});\n          * console.log(form.value);   // {first: 'Nancy', last: null}\n          * *\n          * ```\n         * @param {?} value\n         * @param {?=} __1\n         * @return {?}\n         */\n        FormGroup.prototype.patchValue = function (value, _a) {\n            var _this = this;\n            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n            Object.keys(value).forEach(function (name) {\n                if (_this.controls[name]) {\n                    _this.controls[name].patchValue(value[name], { onlySelf: true, emitEvent: emitEvent });\n                }\n            });\n            this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n        };\n        /**\n         *  Resets the {@link FormGroup}. This means by default:\n          * *\n          * * The group and all descendants are marked `pristine`\n          * * The group and all descendants are marked `untouched`\n          * * The value of all descendants will be null or null maps\n          * *\n          * You can also reset to a specific form state by passing in a map of states\n          * that matches the structure of your form, with control names as keys. The state\n          * can be a standalone value or a form state object with both a value and a disabled\n          * status.\n          * *\n          * ### Example\n          * *\n          * ```ts\n          * this.form.reset({first: 'name', last: 'last name'});\n          * *\n          * console.log(this.form.value);  // {first: 'name', last: 'last name'}\n          * ```\n          * *\n          * - OR -\n          * *\n          * ```\n          * this.form.reset({\n          * first: {value: 'name', disabled: true},\n          * last: 'last'\n          * });\n          * *\n          * console.log(this.form.value);  // {first: 'name', last: 'last name'}\n          * console.log(this.form.get('first').status);  // 'DISABLED'\n          * ```\n         * @param {?=} value\n         * @param {?=} __1\n         * @return {?}\n         */\n        FormGroup.prototype.reset = function (value, _a) {\n            if (value === void 0) { value = {}; }\n            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n            this._forEachChild(function (control, name) {\n                control.reset(value[name], { onlySelf: true, emitEvent: emitEvent });\n            });\n            this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n            this._updatePristine({ onlySelf: onlySelf });\n            this._updateTouched({ onlySelf: onlySelf });\n        };\n        /**\n         *  The aggregate value of the {@link FormGroup}, including any disabled controls.\n          * *\n          * If you'd like to include all values regardless of disabled status, use this method.\n          * Otherwise, the `value` property is the best way to get the value of the group.\n         * @return {?}\n         */\n        FormGroup.prototype.getRawValue = function () {\n            return this._reduceChildren({}, function (acc, control, name) {\n                acc[name] = control.value;\n                return acc;\n            });\n        };\n        /**\n         * @param {?} name\n         * @return {?}\n         */\n        FormGroup.prototype._throwIfControlMissing = function (name) {\n            if (!Object.keys(this.controls).length) {\n                throw new Error(\"\\n        There are no form controls registered with this group yet.  If you're using ngModel,\\n        you may want to check next tick (e.g. use setTimeout).\\n      \");\n            }\n            if (!this.controls[name]) {\n                throw new Error(\"Cannot find form control with name: \" + name + \".\");\n            }\n        };\n        /**\n         * @param {?} cb\n         * @return {?}\n         */\n        FormGroup.prototype._forEachChild = function (cb) {\n            var _this = this;\n            Object.keys(this.controls).forEach(function (k) { return cb(_this.controls[k], k); });\n        };\n        /**\n         * @return {?}\n         */\n        FormGroup.prototype._setUpControls = function () {\n            var _this = this;\n            this._forEachChild(function (control) {\n                control.setParent(_this);\n                control._registerOnCollectionChange(_this._onCollectionChange);\n            });\n        };\n        /**\n         * @return {?}\n         */\n        FormGroup.prototype._updateValue = function () { this._value = this._reduceValue(); };\n        /**\n         * @param {?} condition\n         * @return {?}\n         */\n        FormGroup.prototype._anyControls = function (condition) {\n            var _this = this;\n            var /** @type {?} */ res = false;\n            this._forEachChild(function (control, name) {\n                res = res || (_this.contains(name) && condition(control));\n            });\n            return res;\n        };\n        /**\n         * @return {?}\n         */\n        FormGroup.prototype._reduceValue = function () {\n            var _this = this;\n            return this._reduceChildren({}, function (acc, control, name) {\n                if (control.enabled || _this.disabled) {\n                    acc[name] = control.value;\n                }\n                return acc;\n            });\n        };\n        /**\n         * @param {?} initValue\n         * @param {?} fn\n         * @return {?}\n         */\n        FormGroup.prototype._reduceChildren = function (initValue, fn) {\n            var /** @type {?} */ res = initValue;\n            this._forEachChild(function (control, name) { res = fn(res, control, name); });\n            return res;\n        };\n        /**\n         * @return {?}\n         */\n        FormGroup.prototype._allControlsDisabled = function () {\n            for (var _i = 0, _a = Object.keys(this.controls); _i < _a.length; _i++) {\n                var controlName = _a[_i];\n                if (this.controls[controlName].enabled) {\n                    return false;\n                }\n            }\n            return Object.keys(this.controls).length > 0 || this.disabled;\n        };\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        FormGroup.prototype._checkAllValuesPresent = function (value) {\n            this._forEachChild(function (control, name) {\n                if (value[name] === undefined) {\n                    throw new Error(\"Must supply a value for form control with name: '\" + name + \"'.\");\n                }\n            });\n        };\n        return FormGroup;\n    }(AbstractControl));\n    /**\n     *  instances.\n      * *\n      * A `FormArray` aggregates the values of each child {@link FormControl} into an array.\n      * It calculates its status by reducing the statuses of its children. For example, if one of\n      * the controls in a `FormArray` is invalid, the entire array becomes invalid.\n      * *\n      * `FormArray` is one of the three fundamental building blocks used to define forms in Angular,\n      * along with {@link FormControl} and {@link FormGroup}.\n      * *\n      * *\n      * When instantiating a {@link FormArray}, pass in an array of child controls as the first\n      * argument.\n      * *\n      * ### Example\n      * *\n      * ```\n      * const arr = new FormArray([\n      * new FormControl('Nancy', Validators.minLength(2)),\n      * new FormControl('Drew'),\n      * ]);\n      * *\n      * console.log(arr.value);   // ['Nancy', 'Drew']\n      * console.log(arr.status);  // 'VALID'\n      * ```\n      * *\n      * You can also include array-level validators as the second arg, or array-level async\n      * validators as the third arg. These come in handy when you want to perform validation\n      * that considers the value of more than one child control.\n      * *\n      * ### Adding or removing controls\n      * *\n      * To change the controls in the array, use the `push`, `insert`, or `removeAt` methods\n      * in `FormArray` itself. These methods ensure the controls are properly tracked in the\n      * form's hierarchy. Do not modify the array of `AbstractControl`s used to instantiate\n      * the `FormArray` directly, as that will result in strange and unexpected behavior such\n      * as broken change detection.\n      * *\n      * * **npm package**: `@angular/forms`\n      * *\n     */\n    var FormArray = (function (_super) {\n        __extends$6(FormArray, _super);\n        /**\n         * @param {?} controls\n         * @param {?=} validator\n         * @param {?=} asyncValidator\n         */\n        function FormArray(controls, validator, asyncValidator) {\n            if (validator === void 0) { validator = null; }\n            if (asyncValidator === void 0) { asyncValidator = null; }\n            _super.call(this, validator, asyncValidator);\n            this.controls = controls;\n            this._initObservables();\n            this._setUpControls();\n            this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n        }\n        /**\n         *  Get the {@link AbstractControl} at the given `index` in the array.\n         * @param {?} index\n         * @return {?}\n         */\n        FormArray.prototype.at = function (index) { return this.controls[index]; };\n        /**\n         *  Insert a new {@link AbstractControl} at the end of the array.\n         * @param {?} control\n         * @return {?}\n         */\n        FormArray.prototype.push = function (control) {\n            this.controls.push(control);\n            this._registerControl(control);\n            this.updateValueAndValidity();\n            this._onCollectionChange();\n        };\n        /**\n         *  Insert a new {@link AbstractControl} at the given `index` in the array.\n         * @param {?} index\n         * @param {?} control\n         * @return {?}\n         */\n        FormArray.prototype.insert = function (index, control) {\n            this.controls.splice(index, 0, control);\n            this._registerControl(control);\n            this.updateValueAndValidity();\n            this._onCollectionChange();\n        };\n        /**\n         *  Remove the control at the given `index` in the array.\n         * @param {?} index\n         * @return {?}\n         */\n        FormArray.prototype.removeAt = function (index) {\n            if (this.controls[index])\n                this.controls[index]._registerOnCollectionChange(function () { });\n            this.controls.splice(index, 1);\n            this.updateValueAndValidity();\n            this._onCollectionChange();\n        };\n        /**\n         *  Replace an existing control.\n         * @param {?} index\n         * @param {?} control\n         * @return {?}\n         */\n        FormArray.prototype.setControl = function (index, control) {\n            if (this.controls[index])\n                this.controls[index]._registerOnCollectionChange(function () { });\n            this.controls.splice(index, 1);\n            if (control) {\n                this.controls.splice(index, 0, control);\n                this._registerControl(control);\n            }\n            this.updateValueAndValidity();\n            this._onCollectionChange();\n        };\n        Object.defineProperty(FormArray.prototype, \"length\", {\n            /**\n             *  Length of the control array.\n             * @return {?}\n             */\n            get: function () { return this.controls.length; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         *  Sets the value of the {@link FormArray}. It accepts an array that matches\n          * the structure of the control.\n          * *\n          * This method performs strict checks, so it will throw an error if you try\n          * to set the value of a control that doesn't exist or if you exclude the\n          * value of a control.\n          * *\n          * ### Example\n          * *\n          * ```\n          * const arr = new FormArray([\n          * new FormControl(),\n          * new FormControl()\n          * ]);\n          * console.log(arr.value);   // [null, null]\n          * *\n          * arr.setValue(['Nancy', 'Drew']);\n          * console.log(arr.value);   // ['Nancy', 'Drew']\n          * ```\n         * @param {?} value\n         * @param {?=} __1\n         * @return {?}\n         */\n        FormArray.prototype.setValue = function (value, _a) {\n            var _this = this;\n            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n            this._checkAllValuesPresent(value);\n            value.forEach(function (newValue, index) {\n                _this._throwIfControlMissing(index);\n                _this.at(index).setValue(newValue, { onlySelf: true, emitEvent: emitEvent });\n            });\n            this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n        };\n        /**\n         *  Patches the value of the {@link FormArray}. It accepts an array that matches the\n          * structure of the control, and will do its best to match the values to the correct\n          * controls in the group.\n          * *\n          * It accepts both super-sets and sub-sets of the array without throwing an error.\n          * *\n          * ### Example\n          * *\n          * ```\n          * const arr = new FormArray([\n          * new FormControl(),\n          * new FormControl()\n          * ]);\n          * console.log(arr.value);   // [null, null]\n          * *\n          * arr.patchValue(['Nancy']);\n          * console.log(arr.value);   // ['Nancy', null]\n          * ```\n         * @param {?} value\n         * @param {?=} __1\n         * @return {?}\n         */\n        FormArray.prototype.patchValue = function (value, _a) {\n            var _this = this;\n            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n            value.forEach(function (newValue, index) {\n                if (_this.at(index)) {\n                    _this.at(index).patchValue(newValue, { onlySelf: true, emitEvent: emitEvent });\n                }\n            });\n            this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n        };\n        /**\n         *  Resets the {@link FormArray}. This means by default:\n          * *\n          * * The array and all descendants are marked `pristine`\n          * * The array and all descendants are marked `untouched`\n          * * The value of all descendants will be null or null maps\n          * *\n          * You can also reset to a specific form state by passing in an array of states\n          * that matches the structure of the control. The state can be a standalone value\n          * or a form state object with both a value and a disabled status.\n          * *\n          * ### Example\n          * *\n          * ```ts\n          * this.arr.reset(['name', 'last name']);\n          * *\n          * console.log(this.arr.value);  // ['name', 'last name']\n          * ```\n          * *\n          * - OR -\n          * *\n          * ```\n          * this.arr.reset([\n          * {value: 'name', disabled: true},\n          * 'last'\n          * ]);\n          * *\n          * console.log(this.arr.value);  // ['name', 'last name']\n          * console.log(this.arr.get(0).status);  // 'DISABLED'\n          * ```\n         * @param {?=} value\n         * @param {?=} __1\n         * @return {?}\n         */\n        FormArray.prototype.reset = function (value, _a) {\n            if (value === void 0) { value = []; }\n            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n            this._forEachChild(function (control, index) {\n                control.reset(value[index], { onlySelf: true, emitEvent: emitEvent });\n            });\n            this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n            this._updatePristine({ onlySelf: onlySelf });\n            this._updateTouched({ onlySelf: onlySelf });\n        };\n        /**\n         *  The aggregate value of the array, including any disabled controls.\n          * *\n          * If you'd like to include all values regardless of disabled status, use this method.\n          * Otherwise, the `value` property is the best way to get the value of the array.\n         * @return {?}\n         */\n        FormArray.prototype.getRawValue = function () { return this.controls.map(function (control) { return control.value; }); };\n        /**\n         * @param {?} index\n         * @return {?}\n         */\n        FormArray.prototype._throwIfControlMissing = function (index) {\n            if (!this.controls.length) {\n                throw new Error(\"\\n        There are no form controls registered with this array yet.  If you're using ngModel,\\n        you may want to check next tick (e.g. use setTimeout).\\n      \");\n            }\n            if (!this.at(index)) {\n                throw new Error(\"Cannot find form control at index \" + index);\n            }\n        };\n        /**\n         * @param {?} cb\n         * @return {?}\n         */\n        FormArray.prototype._forEachChild = function (cb) {\n            this.controls.forEach(function (control, index) { cb(control, index); });\n        };\n        /**\n         * @return {?}\n         */\n        FormArray.prototype._updateValue = function () {\n            var _this = this;\n            this._value = this.controls.filter(function (control) { return control.enabled || _this.disabled; })\n                .map(function (control) { return control.value; });\n        };\n        /**\n         * @param {?} condition\n         * @return {?}\n         */\n        FormArray.prototype._anyControls = function (condition) {\n            return this.controls.some(function (control) { return control.enabled && condition(control); });\n        };\n        /**\n         * @return {?}\n         */\n        FormArray.prototype._setUpControls = function () {\n            var _this = this;\n            this._forEachChild(function (control) { return _this._registerControl(control); });\n        };\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        FormArray.prototype._checkAllValuesPresent = function (value) {\n            this._forEachChild(function (control, i) {\n                if (value[i] === undefined) {\n                    throw new Error(\"Must supply a value for form control at index: \" + i + \".\");\n                }\n            });\n        };\n        /**\n         * @return {?}\n         */\n        FormArray.prototype._allControlsDisabled = function () {\n            for (var _i = 0, _a = this.controls; _i < _a.length; _i++) {\n                var control = _a[_i];\n                if (control.enabled)\n                    return false;\n            }\n            return this.controls.length > 0 || this.disabled;\n        };\n        /**\n         * @param {?} control\n         * @return {?}\n         */\n        FormArray.prototype._registerControl = function (control) {\n            control.setParent(this);\n            control._registerOnCollectionChange(this._onCollectionChange);\n        };\n        return FormArray;\n    }(AbstractControl));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$4 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var /** @type {?} */ formDirectiveProvider = {\n        provide: ControlContainer,\n        useExisting: _angular_core.forwardRef(function () { return NgForm; })\n    };\n    var /** @type {?} */ resolvedPromise = Promise.resolve(null);\n    /**\n     *  to track aggregate form value and validation status.\n      * *\n      * *\n      * As soon as you import the `FormsModule`, this directive becomes active by default on\n      * all `<form>` tags.  You don't need to add a special selector.\n      * *\n      * You can export the directive into a local template variable using `ngForm` as the key\n      * (ex: `#myForm=\"ngForm\"`). This is optional, but useful.  Many properties from the underlying\n      * {@link FormGroup} instance are duplicated on the directive itself, so a reference to it\n      * will give you access to the aggregate value and validity status of the form, as well as\n      * user interaction properties like `dirty` and `touched`.\n      * *\n      * To register child controls with the form, you'll want to use {@link NgModel} with a\n      * `name` attribute.  You can also use {@link NgModelGroup} if you'd like to create\n      * sub-groups within the form.\n      * *\n      * You can listen to the directive's `ngSubmit` event to be notified when the user has\n      * triggered a form submission. The `ngSubmit` event will be emitted with the original form\n      * submission event.\n      * *\n      * {@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n      * *\n      * * **npm package**: `@angular/forms`\n      * *\n      * * **NgModule**: `FormsModule`\n      * *\n      * @stable\n     */\n    var NgForm = (function (_super) {\n        __extends$4(NgForm, _super);\n        /**\n         * @param {?} validators\n         * @param {?} asyncValidators\n         */\n        function NgForm(validators, asyncValidators) {\n            _super.call(this);\n            this._submitted = false;\n            this.ngSubmit = new EventEmitter();\n            this.form =\n                new FormGroup({}, composeValidators(validators), composeAsyncValidators(asyncValidators));\n        }\n        Object.defineProperty(NgForm.prototype, \"submitted\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._submitted; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgForm.prototype, \"formDirective\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgForm.prototype, \"control\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.form; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgForm.prototype, \"path\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return []; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgForm.prototype, \"controls\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.form.controls; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @param {?} dir\n         * @return {?}\n         */\n        NgForm.prototype.addControl = function (dir) {\n            var _this = this;\n            resolvedPromise.then(function () {\n                var /** @type {?} */ container = _this._findContainer(dir.path);\n                dir._control = (container.registerControl(dir.name, dir.control));\n                setUpControl(dir.control, dir);\n                dir.control.updateValueAndValidity({ emitEvent: false });\n            });\n        };\n        /**\n         * @param {?} dir\n         * @return {?}\n         */\n        NgForm.prototype.getControl = function (dir) { return (this.form.get(dir.path)); };\n        /**\n         * @param {?} dir\n         * @return {?}\n         */\n        NgForm.prototype.removeControl = function (dir) {\n            var _this = this;\n            resolvedPromise.then(function () {\n                var /** @type {?} */ container = _this._findContainer(dir.path);\n                if (container) {\n                    container.removeControl(dir.name);\n                }\n            });\n        };\n        /**\n         * @param {?} dir\n         * @return {?}\n         */\n        NgForm.prototype.addFormGroup = function (dir) {\n            var _this = this;\n            resolvedPromise.then(function () {\n                var /** @type {?} */ container = _this._findContainer(dir.path);\n                var /** @type {?} */ group = new FormGroup({});\n                setUpFormContainer(group, dir);\n                container.registerControl(dir.name, group);\n                group.updateValueAndValidity({ emitEvent: false });\n            });\n        };\n        /**\n         * @param {?} dir\n         * @return {?}\n         */\n        NgForm.prototype.removeFormGroup = function (dir) {\n            var _this = this;\n            resolvedPromise.then(function () {\n                var /** @type {?} */ container = _this._findContainer(dir.path);\n                if (container) {\n                    container.removeControl(dir.name);\n                }\n            });\n        };\n        /**\n         * @param {?} dir\n         * @return {?}\n         */\n        NgForm.prototype.getFormGroup = function (dir) { return (this.form.get(dir.path)); };\n        /**\n         * @param {?} dir\n         * @param {?} value\n         * @return {?}\n         */\n        NgForm.prototype.updateModel = function (dir, value) {\n            var _this = this;\n            resolvedPromise.then(function () {\n                var /** @type {?} */ ctrl = (_this.form.get(dir.path));\n                ctrl.setValue(value);\n            });\n        };\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        NgForm.prototype.setValue = function (value) { this.control.setValue(value); };\n        /**\n         * @param {?} $event\n         * @return {?}\n         */\n        NgForm.prototype.onSubmit = function ($event) {\n            this._submitted = true;\n            this.ngSubmit.emit($event);\n            return false;\n        };\n        /**\n         * @return {?}\n         */\n        NgForm.prototype.onReset = function () { this.resetForm(); };\n        /**\n         * @param {?=} value\n         * @return {?}\n         */\n        NgForm.prototype.resetForm = function (value) {\n            if (value === void 0) { value = undefined; }\n            this.form.reset(value);\n            this._submitted = false;\n        };\n        /**\n         * @param {?} path\n         * @return {?}\n         */\n        NgForm.prototype._findContainer = function (path) {\n            path.pop();\n            return path.length ? (this.form.get(path)) : this.form;\n        };\n        NgForm.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: 'form:not([ngNoForm]):not([formGroup]),ngForm,[ngForm]',\n                        providers: [formDirectiveProvider],\n                        host: { '(submit)': 'onSubmit($event)', '(reset)': 'onReset()' },\n                        outputs: ['ngSubmit'],\n                        exportAs: 'ngForm'\n                    },] },\n        ];\n        /** @nocollapse */\n        NgForm.ctorParameters = function () { return [\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n        ]; };\n        return NgForm;\n    }(ControlContainer));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var /** @type {?} */ Examples = {\n        formControlName: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n      <input formControlName=\\\"firstName\\\">\\n    </div>\\n\\n    In your class:\\n\\n    this.myGroup = new FormGroup({\\n       firstName: new FormControl()\\n    });\",\n        formGroupName: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n       <div formGroupName=\\\"person\\\">\\n          <input formControlName=\\\"firstName\\\">\\n       </div>\\n    </div>\\n\\n    In your class:\\n\\n    this.myGroup = new FormGroup({\\n       person: new FormGroup({ firstName: new FormControl() })\\n    });\",\n        formArrayName: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n      <div formArrayName=\\\"cities\\\">\\n        <div *ngFor=\\\"let city of cityArray.controls; let i=index\\\">\\n          <input [formControlName]=\\\"i\\\">\\n        </div>\\n      </div>\\n    </div>\\n\\n    In your class:\\n\\n    this.cityArray = new FormArray([new FormControl('SF')]);\\n    this.myGroup = new FormGroup({\\n      cities: this.cityArray\\n    });\",\n        ngModelGroup: \"\\n    <form>\\n       <div ngModelGroup=\\\"person\\\">\\n          <input [(ngModel)]=\\\"person.name\\\" name=\\\"firstName\\\">\\n       </div>\\n    </form>\",\n        ngModelWithFormGroup: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n       <input formControlName=\\\"firstName\\\">\\n       <input [(ngModel)]=\\\"showMoreControls\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n    </div>\\n  \"\n    };\n\n    var TemplateDrivenErrors = (function () {\n        function TemplateDrivenErrors() {\n        }\n        /**\n         * @return {?}\n         */\n        TemplateDrivenErrors.modelParentException = function () {\n            throw new Error(\"\\n      ngModel cannot be used to register form controls with a parent formGroup directive.  Try using\\n      formGroup's partner directive \\\"formControlName\\\" instead.  Example:\\n\\n      \" + Examples.formControlName + \"\\n\\n      Or, if you'd like to avoid registering this form control, indicate that it's standalone in ngModelOptions:\\n\\n      Example:\\n\\n      \" + Examples.ngModelWithFormGroup);\n        };\n        /**\n         * @return {?}\n         */\n        TemplateDrivenErrors.formGroupNameException = function () {\n            throw new Error(\"\\n      ngModel cannot be used to register form controls with a parent formGroupName or formArrayName directive.\\n\\n      Option 1: Use formControlName instead of ngModel (reactive strategy):\\n\\n      \" + Examples.formGroupName + \"\\n\\n      Option 2:  Update ngModel's parent be ngModelGroup (template-driven strategy):\\n\\n      \" + Examples.ngModelGroup);\n        };\n        /**\n         * @return {?}\n         */\n        TemplateDrivenErrors.missingNameException = function () {\n            throw new Error(\"If ngModel is used within a form tag, either the name attribute must be set or the form\\n      control must be defined as 'standalone' in ngModelOptions.\\n\\n      Example 1: <input [(ngModel)]=\\\"person.firstName\\\" name=\\\"first\\\">\\n      Example 2: <input [(ngModel)]=\\\"person.firstName\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\");\n        };\n        /**\n         * @return {?}\n         */\n        TemplateDrivenErrors.modelGroupParentException = function () {\n            throw new Error(\"\\n      ngModelGroup cannot be used with a parent formGroup directive.\\n\\n      Option 1: Use formGroupName instead of ngModelGroup (reactive strategy):\\n\\n      \" + Examples.formGroupName + \"\\n\\n      Option 2:  Use a regular form tag instead of the formGroup directive (template-driven strategy):\\n\\n      \" + Examples.ngModelGroup);\n        };\n        return TemplateDrivenErrors;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$8 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var /** @type {?} */ modelGroupProvider = {\n        provide: ControlContainer,\n        useExisting: _angular_core.forwardRef(function () { return NgModelGroup; })\n    };\n    /**\n     *  *\n      * *\n      * This directive can only be used as a child of {@link NgForm} (or in other words,\n      * within `<form>` tags).\n      * *\n      * Use this directive if you'd like to create a sub-group within a form. This can\n      * come in handy if you want to validate a sub-group of your form separately from\n      * the rest of your form, or if some values in your domain model make more sense to\n      * consume together in a nested object.\n      * *\n      * Pass in the name you'd like this sub-group to have and it will become the key\n      * for the sub-group in the form's full value. You can also export the directive into\n      * a local template variable using `ngModelGroup` (ex: `#myGroup=\"ngModelGroup\"`).\n      * *\n      * {@example forms/ts/ngModelGroup/ng_model_group_example.ts region='Component'}\n      * *\n      * * **npm package**: `@angular/forms`\n      * *\n      * * **NgModule**: `FormsModule`\n      * *\n     */\n    var NgModelGroup = (function (_super) {\n        __extends$8(NgModelGroup, _super);\n        /**\n         * @param {?} parent\n         * @param {?} validators\n         * @param {?} asyncValidators\n         */\n        function NgModelGroup(parent, validators, asyncValidators) {\n            _super.call(this);\n            this._parent = parent;\n            this._validators = validators;\n            this._asyncValidators = asyncValidators;\n        }\n        /**\n         * @return {?}\n         */\n        NgModelGroup.prototype._checkParentType = function () {\n            if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm)) {\n                TemplateDrivenErrors.modelGroupParentException();\n            }\n        };\n        NgModelGroup.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[ngModelGroup]', providers: [modelGroupProvider], exportAs: 'ngModelGroup' },] },\n        ];\n        /** @nocollapse */\n        NgModelGroup.ctorParameters = function () { return [\n            { type: ControlContainer, decorators: [{ type: _angular_core.Host }, { type: _angular_core.SkipSelf },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n        ]; };\n        NgModelGroup.propDecorators = {\n            'name': [{ type: _angular_core.Input, args: ['ngModelGroup',] },],\n        };\n        return NgModelGroup;\n    }(AbstractFormGroupDirective));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$7 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var /** @type {?} */ formControlBinding = {\n        provide: NgControl,\n        useExisting: _angular_core.forwardRef(function () { return NgModel; })\n    };\n    /**\n     * `ngModel` forces an additional change detection run when its inputs change:\n     * E.g.:\n     * ```\n     * <div>{{myModel.valid}}</div>\n     * <input [(ngModel)]=\"myValue\" #myModel=\"ngModel\">\n     * ```\n     * I.e. `ngModel` can export itself on the element and then be used in the template.\n     * Normally, this would result in expressions before the `input` that use the exported directive\n     * to have and old value as they have been\n     * dirty checked before. As this is a very common case for `ngModel`, we added this second change\n     * detection run.\n     *\n     * Notes:\n     * - this is just one extra run no matter how many `ngModel` have been changed.\n     * - this is a general problem when using `exportAs` for directives!\n     */\n    var /** @type {?} */ resolvedPromise$1 = Promise.resolve(null);\n    /**\n     *  to a form control element.\n      * *\n      * The {@link FormControl} instance will track the value, user interaction, and\n      * validation status of the control and keep the view synced with the model. If used\n      * within a parent form, the directive will also register itself with the form as a child\n      * control.\n      * *\n      * *\n      * This directive can be used by itself or as part of a larger form. All you need is the\n      * `ngModel` selector to activate it.\n      * *\n      * It accepts a domain model as an optional {@link @Input}. If you have a one-way binding\n      * to `ngModel` with `[]` syntax, changing the value of the domain model in the component\n      * class will set the value in the view. If you have a two-way binding with `[()]` syntax\n      * (also known as 'banana-box syntax'), the value in the UI will always be synced back to\n      * the domain model in your class as well.\n      * *\n      * If you wish to inspect the properties of the associated {@link FormControl} (like\n      * validity state), you can also export the directive into a local template variable using\n      * `ngModel` as the key (ex: `#myVar=\"ngModel\"`). You can then access the control using the\n      * directive's `control` property, but most properties you'll need (like `valid` and `dirty`)\n      * will fall through to the control anyway, so you can access them directly. You can see a\n      * full list of properties directly available in {@link AbstractControlDirective}.\n      * *\n      * The following is an example of a simple standalone control using `ngModel`:\n      * *\n      * {@example forms/ts/simpleNgModel/simple_ng_model_example.ts region='Component'}\n      * *\n      * When using the `ngModel` within `<form>` tags, you'll also need to supply a `name` attribute\n      * so that the control can be registered with the parent form under that name.\n      * *\n      * It's worth noting that in the context of a parent form, you often can skip one-way or\n      * two-way binding because the parent form will sync the value for you. You can access\n      * its properties by exporting it into a local template variable using `ngForm` (ex:\n      * `#f=\"ngForm\"`). Then you can pass it where it needs to go on submit.\n      * *\n      * If you do need to populate initial values into your form, using a one-way binding for\n      * `ngModel` tends to be sufficient as long as you use the exported form's value rather\n      * than the domain model's value on submit.\n      * *\n      * Take a look at an example of using `ngModel` within a form:\n      * *\n      * {@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n      * *\n      * To see `ngModel` examples with different form control types, see:\n      * *\n      * * Radio buttons: {@link RadioControlValueAccessor}\n      * * Selects: {@link SelectControlValueAccessor}\n      * *\n      * **npm package**: `@angular/forms`\n      * *\n      * **NgModule**: `FormsModule`\n      * *\n      * @stable\n     */\n    var NgModel = (function (_super) {\n        __extends$7(NgModel, _super);\n        /**\n         * @param {?} parent\n         * @param {?} validators\n         * @param {?} asyncValidators\n         * @param {?} valueAccessors\n         */\n        function NgModel(parent, validators, asyncValidators, valueAccessors) {\n            _super.call(this);\n            /** @internal */\n            this._control = new FormControl();\n            /** @internal */\n            this._registered = false;\n            this.update = new EventEmitter();\n            this._parent = parent;\n            this._rawValidators = validators || [];\n            this._rawAsyncValidators = asyncValidators || [];\n            this.valueAccessor = selectValueAccessor(this, valueAccessors);\n        }\n        /**\n         * @param {?} changes\n         * @return {?}\n         */\n        NgModel.prototype.ngOnChanges = function (changes) {\n            this._checkForErrors();\n            if (!this._registered)\n                this._setUpControl();\n            if ('isDisabled' in changes) {\n                this._updateDisabled(changes);\n            }\n            if (isPropertyUpdated(changes, this.viewModel)) {\n                this._updateValue(this.model);\n                this.viewModel = this.model;\n            }\n        };\n        /**\n         * @return {?}\n         */\n        NgModel.prototype.ngOnDestroy = function () { this.formDirective && this.formDirective.removeControl(this); };\n        Object.defineProperty(NgModel.prototype, \"control\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._control; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModel.prototype, \"path\", {\n            /**\n             * @return {?}\n             */\n            get: function () {\n                return this._parent ? controlPath(this.name, this._parent) : [this.name];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModel.prototype, \"formDirective\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._parent ? this._parent.formDirective : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModel.prototype, \"validator\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return composeValidators(this._rawValidators); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModel.prototype, \"asyncValidator\", {\n            /**\n             * @return {?}\n             */\n            get: function () {\n                return composeAsyncValidators(this._rawAsyncValidators);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @param {?} newValue\n         * @return {?}\n         */\n        NgModel.prototype.viewToModelUpdate = function (newValue) {\n            this.viewModel = newValue;\n            this.update.emit(newValue);\n        };\n        /**\n         * @return {?}\n         */\n        NgModel.prototype._setUpControl = function () {\n            this._isStandalone() ? this._setUpStandalone() :\n                this.formDirective.addControl(this);\n            this._registered = true;\n        };\n        /**\n         * @return {?}\n         */\n        NgModel.prototype._isStandalone = function () {\n            return !this._parent || (this.options && this.options.standalone);\n        };\n        /**\n         * @return {?}\n         */\n        NgModel.prototype._setUpStandalone = function () {\n            setUpControl(this._control, this);\n            this._control.updateValueAndValidity({ emitEvent: false });\n        };\n        /**\n         * @return {?}\n         */\n        NgModel.prototype._checkForErrors = function () {\n            if (!this._isStandalone()) {\n                this._checkParentType();\n            }\n            this._checkName();\n        };\n        /**\n         * @return {?}\n         */\n        NgModel.prototype._checkParentType = function () {\n            if (!(this._parent instanceof NgModelGroup) &&\n                this._parent instanceof AbstractFormGroupDirective) {\n                TemplateDrivenErrors.formGroupNameException();\n            }\n            else if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm)) {\n                TemplateDrivenErrors.modelParentException();\n            }\n        };\n        /**\n         * @return {?}\n         */\n        NgModel.prototype._checkName = function () {\n            if (this.options && this.options.name)\n                this.name = this.options.name;\n            if (!this._isStandalone() && !this.name) {\n                TemplateDrivenErrors.missingNameException();\n            }\n        };\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        NgModel.prototype._updateValue = function (value) {\n            var _this = this;\n            resolvedPromise$1.then(function () { _this.control.setValue(value, { emitViewToModelChange: false }); });\n        };\n        /**\n         * @param {?} changes\n         * @return {?}\n         */\n        NgModel.prototype._updateDisabled = function (changes) {\n            var _this = this;\n            var /** @type {?} */ disabledValue = changes['isDisabled'].currentValue;\n            var /** @type {?} */ isDisabled = disabledValue === '' || (disabledValue && disabledValue !== 'false');\n            resolvedPromise$1.then(function () {\n                if (isDisabled && !_this.control.disabled) {\n                    _this.control.disable();\n                }\n                else if (!isDisabled && _this.control.disabled) {\n                    _this.control.enable();\n                }\n            });\n        };\n        NgModel.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: '[ngModel]:not([formControlName]):not([formControl])',\n                        providers: [formControlBinding],\n                        exportAs: 'ngModel'\n                    },] },\n        ];\n        /** @nocollapse */\n        NgModel.ctorParameters = function () { return [\n            { type: ControlContainer, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Host },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALUE_ACCESSOR,] },] },\n        ]; };\n        NgModel.propDecorators = {\n            'name': [{ type: _angular_core.Input },],\n            'isDisabled': [{ type: _angular_core.Input, args: ['disabled',] },],\n            'model': [{ type: _angular_core.Input, args: ['ngModel',] },],\n            'options': [{ type: _angular_core.Input, args: ['ngModelOptions',] },],\n            'update': [{ type: _angular_core.Output, args: ['ngModelChange',] },],\n        };\n        return NgModel;\n    }(NgControl));\n\n    var ReactiveErrors = (function () {\n        function ReactiveErrors() {\n        }\n        /**\n         * @return {?}\n         */\n        ReactiveErrors.controlParentException = function () {\n            throw new Error(\"formControlName must be used with a parent formGroup directive.  You'll want to add a formGroup\\n       directive and pass it an existing FormGroup instance (you can create one in your class).\\n\\n      Example:\\n\\n      \" + Examples.formControlName);\n        };\n        /**\n         * @return {?}\n         */\n        ReactiveErrors.ngModelGroupException = function () {\n            throw new Error(\"formControlName cannot be used with an ngModelGroup parent. It is only compatible with parents\\n       that also have a \\\"form\\\" prefix: formGroupName, formArrayName, or formGroup.\\n\\n       Option 1:  Update the parent to be formGroupName (reactive form strategy)\\n\\n        \" + Examples.formGroupName + \"\\n\\n        Option 2: Use ngModel instead of formControlName (template-driven strategy)\\n\\n        \" + Examples.ngModelGroup);\n        };\n        /**\n         * @return {?}\n         */\n        ReactiveErrors.missingFormException = function () {\n            throw new Error(\"formGroup expects a FormGroup instance. Please pass one in.\\n\\n       Example:\\n\\n       \" + Examples.formControlName);\n        };\n        /**\n         * @return {?}\n         */\n        ReactiveErrors.groupParentException = function () {\n            throw new Error(\"formGroupName must be used with a parent formGroup directive.  You'll want to add a formGroup\\n      directive and pass it an existing FormGroup instance (you can create one in your class).\\n\\n      Example:\\n\\n      \" + Examples.formGroupName);\n        };\n        /**\n         * @return {?}\n         */\n        ReactiveErrors.arrayParentException = function () {\n            throw new Error(\"formArrayName must be used with a parent formGroup directive.  You'll want to add a formGroup\\n       directive and pass it an existing FormGroup instance (you can create one in your class).\\n\\n        Example:\\n\\n        \" + Examples.formArrayName);\n        };\n        /**\n         * @return {?}\n         */\n        ReactiveErrors.disabledAttrWarning = function () {\n            console.warn(\"\\n      It looks like you're using the disabled attribute with a reactive form directive. If you set disabled to true\\n      when you set up this control in your component class, the disabled attribute will actually be set in the DOM for\\n      you. We recommend using this approach to avoid 'changed after checked' errors.\\n       \\n      Example: \\n      form = new FormGroup({\\n        first: new FormControl({value: 'Nancy', disabled: true}, Validators.required),\\n        last: new FormControl('Drew', Validators.required)\\n      });\\n    \");\n        };\n        return ReactiveErrors;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$9 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var /** @type {?} */ formControlBinding$1 = {\n        provide: NgControl,\n        useExisting: _angular_core.forwardRef(function () { return FormControlDirective; })\n    };\n    /**\n     *  *\n      * In other words, this directive ensures that any values written to the {@link FormControl}\n      * instance programmatically will be written to the DOM element (model -> view). Conversely,\n      * any values written to the DOM element through user input will be reflected in the\n      * {@link FormControl} instance (view -> model).\n      * *\n      * *\n      * Use this directive if you'd like to create and manage a {@link FormControl} instance directly.\n      * Simply create a {@link FormControl}, save it to your component class, and pass it into the\n      * {@link FormControlDirective}.\n      * *\n      * This directive is designed to be used as a standalone control.  Unlike {@link FormControlName},\n      * it does not require that your {@link FormControl} instance be part of any parent\n      * {@link FormGroup}, and it won't be registered to any {@link FormGroupDirective} that\n      * exists above it.\n      * *\n      * **Get the value**: the `value` property is always synced and available on the\n      * {@link FormControl} instance. See a full list of available properties in\n      * {@link AbstractControl}.\n      * *\n      * **Set the value**: You can pass in an initial value when instantiating the {@link FormControl},\n      * or you can set it programmatically later using {@link AbstractControl.setValue} or\n      * {@link AbstractControl.patchValue}.\n      * *\n      * **Listen to value**: If you want to listen to changes in the value of the control, you can\n      * subscribe to the {@link AbstractControl.valueChanges} event.  You can also listen to\n      * {@link AbstractControl.statusChanges} to be notified when the validation status is\n      * re-calculated.\n      * *\n      * ### Example\n      * *\n      * {@example forms/ts/simpleFormControl/simple_form_control_example.ts region='Component'}\n      * *\n      * * **npm package**: `@angular/forms`\n      * *\n      * * **NgModule**: `ReactiveFormsModule`\n      * *\n      * @stable\n     */\n    var FormControlDirective = (function (_super) {\n        __extends$9(FormControlDirective, _super);\n        /**\n         * @param {?} validators\n         * @param {?} asyncValidators\n         * @param {?} valueAccessors\n         */\n        function FormControlDirective(validators, asyncValidators, valueAccessors) {\n            _super.call(this);\n            this.update = new EventEmitter();\n            this._rawValidators = validators || [];\n            this._rawAsyncValidators = asyncValidators || [];\n            this.valueAccessor = selectValueAccessor(this, valueAccessors);\n        }\n        Object.defineProperty(FormControlDirective.prototype, \"isDisabled\", {\n            /**\n             * @param {?} isDisabled\n             * @return {?}\n             */\n            set: function (isDisabled) { ReactiveErrors.disabledAttrWarning(); },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @param {?} changes\n         * @return {?}\n         */\n        FormControlDirective.prototype.ngOnChanges = function (changes) {\n            if (this._isControlChanged(changes)) {\n                setUpControl(this.form, this);\n                if (this.control.disabled && this.valueAccessor.setDisabledState) {\n                    this.valueAccessor.setDisabledState(true);\n                }\n                this.form.updateValueAndValidity({ emitEvent: false });\n            }\n            if (isPropertyUpdated(changes, this.viewModel)) {\n                this.form.setValue(this.model);\n                this.viewModel = this.model;\n            }\n        };\n        Object.defineProperty(FormControlDirective.prototype, \"path\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return []; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormControlDirective.prototype, \"validator\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return composeValidators(this._rawValidators); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormControlDirective.prototype, \"asyncValidator\", {\n            /**\n             * @return {?}\n             */\n            get: function () {\n                return composeAsyncValidators(this._rawAsyncValidators);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormControlDirective.prototype, \"control\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.form; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @param {?} newValue\n         * @return {?}\n         */\n        FormControlDirective.prototype.viewToModelUpdate = function (newValue) {\n            this.viewModel = newValue;\n            this.update.emit(newValue);\n        };\n        /**\n         * @param {?} changes\n         * @return {?}\n         */\n        FormControlDirective.prototype._isControlChanged = function (changes) {\n            return changes.hasOwnProperty('form');\n        };\n        FormControlDirective.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[formControl]', providers: [formControlBinding$1], exportAs: 'ngForm' },] },\n        ];\n        /** @nocollapse */\n        FormControlDirective.ctorParameters = function () { return [\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALUE_ACCESSOR,] },] },\n        ]; };\n        FormControlDirective.propDecorators = {\n            'form': [{ type: _angular_core.Input, args: ['formControl',] },],\n            'model': [{ type: _angular_core.Input, args: ['ngModel',] },],\n            'update': [{ type: _angular_core.Output, args: ['ngModelChange',] },],\n            'isDisabled': [{ type: _angular_core.Input, args: ['disabled',] },],\n        };\n        return FormControlDirective;\n    }(NgControl));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$11 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var /** @type {?} */ formDirectiveProvider$1 = {\n        provide: ControlContainer,\n        useExisting: _angular_core.forwardRef(function () { return FormGroupDirective; })\n    };\n    /**\n     *  *\n      * *\n      * This directive accepts an existing {@link FormGroup} instance. It will then use this\n      * {@link FormGroup} instance to match any child {@link FormControl}, {@link FormGroup},\n      * and {@link FormArray} instances to child {@link FormControlName}, {@link FormGroupName},\n      * and {@link FormArrayName} directives.\n      * *\n      * **Set value**: You can set the form's initial value when instantiating the\n      * {@link FormGroup}, or you can set it programmatically later using the {@link FormGroup}'s\n      * {@link AbstractControl.setValue} or {@link AbstractControl.patchValue} methods.\n      * *\n      * **Listen to value**: If you want to listen to changes in the value of the form, you can subscribe\n      * to the {@link FormGroup}'s {@link AbstractControl.valueChanges} event.  You can also listen to\n      * its {@link AbstractControl.statusChanges} event to be notified when the validation status is\n      * re-calculated.\n      * *\n      * Furthermore, you can listen to the directive's `ngSubmit` event to be notified when the user has\n      * triggered a form submission. The `ngSubmit` event will be emitted with the original form\n      * submission event.\n      * *\n      * ### Example\n      * *\n      * In this example, we create form controls for first name and last name.\n      * *\n      * {@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n      * *\n      * **npm package**: `@angular/forms`\n      * *\n      * **NgModule**: {@link ReactiveFormsModule}\n      * *\n      * @stable\n     */\n    var FormGroupDirective = (function (_super) {\n        __extends$11(FormGroupDirective, _super);\n        /**\n         * @param {?} _validators\n         * @param {?} _asyncValidators\n         */\n        function FormGroupDirective(_validators, _asyncValidators) {\n            _super.call(this);\n            this._validators = _validators;\n            this._asyncValidators = _asyncValidators;\n            this._submitted = false;\n            this.directives = [];\n            this.form = null;\n            this.ngSubmit = new EventEmitter();\n        }\n        /**\n         * @param {?} changes\n         * @return {?}\n         */\n        FormGroupDirective.prototype.ngOnChanges = function (changes) {\n            this._checkFormPresent();\n            if (changes.hasOwnProperty('form')) {\n                this._updateValidators();\n                this._updateDomValue();\n                this._updateRegistrations();\n            }\n        };\n        Object.defineProperty(FormGroupDirective.prototype, \"submitted\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._submitted; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormGroupDirective.prototype, \"formDirective\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormGroupDirective.prototype, \"control\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.form; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormGroupDirective.prototype, \"path\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return []; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @param {?} dir\n         * @return {?}\n         */\n        FormGroupDirective.prototype.addControl = function (dir) {\n            var /** @type {?} */ ctrl = this.form.get(dir.path);\n            setUpControl(ctrl, dir);\n            ctrl.updateValueAndValidity({ emitEvent: false });\n            this.directives.push(dir);\n            return ctrl;\n        };\n        /**\n         * @param {?} dir\n         * @return {?}\n         */\n        FormGroupDirective.prototype.getControl = function (dir) { return (this.form.get(dir.path)); };\n        /**\n         * @param {?} dir\n         * @return {?}\n         */\n        FormGroupDirective.prototype.removeControl = function (dir) { ListWrapper.remove(this.directives, dir); };\n        /**\n         * @param {?} dir\n         * @return {?}\n         */\n        FormGroupDirective.prototype.addFormGroup = function (dir) {\n            var /** @type {?} */ ctrl = this.form.get(dir.path);\n            setUpFormContainer(ctrl, dir);\n            ctrl.updateValueAndValidity({ emitEvent: false });\n        };\n        /**\n         * @param {?} dir\n         * @return {?}\n         */\n        FormGroupDirective.prototype.removeFormGroup = function (dir) { };\n        /**\n         * @param {?} dir\n         * @return {?}\n         */\n        FormGroupDirective.prototype.getFormGroup = function (dir) { return (this.form.get(dir.path)); };\n        /**\n         * @param {?} dir\n         * @return {?}\n         */\n        FormGroupDirective.prototype.addFormArray = function (dir) {\n            var /** @type {?} */ ctrl = this.form.get(dir.path);\n            setUpFormContainer(ctrl, dir);\n            ctrl.updateValueAndValidity({ emitEvent: false });\n        };\n        /**\n         * @param {?} dir\n         * @return {?}\n         */\n        FormGroupDirective.prototype.removeFormArray = function (dir) { };\n        /**\n         * @param {?} dir\n         * @return {?}\n         */\n        FormGroupDirective.prototype.getFormArray = function (dir) { return (this.form.get(dir.path)); };\n        /**\n         * @param {?} dir\n         * @param {?} value\n         * @return {?}\n         */\n        FormGroupDirective.prototype.updateModel = function (dir, value) {\n            var /** @type {?} */ ctrl = (this.form.get(dir.path));\n            ctrl.setValue(value);\n        };\n        /**\n         * @param {?} $event\n         * @return {?}\n         */\n        FormGroupDirective.prototype.onSubmit = function ($event) {\n            this._submitted = true;\n            this.ngSubmit.emit($event);\n            return false;\n        };\n        /**\n         * @return {?}\n         */\n        FormGroupDirective.prototype.onReset = function () { this.resetForm(); };\n        /**\n         * @param {?=} value\n         * @return {?}\n         */\n        FormGroupDirective.prototype.resetForm = function (value) {\n            if (value === void 0) { value = undefined; }\n            this.form.reset(value);\n            this._submitted = false;\n        };\n        /**\n         * @return {?}\n         */\n        FormGroupDirective.prototype._updateDomValue = function () {\n            var _this = this;\n            this.directives.forEach(function (dir) {\n                var /** @type {?} */ newCtrl = _this.form.get(dir.path);\n                if (dir._control !== newCtrl) {\n                    cleanUpControl(dir._control, dir);\n                    if (newCtrl)\n                        setUpControl(newCtrl, dir);\n                    dir._control = newCtrl;\n                }\n            });\n            this.form._updateTreeValidity({ emitEvent: false });\n        };\n        /**\n         * @return {?}\n         */\n        FormGroupDirective.prototype._updateRegistrations = function () {\n            var _this = this;\n            this.form._registerOnCollectionChange(function () { return _this._updateDomValue(); });\n            if (this._oldForm)\n                this._oldForm._registerOnCollectionChange(function () { });\n            this._oldForm = this.form;\n        };\n        /**\n         * @return {?}\n         */\n        FormGroupDirective.prototype._updateValidators = function () {\n            var /** @type {?} */ sync = composeValidators(this._validators);\n            this.form.validator = Validators.compose([this.form.validator, sync]);\n            var /** @type {?} */ async = composeAsyncValidators(this._asyncValidators);\n            this.form.asyncValidator = Validators.composeAsync([this.form.asyncValidator, async]);\n        };\n        /**\n         * @return {?}\n         */\n        FormGroupDirective.prototype._checkFormPresent = function () {\n            if (!this.form) {\n                ReactiveErrors.missingFormException();\n            }\n        };\n        FormGroupDirective.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: '[formGroup]',\n                        providers: [formDirectiveProvider$1],\n                        host: { '(submit)': 'onSubmit($event)', '(reset)': 'onReset()' },\n                        exportAs: 'ngForm'\n                    },] },\n        ];\n        /** @nocollapse */\n        FormGroupDirective.ctorParameters = function () { return [\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n        ]; };\n        FormGroupDirective.propDecorators = {\n            'form': [{ type: _angular_core.Input, args: ['formGroup',] },],\n            'ngSubmit': [{ type: _angular_core.Output },],\n        };\n        return FormGroupDirective;\n    }(ControlContainer));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$12 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var /** @type {?} */ formGroupNameProvider = {\n        provide: ControlContainer,\n        useExisting: _angular_core.forwardRef(function () { return FormGroupName; })\n    };\n    /**\n     *  *\n      * *\n      * This directive can only be used with a parent {@link FormGroupDirective} (selector:\n      * `[formGroup]`).\n      * *\n      * It accepts the string name of the nested {@link FormGroup} you want to link, and\n      * will look for a {@link FormGroup} registered with that name in the parent\n      * {@link FormGroup} instance you passed into {@link FormGroupDirective}.\n      * *\n      * Nested form groups can come in handy when you want to validate a sub-group of a\n      * form separately from the rest or when you'd like to group the values of certain\n      * controls into their own nested object.\n      * *\n      * **Access the group**: You can access the associated {@link FormGroup} using the\n      * {@link AbstractControl.get} method. Ex: `this.form.get('name')`.\n      * *\n      * You can also access individual controls within the group using dot syntax.\n      * Ex: `this.form.get('name.first')`\n      * *\n      * **Get the value**: the `value` property is always synced and available on the\n      * {@link FormGroup}. See a full list of available properties in {@link AbstractControl}.\n      * *\n      * **Set the value**: You can set an initial value for each child control when instantiating\n      * the {@link FormGroup}, or you can set it programmatically later using\n      * {@link AbstractControl.setValue} or {@link AbstractControl.patchValue}.\n      * *\n      * **Listen to value**: If you want to listen to changes in the value of the group, you can\n      * subscribe to the {@link AbstractControl.valueChanges} event.  You can also listen to\n      * {@link AbstractControl.statusChanges} to be notified when the validation status is\n      * re-calculated.\n      * *\n      * ### Example\n      * *\n      * {@example forms/ts/nestedFormGroup/nested_form_group_example.ts region='Component'}\n      * *\n      * * **npm package**: `@angular/forms`\n      * *\n      * * **NgModule**: `ReactiveFormsModule`\n      * *\n     */\n    var FormGroupName = (function (_super) {\n        __extends$12(FormGroupName, _super);\n        /**\n         * @param {?} parent\n         * @param {?} validators\n         * @param {?} asyncValidators\n         */\n        function FormGroupName(parent, validators, asyncValidators) {\n            _super.call(this);\n            this._parent = parent;\n            this._validators = validators;\n            this._asyncValidators = asyncValidators;\n        }\n        /**\n         * @return {?}\n         */\n        FormGroupName.prototype._checkParentType = function () {\n            if (_hasInvalidParent(this._parent)) {\n                ReactiveErrors.groupParentException();\n            }\n        };\n        FormGroupName.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[formGroupName]', providers: [formGroupNameProvider] },] },\n        ];\n        /** @nocollapse */\n        FormGroupName.ctorParameters = function () { return [\n            { type: ControlContainer, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Host }, { type: _angular_core.SkipSelf },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n        ]; };\n        FormGroupName.propDecorators = {\n            'name': [{ type: _angular_core.Input, args: ['formGroupName',] },],\n        };\n        return FormGroupName;\n    }(AbstractFormGroupDirective));\n    var /** @type {?} */ formArrayNameProvider = {\n        provide: ControlContainer,\n        useExisting: _angular_core.forwardRef(function () { return FormArrayName; })\n    };\n    /**\n     *  *\n      * *\n      * This directive is designed to be used with a parent {@link FormGroupDirective} (selector:\n      * `[formGroup]`).\n      * *\n      * It accepts the string name of the nested {@link FormArray} you want to link, and\n      * will look for a {@link FormArray} registered with that name in the parent\n      * {@link FormGroup} instance you passed into {@link FormGroupDirective}.\n      * *\n      * Nested form arrays can come in handy when you have a group of form controls but\n      * you're not sure how many there will be. Form arrays allow you to create new\n      * form controls dynamically.\n      * *\n      * **Access the array**: You can access the associated {@link FormArray} using the\n      * {@link AbstractControl.get} method on the parent {@link FormGroup}.\n      * Ex: `this.form.get('cities')`.\n      * *\n      * **Get the value**: the `value` property is always synced and available on the\n      * {@link FormArray}. See a full list of available properties in {@link AbstractControl}.\n      * *\n      * **Set the value**: You can set an initial value for each child control when instantiating\n      * the {@link FormArray}, or you can set the value programmatically later using the\n      * {@link FormArray}'s {@link AbstractControl.setValue} or {@link AbstractControl.patchValue}\n      * methods.\n      * *\n      * **Listen to value**: If you want to listen to changes in the value of the array, you can\n      * subscribe to the {@link FormArray}'s {@link AbstractControl.valueChanges} event.  You can also\n      * listen to its {@link AbstractControl.statusChanges} event to be notified when the validation\n      * status is re-calculated.\n      * *\n      * **Add new controls**: You can add new controls to the {@link FormArray} dynamically by\n      * calling its {@link FormArray.push} method.\n      * Ex: `this.form.get('cities').push(new FormControl());`\n      * *\n      * ### Example\n      * *\n      * {@example forms/ts/nestedFormArray/nested_form_array_example.ts region='Component'}\n      * *\n      * * **npm package**: `@angular/forms`\n      * *\n      * * **NgModule**: `ReactiveFormsModule`\n      * *\n     */\n    var FormArrayName = (function (_super) {\n        __extends$12(FormArrayName, _super);\n        /**\n         * @param {?} parent\n         * @param {?} validators\n         * @param {?} asyncValidators\n         */\n        function FormArrayName(parent, validators, asyncValidators) {\n            _super.call(this);\n            this._parent = parent;\n            this._validators = validators;\n            this._asyncValidators = asyncValidators;\n        }\n        /**\n         * @return {?}\n         */\n        FormArrayName.prototype.ngOnInit = function () {\n            this._checkParentType();\n            this.formDirective.addFormArray(this);\n        };\n        /**\n         * @return {?}\n         */\n        FormArrayName.prototype.ngOnDestroy = function () {\n            if (this.formDirective) {\n                this.formDirective.removeFormArray(this);\n            }\n        };\n        Object.defineProperty(FormArrayName.prototype, \"control\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.formDirective.getFormArray(this); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormArrayName.prototype, \"formDirective\", {\n            /**\n             * @return {?}\n             */\n            get: function () {\n                return this._parent ? (this._parent.formDirective) : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormArrayName.prototype, \"path\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return controlPath(this.name, this._parent); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormArrayName.prototype, \"validator\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return composeValidators(this._validators); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormArrayName.prototype, \"asyncValidator\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return composeAsyncValidators(this._asyncValidators); },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @return {?}\n         */\n        FormArrayName.prototype._checkParentType = function () {\n            if (_hasInvalidParent(this._parent)) {\n                ReactiveErrors.arrayParentException();\n            }\n        };\n        FormArrayName.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[formArrayName]', providers: [formArrayNameProvider] },] },\n        ];\n        /** @nocollapse */\n        FormArrayName.ctorParameters = function () { return [\n            { type: ControlContainer, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Host }, { type: _angular_core.SkipSelf },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n        ]; };\n        FormArrayName.propDecorators = {\n            'name': [{ type: _angular_core.Input, args: ['formArrayName',] },],\n        };\n        return FormArrayName;\n    }(ControlContainer));\n    /**\n     * @param {?} parent\n     * @return {?}\n     */\n    function _hasInvalidParent(parent) {\n        return !(parent instanceof FormGroupName) && !(parent instanceof FormGroupDirective) &&\n            !(parent instanceof FormArrayName);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$10 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var /** @type {?} */ controlNameBinding = {\n        provide: NgControl,\n        useExisting: _angular_core.forwardRef(function () { return FormControlName; })\n    };\n    /**\n     *  element by name.\n      * *\n      * In other words, this directive ensures that any values written to the {@link FormControl}\n      * instance programmatically will be written to the DOM element (model -> view). Conversely,\n      * any values written to the DOM element through user input will be reflected in the\n      * {@link FormControl} instance (view -> model).\n      * *\n      * *\n      * This directive is designed to be used with a parent {@link FormGroupDirective} (selector:\n      * `[formGroup]`).\n      * *\n      * It accepts the string name of the {@link FormControl} instance you want to\n      * link, and will look for a {@link FormControl} registered with that name in the\n      * closest {@link FormGroup} or {@link FormArray} above it.\n      * *\n      * **Access the control**: You can access the {@link FormControl} associated with\n      * this directive by using the {@link AbstractControl.get} method.\n      * Ex: `this.form.get('first');`\n      * *\n      * **Get value**: the `value` property is always synced and available on the {@link FormControl}.\n      * See a full list of available properties in {@link AbstractControl}.\n      * *\n      * **Set value**: You can set an initial value for the control when instantiating the\n      * {@link FormControl}, or you can set it programmatically later using\n      * {@link AbstractControl.setValue} or {@link AbstractControl.patchValue}.\n      * *\n      * **Listen to value**: If you want to listen to changes in the value of the control, you can\n      * subscribe to the {@link AbstractControl.valueChanges} event.  You can also listen to\n      * {@link AbstractControl.statusChanges} to be notified when the validation status is\n      * re-calculated.\n      * *\n      * ### Example\n      * *\n      * In this example, we create form controls for first name and last name.\n      * *\n      * {@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n      * *\n      * To see `formControlName` examples with different form control types, see:\n      * *\n      * * Radio buttons: {@link RadioControlValueAccessor}\n      * * Selects: {@link SelectControlValueAccessor}\n      * *\n      * **npm package**: `@angular/forms`\n      * *\n      * **NgModule**: {@link ReactiveFormsModule}\n      * *\n      * @stable\n     */\n    var FormControlName = (function (_super) {\n        __extends$10(FormControlName, _super);\n        /**\n         * @param {?} parent\n         * @param {?} validators\n         * @param {?} asyncValidators\n         * @param {?} valueAccessors\n         */\n        function FormControlName(parent, validators, asyncValidators, valueAccessors) {\n            _super.call(this);\n            this._added = false;\n            this.update = new EventEmitter();\n            this._parent = parent;\n            this._rawValidators = validators || [];\n            this._rawAsyncValidators = asyncValidators || [];\n            this.valueAccessor = selectValueAccessor(this, valueAccessors);\n        }\n        Object.defineProperty(FormControlName.prototype, \"isDisabled\", {\n            /**\n             * @param {?} isDisabled\n             * @return {?}\n             */\n            set: function (isDisabled) { ReactiveErrors.disabledAttrWarning(); },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @param {?} changes\n         * @return {?}\n         */\n        FormControlName.prototype.ngOnChanges = function (changes) {\n            if (!this._added)\n                this._setUpControl();\n            if (isPropertyUpdated(changes, this.viewModel)) {\n                this.viewModel = this.model;\n                this.formDirective.updateModel(this, this.model);\n            }\n        };\n        /**\n         * @return {?}\n         */\n        FormControlName.prototype.ngOnDestroy = function () {\n            if (this.formDirective) {\n                this.formDirective.removeControl(this);\n            }\n        };\n        /**\n         * @param {?} newValue\n         * @return {?}\n         */\n        FormControlName.prototype.viewToModelUpdate = function (newValue) {\n            this.viewModel = newValue;\n            this.update.emit(newValue);\n        };\n        Object.defineProperty(FormControlName.prototype, \"path\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return controlPath(this.name, this._parent); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormControlName.prototype, \"formDirective\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._parent ? this._parent.formDirective : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormControlName.prototype, \"validator\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return composeValidators(this._rawValidators); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormControlName.prototype, \"asyncValidator\", {\n            /**\n             * @return {?}\n             */\n            get: function () {\n                return composeAsyncValidators(this._rawAsyncValidators);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormControlName.prototype, \"control\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._control; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @return {?}\n         */\n        FormControlName.prototype._checkParentType = function () {\n            if (!(this._parent instanceof FormGroupName) &&\n                this._parent instanceof AbstractFormGroupDirective) {\n                ReactiveErrors.ngModelGroupException();\n            }\n            else if (!(this._parent instanceof FormGroupName) && !(this._parent instanceof FormGroupDirective) &&\n                !(this._parent instanceof FormArrayName)) {\n                ReactiveErrors.controlParentException();\n            }\n        };\n        /**\n         * @return {?}\n         */\n        FormControlName.prototype._setUpControl = function () {\n            this._checkParentType();\n            this._control = this.formDirective.addControl(this);\n            if (this.control.disabled && this.valueAccessor.setDisabledState) {\n                this.valueAccessor.setDisabledState(true);\n            }\n            this._added = true;\n        };\n        FormControlName.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[formControlName]', providers: [controlNameBinding] },] },\n        ];\n        /** @nocollapse */\n        FormControlName.ctorParameters = function () { return [\n            { type: ControlContainer, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Host }, { type: _angular_core.SkipSelf },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALUE_ACCESSOR,] },] },\n        ]; };\n        FormControlName.propDecorators = {\n            'name': [{ type: _angular_core.Input, args: ['formControlName',] },],\n            'model': [{ type: _angular_core.Input, args: ['ngModel',] },],\n            'update': [{ type: _angular_core.Output, args: ['ngModelChange',] },],\n            'isDisabled': [{ type: _angular_core.Input, args: ['disabled',] },],\n        };\n        return FormControlName;\n    }(NgControl));\n\n    var /** @type {?} */ REQUIRED_VALIDATOR = {\n        provide: NG_VALIDATORS,\n        useExisting: _angular_core.forwardRef(function () { return RequiredValidator; }),\n        multi: true\n    };\n    /**\n     *  A Directive that adds the `required` validator to any controls marked with the\n      * `required` attribute, via the {@link NG_VALIDATORS} binding.\n      * *\n      * ### Example\n      * *\n      * ```\n      * <input name=\"fullName\" ngModel required>\n      * ```\n      * *\n     */\n    var RequiredValidator = (function () {\n        function RequiredValidator() {\n        }\n        Object.defineProperty(RequiredValidator.prototype, \"required\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._required; },\n            /**\n             * @param {?} value\n             * @return {?}\n             */\n            set: function (value) {\n                this._required = value != null && value !== false && \"\" + value !== 'false';\n                if (this._onChange)\n                    this._onChange();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @param {?} c\n         * @return {?}\n         */\n        RequiredValidator.prototype.validate = function (c) {\n            return this.required ? Validators.required(c) : null;\n        };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        RequiredValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n        RequiredValidator.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: '[required][formControlName],[required][formControl],[required][ngModel]',\n                        providers: [REQUIRED_VALIDATOR],\n                        host: { '[attr.required]': 'required ? \"\" : null' }\n                    },] },\n        ];\n        /** @nocollapse */\n        RequiredValidator.ctorParameters = function () { return []; };\n        RequiredValidator.propDecorators = {\n            'required': [{ type: _angular_core.Input },],\n        };\n        return RequiredValidator;\n    }());\n    /**\n     * Provider which adds {@link MinLengthValidator} to {@link NG_VALIDATORS}.\n     *\n     * ## Example:\n     *\n     * {@example common/forms/ts/validators/validators.ts region='min'}\n     */\n    var /** @type {?} */ MIN_LENGTH_VALIDATOR = {\n        provide: NG_VALIDATORS,\n        useExisting: _angular_core.forwardRef(function () { return MinLengthValidator; }),\n        multi: true\n    };\n    /**\n     *  A directive which installs the {@link MinLengthValidator} for any `formControlName`,\n      * `formControl`, or control with `ngModel` that also has a `minlength` attribute.\n      * *\n     */\n    var MinLengthValidator = (function () {\n        function MinLengthValidator() {\n        }\n        /**\n         * @param {?} changes\n         * @return {?}\n         */\n        MinLengthValidator.prototype.ngOnChanges = function (changes) {\n            if ('minlength' in changes) {\n                this._createValidator();\n                if (this._onChange)\n                    this._onChange();\n            }\n        };\n        /**\n         * @param {?} c\n         * @return {?}\n         */\n        MinLengthValidator.prototype.validate = function (c) {\n            return this.minlength == null ? null : this._validator(c);\n        };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        MinLengthValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n        /**\n         * @return {?}\n         */\n        MinLengthValidator.prototype._createValidator = function () {\n            this._validator = Validators.minLength(parseInt(this.minlength, 10));\n        };\n        MinLengthValidator.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: '[minlength][formControlName],[minlength][formControl],[minlength][ngModel]',\n                        providers: [MIN_LENGTH_VALIDATOR],\n                        host: { '[attr.minlength]': 'minlength ? minlength : null' }\n                    },] },\n        ];\n        /** @nocollapse */\n        MinLengthValidator.ctorParameters = function () { return []; };\n        MinLengthValidator.propDecorators = {\n            'minlength': [{ type: _angular_core.Input },],\n        };\n        return MinLengthValidator;\n    }());\n    /**\n     * Provider which adds {@link MaxLengthValidator} to {@link NG_VALIDATORS}.\n     *\n     * ## Example:\n     *\n     * {@example common/forms/ts/validators/validators.ts region='max'}\n     */\n    var /** @type {?} */ MAX_LENGTH_VALIDATOR = {\n        provide: NG_VALIDATORS,\n        useExisting: _angular_core.forwardRef(function () { return MaxLengthValidator; }),\n        multi: true\n    };\n    /**\n     *  A directive which installs the {@link MaxLengthValidator} for any `formControlName,\n      * `formControl`,\n      * or control with `ngModel` that also has a `maxlength` attribute.\n      * *\n     */\n    var MaxLengthValidator = (function () {\n        function MaxLengthValidator() {\n        }\n        /**\n         * @param {?} changes\n         * @return {?}\n         */\n        MaxLengthValidator.prototype.ngOnChanges = function (changes) {\n            if ('maxlength' in changes) {\n                this._createValidator();\n                if (this._onChange)\n                    this._onChange();\n            }\n        };\n        /**\n         * @param {?} c\n         * @return {?}\n         */\n        MaxLengthValidator.prototype.validate = function (c) {\n            return this.maxlength != null ? this._validator(c) : null;\n        };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        MaxLengthValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n        /**\n         * @return {?}\n         */\n        MaxLengthValidator.prototype._createValidator = function () {\n            this._validator = Validators.maxLength(parseInt(this.maxlength, 10));\n        };\n        MaxLengthValidator.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: '[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]',\n                        providers: [MAX_LENGTH_VALIDATOR],\n                        host: { '[attr.maxlength]': 'maxlength ? maxlength : null' }\n                    },] },\n        ];\n        /** @nocollapse */\n        MaxLengthValidator.ctorParameters = function () { return []; };\n        MaxLengthValidator.propDecorators = {\n            'maxlength': [{ type: _angular_core.Input },],\n        };\n        return MaxLengthValidator;\n    }());\n    var /** @type {?} */ PATTERN_VALIDATOR = {\n        provide: NG_VALIDATORS,\n        useExisting: _angular_core.forwardRef(function () { return PatternValidator; }),\n        multi: true\n    };\n    /**\n     *  A Directive that adds the `pattern` validator to any controls marked with the\n      * `pattern` attribute, via the {@link NG_VALIDATORS} binding. Uses attribute value\n      * as the regex to validate Control value against.  Follows pattern attribute\n      * semantics; i.e. regex must match entire Control value.\n      * *\n      * ### Example\n      * *\n      * ```\n      * <input [name]=\"fullName\" pattern=\"[a-zA-Z ]*\" ngModel>\n      * ```\n     */\n    var PatternValidator = (function () {\n        function PatternValidator() {\n        }\n        /**\n         * @param {?} changes\n         * @return {?}\n         */\n        PatternValidator.prototype.ngOnChanges = function (changes) {\n            if ('pattern' in changes) {\n                this._createValidator();\n                if (this._onChange)\n                    this._onChange();\n            }\n        };\n        /**\n         * @param {?} c\n         * @return {?}\n         */\n        PatternValidator.prototype.validate = function (c) { return this._validator(c); };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        PatternValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n        /**\n         * @return {?}\n         */\n        PatternValidator.prototype._createValidator = function () { this._validator = Validators.pattern(this.pattern); };\n        PatternValidator.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: '[pattern][formControlName],[pattern][formControl],[pattern][ngModel]',\n                        providers: [PATTERN_VALIDATOR],\n                        host: { '[attr.pattern]': 'pattern ? pattern : null' }\n                    },] },\n        ];\n        /** @nocollapse */\n        PatternValidator.ctorParameters = function () { return []; };\n        PatternValidator.propDecorators = {\n            'pattern': [{ type: _angular_core.Input },],\n        };\n        return PatternValidator;\n    }());\n\n    /**\n     *  *\n      * It is essentially syntactic sugar that shortens the `new FormGroup()`,\n      * `new FormControl()`, and `new FormArray()` boilerplate that can build up in larger\n      * forms.\n      * *\n      * *\n      * To use, inject `FormBuilder` into your component class. You can then call its methods\n      * directly.\n      * *\n      * {@example forms/ts/formBuilder/form_builder_example.ts region='Component'}\n      * *\n      * * **npm package**: `@angular/forms`\n      * *\n      * * **NgModule**: {@link ReactiveFormsModule}\n      * *\n     */\n    var FormBuilder = (function () {\n        function FormBuilder() {\n        }\n        /**\n         *  Construct a new {@link FormGroup} with the given map of configuration.\n          * Valid keys for the `extra` parameter map are `validator` and `asyncValidator`.\n          * *\n          * See the {@link FormGroup} constructor for more details.\n         * @param {?} controlsConfig\n         * @param {?=} extra\n         * @return {?}\n         */\n        FormBuilder.prototype.group = function (controlsConfig, extra) {\n            if (extra === void 0) { extra = null; }\n            var /** @type {?} */ controls = this._reduceControls(controlsConfig);\n            var /** @type {?} */ validator = isPresent(extra) ? extra['validator'] : null;\n            var /** @type {?} */ asyncValidator = isPresent(extra) ? extra['asyncValidator'] : null;\n            return new FormGroup(controls, validator, asyncValidator);\n        };\n        /**\n         *  Construct a new {@link FormControl} with the given `formState`,`validator`, and\n          * `asyncValidator`.\n          * *\n          * `formState` can either be a standalone value for the form control or an object\n          * that contains both a value and a disabled status.\n          * *\n         * @param {?} formState\n         * @param {?=} validator\n         * @param {?=} asyncValidator\n         * @return {?}\n         */\n        FormBuilder.prototype.control = function (formState, validator, asyncValidator) {\n            if (validator === void 0) { validator = null; }\n            if (asyncValidator === void 0) { asyncValidator = null; }\n            return new FormControl(formState, validator, asyncValidator);\n        };\n        /**\n         *  Construct a {@link FormArray} from the given `controlsConfig` array of\n          * configuration, with the given optional `validator` and `asyncValidator`.\n         * @param {?} controlsConfig\n         * @param {?=} validator\n         * @param {?=} asyncValidator\n         * @return {?}\n         */\n        FormBuilder.prototype.array = function (controlsConfig, validator, asyncValidator) {\n            var _this = this;\n            if (validator === void 0) { validator = null; }\n            if (asyncValidator === void 0) { asyncValidator = null; }\n            var /** @type {?} */ controls = controlsConfig.map(function (c) { return _this._createControl(c); });\n            return new FormArray(controls, validator, asyncValidator);\n        };\n        /**\n         * @param {?} controlsConfig\n         * @return {?}\n         */\n        FormBuilder.prototype._reduceControls = function (controlsConfig) {\n            var _this = this;\n            var /** @type {?} */ controls = {};\n            Object.keys(controlsConfig).forEach(function (controlName) {\n                controls[controlName] = _this._createControl(controlsConfig[controlName]);\n            });\n            return controls;\n        };\n        /**\n         * @param {?} controlConfig\n         * @return {?}\n         */\n        FormBuilder.prototype._createControl = function (controlConfig) {\n            if (controlConfig instanceof FormControl || controlConfig instanceof FormGroup ||\n                controlConfig instanceof FormArray) {\n                return controlConfig;\n            }\n            else if (Array.isArray(controlConfig)) {\n                var /** @type {?} */ value = controlConfig[0];\n                var /** @type {?} */ validator = controlConfig.length > 1 ? controlConfig[1] : null;\n                var /** @type {?} */ asyncValidator = controlConfig.length > 2 ? controlConfig[2] : null;\n                return this.control(value, validator, asyncValidator);\n            }\n            else {\n                return this.control(controlConfig);\n            }\n        };\n        FormBuilder.decorators = [\n            { type: _angular_core.Injectable },\n        ];\n        /** @nocollapse */\n        FormBuilder.ctorParameters = function () { return []; };\n        return FormBuilder;\n    }());\n\n    /**\n     * @stable\n     */\n    var /** @type {?} */ VERSION = new _angular_core.Version('2.3.0');\n\n    var /** @type {?} */ SHARED_FORM_DIRECTIVES = [\n        NgSelectOption, NgSelectMultipleOption, DefaultValueAccessor, NumberValueAccessor,\n        RangeValueAccessor, CheckboxControlValueAccessor, SelectControlValueAccessor,\n        SelectMultipleControlValueAccessor, RadioControlValueAccessor, NgControlStatus,\n        NgControlStatusGroup, RequiredValidator, MinLengthValidator, MaxLengthValidator, PatternValidator\n    ];\n    var /** @type {?} */ TEMPLATE_DRIVEN_DIRECTIVES = [NgModel, NgModelGroup, NgForm];\n    var /** @type {?} */ REACTIVE_DRIVEN_DIRECTIVES = [FormControlDirective, FormGroupDirective, FormControlName, FormGroupName, FormArrayName];\n    /**\n     *  Internal module used for sharing directives between FormsModule and ReactiveFormsModule\n     */\n    var InternalFormsSharedModule = (function () {\n        function InternalFormsSharedModule() {\n        }\n        InternalFormsSharedModule.decorators = [\n            { type: _angular_core.NgModule, args: [{\n                        declarations: SHARED_FORM_DIRECTIVES,\n                        exports: SHARED_FORM_DIRECTIVES,\n                    },] },\n        ];\n        /** @nocollapse */\n        InternalFormsSharedModule.ctorParameters = function () { return []; };\n        return InternalFormsSharedModule;\n    }());\n\n    /**\n     *  The ng module for forms.\n     */\n    var FormsModule = (function () {\n        function FormsModule() {\n        }\n        FormsModule.decorators = [\n            { type: _angular_core.NgModule, args: [{\n                        declarations: TEMPLATE_DRIVEN_DIRECTIVES,\n                        providers: [RadioControlRegistry],\n                        exports: [InternalFormsSharedModule, TEMPLATE_DRIVEN_DIRECTIVES]\n                    },] },\n        ];\n        /** @nocollapse */\n        FormsModule.ctorParameters = function () { return []; };\n        return FormsModule;\n    }());\n    /**\n     *  The ng module for reactive forms.\n     */\n    var ReactiveFormsModule = (function () {\n        function ReactiveFormsModule() {\n        }\n        ReactiveFormsModule.decorators = [\n            { type: _angular_core.NgModule, args: [{\n                        declarations: [REACTIVE_DRIVEN_DIRECTIVES],\n                        providers: [FormBuilder, RadioControlRegistry],\n                        exports: [InternalFormsSharedModule, REACTIVE_DRIVEN_DIRECTIVES]\n                    },] },\n        ];\n        /** @nocollapse */\n        ReactiveFormsModule.ctorParameters = function () { return []; };\n        return ReactiveFormsModule;\n    }());\n\n    exports.AbstractControlDirective = AbstractControlDirective;\n    exports.AbstractFormGroupDirective = AbstractFormGroupDirective;\n    exports.CheckboxControlValueAccessor = CheckboxControlValueAccessor;\n    exports.ControlContainer = ControlContainer;\n    exports.NG_VALUE_ACCESSOR = NG_VALUE_ACCESSOR;\n    exports.DefaultValueAccessor = DefaultValueAccessor;\n    exports.NgControl = NgControl;\n    exports.NgControlStatus = NgControlStatus;\n    exports.NgControlStatusGroup = NgControlStatusGroup;\n    exports.NgForm = NgForm;\n    exports.NgModel = NgModel;\n    exports.NgModelGroup = NgModelGroup;\n    exports.RadioControlValueAccessor = RadioControlValueAccessor;\n    exports.FormControlDirective = FormControlDirective;\n    exports.FormControlName = FormControlName;\n    exports.FormGroupDirective = FormGroupDirective;\n    exports.FormArrayName = FormArrayName;\n    exports.FormGroupName = FormGroupName;\n    exports.NgSelectOption = NgSelectOption;\n    exports.SelectControlValueAccessor = SelectControlValueAccessor;\n    exports.SelectMultipleControlValueAccessor = SelectMultipleControlValueAccessor;\n    exports.MaxLengthValidator = MaxLengthValidator;\n    exports.MinLengthValidator = MinLengthValidator;\n    exports.PatternValidator = PatternValidator;\n    exports.RequiredValidator = RequiredValidator;\n    exports.FormBuilder = FormBuilder;\n    exports.AbstractControl = AbstractControl;\n    exports.FormArray = FormArray;\n    exports.FormControl = FormControl;\n    exports.FormGroup = FormGroup;\n    exports.NG_ASYNC_VALIDATORS = NG_ASYNC_VALIDATORS;\n    exports.NG_VALIDATORS = NG_VALIDATORS;\n    exports.Validators = Validators;\n    exports.VERSION = VERSION;\n    exports.FormsModule = FormsModule;\n    exports.ReactiveFormsModule = ReactiveFormsModule;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@angular/forms/bundles/forms.umd.js\n// module id = 25\n// module chunks = 0","import { Component } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { Router, NavigationEnd }  from '@angular/router';\nimport { Ng2MapComponent } from \"ng2-ui\";\n\n@Component({\n  selector: 'my-app',\n  template: require('./app.html')\n})\nexport class AppComponent {\n  private currentRoute:string;\n\n  constructor(\n    private router: Router,\n    private location: Location\n  ) {\n    Ng2MapComponent['apiUrl'] = \"https://maps.google.com/maps/api/js?key=AIzaSyCbMGRUwcqKjlYX4h4-P6t-xcDryRYLmCM\";\n    router.events.subscribe( event => {\n      this.sendToGoogleAnalytics(event)\n    });\n  }\n\n  sendToGoogleAnalytics(event: any): any {\n    if (event instanceof NavigationEnd) {\n      // When the route is '/', location.path actually returns ''.\n      let newRoute = this.location.path() || '/';\n      if (this.currentRoute != newRoute) {\n        //console.log('>>>>>>>>>>>>>>>>>>>> sending google analytics', 'send', 'pageview', newRoute);\n        window['ga']('send', 'pageview', newRoute);\n        this.currentRoute = newRoute;\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/strip-loader/lib?strip[]=debug,strip[]=console.log!./app/app.component.ts","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@angular/core\"), require(\"@angular/forms\"), require(\"@angular/platform-browser\"), require(\"@angular/http\"), require(\"rxjs/add/operator/map\"), require(\"@angular/common\"), require(\"rxjs/Subject\"), require(\"rxjs/add/operator/debounceTime\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"@angular/core\", \"@angular/forms\", \"@angular/platform-browser\", \"@angular/http\", \"rxjs/add/operator/map\", \"@angular/common\", \"rxjs/Subject\", \"rxjs/add/operator/debounceTime\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ng2-ui\"] = factory(require(\"@angular/core\"), require(\"@angular/forms\"), require(\"@angular/platform-browser\"), require(\"@angular/http\"), require(\"rxjs/add/operator/map\"), require(\"@angular/common\"), require(\"rxjs/Subject\"), require(\"rxjs/add/operator/debounceTime\"));\n\telse\n\t\troot[\"ng2-ui\"] = factory(root[\"@angular/core\"], root[\"@angular/forms\"], root[\"@angular/platform-browser\"], root[\"@angular/http\"], root[\"rxjs/add/operator/map\"], root[\"@angular/common\"], root[\"rxjs/Subject\"], root[\"rxjs/add/operator/debounceTime\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_6__, __WEBPACK_EXTERNAL_MODULE_7__, __WEBPACK_EXTERNAL_MODULE_8__, __WEBPACK_EXTERNAL_MODULE_11__, __WEBPACK_EXTERNAL_MODULE_12__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar ng2_ui_module_1 = __webpack_require__(1);\n\texports.Ng2ScrollableDirective = ng2_ui_module_1.Ng2ScrollableDirective;\n\texports.Ng2MessagePopupComponent = ng2_ui_module_1.Ng2MessagePopupComponent;\n\texports.Ng2PopupComponent = ng2_ui_module_1.Ng2PopupComponent;\n\texports.Ng2OverlayManager = ng2_ui_module_1.Ng2OverlayManager;\n\texports.Ng2MapComponent = ng2_ui_module_1.Ng2MapComponent;\n\texports.Ng2UIModule = ng2_ui_module_1.Ng2UIModule;\n\texports.Ng2MapModule = ng2_ui_module_1.Ng2MapModule;\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar core_1 = __webpack_require__(2);\n\tvar forms_1 = __webpack_require__(3);\n\tvar platform_browser_1 = __webpack_require__(4);\n\tvar ng2_auto_complete_1 = __webpack_require__(5);\n\tvar ng2_datetime_picker_1 = __webpack_require__(9);\n\tvar ng2_map_1 = __webpack_require__(10);\n\texports.Ng2MapModule = ng2_map_1.Ng2MapModule;\n\tvar ng2_popup_1 = __webpack_require__(13);\n\tvar ng2_menu_1 = __webpack_require__(14);\n\tvar ng2_parallax_scroll_1 = __webpack_require__(15);\n\tvar ng2_sticky_1 = __webpack_require__(16);\n\tvar ng2_tab_1 = __webpack_require__(17);\n\tvar ng2_tooltip_overlay_1 = __webpack_require__(18);\n\tvar ng2_ui_sortable_1 = __webpack_require__(19);\n\tvar ng2_overlay_1 = __webpack_require__(20);\n\tvar ng2_scrollable_1 = __webpack_require__(21);\n\tvar ng2_collapsable_1 = __webpack_require__(22);\n\tvar ng2_infinite_list_1 = __webpack_require__(23);\n\tvar ng2_overlay_2 = __webpack_require__(20);\n\texports.Ng2OverlayManager = ng2_overlay_2.Ng2OverlayManager;\n\tvar ng2_scrollable_2 = __webpack_require__(21);\n\texports.Ng2ScrollableDirective = ng2_scrollable_2.Ng2ScrollableDirective;\n\tvar ng2_popup_2 = __webpack_require__(13);\n\texports.Ng2MessagePopupComponent = ng2_popup_2.Ng2MessagePopupComponent;\n\texports.Ng2PopupComponent = ng2_popup_2.Ng2PopupComponent;\n\tvar ng2_map_2 = __webpack_require__(10);\n\texports.Ng2MapComponent = ng2_map_2.Ng2MapComponent;\n\tvar Ng2UIModule = (function () {\n\t    function Ng2UIModule() {\n\t    }\n\t    return Ng2UIModule;\n\t}());\n\tNg2UIModule = __decorate([\n\t    core_1.NgModule({\n\t        imports: [platform_browser_1.BrowserModule, forms_1.FormsModule],\n\t        exports: [\n\t            ng2_auto_complete_1.Ng2AutoCompleteModule,\n\t            ng2_datetime_picker_1.Ng2DatetimePickerModule,\n\t            ng2_map_1.Ng2MapModule,\n\t            ng2_infinite_list_1.Ng2InfiniteListModule,\n\t            ng2_menu_1.Ng2MenuModule,\n\t            ng2_parallax_scroll_1.Ng2ParallaxScrollModule,\n\t            ng2_popup_1.Ng2PopupModule,\n\t            ng2_sticky_1.Ng2StickyModule,\n\t            ng2_tab_1.Ng2TabModule,\n\t            ng2_scrollable_1.Ng2ScrollableModule,\n\t            ng2_tooltip_overlay_1.Ng2TooltipOverlayModule,\n\t            ng2_overlay_1.Ng2OverlayModule,\n\t            ng2_ui_sortable_1.Ng2SortableModule,\n\t            ng2_collapsable_1.Ng2CollapsableModule\n\t        ],\n\t        providers: [ng2_overlay_2.Ng2OverlayManager]\n\t    })\n\t], Ng2UIModule);\n\texports.Ng2UIModule = Ng2UIModule;\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function webpackUniversalModuleDefinition(root, factory) {\n\t\tif(true)\n\t\t\tmodule.exports = factory(__webpack_require__(2), __webpack_require__(6), __webpack_require__(7), __webpack_require__(8), __webpack_require__(3));\n\t\telse if(typeof define === 'function' && define.amd)\n\t\t\tdefine([\"@angular/core\", \"@angular/http\", \"rxjs/add/operator/map\", \"@angular/common\", \"@angular/forms\"], factory);\n\t\telse if(typeof exports === 'object')\n\t\t\texports[\"ng2-auto-complete\"] = factory(require(\"@angular/core\"), require(\"@angular/http\"), require(\"rxjs/add/operator/map\"), require(\"@angular/common\"), require(\"@angular/forms\"));\n\t\telse\n\t\t\troot[\"ng2-auto-complete\"] = factory(root[\"@angular/core\"], root[\"@angular/http\"], root[\"rxjs/add/operator/map\"], root[\"@angular/common\"], root[\"@angular/forms\"]);\n\t})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_6__, __WEBPACK_EXTERNAL_MODULE_7__) {\n\treturn /******/ (function(modules) { // webpackBootstrap\n\t/******/ \t// The module cache\n\t/******/ \tvar installedModules = {};\n\t/******/\n\t/******/ \t// The require function\n\t/******/ \tfunction __webpack_require__(moduleId) {\n\t/******/\n\t/******/ \t\t// Check if module is in cache\n\t/******/ \t\tif(installedModules[moduleId])\n\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\t/******/\n\t/******/ \t\t// Create a new module (and put it into the cache)\n\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t/******/ \t\t\texports: {},\n\t/******/ \t\t\tid: moduleId,\n\t/******/ \t\t\tloaded: false\n\t/******/ \t\t};\n\t/******/\n\t/******/ \t\t// Execute the module function\n\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t/******/\n\t/******/ \t\t// Flag the module as loaded\n\t/******/ \t\tmodule.loaded = true;\n\t/******/\n\t/******/ \t\t// Return the exports of the module\n\t/******/ \t\treturn module.exports;\n\t/******/ \t}\n\t/******/\n\t/******/\n\t/******/ \t// expose the modules object (__webpack_modules__)\n\t/******/ \t__webpack_require__.m = modules;\n\t/******/\n\t/******/ \t// expose the module cache\n\t/******/ \t__webpack_require__.c = installedModules;\n\t/******/\n\t/******/ \t// __webpack_public_path__\n\t/******/ \t__webpack_require__.p = \"\";\n\t/******/\n\t/******/ \t// Load entry module and return exports\n\t/******/ \treturn __webpack_require__(0);\n\t/******/ })\n\t/************************************************************************/\n\t/******/ ([\n\t/* 0 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar ng2_auto_complete_1 = __webpack_require__(1);\n\t\texports.Ng2AutoComplete = ng2_auto_complete_1.Ng2AutoComplete;\n\t\tvar ng2_auto_complete_module_1 = __webpack_require__(5);\n\t\texports.Ng2AutoCompleteModule = ng2_auto_complete_module_1.Ng2AutoCompleteModule;\n\t\tvar ng2_auto_complete_component_1 = __webpack_require__(8);\n\t\texports.Ng2AutoCompleteComponent = ng2_auto_complete_component_1.Ng2AutoCompleteComponent;\n\t\tvar ng2_auto_complete_directive_1 = __webpack_require__(9);\n\t\texports.Ng2AutoCompleteDirective = ng2_auto_complete_directive_1.Ng2AutoCompleteDirective;\n\t\n\t\n\t/***/ },\n\t/* 1 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar __param = (this && this.__param) || function (paramIndex, decorator) {\n\t\t    return function (target, key) { decorator(target, key, paramIndex); }\n\t\t};\n\t\tvar core_1 = __webpack_require__(2);\n\t\tvar http_1 = __webpack_require__(3);\n\t\t__webpack_require__(4);\n\t\t/**\n\t\t * provides auto-complete related utility functions\n\t\t */\n\t\tvar Ng2AutoComplete = (function () {\n\t\t    function Ng2AutoComplete(http) {\n\t\t        this.http = http;\n\t\t        // ...\n\t\t    }\n\t\t    Ng2AutoComplete.prototype.filter = function (list, keyword) {\n\t\t        return list.filter(function (el) {\n\t\t            var objStr = JSON.stringify(el).toLowerCase();\n\t\t            keyword = keyword.toLowerCase();\n\t\t            //console.log(objStr, keyword, objStr.indexOf(keyword) !== -1);\n\t\t            return objStr.indexOf(keyword) !== -1;\n\t\t        });\n\t\t    };\n\t\t    /**\n\t\t     * return remote data from the given source and options, and data path\n\t\t     */\n\t\t    Ng2AutoComplete.prototype.getRemoteData = function (keyword) {\n\t\t        var _this = this;\n\t\t        if (typeof this.source !== 'string') {\n\t\t            throw \"Invalid type of source, must be a string. e.g. http://www.google.com?q=:my_keyword\";\n\t\t        }\n\t\t        else if (!this.http) {\n\t\t            throw \"Http is required.\";\n\t\t        }\n\t\t        var matches = this.source.match(/:[a-zA-Z_]+/);\n\t\t        if (matches === null) {\n\t\t            throw \"Replacement word is missing.\";\n\t\t        }\n\t\t        var replacementWord = matches[0];\n\t\t        var url = this.source.replace(replacementWord, keyword);\n\t\t        return this.http.get(url)\n\t\t            .map(function (resp) { return resp.json(); })\n\t\t            .map(function (resp) {\n\t\t            var list = resp.data || resp;\n\t\t            if (_this.pathToData) {\n\t\t                var paths = _this.pathToData.split(\".\");\n\t\t                paths.forEach(function (prop) { return list = list[prop]; });\n\t\t            }\n\t\t            return list;\n\t\t        });\n\t\t    };\n\t\t    ;\n\t\t    Ng2AutoComplete = __decorate([\n\t\t        core_1.Injectable(),\n\t\t        __param(0, core_1.Optional()), \n\t\t        __metadata('design:paramtypes', [http_1.Http])\n\t\t    ], Ng2AutoComplete);\n\t\t    return Ng2AutoComplete;\n\t\t}());\n\t\texports.Ng2AutoComplete = Ng2AutoComplete;\n\t\n\t\n\t/***/ },\n\t/* 2 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\t\n\t/***/ },\n\t/* 3 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\t\n\t/***/ },\n\t/* 4 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\t\n\t/***/ },\n\t/* 5 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(2);\n\t\tvar common_1 = __webpack_require__(6);\n\t\tvar forms_1 = __webpack_require__(7);\n\t\tvar ng2_auto_complete_component_1 = __webpack_require__(8);\n\t\tvar ng2_auto_complete_directive_1 = __webpack_require__(9);\n\t\tvar ng2_auto_complete_1 = __webpack_require__(1);\n\t\tvar Ng2AutoCompleteModule = (function () {\n\t\t    function Ng2AutoCompleteModule() {\n\t\t    }\n\t\t    Ng2AutoCompleteModule.forRoot = function () {\n\t\t        return {\n\t\t            ngModule: Ng2AutoCompleteModule,\n\t\t            providers: [ng2_auto_complete_1.Ng2AutoComplete]\n\t\t        };\n\t\t    };\n\t\t    Ng2AutoCompleteModule = __decorate([\n\t\t        core_1.NgModule({\n\t\t            imports: [common_1.CommonModule, forms_1.FormsModule],\n\t\t            declarations: [ng2_auto_complete_component_1.Ng2AutoCompleteComponent, ng2_auto_complete_directive_1.Ng2AutoCompleteDirective],\n\t\t            exports: [ng2_auto_complete_component_1.Ng2AutoCompleteComponent, ng2_auto_complete_directive_1.Ng2AutoCompleteDirective],\n\t\t            entryComponents: [ng2_auto_complete_component_1.Ng2AutoCompleteComponent]\n\t\t        }), \n\t\t        __metadata('design:paramtypes', [])\n\t\t    ], Ng2AutoCompleteModule);\n\t\t    return Ng2AutoCompleteModule;\n\t\t}());\n\t\texports.Ng2AutoCompleteModule = Ng2AutoCompleteModule;\n\t\n\t\n\t/***/ },\n\t/* 6 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_6__;\n\t\n\t/***/ },\n\t/* 7 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_7__;\n\t\n\t/***/ },\n\t/* 8 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(2);\n\t\tvar ng2_auto_complete_1 = __webpack_require__(1);\n\t\t/**\n\t\t * show a selected date in monthly calendar\n\t\t * Each filteredList item has the following property in addition to data itself\n\t\t *   1. displayValue as string e.g. Allen Kim\n\t\t *   2. dataValue as any e.g.\n\t\t */\n\t\tvar Ng2AutoCompleteComponent = (function () {\n\t\t    /**\n\t\t     * constructor\n\t\t     */\n\t\t    function Ng2AutoCompleteComponent(elementRef, autoComplete) {\n\t\t        var _this = this;\n\t\t        this.autoComplete = autoComplete;\n\t\t        this.minChars = 0;\n\t\t        this.loadingText = \"Loading\";\n\t\t        this.showInputTag = true;\n\t\t        this.showDropdownOnInit = false;\n\t\t        this.valueSelected = new core_1.EventEmitter();\n\t\t        this.inputChanged = new core_1.EventEmitter();\n\t\t        this.dropdownVisible = false;\n\t\t        this.isLoading = false;\n\t\t        this.filteredList = [];\n\t\t        this.minCharsEntered = false;\n\t\t        this.itemIndex = 0;\n\t\t        this.reloadListInDelay = function (evt) {\n\t\t            var delayMs = _this.isSrcArr() ? 10 : 500;\n\t\t            var keyword = evt.target.value;\n\t\t            // executing after user stopped typing\n\t\t            _this.delay(function () { return _this.reloadList(keyword); }, delayMs);\n\t\t            _this.inputChanged.emit(keyword);\n\t\t        };\n\t\t        this.inputElKeyHandler = function (evt) {\n\t\t            var totalNumItem = _this.filteredList.length;\n\t\t            switch (evt.keyCode) {\n\t\t                case 27:\n\t\t                    //this.hideDropdownList();\n\t\t                    break;\n\t\t                case 38:\n\t\t                    _this.itemIndex = (totalNumItem + _this.itemIndex - 1) % totalNumItem;\n\t\t                    break;\n\t\t                case 40:\n\t\t                    _this.dropdownVisible = true;\n\t\t                    _this.itemIndex = (totalNumItem + _this.itemIndex + 1) % totalNumItem;\n\t\t                    break;\n\t\t                case 13:\n\t\t                    if (_this.filteredList.length > 0) {\n\t\t                        _this.selectOne(_this.filteredList[_this.itemIndex]);\n\t\t                    }\n\t\t                    evt.preventDefault();\n\t\t                    break;\n\t\t            }\n\t\t        };\n\t\t        this.delay = (function () {\n\t\t            var timer = 0;\n\t\t            return function (callback, ms) {\n\t\t                clearTimeout(timer);\n\t\t                timer = setTimeout(callback, ms);\n\t\t            };\n\t\t        })();\n\t\t        this.el = elementRef.nativeElement;\n\t\t    }\n\t\t    Ng2AutoCompleteComponent.prototype.isSrcArr = function () {\n\t\t        return (this.source.constructor.name === \"Array\");\n\t\t    };\n\t\t    /**\n\t\t     * user enters into input el, shows list to select, then select one\n\t\t     */\n\t\t    Ng2AutoCompleteComponent.prototype.ngOnInit = function () {\n\t\t        var _this = this;\n\t\t        this.autoComplete.source = this.source;\n\t\t        this.autoComplete.pathToData = this.pathToData;\n\t\t        setTimeout(function () {\n\t\t            if (_this.autoCompleteInput) {\n\t\t                _this.autoCompleteInput.nativeElement.focus();\n\t\t            }\n\t\t            if (_this.showDropdownOnInit) {\n\t\t                _this.showDropdownList({ target: { value: '' } });\n\t\t            }\n\t\t        });\n\t\t    };\n\t\t    Ng2AutoCompleteComponent.prototype.showDropdownList = function (event) {\n\t\t        this.dropdownVisible = true;\n\t\t        this.reloadList(event.target.value);\n\t\t    };\n\t\t    Ng2AutoCompleteComponent.prototype.hideDropdownList = function () {\n\t\t        this.dropdownVisible = false;\n\t\t    };\n\t\t    Ng2AutoCompleteComponent.prototype.reloadList = function (keyword) {\n\t\t        var _this = this;\n\t\t        this.filteredList = [];\n\t\t        if (keyword.length < (this.minChars || 0)) {\n\t\t            this.minCharsEntered = false;\n\t\t            return;\n\t\t        }\n\t\t        else {\n\t\t            this.minCharsEntered = true;\n\t\t        }\n\t\t        if (this.isSrcArr()) {\n\t\t            this.isLoading = false;\n\t\t            this.filteredList = this.autoComplete.filter(this.source, keyword);\n\t\t            if (this.maxNumList) {\n\t\t                this.filteredList = this.filteredList.slice(0, this.maxNumList);\n\t\t            }\n\t\t        }\n\t\t        else {\n\t\t            this.isLoading = true;\n\t\t            if (typeof this.source === \"function\") {\n\t\t                // custom function that returns observable\n\t\t                this.source(keyword).subscribe(function (resp) {\n\t\t                    if (_this.pathToData) {\n\t\t                        var paths = _this.pathToData.split(\".\");\n\t\t                        paths.forEach(function (prop) { return resp = resp[prop]; });\n\t\t                    }\n\t\t                    _this.filteredList = resp;\n\t\t                    if (_this.maxNumList) {\n\t\t                        _this.filteredList = _this.filteredList.slice(0, _this.maxNumList);\n\t\t                    }\n\t\t                }, function (error) { return null; }, function () { return _this.isLoading = false; } // complete\n\t\t                );\n\t\t            }\n\t\t            else {\n\t\t                // remote source\n\t\t                this.autoComplete.getRemoteData(keyword).subscribe(function (resp) {\n\t\t                    _this.filteredList = resp;\n\t\t                    if (_this.maxNumList) {\n\t\t                        _this.filteredList = _this.filteredList.slice(0, _this.maxNumList);\n\t\t                    }\n\t\t                }, function (error) { return null; }, function () { return _this.isLoading = false; } // complete\n\t\t                );\n\t\t            }\n\t\t        }\n\t\t    };\n\t\t    Ng2AutoCompleteComponent.prototype.selectOne = function (data) {\n\t\t        this.valueSelected.emit(data);\n\t\t    };\n\t\t    ;\n\t\t    Ng2AutoCompleteComponent.prototype.getFormattedList = function (data) {\n\t\t        var formatted;\n\t\t        var formatter = this.listFormatter || '(id) value';\n\t\t        if (typeof formatter === 'function') {\n\t\t            formatted = formatter.apply(this, [data]);\n\t\t        }\n\t\t        else if (typeof data !== 'object') {\n\t\t            formatted = data;\n\t\t        }\n\t\t        else if (typeof formatter === 'string') {\n\t\t            formatted = formatter;\n\t\t            var matches = formatter.match(/[a-zA-Z0-9_\\$]+/g);\n\t\t            if (matches && typeof data !== 'string') {\n\t\t                matches.forEach(function (key) {\n\t\t                    formatted = formatted.replace(key, data[key]);\n\t\t                });\n\t\t            }\n\t\t        }\n\t\t        return formatted;\n\t\t    };\n\t\t    Object.defineProperty(Ng2AutoCompleteComponent.prototype, \"emptyList\", {\n\t\t        get: function () {\n\t\t            return !(this.isLoading ||\n\t\t                (this.minCharsEntered && !this.isLoading && !this.filteredList.length) ||\n\t\t                (this.filteredList.length));\n\t\t        },\n\t\t        enumerable: true,\n\t\t        configurable: true\n\t\t    });\n\t\t    __decorate([\n\t\t        core_1.Input(\"list-formatter\"), \n\t\t        __metadata('design:type', Function)\n\t\t    ], Ng2AutoCompleteComponent.prototype, \"listFormatter\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input(\"source\"), \n\t\t        __metadata('design:type', Object)\n\t\t    ], Ng2AutoCompleteComponent.prototype, \"source\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input(\"path-to-data\"), \n\t\t        __metadata('design:type', String)\n\t\t    ], Ng2AutoCompleteComponent.prototype, \"pathToData\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input(\"min-chars\"), \n\t\t        __metadata('design:type', Number)\n\t\t    ], Ng2AutoCompleteComponent.prototype, \"minChars\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input(\"placeholder\"), \n\t\t        __metadata('design:type', String)\n\t\t    ], Ng2AutoCompleteComponent.prototype, \"placeholder\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input(\"blank-option-text\"), \n\t\t        __metadata('design:type', String)\n\t\t    ], Ng2AutoCompleteComponent.prototype, \"blankOptionText\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input(\"no-match-found-text\"), \n\t\t        __metadata('design:type', String)\n\t\t    ], Ng2AutoCompleteComponent.prototype, \"noMatchFoundText\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input(\"accept-user-input\"), \n\t\t        __metadata('design:type', Boolean)\n\t\t    ], Ng2AutoCompleteComponent.prototype, \"acceptUserInput\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input(\"loading-text\"), \n\t\t        __metadata('design:type', String)\n\t\t    ], Ng2AutoCompleteComponent.prototype, \"loadingText\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input(\"max-num-list\"), \n\t\t        __metadata('design:type', Number)\n\t\t    ], Ng2AutoCompleteComponent.prototype, \"maxNumList\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input(\"show-input-tag\"), \n\t\t        __metadata('design:type', Boolean)\n\t\t    ], Ng2AutoCompleteComponent.prototype, \"showInputTag\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input(\"show-dropdown-on-init\"), \n\t\t        __metadata('design:type', Boolean)\n\t\t    ], Ng2AutoCompleteComponent.prototype, \"showDropdownOnInit\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Output(), \n\t\t        __metadata('design:type', Object)\n\t\t    ], Ng2AutoCompleteComponent.prototype, \"valueSelected\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Output(), \n\t\t        __metadata('design:type', Object)\n\t\t    ], Ng2AutoCompleteComponent.prototype, \"inputChanged\", void 0);\n\t\t    __decorate([\n\t\t        core_1.ViewChild('autoCompleteInput'), \n\t\t        __metadata('design:type', core_1.ElementRef)\n\t\t    ], Ng2AutoCompleteComponent.prototype, \"autoCompleteInput\", void 0);\n\t\t    Ng2AutoCompleteComponent = __decorate([\n\t\t        core_1.Component({\n\t\t            selector: \"ng2-auto-complete\",\n\t\t            template: \"\\n  <div class=\\\"ng2-auto-complete\\\">\\n\\n    <!-- keyword input -->\\n    <input *ngIf=\\\"showInputTag\\\"\\n           #autoCompleteInput class=\\\"keyword\\\"\\n           placeholder=\\\"{{placeholder}}\\\"\\n           (focus)=\\\"showDropdownList($event)\\\"\\n           (blur)=\\\"hideDropdownList()\\\"\\n           (keydown)=\\\"inputElKeyHandler($event)\\\"\\n           (input)=\\\"reloadListInDelay($event)\\\"\\n           [(ngModel)]=\\\"keyword\\\" />\\n\\n    <!-- dropdown that user can select -->\\n    <ul *ngIf=\\\"dropdownVisible\\\" [class.empty]=\\\"emptyList\\\">\\n      <li *ngIf=\\\"isLoading\\\" class=\\\"loading\\\">{{loadingText}}</li>\\n      <li *ngIf=\\\"minCharsEntered && !isLoading && !filteredList.length\\\"\\n           (mousedown)=\\\"selectOne('')\\\"\\n           class=\\\"blank-item\\\">{{noMatchFoundText || 'No Result Found'}}</li>\\n      <li *ngIf=\\\"blankOptionText && filteredList.length\\\"\\n          (mousedown)=\\\"selectOne('')\\\"\\n          class=\\\"blank-item\\\">{{blankOptionText}}</li>\\n      <li class=\\\"item\\\"\\n          *ngFor=\\\"let item of filteredList; let i=index\\\"\\n          (mousedown)=\\\"selectOne(item)\\\"\\n          [ngClass]=\\\"{selected: i === itemIndex}\\\"\\n          [innerHtml]=\\\"getFormattedList(item)\\\">\\n      </li>\\n    </ul>\\n\\n  </div>\",\n\t\t            providers: [ng2_auto_complete_1.Ng2AutoComplete],\n\t\t            styles: [\"\\n  @keyframes slideDown {\\n    0% {\\n      transform:  translateY(-10px);\\n    }\\n    100% {\\n      transform: translateY(0px);\\n    }\\n  }\\n  .ng2-auto-complete {\\n    background-color: transparent;\\n  }\\n  .ng2-auto-complete > input {\\n    outline: none;\\n    border: 0;\\n    padding: 2px; \\n    box-sizing: border-box;\\n    background-clip: content-box;\\n  }\\n\\n  .ng2-auto-complete > ul {\\n    background-color: #fff;\\n    margin: 0;\\n    width : 100%;\\n    overflow-y: auto;\\n    list-style-type: none;\\n    padding: 0;\\n    border: 1px solid #ccc;\\n    box-sizing: border-box;\\n    animation: slideDown 0.1s;\\n  }\\n  .ng2-auto-complete > ul.empty {\\n    display: none;\\n  }\\n\\n  .ng2-auto-complete > ul li {\\n    padding: 2px 5px;\\n    border-bottom: 1px solid #eee;\\n  }\\n\\n  .ng2-auto-complete > ul li.selected {\\n    background-color: #ccc;\\n  }\\n\\n  .ng2-auto-complete > ul li:last-child {\\n    border-bottom: none;\\n  }\\n\\n  .ng2-auto-complete > ul li:hover {\\n    background-color: #ccc;\\n  }\"\n\t\t            ],\n\t\t            encapsulation: core_1.ViewEncapsulation.None\n\t\t        }), \n\t\t        __metadata('design:paramtypes', [core_1.ElementRef, ng2_auto_complete_1.Ng2AutoComplete])\n\t\t    ], Ng2AutoCompleteComponent);\n\t\t    return Ng2AutoCompleteComponent;\n\t\t}());\n\t\texports.Ng2AutoCompleteComponent = Ng2AutoCompleteComponent;\n\t\n\t\n\t/***/ },\n\t/* 9 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar __param = (this && this.__param) || function (paramIndex, decorator) {\n\t\t    return function (target, key) { decorator(target, key, paramIndex); }\n\t\t};\n\t\tvar core_1 = __webpack_require__(2);\n\t\tvar ng2_auto_complete_component_1 = __webpack_require__(8);\n\t\tvar forms_1 = __webpack_require__(7);\n\t\t/**\n\t\t * display auto-complete section with input and dropdown list when it is clicked\n\t\t */\n\t\tvar Ng2AutoCompleteDirective = (function () {\n\t\t    function Ng2AutoCompleteDirective(resolver, renderer, viewContainerRef, parentForm) {\n\t\t        var _this = this;\n\t\t        this.resolver = resolver;\n\t\t        this.renderer = renderer;\n\t\t        this.viewContainerRef = viewContainerRef;\n\t\t        this.parentForm = parentForm;\n\t\t        this.loadingText = \"Loading\";\n\t\t        this.ngModelChange = new core_1.EventEmitter();\n\t\t        this.valueChanged = new core_1.EventEmitter();\n\t\t        //show auto-complete list below the current element\n\t\t        this.showAutoCompleteDropdown = function (event) {\n\t\t            var factory = _this.resolver.resolveComponentFactory(ng2_auto_complete_component_1.Ng2AutoCompleteComponent);\n\t\t            _this.componentRef = _this.viewContainerRef.createComponent(factory);\n\t\t            var component = _this.componentRef.instance;\n\t\t            component.showInputTag = false; //Do NOT display autocomplete input tag separately\n\t\t            component.pathToData = _this.pathToData;\n\t\t            component.minChars = _this.minChars;\n\t\t            component.source = _this.source;\n\t\t            component.placeholder = _this.autoCompletePlaceholder;\n\t\t            component.acceptUserInput = _this.acceptUserInput;\n\t\t            component.maxNumList = parseInt(_this.maxNumList, 10);\n\t\t            component.loadingText = _this.loadingText;\n\t\t            component.listFormatter = _this.listFormatter;\n\t\t            component.blankOptionText = _this.blankOptionText;\n\t\t            component.noMatchFoundText = _this.noMatchFoundText;\n\t\t            component.valueSelected.subscribe(_this.selectNewValue);\n\t\t            component.inputChanged.subscribe(_this.componentInputChanged);\n\t\t            _this.acDropdownEl = _this.componentRef.location.nativeElement;\n\t\t            _this.acDropdownEl.style.display = \"none\";\n\t\t            // if this element is not an input tag, move dropdown after input tag\n\t\t            // so that it displays correctly\n\t\t            if (_this.el.tagName !== \"INPUT\" && _this.acDropdownEl) {\n\t\t                _this.inputEl.parentElement.insertBefore(_this.acDropdownEl, _this.inputEl.nextSibling);\n\t\t            }\n\t\t            setTimeout(function () {\n\t\t                component.reloadList(_this.inputEl.value);\n\t\t                _this.styleAutoCompleteDropdown();\n\t\t                component.dropdownVisible = true;\n\t\t            });\n\t\t        };\n\t\t        this.hideAutoCompleteDropdown = function (event) {\n\t\t            if (_this.componentRef) {\n\t\t                _this.componentRef.destroy();\n\t\t                _this.componentRef = undefined;\n\t\t            }\n\t\t        };\n\t\t        this.styleAutoCompleteDropdown = function () {\n\t\t            if (_this.componentRef) {\n\t\t                var component = _this.componentRef.instance;\n\t\t                /* setting width/height auto complete */\n\t\t                var thisElBCR = _this.el.getBoundingClientRect();\n\t\t                var thisInputElBCR = _this.inputEl.getBoundingClientRect();\n\t\t                var closeToBottom = thisInputElBCR.bottom + 100 > window.innerHeight;\n\t\t                _this.acDropdownEl.style.width = thisInputElBCR.width + \"px\";\n\t\t                _this.acDropdownEl.style.position = \"absolute\";\n\t\t                _this.acDropdownEl.style.zIndex = \"1\";\n\t\t                _this.acDropdownEl.style.left = \"0\";\n\t\t                _this.acDropdownEl.style.display = \"inline-block\";\n\t\t                if (closeToBottom) {\n\t\t                    _this.acDropdownEl.style.bottom = thisInputElBCR.height + \"px\";\n\t\t                }\n\t\t                else {\n\t\t                    _this.acDropdownEl.style.top = thisInputElBCR.height + \"px\";\n\t\t                }\n\t\t            }\n\t\t        };\n\t\t        this.componentInputChanged = function (val) {\n\t\t            if (_this.acceptUserInput !== false) {\n\t\t                _this.inputEl.value = val;\n\t\t                if ((_this.parentForm && _this.formControlName) || _this.extFormControl) {\n\t\t                    _this.formControl.patchValue(val);\n\t\t                }\n\t\t                (val !== _this.ngModel) && _this.ngModelChange.emit(val);\n\t\t                _this.valueChanged.emit(val);\n\t\t            }\n\t\t        };\n\t\t        this.selectNewValue = function (item) {\n\t\t            // make displayable value\n\t\t            if (item && typeof item === \"object\") {\n\t\t                item = _this.addToStringFunction(item);\n\t\t            }\n\t\t            _this.inputEl && (_this.inputEl.value = '' + item);\n\t\t            // make return value\n\t\t            var val = item;\n\t\t            if (_this.selectValueOf && item[_this.selectValueOf]) {\n\t\t                val = item[_this.selectValueOf];\n\t\t            }\n\t\t            if ((_this.parentForm && _this.formControlName) || _this.extFormControl) {\n\t\t                if (!!val) {\n\t\t                    _this.formControl.patchValue(val);\n\t\t                }\n\t\t            }\n\t\t            (val !== _this.ngModel) && _this.ngModelChange.emit(val);\n\t\t            _this.valueChanged.emit(val);\n\t\t            _this.hideAutoCompleteDropdown();\n\t\t        };\n\t\t        this.keydownEventHandler = function (evt) {\n\t\t            if (_this.componentRef) {\n\t\t                var component = _this.componentRef.instance;\n\t\t                component.inputElKeyHandler(evt);\n\t\t            }\n\t\t        };\n\t\t        this.inputEventHandler = function (evt) {\n\t\t            if (_this.componentRef) {\n\t\t                var component = _this.componentRef.instance;\n\t\t                component.dropdownVisible = true;\n\t\t                component.reloadListInDelay(evt);\n\t\t            }\n\t\t            else {\n\t\t                _this.showAutoCompleteDropdown();\n\t\t            }\n\t\t        };\n\t\t        this.el = this.viewContainerRef.element.nativeElement;\n\t\t    }\n\t\t    Ng2AutoCompleteDirective.prototype.ngOnInit = function () {\n\t\t        // wrap this element with <div class=\"ng2-auto-complete\">\n\t\t        this.wrapperEl = document.createElement(\"div\");\n\t\t        this.wrapperEl.className = \"ng2-auto-complete-wrapper\";\n\t\t        this.wrapperEl.style.position = \"relative\";\n\t\t        this.el.parentElement.insertBefore(this.wrapperEl, this.el.nextSibling);\n\t\t        this.wrapperEl.appendChild(this.el);\n\t\t        //Check if we were supplied with a [formControlName] and it is inside a [form]\n\t\t        //else check if we are supplied with a [FormControl] regardless if it is inside a [form] tag\n\t\t        if (this.parentForm && this.formControlName) {\n\t\t            if (this.parentForm['form']) {\n\t\t                this.formControl = this.parentForm['form'].get(this.formControlName);\n\t\t            }\n\t\t            else if (this.parentForm instanceof forms_1.FormGroupName) {\n\t\t                this.formControl = this.parentForm.control.controls[this.formControlName];\n\t\t            }\n\t\t        }\n\t\t        else if (this.extFormControl) {\n\t\t            this.formControl = this.extFormControl;\n\t\t        }\n\t\t        // apply toString() method for the object\n\t\t        if (!!this.ngModel) {\n\t\t            this.selectNewValue(this.ngModel);\n\t\t        }\n\t\t        else if (!!this.formControl && this.formControl.value) {\n\t\t            this.selectNewValue(this.formControl.value[this.displayPropertyName]);\n\t\t        }\n\t\t        // when somewhere else clicked, hide this autocomplete\n\t\t        //document.addEventListener(\"click\", this.hideAutoCompleteDropdown);\n\t\t    };\n\t\t    Ng2AutoCompleteDirective.prototype.ngAfterViewInit = function () {\n\t\t        // if this element is not an input tag, move dropdown after input tag\n\t\t        // so that it displays correctly\n\t\t        this.inputEl = this.el.tagName === \"INPUT\" ?\n\t\t            this.el : this.el.querySelector(\"input\");\n\t\t        this.inputEl.addEventListener('focus', this.showAutoCompleteDropdown);\n\t\t        this.inputEl.addEventListener('blur', this.hideAutoCompleteDropdown);\n\t\t        this.inputEl.addEventListener('keydown', this.keydownEventHandler);\n\t\t        this.inputEl.addEventListener('input', this.inputEventHandler);\n\t\t    };\n\t\t    Ng2AutoCompleteDirective.prototype.ngOnDestroy = function () {\n\t\t        if (this.componentRef) {\n\t\t            this.componentRef.instance.valueSelected.unsubscribe();\n\t\t            this.componentRef.instance.inputChanged.unsubscribe();\n\t\t        }\n\t\t        //document.removeEventListener(\"click\", this.hideAutoCompleteDropdown);\n\t\t    };\n\t\t    Ng2AutoCompleteDirective.prototype.ngOnChanges = function (changes) {\n\t\t        if (changes['ngModel']) {\n\t\t            this.ngModel = this.addToStringFunction(changes['ngModel'].currentValue);\n\t\t        }\n\t\t    };\n\t\t    Ng2AutoCompleteDirective.prototype.addToStringFunction = function (val) {\n\t\t        if (val && typeof val === \"object\") {\n\t\t            var displayVal_1;\n\t\t            if (this.displayPropertyName) {\n\t\t                displayVal_1 = val[this.displayPropertyName];\n\t\t            }\n\t\t            else if (this.listFormatter) {\n\t\t                displayVal_1 = val[this.listFormatter];\n\t\t            }\n\t\t            else {\n\t\t                displayVal_1 = val.value;\n\t\t            }\n\t\t            val.toString = function () {\n\t\t                return displayVal_1;\n\t\t            };\n\t\t        }\n\t\t        return val;\n\t\t    };\n\t\t    __decorate([\n\t\t        core_1.Input(\"auto-complete-placeholder\"), \n\t\t        __metadata('design:type', String)\n\t\t    ], Ng2AutoCompleteDirective.prototype, \"autoCompletePlaceholder\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input(\"source\"), \n\t\t        __metadata('design:type', Object)\n\t\t    ], Ng2AutoCompleteDirective.prototype, \"source\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input(\"path-to-data\"), \n\t\t        __metadata('design:type', String)\n\t\t    ], Ng2AutoCompleteDirective.prototype, \"pathToData\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input(\"min-chars\"), \n\t\t        __metadata('design:type', Number)\n\t\t    ], Ng2AutoCompleteDirective.prototype, \"minChars\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input(\"display-property-name\"), \n\t\t        __metadata('design:type', String)\n\t\t    ], Ng2AutoCompleteDirective.prototype, \"displayPropertyName\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input(\"accept-user-input\"), \n\t\t        __metadata('design:type', Boolean)\n\t\t    ], Ng2AutoCompleteDirective.prototype, \"acceptUserInput\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input(\"max-num-list\"), \n\t\t        __metadata('design:type', String)\n\t\t    ], Ng2AutoCompleteDirective.prototype, \"maxNumList\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input(\"select-value-of\"), \n\t\t        __metadata('design:type', String)\n\t\t    ], Ng2AutoCompleteDirective.prototype, \"selectValueOf\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input(\"list-formatter\"), \n\t\t        __metadata('design:type', Object)\n\t\t    ], Ng2AutoCompleteDirective.prototype, \"listFormatter\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input(\"loading-text\"), \n\t\t        __metadata('design:type', String)\n\t\t    ], Ng2AutoCompleteDirective.prototype, \"loadingText\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input(\"blank-option-text\"), \n\t\t        __metadata('design:type', String)\n\t\t    ], Ng2AutoCompleteDirective.prototype, \"blankOptionText\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input(\"no-match-found-text\"), \n\t\t        __metadata('design:type', String)\n\t\t    ], Ng2AutoCompleteDirective.prototype, \"noMatchFoundText\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input(), \n\t\t        __metadata('design:type', String)\n\t\t    ], Ng2AutoCompleteDirective.prototype, \"ngModel\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input('formControlName'), \n\t\t        __metadata('design:type', String)\n\t\t    ], Ng2AutoCompleteDirective.prototype, \"formControlName\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input('formControl'), \n\t\t        __metadata('design:type', forms_1.FormControl)\n\t\t    ], Ng2AutoCompleteDirective.prototype, \"extFormControl\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Output(), \n\t\t        __metadata('design:type', Object)\n\t\t    ], Ng2AutoCompleteDirective.prototype, \"ngModelChange\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Output(), \n\t\t        __metadata('design:type', Object)\n\t\t    ], Ng2AutoCompleteDirective.prototype, \"valueChanged\", void 0);\n\t\t    Ng2AutoCompleteDirective = __decorate([\n\t\t        core_1.Directive({\n\t\t            selector: \"[auto-complete], [ng2-auto-complete]\"\n\t\t        }),\n\t\t        __param(3, core_1.Optional()),\n\t\t        __param(3, core_1.Host()),\n\t\t        __param(3, core_1.SkipSelf()), \n\t\t        __metadata('design:paramtypes', [core_1.ComponentFactoryResolver, core_1.Renderer, core_1.ViewContainerRef, forms_1.ControlContainer])\n\t\t    ], Ng2AutoCompleteDirective);\n\t\t    return Ng2AutoCompleteDirective;\n\t\t}());\n\t\texports.Ng2AutoCompleteDirective = Ng2AutoCompleteDirective;\n\t\n\t\n\t/***/ }\n\t/******/ ])\n\t});\n\t;\n\t//# sourceMappingURL=ng2-auto-complete.umd.js.map\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_6__;\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_7__;\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_8__;\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function webpackUniversalModuleDefinition(root, factory) {\n\t\tif(true)\n\t\t\tmodule.exports = factory(__webpack_require__(2), __webpack_require__(3), __webpack_require__(8));\n\t\telse if(typeof define === 'function' && define.amd)\n\t\t\tdefine([\"@angular/core\", \"@angular/forms\", \"@angular/common\"], factory);\n\t\telse if(typeof exports === 'object')\n\t\t\texports[\"ng2-datetime-picker\"] = factory(require(\"@angular/core\"), require(\"@angular/forms\"), require(\"@angular/common\"));\n\t\telse\n\t\t\troot[\"ng2-datetime-picker\"] = factory(root[\"@angular/core\"], root[\"@angular/forms\"], root[\"@angular/common\"]);\n\t})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_7__) {\n\treturn /******/ (function(modules) { // webpackBootstrap\n\t/******/ \t// The module cache\n\t/******/ \tvar installedModules = {};\n\t/******/\n\t/******/ \t// The require function\n\t/******/ \tfunction __webpack_require__(moduleId) {\n\t/******/\n\t/******/ \t\t// Check if module is in cache\n\t/******/ \t\tif(installedModules[moduleId])\n\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\t/******/\n\t/******/ \t\t// Create a new module (and put it into the cache)\n\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t/******/ \t\t\texports: {},\n\t/******/ \t\t\tid: moduleId,\n\t/******/ \t\t\tloaded: false\n\t/******/ \t\t};\n\t/******/\n\t/******/ \t\t// Execute the module function\n\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t/******/\n\t/******/ \t\t// Flag the module as loaded\n\t/******/ \t\tmodule.loaded = true;\n\t/******/\n\t/******/ \t\t// Return the exports of the module\n\t/******/ \t\treturn module.exports;\n\t/******/ \t}\n\t/******/\n\t/******/\n\t/******/ \t// expose the modules object (__webpack_modules__)\n\t/******/ \t__webpack_require__.m = modules;\n\t/******/\n\t/******/ \t// expose the module cache\n\t/******/ \t__webpack_require__.c = installedModules;\n\t/******/\n\t/******/ \t// __webpack_public_path__\n\t/******/ \t__webpack_require__.p = \"\";\n\t/******/\n\t/******/ \t// Load entry module and return exports\n\t/******/ \treturn __webpack_require__(0);\n\t/******/ })\n\t/************************************************************************/\n\t/******/ ([\n\t/* 0 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar ng2_datetime_1 = __webpack_require__(1);\n\t\texports.Ng2Datetime = ng2_datetime_1.Ng2Datetime;\n\t\tvar ng2_datetime_picker_component_1 = __webpack_require__(3);\n\t\texports.Ng2DatetimePickerComponent = ng2_datetime_picker_component_1.Ng2DatetimePickerComponent;\n\t\tvar ng2_datetime_picker_directive_1 = __webpack_require__(4);\n\t\texports.Ng2DatetimePickerDirective = ng2_datetime_picker_directive_1.Ng2DatetimePickerDirective;\n\t\tvar ng2_datetime_picker_module_1 = __webpack_require__(6);\n\t\texports.Ng2DatetimePickerModule = ng2_datetime_picker_module_1.Ng2DatetimePickerModule;\n\t\n\t\n\t/***/ },\n\t/* 1 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(2);\n\t\t/**\n\t\t * Static variables that you can override\n\t\t *   1. days.           default 1,2,....31\n\t\t *   2. daysOfWeek,     default Sunday, Monday, .....\n\t\t *   3. firstDayOfWeek, default 0 as in Sunday\n\t\t *   4. months,         default January, February\n\t\t *   5. formatDate(d)   default returns YYYY-MM-DD HH:MM\n\t\t *   6. parseDate(str)  default returns date from YYYY-MM-DD HH:MM\n\t\t */\n\t\tvar Ng2Datetime = (function () {\n\t\t    function Ng2Datetime() {\n\t\t    }\n\t\t    Ng2Datetime.formatDate = function (d, format, dateOnly) {\n\t\t        var ret;\n\t\t        if (d && !format) {\n\t\t            // return d.toLocaleString('en-us', hash); // IE11 does not understand this\n\t\t            var pad0 = function (number) { return (\"0\" + number).slice(-2); };\n\t\t            ret = d.getFullYear() + '-' + pad0(d.getMonth() + 1) + '-' + pad0(d.getDate());\n\t\t            ret += dateOnly ? '' : ' ' + pad0(d.getHours()) + ':' + pad0(d.getMinutes());\n\t\t            return ret;\n\t\t        }\n\t\t        else if (d && moment) {\n\t\t            return moment(d).format(format);\n\t\t        }\n\t\t        else {\n\t\t            return '';\n\t\t        }\n\t\t    };\n\t\t    Ng2Datetime.parseDate = function (dateStr, parseFormat, dateFormat) {\n\t\t        if (typeof moment === 'undefined') {\n\t\t            dateStr = Ng2Datetime.removeTimezone(dateStr);\n\t\t            dateStr = dateStr + Ng2Datetime.addDSTOffset(dateStr);\n\t\t            return Ng2Datetime.parseFromDefaultFormat(dateStr);\n\t\t        }\n\t\t        else if (dateFormat || parseFormat) {\n\t\t            // try parse using each format because changing format programmatically calls this twice,\n\t\t            // once with string in parse format and once in date format\n\t\t            var formats = [];\n\t\t            if (parseFormat) {\n\t\t                formats.push(parseFormat);\n\t\t            }\n\t\t            if (dateFormat) {\n\t\t                formats.push(dateFormat);\n\t\t            }\n\t\t            var m = moment(dateStr, formats);\n\t\t            var date = m.toDate();\n\t\t            if (!m.isValid()) {\n\t\t                date = moment(dateStr, moment.ISO_8601).toDate(); // parse as ISO format\n\t\t            }\n\t\t            return date;\n\t\t        }\n\t\t        else {\n\t\t            var date = moment(dateStr, 'YYYY-MM-DD HH:mm').toDate();\n\t\t            return date;\n\t\t        }\n\t\t    };\n\t\t    //remove timezone\n\t\t    Ng2Datetime.removeTimezone = function (dateStr) {\n\t\t        // if no time is given, add 00:00:00 at the end\n\t\t        var matches = dateStr.match(/[0-9]{2}:/);\n\t\t        dateStr += matches ? '' : ' 00:00:00';\n\t\t        return dateStr.replace(/([0-9]{2}-[0-9]{2})-([0-9]{4})/, '$2-$1') //mm-dd-yyyy to yyyy-mm-dd\n\t\t            .replace(/([\\/-][0-9]{2,4})\\ ([0-9]{2}\\:[0-9]{2}\\:)/, '$1T$2') //reformat for FF\n\t\t            .replace(/EDT|EST|CDT|CST|MDT|PDT|PST|UT|GMT/g, '') //remove timezone\n\t\t            .replace(/\\s*\\(\\)\\s*/, '') //remove timezone\n\t\t            .replace(/[\\-\\+][0-9]{2}:?[0-9]{2}$/, '') //remove timezone\n\t\t            .replace(/000Z$/, '00'); //remove timezone\n\t\t    };\n\t\t    Ng2Datetime.addDSTOffset = function (dateStr) {\n\t\t        var date = Ng2Datetime.parseFromDefaultFormat(dateStr);\n\t\t        var jan = new Date(date.getFullYear(), 0, 1);\n\t\t        var jul = new Date(date.getFullYear(), 6, 1);\n\t\t        var stdTimezoneOffset = Math.max(jan.getTimezoneOffset(), jul.getTimezoneOffset());\n\t\t        var isDST = date.getTimezoneOffset() < stdTimezoneOffset;\n\t\t        var offset = isDST ? stdTimezoneOffset - 60 : stdTimezoneOffset;\n\t\t        var diff = offset >= 0 ? '-' : '+';\n\t\t        offset = Math.abs(offset);\n\t\t        return diff +\n\t\t            ('0' + (offset / 60)).slice(-2) + ':' +\n\t\t            ('0' + (offset % 60)).slice(-2);\n\t\t    };\n\t\t    ;\n\t\t    Ng2Datetime.parseFromDefaultFormat = function (dateStr) {\n\t\t        var tmp = dateStr.split(/[\\+\\-:\\ T]/); // split by dash, colon or space\n\t\t        return new Date(parseInt(tmp[0], 10), parseInt(tmp[1], 10) - 1, parseInt(tmp[2], 10), parseInt(tmp[3] || '0', 10), parseInt(tmp[4] || '0', 10), parseInt(tmp[5] || '0', 10));\n\t\t    };\n\t\t    Ng2Datetime.prototype.getMonthData = function (year, month) {\n\t\t        year = month > 11 ? year + 1 :\n\t\t            month < 0 ? year - 1 : year;\n\t\t        month = (month + 12) % 12;\n\t\t        var firstDayOfMonth = new Date(year, month, 1);\n\t\t        var lastDayOfMonth = new Date(year, month + 1, 0);\n\t\t        var lastDayOfPreviousMonth = new Date(year, month, 0);\n\t\t        var daysInMonth = lastDayOfMonth.getDate();\n\t\t        var daysInLastMonth = lastDayOfPreviousMonth.getDate();\n\t\t        var dayOfWeek = firstDayOfMonth.getDay();\n\t\t        // Ensure there are always leading days to give context\n\t\t        var leadingDays = (dayOfWeek - Ng2Datetime.firstDayOfWeek + 7) % 7 || 7;\n\t\t        var trailingDays = Ng2Datetime.days.slice(0, 6 * 7 - (leadingDays + daysInMonth));\n\t\t        if (trailingDays.length > 7) {\n\t\t            trailingDays = trailingDays.slice(0, trailingDays.length - 7);\n\t\t        }\n\t\t        var localizedDaysOfWeek = Ng2Datetime.daysOfWeek\n\t\t            .concat(Ng2Datetime.daysOfWeek)\n\t\t            .splice(Ng2Datetime.firstDayOfWeek, 7);\n\t\t        var monthData = {\n\t\t            year: year,\n\t\t            month: month,\n\t\t            weekends: Ng2Datetime.weekends,\n\t\t            firstDayOfWeek: Ng2Datetime.firstDayOfWeek,\n\t\t            fullName: Ng2Datetime.months[month].fullName,\n\t\t            shortName: Ng2Datetime.months[month].shortName,\n\t\t            localizedDaysOfWeek: localizedDaysOfWeek,\n\t\t            days: Ng2Datetime.days.slice(0, daysInMonth),\n\t\t            leadingDays: Ng2Datetime.days.slice(-leadingDays - (31 - daysInLastMonth), daysInLastMonth),\n\t\t            trailingDays: trailingDays\n\t\t        };\n\t\t        return monthData;\n\t\t    };\n\t\t    Ng2Datetime.days = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31];\n\t\t    Ng2Datetime.weekends = [0, 6];\n\t\t    Ng2Datetime.daysOfWeek = typeof moment === 'undefined' ? [\n\t\t        { fullName: 'Sunday', shortName: 'Su' },\n\t\t        { fullName: 'Monday', shortName: 'Mo' },\n\t\t        { fullName: 'Tuesday', shortName: 'Tu' },\n\t\t        { fullName: 'Wednesday', shortName: 'We' },\n\t\t        { fullName: 'Thursday', shortName: 'Th' },\n\t\t        { fullName: 'Friday', shortName: 'Fr' },\n\t\t        { fullName: 'Saturday', shortName: 'Sa' }\n\t\t    ] : moment.weekdays().map(function (el, index) {\n\t\t        return {\n\t\t            fullName: el,\n\t\t            shortName: moment.weekdaysShort()[index].substr(0, 2)\n\t\t        };\n\t\t    });\n\t\t    Ng2Datetime.firstDayOfWeek = typeof moment === 'undefined' ? 0 : moment.localeData().firstDayOfWeek();\n\t\t    Ng2Datetime.months = typeof moment === 'undefined' ? [\n\t\t        { fullName: 'January', shortName: 'Jan' },\n\t\t        { fullName: 'February', shortName: 'Feb' },\n\t\t        { fullName: 'March', shortName: 'Mar' },\n\t\t        { fullName: 'April', shortName: 'Apr' },\n\t\t        { fullName: 'May', shortName: 'May' },\n\t\t        { fullName: 'June', shortName: 'Jun' },\n\t\t        { fullName: 'July', shortName: 'Jul' },\n\t\t        { fullName: 'August', shortName: 'Aug' },\n\t\t        { fullName: 'September', shortName: 'Sep' },\n\t\t        { fullName: 'October', shortName: 'Oct' },\n\t\t        { fullName: 'November', shortName: 'Nov' },\n\t\t        { fullName: 'December', shortName: 'Dec' }\n\t\t    ] : moment.months().map(function (el, index) {\n\t\t        return {\n\t\t            fullName: el,\n\t\t            shortName: moment['monthsShort']()[index]\n\t\t        };\n\t\t    });\n\t\t    Ng2Datetime = __decorate([\n\t\t        core_1.Injectable(), \n\t\t        __metadata('design:paramtypes', [])\n\t\t    ], Ng2Datetime);\n\t\t    return Ng2Datetime;\n\t\t}());\n\t\texports.Ng2Datetime = Ng2Datetime;\n\t\n\t\n\t/***/ },\n\t/* 2 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\t\n\t/***/ },\n\t/* 3 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(2);\n\t\tvar ng2_datetime_1 = __webpack_require__(1);\n\t\t//@TODO\n\t\t// . display currently selected day\n\t\t/**\n\t\t * show a selected date in monthly calendar\n\t\t */\n\t\tvar Ng2DatetimePickerComponent = (function () {\n\t\t    function Ng2DatetimePickerComponent(elementRef, ng2Datetime, cdRef) {\n\t\t        this.ng2Datetime = ng2Datetime;\n\t\t        this.cdRef = cdRef;\n\t\t        this.minuteStep = 1;\n\t\t        this.selected$ = new core_1.EventEmitter();\n\t\t        this.closing$ = new core_1.EventEmitter();\n\t\t        this.el = elementRef.nativeElement;\n\t\t    }\n\t\t    Object.defineProperty(Ng2DatetimePickerComponent.prototype, \"year\", {\n\t\t        // public ngAfterViewInit ():void {\n\t\t        //   let stopPropagation = (e: Event) => e.stopPropagation();\n\t\t        //   if (!this.dateOnly) {\n\t\t        //     this.hours.nativeElement.addEventListener('keyup', stopPropagation);\n\t\t        //     this.hours.nativeElement.addEventListener('mousedown', stopPropagation);\n\t\t        //     this.minutes.nativeElement.addEventListener('keyup', stopPropagation);\n\t\t        //     this.minutes.nativeElement.addEventListener('mousedown', stopPropagation);\n\t\t        //   }\n\t\t        // }\n\t\t        get: function () {\n\t\t            return this.selectedDate.getFullYear();\n\t\t        },\n\t\t        set: function (year) { },\n\t\t        enumerable: true,\n\t\t        configurable: true\n\t\t    });\n\t\t    Object.defineProperty(Ng2DatetimePickerComponent.prototype, \"month\", {\n\t\t        get: function () {\n\t\t            return this.selectedDate.getMonth();\n\t\t        },\n\t\t        set: function (month) { },\n\t\t        enumerable: true,\n\t\t        configurable: true\n\t\t    });\n\t\t    Object.defineProperty(Ng2DatetimePickerComponent.prototype, \"day\", {\n\t\t        get: function () {\n\t\t            return this.selectedDate.getDate();\n\t\t        },\n\t\t        set: function (day) { },\n\t\t        enumerable: true,\n\t\t        configurable: true\n\t\t    });\n\t\t    Object.defineProperty(Ng2DatetimePickerComponent.prototype, \"today\", {\n\t\t        get: function () {\n\t\t            var dt = new Date();\n\t\t            dt.setHours(0);\n\t\t            dt.setMinutes(0);\n\t\t            dt.setSeconds(0);\n\t\t            dt.setMilliseconds(0);\n\t\t            return dt;\n\t\t        },\n\t\t        set: function (today) { },\n\t\t        enumerable: true,\n\t\t        configurable: true\n\t\t    });\n\t\t    Ng2DatetimePickerComponent.prototype.isWeekend = function (dayNum, month) {\n\t\t        if (typeof month === 'undefined') {\n\t\t            return ng2_datetime_1.Ng2Datetime.weekends.indexOf(dayNum % 7) !== -1; //weekday index\n\t\t        }\n\t\t        else {\n\t\t            var weekday = this.toDate(dayNum, month).getDay();\n\t\t            return ng2_datetime_1.Ng2Datetime.weekends.indexOf(weekday) !== -1;\n\t\t        }\n\t\t    };\n\t\t    Ng2DatetimePickerComponent.prototype.ngOnInit = function () {\n\t\t        this.selectedDate = this.defaultValue || new Date();\n\t\t        // set hour and minute using moment if available to avoid having Javascript change timezones\n\t\t        if (typeof moment === 'undefined') {\n\t\t            this.hour = this.selectedDate.getHours();\n\t\t            this.minute = this.selectedDate.getMinutes();\n\t\t        }\n\t\t        else {\n\t\t            var m = moment(this.selectedDate);\n\t\t            this.hour = m.hours();\n\t\t            this.minute = m.minute();\n\t\t        }\n\t\t        this.monthData = this.ng2Datetime.getMonthData(this.year, this.month);\n\t\t    };\n\t\t    Ng2DatetimePickerComponent.prototype.toDate = function (day, month) {\n\t\t        return new Date(this.monthData.year, month || this.monthData.month, day);\n\t\t    };\n\t\t    Ng2DatetimePickerComponent.prototype.toDateOnly = function (date) {\n\t\t        return new Date(date.getFullYear(), date.getMonth(), date.getDate(), 0, 0, 0, 0);\n\t\t    };\n\t\t    Ng2DatetimePickerComponent.prototype.selectCurrentTime = function () {\n\t\t        this.hour = (new Date()).getHours();\n\t\t        this.minute = (new Date()).getMinutes();\n\t\t        this.selectDateTime();\n\t\t    };\n\t\t    /**\n\t\t     * set the selected date and close it when closeOnSelect is true\n\t\t     * @param date {Date}\n\t\t     */\n\t\t    Ng2DatetimePickerComponent.prototype.selectDateTime = function (date) {\n\t\t        var _this = this;\n\t\t        this.selectedDate = date || this.selectedDate;\n\t\t        if (this.isDateDisabled(this.selectedDate)) {\n\t\t            return false;\n\t\t        }\n\t\t        // editing hours and minutes via javascript date methods causes date to lose timezone info,\n\t\t        // so edit using moment if available\n\t\t        var hour = parseInt('' + this.hour || '0', 10);\n\t\t        var minute = parseInt('' + this.minute || '0', 10);\n\t\t        if (typeof moment !== 'undefined') {\n\t\t            // here selected date has a time of 00:00 in local time,\n\t\t            // so build moment by getting year/month/day separately\n\t\t            // to avoid it saving as a day earlier\n\t\t            var m = moment([this.selectedDate.getFullYear(), this.selectedDate.getMonth(), this.selectedDate.getDate()]);\n\t\t            m.hours(hour);\n\t\t            m.minutes(minute);\n\t\t            this.selectedDate = m.toDate();\n\t\t        }\n\t\t        else {\n\t\t            this.selectedDate.setHours(hour);\n\t\t            this.selectedDate.setMinutes(minute);\n\t\t        }\n\t\t        this.selectedDate.toString = function () {\n\t\t            return ng2_datetime_1.Ng2Datetime.formatDate(_this.selectedDate, _this.dateFormat, _this.dateOnly);\n\t\t        };\n\t\t        this.selected$.emit(this.selectedDate);\n\t\t    };\n\t\t    ;\n\t\t    /**\n\t\t     * show prev/next month calendar\n\t\t     */\n\t\t    Ng2DatetimePickerComponent.prototype.updateMonthData = function (num) {\n\t\t        this.monthData = this.ng2Datetime.getMonthData(this.monthData.year, this.monthData.month + num);\n\t\t    };\n\t\t    Ng2DatetimePickerComponent.prototype.isDateDisabled = function (date) {\n\t\t        var dateInTime = date.getTime();\n\t\t        this.disabledDatesInTime =\n\t\t            this.disabledDatesInTime || (this.disabledDates || []).map(function (d) { return d.getTime(); });\n\t\t        if (this.minDate && (dateInTime < this.minDate.getTime())) {\n\t\t            return true;\n\t\t        }\n\t\t        else if (this.maxDate && (dateInTime > this.maxDate.getTime())) {\n\t\t            return true;\n\t\t        }\n\t\t        else if (this.disabledDatesInTime.indexOf(dateInTime) >= 0) {\n\t\t            return true;\n\t\t        }\n\t\t        return false;\n\t\t    };\n\t\t    Ng2DatetimePickerComponent.prototype.close = function () {\n\t\t        this.closing$.emit(true);\n\t\t    };\n\t\t    __decorate([\n\t\t        core_1.Input('date-format'), \n\t\t        __metadata('design:type', String)\n\t\t    ], Ng2DatetimePickerComponent.prototype, \"dateFormat\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input('date-only'), \n\t\t        __metadata('design:type', Boolean)\n\t\t    ], Ng2DatetimePickerComponent.prototype, \"dateOnly\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input('time-only'), \n\t\t        __metadata('design:type', Boolean)\n\t\t    ], Ng2DatetimePickerComponent.prototype, \"timeOnly\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input('selected-date'), \n\t\t        __metadata('design:type', Date)\n\t\t    ], Ng2DatetimePickerComponent.prototype, \"selectedDate\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input('hour'), \n\t\t        __metadata('design:type', Number)\n\t\t    ], Ng2DatetimePickerComponent.prototype, \"hour\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input('minute'), \n\t\t        __metadata('design:type', Number)\n\t\t    ], Ng2DatetimePickerComponent.prototype, \"minute\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input('minuteStep'), \n\t\t        __metadata('design:type', Number)\n\t\t    ], Ng2DatetimePickerComponent.prototype, \"minuteStep\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input('default-value'), \n\t\t        __metadata('design:type', Date)\n\t\t    ], Ng2DatetimePickerComponent.prototype, \"defaultValue\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input('min-date'), \n\t\t        __metadata('design:type', Date)\n\t\t    ], Ng2DatetimePickerComponent.prototype, \"minDate\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input('max-date'), \n\t\t        __metadata('design:type', Date)\n\t\t    ], Ng2DatetimePickerComponent.prototype, \"maxDate\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input('min-hour'), \n\t\t        __metadata('design:type', Number)\n\t\t    ], Ng2DatetimePickerComponent.prototype, \"minHour\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input('max-hour'), \n\t\t        __metadata('design:type', Number)\n\t\t    ], Ng2DatetimePickerComponent.prototype, \"maxHour\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input('disabled-dates'), \n\t\t        __metadata('design:type', Array)\n\t\t    ], Ng2DatetimePickerComponent.prototype, \"disabledDates\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input('show-close-button'), \n\t\t        __metadata('design:type', Boolean)\n\t\t    ], Ng2DatetimePickerComponent.prototype, \"showCloseButton\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Output('selected$'), \n\t\t        __metadata('design:type', core_1.EventEmitter)\n\t\t    ], Ng2DatetimePickerComponent.prototype, \"selected$\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Output('closing$'), \n\t\t        __metadata('design:type', core_1.EventEmitter)\n\t\t    ], Ng2DatetimePickerComponent.prototype, \"closing$\", void 0);\n\t\t    __decorate([\n\t\t        core_1.ViewChild('hours'), \n\t\t        __metadata('design:type', core_1.ElementRef)\n\t\t    ], Ng2DatetimePickerComponent.prototype, \"hours\", void 0);\n\t\t    __decorate([\n\t\t        core_1.ViewChild('minutes'), \n\t\t        __metadata('design:type', core_1.ElementRef)\n\t\t    ], Ng2DatetimePickerComponent.prototype, \"minutes\", void 0);\n\t\t    Ng2DatetimePickerComponent = __decorate([\n\t\t        core_1.Component({\n\t\t            providers: [ng2_datetime_1.Ng2Datetime],\n\t\t            selector: 'ng2-datetime-picker',\n\t\t            template: \"\\n<div class=\\\"ng2-datetime-picker\\\">\\n  <div class=\\\"close-button\\\" *ngIf=\\\"showCloseButton\\\" (click)=\\\"close()\\\"></div>\\n  \\n  <!-- Month - Year  -->\\n  <div class=\\\"month\\\" *ngIf=\\\"!timeOnly\\\">\\n    <b class=\\\"prev_next prev\\\" (click)=\\\"updateMonthData(-12)\\\">&laquo;</b>\\n    <b class=\\\"prev_next prev\\\" (click)=\\\"updateMonthData(-1)\\\">&lsaquo;</b>\\n     <span title=\\\"{{monthData?.fullName}}\\\">\\n           {{monthData?.shortName}}\\n     </span>\\n    {{monthData.year}}\\n    <b class=\\\"prev_next next\\\" (click)=\\\"updateMonthData(+12)\\\">&raquo;</b>\\n    <b class=\\\"prev_next next\\\" (click)=\\\"updateMonthData(+1)\\\">&rsaquo;</b>\\n  </div>\\n\\n  <!-- Date -->\\n  <div class=\\\"days\\\" *ngIf=\\\"!timeOnly\\\">\\n\\n    <!-- Su Mo Tu We Th Fr Sa -->\\n    <div class=\\\"day-of-week\\\"\\n         *ngFor=\\\"let dayOfWeek of monthData.localizedDaysOfWeek; let ndx=index\\\"\\n         [class.weekend]=\\\"isWeekend(ndx + monthData.firstDayOfWeek)\\\"\\n         title=\\\"{{dayOfWeek.fullName}}\\\">\\n      {{dayOfWeek.shortName}}\\n    </div>\\n\\n    <!-- Fill up blank days for this month -->\\n    <div *ngIf=\\\"monthData.leadingDays.length < 7\\\">\\n      <div class=\\\"day\\\"\\n          (click)=\\\"updateMonthData(-1)\\\"\\n           *ngFor=\\\"let dayNum of monthData.leadingDays\\\">\\n        {{dayNum}}\\n      </div>\\n    </div>\\n\\n    <div class=\\\"day\\\"\\n         *ngFor=\\\"let dayNum of monthData.days\\\"\\n         (click)=\\\"selectDateTime(toDate(dayNum))\\\"\\n         title=\\\"{{monthData.year}}-{{monthData.month+1}}-{{dayNum}}\\\"\\n         [ngClass]=\\\"{\\n           selectable: !isDateDisabled(toDate(dayNum)),\\n           selected: toDate(dayNum).getTime() === toDateOnly(selectedDate).getTime(),\\n           today: toDate(dayNum).getTime() === today.getTime(),\\n           weekend: isWeekend(dayNum, monthData.month)\\n         }\\\">\\n      {{dayNum}}\\n    </div>\\n\\n    <!-- Fill up blank days for this month -->\\n    <div *ngIf=\\\"monthData.trailingDays.length < 7\\\">\\n      <div class=\\\"day\\\"\\n           (click)=\\\"updateMonthData(+1)\\\"\\n           *ngFor=\\\"let dayNum of monthData.trailingDays\\\">\\n        {{dayNum}}\\n      </div>\\n    </div>\\n  </div>\\n\\n  <!-- Time -->\\n  <div class=\\\"time\\\" id=\\\"time\\\" *ngIf=\\\"!dateOnly\\\">\\n    <div class=\\\"select-current-time\\\" (click)=\\\"selectCurrentTime()\\\"></div>\\n    <label class=\\\"timeLabel\\\">Time:</label>\\n    <span class=\\\"timeValue\\\">\\n      {{(\\\"0\\\"+hour).slice(-2)}} : {{(\\\"0\\\"+minute).slice(-2)}}\\n    </span><br/>\\n    <label class=\\\"hourLabel\\\">Hour:</label>\\n    <input #hours class=\\\"hourInput\\\"\\n           tabindex=\\\"90000\\\"\\n           (change)=\\\"selectDateTime()\\\"\\n           type=\\\"range\\\"\\n           min=\\\"{{minHour || 0}}\\\"\\n           max=\\\"{{maxHour || 23}}\\\"\\n           [(ngModel)]=\\\"hour\\\" />\\n    <label class=\\\"minutesLabel\\\">Min:</label>\\n    <input #minutes class=\\\"minutesInput\\\"\\n           tabindex=\\\"90000\\\"\\n           step=\\\"{{minuteStep}}\\\"\\n           (change)=\\\"selectDateTime()\\\"\\n           type=\\\"range\\\" min=\\\"0\\\" max=\\\"59\\\" range=\\\"10\\\" [(ngModel)]=\\\"minute\\\"/>\\n  </div>\\n</div>\\n  \",\n\t\t            styles: [\n\t\t                \"\\n @keyframes slideDown {\\n  0% {\\n    transform:  translateY(-10px);\\n  }\\n  100% {\\n    transform: translateY(0px);\\n  }\\n}\\n\\n.ng2-datetime-picker-wrapper {\\n  position: relative;\\n}\\n\\n.ng2-datetime-picker {\\n  color: #333;\\n  outline-width: 0;\\n  font: normal 14px sans-serif;\\n  border: 1px solid #ddd;\\n  display: inline-block;\\n  background: #fff;\\n  animation: slideDown 0.1s ease-in-out;\\n  animation-fill-mode: both;\\n}\\n.ng2-datetime-picker .close-button:before {\\n  content: 'X';\\n  position: absolute;\\n  padding: 0 5px;\\n  cursor: pointer;\\n  color: #ff0000;\\n  right: 0;\\n  z-index: 1;\\n}\\n.ng2-datetime-picker > .month {\\n  text-align: center;\\n  line-height: 22px;\\n  padding: 10px;\\n  background: #fcfcfc;\\n  text-transform: uppercase;\\n  font-weight: bold;\\n  border-bottom: 1px solid #ddd;\\n  position: relative;\\n}\\n.ng2-datetime-picker > .month > .prev_next {\\n  color: #555;\\n  display: block;\\n  font: normal 24px sans-serif;\\n  outline: none;\\n  background: transparent;\\n  border: none;\\n  cursor: pointer;\\n  width: 15px;\\n  text-align: center;\\n}\\n.ng2-datetime-picker > .month > .prev_next:hover {\\n  background-color: #333;\\n  color: #fff;\\n}\\n.ng2-datetime-picker > .month > .prev_next.prev {\\n  float: left;\\n}\\n.ng2-datetime-picker > .month > .prev_next.next {\\n  float: right;\\n}\\n.ng2-datetime-picker > .days {\\n  width: 210px; /* 30 x 7 */\\n  margin: 10px;\\n  text-align: center;\\n}\\n.ng2-datetime-picker > .days .day-of-week,\\n.ng2-datetime-picker > .days .day {\\n  box-sizing: border-box;\\n  -moz-box-sizing: border-box;\\n  border: 1px solid transparent;\\n  width: 30px;\\n  line-height: 28px;\\n  float: left;\\n}\\n.ng2-datetime-picker > .days .day-of-week {\\n  font-weight: bold;\\n}\\n.ng2-datetime-picker > .days .day-of-week.weekend {\\n  color: #ccc;\\n  background-color: inherit;\\n}\\n.ng2-datetime-picker > .days .day:not(.selectable) {\\n  color: #ccc;\\n  cursor: default;\\n}\\n.ng2-datetime-picker > .days .weekend {\\n  color: #ccc;\\n  background-color: #eee;\\n}\\n.ng2-datetime-picker > .days .day.selectable  {\\n  cursor: pointer;\\n}\\n.ng2-datetime-picker > .days .day.selected {\\n  background: gray;\\n  color: #fff;\\n}\\n.ng2-datetime-picker > .days .day:not(.selected).selectable:hover {\\n  background: #eee;\\n}\\n.ng2-datetime-picker > .days:after {\\n  content: '';\\n  display: block;\\n  clear: left;\\n  height: 0;\\n}\\n.ng2-datetime-picker .time {\\n  position: relative;\\n}\\n.ng2-datetime-picker .select-current-time:before {\\n  content: 'current time';\\n  position: absolute;\\n  top: 1em;\\n  right: 5px;\\n  z-index: 1;\\n  cursor: pointer;\\n  color: #0000ff;\\n}\\n.ng2-datetime-picker .hourLabel,\\n.ng2-datetime-picker .minutesLabel {\\n  display: inline-block;\\n  width: 40px;\\n  text-align: right;\\n}\\n.ng2-datetime-picker input[type=range] {\\n  width: 200px;\\n}\\n  \"\n\t\t            ],\n\t\t            encapsulation: core_1.ViewEncapsulation.None\n\t\t        }), \n\t\t        __metadata('design:paramtypes', [core_1.ElementRef, ng2_datetime_1.Ng2Datetime, core_1.ChangeDetectorRef])\n\t\t    ], Ng2DatetimePickerComponent);\n\t\t    return Ng2DatetimePickerComponent;\n\t\t}());\n\t\texports.Ng2DatetimePickerComponent = Ng2DatetimePickerComponent;\n\t\n\t\n\t/***/ },\n\t/* 4 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar __param = (this && this.__param) || function (paramIndex, decorator) {\n\t\t    return function (target, key) { decorator(target, key, paramIndex); }\n\t\t};\n\t\tvar core_1 = __webpack_require__(2);\n\t\tvar forms_1 = __webpack_require__(5);\n\t\tvar ng2_datetime_picker_component_1 = __webpack_require__(3);\n\t\tvar ng2_datetime_1 = __webpack_require__(1);\n\t\tNumber.isInteger = Number.isInteger || function (value) {\n\t\t    return typeof value === \"number\" &&\n\t\t        isFinite(value) &&\n\t\t        Math.floor(value) === value;\n\t\t};\n\t\tNumber.isNaN = Number.isNaN || function (value) {\n\t\t    return value !== value;\n\t\t};\n\t\t/**\n\t\t * If the given string is not a valid date, it defaults back to today\n\t\t */\n\t\tvar Ng2DatetimePickerDirective = (function () {\n\t\t    function Ng2DatetimePickerDirective(resolver, viewContainerRef, parent) {\n\t\t        var _this = this;\n\t\t        this.resolver = resolver;\n\t\t        this.viewContainerRef = viewContainerRef;\n\t\t        this.parent = parent;\n\t\t        this.ngModelChange = new core_1.EventEmitter();\n\t\t        this.valueChanged = new core_1.EventEmitter();\n\t\t        /* input element string value is changed */\n\t\t        this.inputElValueChanged = function (date) {\n\t\t            _this.setInputElDateValue(date);\n\t\t            _this.el.value = date.toString();\n\t\t            if (_this.ctrl) {\n\t\t                _this.ctrl.patchValue(_this.el.value);\n\t\t            }\n\t\t            _this.ngModel = _this.el['dateValue'];\n\t\t            if (_this.ngModel) {\n\t\t                _this.ngModel.toString = function () { return _this.el.value; };\n\t\t                _this.ngModelChange.emit(_this.ngModel);\n\t\t            }\n\t\t        };\n\t\t        //show datetimePicker element below the current element\n\t\t        this.showDatetimePicker = function (event) {\n\t\t            if (_this.componentRef) {\n\t\t                return;\n\t\t            }\n\t\t            var factory = _this.resolver.resolveComponentFactory(ng2_datetime_picker_component_1.Ng2DatetimePickerComponent);\n\t\t            _this.componentRef = _this.viewContainerRef.createComponent(factory);\n\t\t            _this.ng2DatetimePickerEl = _this.componentRef.location.nativeElement;\n\t\t            _this.ng2DatetimePickerEl.addEventListener('mousedown', function (event) {\n\t\t                _this.clickedDatetimePicker = true;\n\t\t            });\n\t\t            _this.ng2DatetimePickerEl.addEventListener('mouseup', function (event) {\n\t\t                _this.clickedDatetimePicker = false;\n\t\t            });\n\t\t            var component = _this.componentRef.instance;\n\t\t            component.defaultValue = _this.defaultValue || _this.el['dateValue'];\n\t\t            component.dateFormat = _this.dateFormat;\n\t\t            component.dateOnly = _this.dateOnly;\n\t\t            component.timeOnly = _this.timeOnly;\n\t\t            component.minuteStep = _this.minuteStep;\n\t\t            component.minDate = _this.minDate;\n\t\t            component.maxDate = _this.maxDate;\n\t\t            component.minHour = _this.minHour;\n\t\t            component.maxHour = _this.maxHour;\n\t\t            component.disabledDates = _this.disabledDates;\n\t\t            component.showCloseButton = _this.closeOnSelect === \"false\";\n\t\t            _this.styleDatetimePicker();\n\t\t            component.selected$.subscribe(_this.dateSelected);\n\t\t            component.closing$.subscribe(function () {\n\t\t                _this.hideDatetimePicker();\n\t\t            });\n\t\t            //Hack not to fire tab keyup event\n\t\t            // this.justShown = true;\n\t\t            // setTimeout(() => this.justShown = false, 100);\n\t\t        };\n\t\t        this.dateSelected = function (date) {\n\t\t            _this.el.tagName === 'INPUT' && _this.inputElValueChanged(date);\n\t\t            _this.valueChanged.emit(date);\n\t\t            _this.closeOnSelect !== \"false\" && _this.hideDatetimePicker();\n\t\t        };\n\t\t        this.hideDatetimePicker = function (event) {\n\t\t            if (_this.clickedDatetimePicker) {\n\t\t                return false;\n\t\t            }\n\t\t            else {\n\t\t                _this.componentRef.destroy();\n\t\t                _this.componentRef = undefined;\n\t\t            }\n\t\t            event && event.stopPropagation();\n\t\t        };\n\t\t        this.keyEventListener = function (e) {\n\t\t            // if (e.keyCode === 27 || e.keyCode === 9 || e.keyCode === 13) { //ESC, TAB, ENTER keys\n\t\t            //   if (!this.justShown) {\n\t\t            //     this.hideDatetimePicker();\n\t\t            //   }\n\t\t            // }\n\t\t        };\n\t\t        this.el = this.viewContainerRef.element.nativeElement;\n\t\t    }\n\t\t    /**\n\t\t     * convert defaultValue, minDate, maxDate, minHour, and maxHour to proper types\n\t\t     */\n\t\t    Ng2DatetimePickerDirective.prototype.normalizeInput = function () {\n\t\t        if (this.defaultValue && typeof this.defaultValue === 'string') {\n\t\t            var d = ng2_datetime_1.Ng2Datetime.parseDate(this.defaultValue);\n\t\t            this.defaultValue = Number.isNaN(d.getTime()) ? new Date() : d;\n\t\t        }\n\t\t        if (this.minDate && typeof this.minDate == 'string') {\n\t\t            var d = ng2_datetime_1.Ng2Datetime.parseDate(this.minDate);\n\t\t            this.minDate = Number.isNaN(d.getTime()) ? new Date() : d;\n\t\t        }\n\t\t        if (this.maxDate && typeof this.maxDate == 'string') {\n\t\t            var d = ng2_datetime_1.Ng2Datetime.parseDate(this.minDate);\n\t\t            this.maxDate = Number.isNaN(d.getTime()) ? new Date() : d;\n\t\t        }\n\t\t        if (this.minHour) {\n\t\t            if (this.minHour instanceof Date) {\n\t\t                this.minHour = this.minHour.getHours();\n\t\t            }\n\t\t            else {\n\t\t                var hour = Number(this.minHour.toString());\n\t\t                if (!Number.isInteger(hour) || hour > 23 || hour < 0) {\n\t\t                    this.minHour = undefined;\n\t\t                }\n\t\t            }\n\t\t        }\n\t\t        if (this.maxHour) {\n\t\t            if (this.maxHour instanceof Date) {\n\t\t                this.maxHour = this.maxHour.getHours();\n\t\t            }\n\t\t            else {\n\t\t                var hour = Number(this.maxHour.toString());\n\t\t                if (!Number.isInteger(hour) || hour > 23 || hour < 0) {\n\t\t                    this.maxHour = undefined;\n\t\t                }\n\t\t            }\n\t\t        }\n\t\t    };\n\t\t    Ng2DatetimePickerDirective.prototype.ngOnInit = function () {\n\t\t        var _this = this;\n\t\t        if (this.parent && this.formControlName) {\n\t\t            if (this.parent[\"form\"]) {\n\t\t                this.ctrl = this.parent[\"form\"].get(this.formControlName);\n\t\t            }\n\t\t            else if (this.parent[\"name\"]) {\n\t\t                var formDir = this.parent.formDirective;\n\t\t                if (formDir instanceof forms_1.FormGroupDirective && formDir.form.get(this.parent[\"name\"])) {\n\t\t                    this.ctrl = formDir.form.get(this.parent[\"name\"]).get(this.formControlName);\n\t\t                }\n\t\t            }\n\t\t            if (this.ctrl) {\n\t\t                this.sub = this.ctrl.valueChanges.subscribe(function (date) {\n\t\t                    _this.setInputElDateValue(date);\n\t\t                    _this.updateDatepicker();\n\t\t                });\n\t\t            }\n\t\t        }\n\t\t        this.normalizeInput();\n\t\t        //wrap this element with a <div> tag, so that we can position dynamic element correctly\n\t\t        var wrapper = document.createElement(\"div\");\n\t\t        wrapper.className = 'ng2-datetime-picker-wrapper';\n\t\t        this.el.parentElement.insertBefore(wrapper, this.el.nextSibling);\n\t\t        wrapper.appendChild(this.el);\n\t\t        // add a click listener to document, so that it can hide when others clicked\n\t\t        // document.body.addEventListener('click', this.hideDatetimePicker);\n\t\t        // this.el.addEventListener('keyup', this.keyEventListener);\n\t\t        if (this.ngModel && this.ngModel.getTime) {\n\t\t            this.ngModel.toString = function () { return ng2_datetime_1.Ng2Datetime.formatDate(_this.ngModel, _this.dateFormat, _this.dateOnly); };\n\t\t        }\n\t\t        setTimeout(function () {\n\t\t            if (_this.el.tagName === 'INPUT') {\n\t\t                _this.inputElValueChanged(_this.el.value); //set this.el.dateValue and reformat this.el.value\n\t\t            }\n\t\t            if (_this.ctrl) {\n\t\t                _this.ctrl.markAsPristine();\n\t\t            }\n\t\t        });\n\t\t    };\n\t\t    Ng2DatetimePickerDirective.prototype.ngAfterViewInit = function () {\n\t\t        // if this element is not an input tag, move dropdown after input tag\n\t\t        // so that it displays correctly\n\t\t        this.inputEl = this.el.tagName === \"INPUT\" ?\n\t\t            this.el : this.el.querySelector(\"input\");\n\t\t        if (this.inputEl) {\n\t\t            this.inputEl.addEventListener('focus', this.showDatetimePicker);\n\t\t            this.inputEl.addEventListener('blur', this.hideDatetimePicker);\n\t\t        }\n\t\t    };\n\t\t    Ng2DatetimePickerDirective.prototype.ngOnChanges = function (changes) {\n\t\t        var date;\n\t\t        if (changes && changes['ngModel']) {\n\t\t            date = changes['ngModel'].currentValue;\n\t\t        }\n\t\t        this.setInputElDateValue(date);\n\t\t        this.updateDatepicker();\n\t\t    };\n\t\t    Ng2DatetimePickerDirective.prototype.updateDatepicker = function () {\n\t\t        if (this.componentRef) {\n\t\t            var component = this.componentRef.instance;\n\t\t            component.defaultValue = this.el['dateValue'];\n\t\t        }\n\t\t    };\n\t\t    Ng2DatetimePickerDirective.prototype.setInputElDateValue = function (date) {\n\t\t        if (typeof date === 'string' && date) {\n\t\t            this.el['dateValue'] = this.getDate(date);\n\t\t        }\n\t\t        else if (typeof date === 'object') {\n\t\t            this.el['dateValue'] = date;\n\t\t        }\n\t\t        else if (typeof date === 'undefined') {\n\t\t            this.el['dateValue'] = null;\n\t\t        }\n\t\t        if (this.ctrl) {\n\t\t            this.ctrl.markAsDirty();\n\t\t        }\n\t\t    };\n\t\t    Ng2DatetimePickerDirective.prototype.ngOnDestroy = function () {\n\t\t        if (this.sub) {\n\t\t            this.sub.unsubscribe();\n\t\t        }\n\t\t        // document.body.removeEventListener('click', this.hideDatetimePicker);\n\t\t    };\n\t\t    Ng2DatetimePickerDirective.prototype.elementIn = function (el, containerEl) {\n\t\t        while (el = el.parentNode) {\n\t\t            if (el === containerEl)\n\t\t                return true;\n\t\t        }\n\t\t        return false;\n\t\t    };\n\t\t    Ng2DatetimePickerDirective.prototype.styleDatetimePicker = function () {\n\t\t        var _this = this;\n\t\t        // setting position, width, and height of auto complete dropdown\n\t\t        var thisElBCR = this.el.getBoundingClientRect();\n\t\t        this.ng2DatetimePickerEl.style.width = thisElBCR.width + 'px';\n\t\t        this.ng2DatetimePickerEl.style.position = 'absolute';\n\t\t        this.ng2DatetimePickerEl.style.zIndex = '1000';\n\t\t        this.ng2DatetimePickerEl.style.left = '0';\n\t\t        this.ng2DatetimePickerEl.style.transition = 'height 0.3s ease-in';\n\t\t        this.ng2DatetimePickerEl.style.visibility = 'hidden';\n\t\t        setTimeout(function () {\n\t\t            var thisElBcr = _this.el.getBoundingClientRect();\n\t\t            var ng2DatetimePickerElBcr = _this.ng2DatetimePickerEl.getBoundingClientRect();\n\t\t            if (thisElBcr.bottom + ng2DatetimePickerElBcr.height > window.innerHeight) {\n\t\t                _this.ng2DatetimePickerEl.style.bottom =\n\t\t                    (thisElBcr.bottom - window.innerHeight + 15) + 'px';\n\t\t            }\n\t\t            else {\n\t\t                // otherwise, show below\n\t\t                _this.ng2DatetimePickerEl.style.top = thisElBcr.height + 'px';\n\t\t            }\n\t\t            _this.ng2DatetimePickerEl.style.visibility = 'visible';\n\t\t        });\n\t\t    };\n\t\t    ;\n\t\t    Ng2DatetimePickerDirective.prototype.getDate = function (arg) {\n\t\t        var date = arg;\n\t\t        if (typeof arg === 'string') {\n\t\t            date = ng2_datetime_1.Ng2Datetime.parseDate(arg, this.parseFormat, this.dateFormat);\n\t\t        }\n\t\t        return date;\n\t\t    };\n\t\t    __decorate([\n\t\t        core_1.Input('date-format'), \n\t\t        __metadata('design:type', String)\n\t\t    ], Ng2DatetimePickerDirective.prototype, \"dateFormat\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input('parse-format'), \n\t\t        __metadata('design:type', String)\n\t\t    ], Ng2DatetimePickerDirective.prototype, \"parseFormat\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input('date-only'), \n\t\t        __metadata('design:type', Boolean)\n\t\t    ], Ng2DatetimePickerDirective.prototype, \"dateOnly\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input('time-only'), \n\t\t        __metadata('design:type', Boolean)\n\t\t    ], Ng2DatetimePickerDirective.prototype, \"timeOnly\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input('close-on-select'), \n\t\t        __metadata('design:type', String)\n\t\t    ], Ng2DatetimePickerDirective.prototype, \"closeOnSelect\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input('default-value'), \n\t\t        __metadata('design:type', Object)\n\t\t    ], Ng2DatetimePickerDirective.prototype, \"defaultValue\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input('minute-step'), \n\t\t        __metadata('design:type', Number)\n\t\t    ], Ng2DatetimePickerDirective.prototype, \"minuteStep\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input('min-date'), \n\t\t        __metadata('design:type', Object)\n\t\t    ], Ng2DatetimePickerDirective.prototype, \"minDate\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input('max-date'), \n\t\t        __metadata('design:type', Object)\n\t\t    ], Ng2DatetimePickerDirective.prototype, \"maxDate\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input('min-hour'), \n\t\t        __metadata('design:type', Object)\n\t\t    ], Ng2DatetimePickerDirective.prototype, \"minHour\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input('max-hour'), \n\t\t        __metadata('design:type', Object)\n\t\t    ], Ng2DatetimePickerDirective.prototype, \"maxHour\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input('disabled-dates'), \n\t\t        __metadata('design:type', Array)\n\t\t    ], Ng2DatetimePickerDirective.prototype, \"disabledDates\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input(), \n\t\t        __metadata('design:type', String)\n\t\t    ], Ng2DatetimePickerDirective.prototype, \"formControlName\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input('ngModel'), \n\t\t        __metadata('design:type', Object)\n\t\t    ], Ng2DatetimePickerDirective.prototype, \"ngModel\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Output('ngModelChange'), \n\t\t        __metadata('design:type', Object)\n\t\t    ], Ng2DatetimePickerDirective.prototype, \"ngModelChange\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Output('valueChanged'), \n\t\t        __metadata('design:type', Object)\n\t\t    ], Ng2DatetimePickerDirective.prototype, \"valueChanged\", void 0);\n\t\t    Ng2DatetimePickerDirective = __decorate([\n\t\t        core_1.Directive({\n\t\t            selector: '[ng2-datetime-picker]',\n\t\t            providers: [ng2_datetime_1.Ng2Datetime]\n\t\t        }),\n\t\t        __param(2, core_1.Optional()),\n\t\t        __param(2, core_1.Host()),\n\t\t        __param(2, core_1.SkipSelf()), \n\t\t        __metadata('design:paramtypes', [core_1.ComponentFactoryResolver, core_1.ViewContainerRef, forms_1.ControlContainer])\n\t\t    ], Ng2DatetimePickerDirective);\n\t\t    return Ng2DatetimePickerDirective;\n\t\t}());\n\t\texports.Ng2DatetimePickerDirective = Ng2DatetimePickerDirective;\n\t\n\t\n\t/***/ },\n\t/* 5 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\t\n\t/***/ },\n\t/* 6 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(2);\n\t\tvar forms_1 = __webpack_require__(5);\n\t\tvar common_1 = __webpack_require__(7);\n\t\tvar ng2_datetime_1 = __webpack_require__(1);\n\t\tvar ng2_datetime_picker_component_1 = __webpack_require__(3);\n\t\tvar ng2_datetime_picker_directive_1 = __webpack_require__(4);\n\t\tvar Ng2DatetimePickerModule = (function () {\n\t\t    function Ng2DatetimePickerModule() {\n\t\t    }\n\t\t    Ng2DatetimePickerModule = __decorate([\n\t\t        core_1.NgModule({\n\t\t            imports: [common_1.CommonModule, forms_1.FormsModule],\n\t\t            declarations: [ng2_datetime_picker_component_1.Ng2DatetimePickerComponent, ng2_datetime_picker_directive_1.Ng2DatetimePickerDirective],\n\t\t            exports: [ng2_datetime_picker_component_1.Ng2DatetimePickerComponent, ng2_datetime_picker_directive_1.Ng2DatetimePickerDirective],\n\t\t            entryComponents: [ng2_datetime_picker_component_1.Ng2DatetimePickerComponent],\n\t\t            providers: [ng2_datetime_1.Ng2Datetime]\n\t\t        }), \n\t\t        __metadata('design:paramtypes', [])\n\t\t    ], Ng2DatetimePickerModule);\n\t\t    return Ng2DatetimePickerModule;\n\t\t}());\n\t\texports.Ng2DatetimePickerModule = Ng2DatetimePickerModule;\n\t\n\t\n\t/***/ },\n\t/* 7 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_7__;\n\t\n\t/***/ }\n\t/******/ ])\n\t});\n\t;\n\t//# sourceMappingURL=ng2-datetime-picker.umd.js.map\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function webpackUniversalModuleDefinition(root, factory) {\n\t\tif(true)\n\t\t\tmodule.exports = factory(__webpack_require__(2), __webpack_require__(11), __webpack_require__(12), __webpack_require__(8));\n\t\telse if(typeof define === 'function' && define.amd)\n\t\t\tdefine([\"@angular/core\", \"rxjs/Subject\", \"rxjs/add/operator/debounceTime\", \"@angular/common\"], factory);\n\t\telse if(typeof exports === 'object')\n\t\t\texports[\"ng2-map\"] = factory(require(\"@angular/core\"), require(\"rxjs/Subject\"), require(\"rxjs/add/operator/debounceTime\"), require(\"@angular/common\"));\n\t\telse\n\t\t\troot[\"ng2-map\"] = factory(root[\"@angular/core\"], root[\"rxjs/Subject\"], root[\"rxjs/add/operator/debounceTime\"], root[\"@angular/common\"]);\n\t})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_8__, __WEBPACK_EXTERNAL_MODULE_12__, __WEBPACK_EXTERNAL_MODULE_29__) {\n\treturn /******/ (function(modules) { // webpackBootstrap\n\t/******/ \t// The module cache\n\t/******/ \tvar installedModules = {};\n\t/******/\n\t/******/ \t// The require function\n\t/******/ \tfunction __webpack_require__(moduleId) {\n\t/******/\n\t/******/ \t\t// Check if module is in cache\n\t/******/ \t\tif(installedModules[moduleId])\n\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\t/******/\n\t/******/ \t\t// Create a new module (and put it into the cache)\n\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t/******/ \t\t\texports: {},\n\t/******/ \t\t\tid: moduleId,\n\t/******/ \t\t\tloaded: false\n\t/******/ \t\t};\n\t/******/\n\t/******/ \t\t// Execute the module function\n\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t/******/\n\t/******/ \t\t// Flag the module as loaded\n\t/******/ \t\tmodule.loaded = true;\n\t/******/\n\t/******/ \t\t// Return the exports of the module\n\t/******/ \t\treturn module.exports;\n\t/******/ \t}\n\t/******/\n\t/******/\n\t/******/ \t// expose the modules object (__webpack_modules__)\n\t/******/ \t__webpack_require__.m = modules;\n\t/******/\n\t/******/ \t// expose the module cache\n\t/******/ \t__webpack_require__.c = installedModules;\n\t/******/\n\t/******/ \t// __webpack_public_path__\n\t/******/ \t__webpack_require__.p = \"\";\n\t/******/\n\t/******/ \t// Load entry module and return exports\n\t/******/ \treturn __webpack_require__(0);\n\t/******/ })\n\t/************************************************************************/\n\t/******/ ([\n\t/* 0 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar bicycling_layer_1 = __webpack_require__(1);\n\t\texports.BicyclingLayer = bicycling_layer_1.BicyclingLayer;\n\t\tvar navigator_geolocation_1 = __webpack_require__(9);\n\t\texports.NavigatorGeolocation = navigator_geolocation_1.NavigatorGeolocation;\n\t\tvar option_builder_1 = __webpack_require__(5);\n\t\texports.OptionBuilder = option_builder_1.OptionBuilder;\n\t\tvar config_1 = __webpack_require__(10);\n\t\texports.NG_MAP_CONFIG_TOKEN = config_1.NG_MAP_CONFIG_TOKEN;\n\t\tvar ng2_map_component_1 = __webpack_require__(4);\n\t\texports.Ng2MapComponent = ng2_map_component_1.Ng2MapComponent;\n\t\tvar info_window_1 = __webpack_require__(13);\n\t\texports.InfoWindow = info_window_1.InfoWindow;\n\t\tvar circle_1 = __webpack_require__(14);\n\t\texports.Circle = circle_1.Circle;\n\t\tvar data_layer_1 = __webpack_require__(15);\n\t\texports.DataLayer = data_layer_1.DataLayer;\n\t\tvar directions_renderer_1 = __webpack_require__(16);\n\t\texports.DirectionsRenderer = directions_renderer_1.DirectionsRenderer;\n\t\tvar drawing_manager_1 = __webpack_require__(17);\n\t\texports.DrawingManager = drawing_manager_1.DrawingManager;\n\t\tvar geo_coder_1 = __webpack_require__(7);\n\t\texports.GeoCoder = geo_coder_1.GeoCoder;\n\t\tvar ground_overlay_1 = __webpack_require__(18);\n\t\texports.GroundOverlay = ground_overlay_1.GroundOverlay;\n\t\tvar heatmap_layer_1 = __webpack_require__(19);\n\t\texports.HeatmapLayer = heatmap_layer_1.HeatmapLayer;\n\t\tvar kml_layer_1 = __webpack_require__(20);\n\t\texports.KmlLayer = kml_layer_1.KmlLayer;\n\t\tvar marker_1 = __webpack_require__(21);\n\t\texports.Marker = marker_1.Marker;\n\t\tvar ng2_map_1 = __webpack_require__(11);\n\t\texports.Ng2Map = ng2_map_1.Ng2Map;\n\t\tvar places_auto_complete_1 = __webpack_require__(22);\n\t\texports.PlacesAutoComplete = places_auto_complete_1.PlacesAutoComplete;\n\t\tvar polygon_1 = __webpack_require__(23);\n\t\texports.Polygon = polygon_1.Polygon;\n\t\tvar polyline_1 = __webpack_require__(24);\n\t\texports.Polyline = polyline_1.Polyline;\n\t\tvar street_view_panorama_1 = __webpack_require__(25);\n\t\texports.StreetViewPanorama = street_view_panorama_1.StreetViewPanorama;\n\t\tvar traffic_layer_1 = __webpack_require__(26);\n\t\texports.TrafficLayer = traffic_layer_1.TrafficLayer;\n\t\tvar transit_layer_1 = __webpack_require__(27);\n\t\texports.TransitLayer = transit_layer_1.TransitLayer;\n\t\tvar ng2_map_module_1 = __webpack_require__(28);\n\t\texports.Ng2MapModule = ng2_map_module_1.Ng2MapModule;\n\t\n\t\n\t/***/ },\n\t/* 1 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __extends = (this && this.__extends) || function (d, b) {\n\t\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t\t    function __() { this.constructor = d; }\n\t\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t\t};\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(2);\n\t\tvar base_map_directive_1 = __webpack_require__(3);\n\t\tvar ng2_map_component_1 = __webpack_require__(4);\n\t\tvar INPUTS = [];\n\t\tvar OUTPUTS = [];\n\t\tvar BicyclingLayer = (function (_super) {\n\t\t    __extends(BicyclingLayer, _super);\n\t\t    function BicyclingLayer(ng2MapComp) {\n\t\t        _super.call(this, ng2MapComp, 'BicyclingLayer', INPUTS, OUTPUTS);\n\t\t    }\n\t\t    BicyclingLayer = __decorate([\n\t\t        core_1.Directive({\n\t\t            selector: 'ng2-map > bicycling-layer',\n\t\t            inputs: INPUTS,\n\t\t            outputs: OUTPUTS,\n\t\t        }), \n\t\t        __metadata('design:paramtypes', [ng2_map_component_1.Ng2MapComponent])\n\t\t    ], BicyclingLayer);\n\t\t    return BicyclingLayer;\n\t\t}(base_map_directive_1.BaseMapDirective));\n\t\texports.BicyclingLayer = BicyclingLayer;\n\t\n\t\n\t/***/ },\n\t/* 2 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\t\n\t/***/ },\n\t/* 3 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(2);\n\t\tvar BaseMapDirective = (function () {\n\t\t    function BaseMapDirective(ng2MapComponent, mapObjectName, inputs, outputs) {\n\t\t        var _this = this;\n\t\t        this.ng2MapComponent = ng2MapComponent;\n\t\t        this.mapObjectName = mapObjectName;\n\t\t        this.inputs = inputs;\n\t\t        this.outputs = outputs;\n\t\t        this.initialized$ = new core_1.EventEmitter();\n\t\t        this._subscriptions = [];\n\t\t        this.ng2Map = this.ng2MapComponent['ng2Map'];\n\t\t        this.optionBuilder = this.ng2MapComponent['optionBuilder'];\n\t\t        // all outputs must be initialized\n\t\t        this.outputs.forEach(function (output) { return _this[output] = new core_1.EventEmitter(); });\n\t\t        this.mapObjectName = mapObjectName;\n\t\t    }\n\t\t    // Initialize this map object when map is ready\n\t\t    BaseMapDirective.prototype.ngOnInit = function () {\n\t\t        var _this = this;\n\t\t        if (this.ng2MapComponent.mapIdledOnce) {\n\t\t            this.initialize();\n\t\t        }\n\t\t        else {\n\t\t            this.ng2MapComponent.mapReady$.subscribe(function (map) { return _this.initialize(); });\n\t\t        }\n\t\t    };\n\t\t    // only called when map is ready\n\t\t    BaseMapDirective.prototype.initialize = function () {\n\t\t        this.objectOptions = this.optionBuilder.googlizeAllInputs(this.inputs, this);\n\t\t        // will be set after geocoded\n\t\t        typeof this.objectOptions.position === 'string' && (delete this.objectOptions.position);\n\t\t        typeof this.objectOptions.center === 'string' && (delete this.objectOptions.center);\n\t\t        // noinspection TypeScriptUnresolvedFunction\n\t\t        if (this.libraryName) {\n\t\t            this.mapObject = new google.maps[this.libraryName][this.mapObjectName](this.objectOptions);\n\t\t        }\n\t\t        else {\n\t\t            this.mapObject = new google.maps[this.mapObjectName](this.objectOptions);\n\t\t        }\n\t\t        this.mapObject.setMap(this.ng2MapComponent.map);\n\t\t        this.mapObject['mapObjectName'] = this.mapObjectName;\n\t\t        this.mapObject['ng2MapComponent'] = this.ng2MapComponent;\n\t\t        // set google events listeners and emits to this outputs listeners\n\t\t        this.ng2Map.setObjectEvents(this.outputs, this, 'mapObject');\n\t\t        this.ng2MapComponent.addToMapObjectGroup(this.mapObjectName, this.mapObject);\n\t\t        this.initialized$.emit(this.mapObject);\n\t\t    };\n\t\t    // When input is changed, update object too.\n\t\t    // e.g., when map center is changed by user, update center on the map\n\t\t    BaseMapDirective.prototype.ngOnChanges = function (changes) {\n\t\t        this.ng2Map.updateGoogleObject(this.mapObject, changes);\n\t\t    };\n\t\t    // When destroyed, remove event listener, and delete this object to prevent memory leak\n\t\t    BaseMapDirective.prototype.ngOnDestroy = function () {\n\t\t        var _this = this;\n\t\t        this._subscriptions.map(function (subscription) { return subscription.unsubscribe(); });\n\t\t        this.ng2MapComponent.removeFromMapObjectGroup(this.mapObjectName, this.mapObject);\n\t\t        if (this.mapObject) {\n\t\t            this.outputs.forEach(function (output) { return google.maps.event.clearListeners(_this.mapObject, output); });\n\t\t            this.mapObject['setMap'](null);\n\t\t            delete this.mapObject;\n\t\t        }\n\t\t    };\n\t\t    __decorate([\n\t\t        core_1.Output(), \n\t\t        __metadata('design:type', core_1.EventEmitter)\n\t\t    ], BaseMapDirective.prototype, \"initialized$\", void 0);\n\t\t    return BaseMapDirective;\n\t\t}());\n\t\texports.BaseMapDirective = BaseMapDirective;\n\t\n\t\n\t/***/ },\n\t/* 4 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar __param = (this && this.__param) || function (paramIndex, decorator) {\n\t\t    return function (target, key) { decorator(target, key, paramIndex); }\n\t\t};\n\t\tvar core_1 = __webpack_require__(2);\n\t\tvar option_builder_1 = __webpack_require__(5);\n\t\tvar navigator_geolocation_1 = __webpack_require__(9);\n\t\tvar config_1 = __webpack_require__(10);\n\t\tvar geo_coder_1 = __webpack_require__(7);\n\t\tvar ng2_map_1 = __webpack_require__(11);\n\t\tvar Subject_1 = __webpack_require__(8);\n\t\t__webpack_require__(12);\n\t\tvar util_1 = __webpack_require__(6);\n\t\tvar INPUTS = [\n\t\t    'backgroundColor', 'center', 'disableDefaultUI', 'disableDoubleClickZoom', 'draggable', 'draggableCursor',\n\t\t    'draggingCursor', 'heading', 'keyboardShortcuts', 'mapMaker', 'mapTypeControl', 'mapTypeId', 'maxZoom', 'minZoom',\n\t\t    'noClear', 'overviewMapControl', 'panControl', 'panControlOptions', 'rotateControl', 'scaleControl', 'scrollwheel',\n\t\t    'streetView', 'styles', 'tilt', 'zoom', 'streetViewControl', 'zoomControl', 'mapTypeControlOptions',\n\t\t    'overviewMapControlOptions', 'rotateControlOptions', 'scaleControlOptions', 'streetViewControlOptions',\n\t\t    'options',\n\t\t    // ng2-map-specific inputs\n\t\t    'geoFallbackCenter'\n\t\t];\n\t\tvar OUTPUTS = [\n\t\t    'bounds_changed', 'center_changed', 'click', 'dblclick', 'drag', 'dragend', 'dragstart', 'heading_changed', 'idle',\n\t\t    'typeid_changed', 'mousemove', 'mouseout', 'mouseover', 'projection_changed', 'resize', 'rightclick',\n\t\t    'tilesloaded', 'tile_changed', 'zoom_changed',\n\t\t    // to avoid DOM event conflicts\n\t\t    'mapClick', 'mapMouseover', 'mapMouseout', 'mapMousemove', 'mapDrag', 'mapDragend', 'mapDragstart'\n\t\t];\n\t\tvar Ng2MapComponent = (function () {\n\t\t    function Ng2MapComponent(optionBuilder, elementRef, zone, geolocation, geoCoder, ng2Map, config) {\n\t\t        var _this = this;\n\t\t        this.optionBuilder = optionBuilder;\n\t\t        this.elementRef = elementRef;\n\t\t        this.zone = zone;\n\t\t        this.geolocation = geolocation;\n\t\t        this.geoCoder = geoCoder;\n\t\t        this.ng2Map = ng2Map;\n\t\t        this.config = config;\n\t\t        this.mapReady$ = new core_1.EventEmitter();\n\t\t        this.mapOptions = {};\n\t\t        this.inputChanges$ = new Subject_1.Subject();\n\t\t        // map objects by group\n\t\t        this.infoWindows = {};\n\t\t        // map has been fully initialized\n\t\t        this.mapIdledOnce = false;\n\t\t        window['ng2MapRef'] = { zone: this.zone, componentFn: function () { return _this.initializeMap(); }, map: null };\n\t\t        if (typeof google === 'undefined' || typeof google.maps === 'undefined' || !google.maps.Map) {\n\t\t            this.mapInitPath = 1;\n\t\t            this.addGoogleMapsApi();\n\t\t        }\n\t\t        // all outputs needs to be initialized,\n\t\t        // http://stackoverflow.com/questions/37765519/angular2-directive-cannot-read-property-subscribe-of-undefined-with-outputs\n\t\t        OUTPUTS.forEach(function (output) { return _this[output] = new core_1.EventEmitter(); });\n\t\t    }\n\t\t    Ng2MapComponent.prototype.ngAfterViewInit = function () {\n\t\t        if (this.mapInitPath !== 1) {\n\t\t            this.initializeMap();\n\t\t        }\n\t\t    };\n\t\t    Ng2MapComponent.prototype.ngOnChanges = function (changes) {\n\t\t        this.inputChanges$.next(changes);\n\t\t    };\n\t\t    Ng2MapComponent.prototype.addGoogleMapsApi = function () {\n\t\t        window['initNg2Map'] = function () {\n\t\t            window['ng2MapRef'].zone.run(function () { window['ng2MapRef'].componentFn(); });\n\t\t        };\n\t\t        if ((!window['google'] || !window['google']['maps']) && !document.querySelector('#ng2-map-api')) {\n\t\t            var script = document.createElement('script');\n\t\t            script.id = 'ng2-map-api';\n\t\t            // script.src = \"https://maps.google.com/maps/api/js?callback=initNg2Map\";\n\t\t            var apiUrl = this.config.apiUrl || 'https://maps.google.com/maps/api/js';\n\t\t            apiUrl += apiUrl.indexOf('?') !== -1 ? '&' : '?';\n\t\t            script.src = apiUrl + 'callback=initNg2Map';\n\t\t            document.querySelector('body').appendChild(script);\n\t\t        }\n\t\t    };\n\t\t    Ng2MapComponent.prototype.initializeMap = function () {\n\t\t        var _this = this;\n\t\t        this.el = this.elementRef.nativeElement.querySelector('.google-map');\n\t\t        this.mapOptions = this.optionBuilder.googlizeAllInputs(INPUTS, this);\n\t\t        this.mapOptions.zoom = this.mapOptions.zoom || 15;\n\t\t        typeof this.mapOptions.center === 'string' && (delete this.mapOptions.center);\n\t\t        this.map = new google.maps.Map(this.el, this.mapOptions);\n\t\t        this.map['mapObjectName'] = 'Ng2MapComponent';\n\t\t        if (!this.mapOptions.center) {\n\t\t            this.setCenter();\n\t\t        }\n\t\t        // set google events listeners and emits to this outputs listeners\n\t\t        this.ng2Map.setObjectEvents(OUTPUTS, this, 'map');\n\t\t        this.map.addListener('idle', function () {\n\t\t            if (!_this.mapIdledOnce) {\n\t\t                _this.mapReady$.emit(_this.map);\n\t\t                _this.mapIdledOnce = true;\n\t\t            }\n\t\t        });\n\t\t        // update map when input changes\n\t\t        this.inputChanges$\n\t\t            .debounceTime(1000)\n\t\t            .subscribe(function (changes) { return _this.ng2Map.updateGoogleObject(_this.map, changes); });\n\t\t        // expose map object for test and debugging on window\n\t\t        window['ng2MapRef'].map = this.map;\n\t\t    };\n\t\t    Ng2MapComponent.prototype.setCenter = function () {\n\t\t        var _this = this;\n\t\t        if (!this['center']) {\n\t\t            this.geolocation.getCurrentPosition().subscribe(function (position) {\n\t\t                var latLng = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);\n\t\t                _this.map.setCenter(latLng);\n\t\t            }, function (error) {\n\t\t                console.error(error);\n\t\t                _this.map.setCenter(_this.mapOptions['geoFallbackCenter'] || new google.maps.LatLng(0, 0));\n\t\t            });\n\t\t        }\n\t\t        else if (typeof this['center'] === 'string') {\n\t\t            this.geoCoder.geocode({ address: this['center'] }).subscribe(function (results) {\n\t\t                _this.map.setCenter(results[0].geometry.location);\n\t\t            }, function (error) {\n\t\t                _this.map.setCenter(_this.mapOptions['geoFallbackCenter'] || new google.maps.LatLng(0, 0));\n\t\t            });\n\t\t        }\n\t\t    };\n\t\t    Ng2MapComponent.prototype.openInfoWindow = function (id, anchor, data) {\n\t\t        this.infoWindows[id].open(anchor, data);\n\t\t    };\n\t\t    Ng2MapComponent.prototype.ngOnDestroy = function () {\n\t\t        var _this = this;\n\t\t        if (this.el) {\n\t\t            OUTPUTS.forEach(function (output) { return google.maps.event.clearListeners(_this.map, output); });\n\t\t        }\n\t\t    };\n\t\t    // map.markers, map.circles, map.heatmapLayers.. etc\n\t\t    Ng2MapComponent.prototype.addToMapObjectGroup = function (mapObjectName, mapObject) {\n\t\t        var groupName = util_1.toCamelCase(mapObjectName.toLowerCase()) + 's'; // e.g. markers\n\t\t        this.map[groupName] = this.map[groupName] || [];\n\t\t        this.map[groupName].push(mapObject);\n\t\t    };\n\t\t    Ng2MapComponent.prototype.removeFromMapObjectGroup = function (mapObjectName, mapObject) {\n\t\t        var groupName = util_1.toCamelCase(mapObjectName.toLowerCase()) + 's'; // e.g. markers\n\t\t        var index = this.map[groupName].indexOf(mapObject);\n\t\t        (index > -1) && this.map[groupName].splice(index, 1);\n\t\t    };\n\t\t    __decorate([\n\t\t        core_1.Output(), \n\t\t        __metadata('design:type', core_1.EventEmitter)\n\t\t    ], Ng2MapComponent.prototype, \"mapReady$\", void 0);\n\t\t    Ng2MapComponent = __decorate([\n\t\t        core_1.Component({\n\t\t            selector: 'ng2-map',\n\t\t            providers: [ng2_map_1.Ng2Map, option_builder_1.OptionBuilder, geo_coder_1.GeoCoder, navigator_geolocation_1.NavigatorGeolocation],\n\t\t            styles: [\"\\n    ng2-map {display: block; height: 300px;}\\n    .google-map {width: 100%; height: 100%}\\n  \"],\n\t\t            inputs: INPUTS,\n\t\t            outputs: OUTPUTS,\n\t\t            encapsulation: core_1.ViewEncapsulation.None,\n\t\t            template: \"\\n    <div class=\\\"google-map\\\"></div>\\n    <ng-content></ng-content>\\n  \",\n\t\t        }),\n\t\t        __param(6, core_1.Inject(config_1.NG_MAP_CONFIG_TOKEN)), \n\t\t        __metadata('design:paramtypes', [option_builder_1.OptionBuilder, core_1.ElementRef, core_1.NgZone, navigator_geolocation_1.NavigatorGeolocation, geo_coder_1.GeoCoder, ng2_map_1.Ng2Map, Object])\n\t\t    ], Ng2MapComponent);\n\t\t    return Ng2MapComponent;\n\t\t}());\n\t\texports.Ng2MapComponent = Ng2MapComponent;\n\t\n\t\n\t/***/ },\n\t/* 5 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(2);\n\t\tvar util_1 = __webpack_require__(6);\n\t\tvar geo_coder_1 = __webpack_require__(7);\n\t\t/**\n\t\t * change any object to google object options\n\t\t * e.g. [1,2] -> new google.maps.LatLng(1,2);\n\t\t */\n\t\tvar OptionBuilder = (function () {\n\t\t    function OptionBuilder(geoCoder) {\n\t\t        this.geoCoder = geoCoder;\n\t\t    }\n\t\t    OptionBuilder.prototype.googlizeAllInputs = function (definedInputs, userInputs) {\n\t\t        var _this = this;\n\t\t        var options = {};\n\t\t        // if options given from user, only take options and ignore other inputs\n\t\t        if (userInputs.options) {\n\t\t            options = userInputs.options;\n\t\t            if (!this.onlyOptionsGiven(definedInputs, userInputs)) {\n\t\t                console.error('when \"options\" are used, other options are ignored');\n\t\t            }\n\t\t        }\n\t\t        else {\n\t\t            definedInputs.forEach(function (input) {\n\t\t                if (userInputs[input] !== undefined) {\n\t\t                    options[input] = _this.googlize(userInputs[input], { key: input });\n\t\t                }\n\t\t            });\n\t\t        }\n\t\t        return options;\n\t\t    };\n\t\t    OptionBuilder.prototype.googlizeMultiple = function (inputs, options) {\n\t\t        options = options || {};\n\t\t        for (var key in inputs) {\n\t\t            var val = inputs[key];\n\t\t            // (non-strings are fully converted)\n\t\t            if (typeof val !== 'string') {\n\t\t                options[key] = val;\n\t\t            } // sometimes '0' needed to stay as it is\n\t\t            else if (!(options['doNotConverStringToNumber'] && val.match(/^[0-9]+$/))) {\n\t\t                options[key] = this.googlize(val, { key: key });\n\t\t            }\n\t\t        } // for(var key in attrs)\n\t\t        return options;\n\t\t    };\n\t\t    OptionBuilder.prototype.googlize = function (input, options) {\n\t\t        options = options || {};\n\t\t        var output = input;\n\t\t        if (typeof input === 'string') {\n\t\t            if (input === 'false') {\n\t\t                output = false;\n\t\t            }\n\t\t            else if (input === '0') {\n\t\t                output = 0;\n\t\t            }\n\t\t            else {\n\t\t                output =\n\t\t                    // -> googlize -> getJsonParsed -> googlizeMultiple -> googlize until all elements are parsed\n\t\t                    this.getJSONParsed(input, options)\n\t\t                        || this.getAnyMapObject(input)\n\t\t                        || this.getAnyMapConstant(input, options)\n\t\t                        || this.getDateObject(input)\n\t\t                        || input;\n\t\t            }\n\t\t        }\n\t\t        if (output instanceof Array) {\n\t\t            if (options['key'] === 'bounds') {\n\t\t                output = new google.maps.LatLngBounds(output[0], output[1]);\n\t\t            }\n\t\t            else if (options['key'] === 'icons') {\n\t\t                output = this.getMapIcons(output);\n\t\t            }\n\t\t            else if (options['key'] === 'position' || options['key'].match(/^geoFallback/)) {\n\t\t                output = this.getLatLng(output);\n\t\t            }\n\t\t        }\n\t\t        else if (options['key'] && output instanceof Object) {\n\t\t            if (options['key'] === 'icon') {\n\t\t                output = this.getMarkerIcon(output);\n\t\t            }\n\t\t            else if (options['key'].match(/ControlOptions$/)) {\n\t\t                output = this.getMapControlOption(output);\n\t\t            }\n\t\t        }\n\t\t        //delete keys only for processing, not used by google\n\t\t        delete output['doNotConverStringToNumber'];\n\t\t        delete output['key'];\n\t\t        return output;\n\t\t    };\n\t\t    OptionBuilder.prototype.getLatLng = function (input) {\n\t\t        var output;\n\t\t        if (input[0].constructor === Array) {\n\t\t            output = input.map(function (el) { return new google.maps.LatLng(el[0], el[1]); });\n\t\t        }\n\t\t        else if (!isNaN(parseFloat(input[0])) && isFinite(input[0])) {\n\t\t            output = new google.maps.LatLng(input[0], input[1]);\n\t\t        }\n\t\t        return output;\n\t\t    };\n\t\t    OptionBuilder.prototype.getJSONParsed = function (input, options) {\n\t\t        var output;\n\t\t        try {\n\t\t            output = util_1.getJSON(input);\n\t\t            if (output instanceof Array) {\n\t\t                // [{a:1}] : not lat/lng ones\n\t\t                if (output[0].constructor !== Object) {\n\t\t                    output = this.getLatLng(output);\n\t\t                }\n\t\t            }\n\t\t            else if (output === Object(output)) {\n\t\t                // check for nested hashes and convert to Google API options\n\t\t                var newOptions = options;\n\t\t                newOptions['doNotConverStringToNumber'] = true;\n\t\t                output = this.googlizeMultiple(output, newOptions);\n\t\t            }\n\t\t        }\n\t\t        catch (e) {\n\t\t        }\n\t\t        return output;\n\t\t    };\n\t\t    OptionBuilder.prototype.getAnyMapObject = function (input) {\n\t\t        var output;\n\t\t        if (input.match(/^[A-Z][a-zA-Z0-9]+\\(.*\\)$/)) {\n\t\t            try {\n\t\t                var exp = 'new google.maps.' + input;\n\t\t                output = Function(\"return new google.maps.\" + input + \";\")();\n\t\t            }\n\t\t            catch (e) { }\n\t\t        }\n\t\t        return output;\n\t\t    };\n\t\t    OptionBuilder.prototype.getAnyMapConstant = function (input, options) {\n\t\t        var output;\n\t\t        if (input.match(/^([A-Z][a-zA-Z0-9]+)\\.([A-Z]+)$/)) {\n\t\t            try {\n\t\t                var matches = input.match(/^([A-Z][a-zA-Z0-9]+)\\.([A-Z]+)$/);\n\t\t                output = google.maps[matches[1]][matches[2]];\n\t\t            }\n\t\t            catch (e) { }\n\t\t        }\n\t\t        else if (input.match(/^[A-Z]+$/)) {\n\t\t            try {\n\t\t                var capitalizedKey = options['key'].charAt(0).toUpperCase() +\n\t\t                    options['key'].slice(1);\n\t\t                output = google.maps[capitalizedKey][input];\n\t\t            }\n\t\t            catch (e) { }\n\t\t        }\n\t\t        return output;\n\t\t    };\n\t\t    /**\n\t\t     * streetviewControl, panControl, etc, not a general control\n\t\t     */\n\t\t    OptionBuilder.prototype.getMapControlOption = function (controlOptions) {\n\t\t        var newControlOptions = controlOptions;\n\t\t        for (var key in newControlOptions) {\n\t\t            if (newControlOptions[key]) {\n\t\t                var value = newControlOptions[key];\n\t\t                if (typeof value === 'string') {\n\t\t                    value = value.toUpperCase();\n\t\t                }\n\t\t                else if (key === 'mapTypeIds') {\n\t\t                    value = value.map(function (str) {\n\t\t                        if (str.match(/^[A-Z]+$/)) {\n\t\t                            return google.maps.MapTypeId[str.toUpperCase()];\n\t\t                        }\n\t\t                        else {\n\t\t                            return str;\n\t\t                        }\n\t\t                    });\n\t\t                }\n\t\t                if (key === 'style') {\n\t\t                    var objName = key.replace(/Options$/, '') + 'Style';\n\t\t                    newControlOptions[key] = google.maps[objName][value];\n\t\t                }\n\t\t                else if (key === 'position') {\n\t\t                    newControlOptions[key] = google.maps.ControlPosition[value];\n\t\t                }\n\t\t                else {\n\t\t                    newControlOptions[key] = value;\n\t\t                }\n\t\t            }\n\t\t        }\n\t\t        return newControlOptions;\n\t\t    };\n\t\t    OptionBuilder.prototype.getDateObject = function (input) {\n\t\t        var output;\n\t\t        if (input.match(/^(\\d{4}\\-\\d\\d\\-\\d\\d([tT][\\d:\\.]*)?)([zZ]|([+\\-])(\\d\\d):?(\\d\\d))?$/)) {\n\t\t            try {\n\t\t                output = new Date(input);\n\t\t            }\n\t\t            catch (e) { }\n\t\t        }\n\t\t        return output;\n\t\t    };\n\t\t    OptionBuilder.prototype.getMapIcons = function (input) {\n\t\t        return input.map(function (el) {\n\t\t            if (el.icon.path.match(/^[A-Z_]+$/)) {\n\t\t                el.icon.path = google.maps.SymbolPath[el.icon.path];\n\t\t            }\n\t\t            return el;\n\t\t        });\n\t\t    };\n\t\t    OptionBuilder.prototype.getMarkerIcon = function (input) {\n\t\t        var output = input;\n\t\t        if (('' + output.path).match(/^[A-Z_]+$/)) {\n\t\t            output.path = google.maps.SymbolPath[output.path];\n\t\t        }\n\t\t        for (var key in output) {\n\t\t            var arr = output[key];\n\t\t            if (key === 'anchor' || key === 'origin' || key === 'labelOrigin') {\n\t\t                output[key] = new google.maps.Point(arr[0], arr[1]);\n\t\t            }\n\t\t            else if (key === 'size' || key === 'scaledSize') {\n\t\t                output[key] = new google.maps.Size(arr[0], arr[1]);\n\t\t            }\n\t\t        }\n\t\t        return output;\n\t\t    };\n\t\t    OptionBuilder.prototype.onlyOptionsGiven = function (definedInputs, userInputs) {\n\t\t        for (var i = 0; i < definedInputs.length; i++) {\n\t\t            var input = definedInputs[i];\n\t\t            if (input !== 'options' && typeof userInputs[input] !== 'undefined') {\n\t\t                return false;\n\t\t            }\n\t\t        }\n\t\t        return true;\n\t\t    };\n\t\t    OptionBuilder = __decorate([\n\t\t        core_1.Injectable(), \n\t\t        __metadata('design:paramtypes', [geo_coder_1.GeoCoder])\n\t\t    ], OptionBuilder);\n\t\t    return OptionBuilder;\n\t\t}());\n\t\texports.OptionBuilder = OptionBuilder;\n\t\n\t\n\t/***/ },\n\t/* 6 */\n\t/***/ function(module, exports) {\n\t\n\t\t\"use strict\";\n\t\t/**\n\t\t * return json string from json-like string\n\t\t */\n\t\tvar jsonize = function (str) {\n\t\t    try {\n\t\t        JSON.parse(str);\n\t\t        return str;\n\t\t    }\n\t\t    catch (e) {\n\t\t        return str\n\t\t            .replace(/([\\$\\w]+)\\s*:/g, // wrap keys without double quote\n\t\t        function (_, $1) {\n\t\t            return '\"' + $1 + '\":';\n\t\t        })\n\t\t            .replace(/'([^']+)'/g, // replacing single quote to double quote\n\t\t        function (_, $1) {\n\t\t            return '\"' + $1 + '\"';\n\t\t        });\n\t\t    }\n\t\t};\n\t\texports.jsonize = jsonize;\n\t\t/**\n\t\t * Returns string to an object by using JSON.parse()\n\t\t */\n\t\tvar getJSON = function (input) {\n\t\t    if (typeof input === 'string') {\n\t\t        var re = /^[\\+\\-]?[0-9\\.]+,[ ]*\\ ?[\\+\\-]?[0-9\\.]+$/; // lat,lng\n\t\t        if (input.match(re)) {\n\t\t            input = '[' + input + ']';\n\t\t        }\n\t\t        return JSON.parse(jsonize(input));\n\t\t    }\n\t\t    else {\n\t\t        return input;\n\t\t    }\n\t\t};\n\t\texports.getJSON = getJSON;\n\t\t/* tslint:enable */\n\t\t/**\n\t\t * Returns camel-cased from string 'Foo Bar' to 'fooBar'\n\t\t */\n\t\tvar toCamelCase = function (str) {\n\t\t    return str.replace(/(?:^\\w|[A-Z]|\\b\\w)/g, function (letter, index) {\n\t\t        return index == 0 ? letter.toLowerCase() : letter.toUpperCase();\n\t\t    }).replace(/\\s+/g, '');\n\t\t};\n\t\texports.toCamelCase = toCamelCase;\n\t\n\t\n\t/***/ },\n\t/* 7 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(2);\n\t\tvar Subject_1 = __webpack_require__(8);\n\t\t/**\n\t\t *   Provides [defered/promise API](https://docs.angularjs.org/api/ng/service/$q)\n\t\t *   service for Google Geocoder service\n\t\t */\n\t\tvar GeoCoder = (function () {\n\t\t    function GeoCoder() {\n\t\t    }\n\t\t    GeoCoder.prototype.geocode = function (options) {\n\t\t        var geocode$ = new Subject_1.Subject();\n\t\t        var geocoder = new google.maps.Geocoder();\n\t\t        geocoder.geocode(options, function (results, status) {\n\t\t            if (status === google.maps.GeocoderStatus.OK) {\n\t\t                geocode$.next(results);\n\t\t            }\n\t\t            else {\n\t\t                geocode$.error(results);\n\t\t            }\n\t\t        });\n\t\t        return geocode$;\n\t\t    };\n\t\t    ;\n\t\t    GeoCoder = __decorate([\n\t\t        core_1.Injectable(), \n\t\t        __metadata('design:paramtypes', [])\n\t\t    ], GeoCoder);\n\t\t    return GeoCoder;\n\t\t}());\n\t\texports.GeoCoder = GeoCoder;\n\t\n\t\n\t/***/ },\n\t/* 8 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_8__;\n\t\n\t/***/ },\n\t/* 9 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(2);\n\t\tvar Subject_1 = __webpack_require__(8);\n\t\t/**\n\t\t *  service for navigator.geolocation methods\n\t\t */\n\t\tvar NavigatorGeolocation = (function () {\n\t\t    function NavigatorGeolocation() {\n\t\t    }\n\t\t    NavigatorGeolocation.prototype.getCurrentPosition = function (geoLocationOptions) {\n\t\t        geoLocationOptions = geoLocationOptions || { timeout: 5000 };\n\t\t        var getCurrentPosition$ = new Subject_1.Subject();\n\t\t        if (navigator.geolocation) {\n\t\t            navigator.geolocation.getCurrentPosition(function (position) { return getCurrentPosition$.next(position); }, function (evt) { return getCurrentPosition$.error(evt); }, geoLocationOptions);\n\t\t        }\n\t\t        else {\n\t\t            getCurrentPosition$.error('Browser Geolocation service failed.');\n\t\t        }\n\t\t        return getCurrentPosition$;\n\t\t    };\n\t\t    ;\n\t\t    NavigatorGeolocation = __decorate([\n\t\t        core_1.Injectable(), \n\t\t        __metadata('design:paramtypes', [])\n\t\t    ], NavigatorGeolocation);\n\t\t    return NavigatorGeolocation;\n\t\t}());\n\t\texports.NavigatorGeolocation = NavigatorGeolocation;\n\t\n\t\n\t/***/ },\n\t/* 10 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar core_1 = __webpack_require__(2);\n\t\texports.NG_MAP_CONFIG_TOKEN = new core_1.OpaqueToken('NG_MAP_CONFIG_TOKEN');\n\t\n\t\n\t/***/ },\n\t/* 11 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(2);\n\t\tvar option_builder_1 = __webpack_require__(5);\n\t\tvar geo_coder_1 = __webpack_require__(7);\n\t\t/**\n\t\t * collection of map instance-related properties and methods\n\t\t */\n\t\tvar Ng2Map = (function () {\n\t\t    function Ng2Map(geoCoder, optionBuilder) {\n\t\t        var _this = this;\n\t\t        this.geoCoder = geoCoder;\n\t\t        this.optionBuilder = optionBuilder;\n\t\t        this.updateGoogleObject = function (object, changes) {\n\t\t            var val, currentValue, setMethodName;\n\t\t            if (object) {\n\t\t                for (var key in changes) {\n\t\t                    setMethodName = \"set\" + key.replace(/^[a-z]/, function (x) { return x.toUpperCase(); });\n\t\t                    currentValue = changes[key].currentValue;\n\t\t                    if (['position', 'center'].indexOf(key) !== -1 && typeof currentValue === 'string') {\n\t\t                        //To preserve setMethod name in Observable callback, wrap it as a function, then execute\n\t\t                        (function (setMethodName) {\n\t\t                            _this.geoCoder.geocode({ address: currentValue }).subscribe(function (results) {\n\t\t                                object[setMethodName](results[0].geometry.location);\n\t\t                            });\n\t\t                        })(setMethodName);\n\t\t                    }\n\t\t                    else {\n\t\t                        val = _this.optionBuilder.googlize(currentValue);\n\t\t                        object[setMethodName](val);\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t        };\n\t\t    }\n\t\t    Ng2Map.prototype.setObjectEvents = function (definedEvents, thisObj, prefix) {\n\t\t        definedEvents.forEach(function (definedEvent) {\n\t\t            var eventName = definedEvent\n\t\t                .replace(/([A-Z])/g, function ($1) { return (\"_\" + $1.toLowerCase()); }) //positionChanged -> position_changed\n\t\t                .replace(/^map_/, ''); //map_click -> click  to avoid DOM conflicts\n\t\t            thisObj[prefix].addListener(eventName, function (event) {\n\t\t                var param = event ? event : {};\n\t\t                param.target = this;\n\t\t                thisObj[definedEvent].emit(param);\n\t\t            });\n\t\t        });\n\t\t    };\n\t\t    Ng2Map = __decorate([\n\t\t        core_1.Injectable(), \n\t\t        __metadata('design:paramtypes', [geo_coder_1.GeoCoder, option_builder_1.OptionBuilder])\n\t\t    ], Ng2Map);\n\t\t    return Ng2Map;\n\t\t}());\n\t\texports.Ng2Map = Ng2Map;\n\t\n\t\n\t/***/ },\n\t/* 12 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_12__;\n\t\n\t/***/ },\n\t/* 13 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(2);\n\t\tvar Subject_1 = __webpack_require__(8);\n\t\t__webpack_require__(12);\n\t\tvar ng2_map_1 = __webpack_require__(11);\n\t\tvar ng2_map_component_1 = __webpack_require__(4);\n\t\tvar INPUTS = [\n\t\t    'content', 'disableAutoPan', 'maxWidth', 'pixelOffset', 'position', 'zIndex', 'options'\n\t\t];\n\t\tvar OUTPUTS = [\n\t\t    'closeclick', 'content_changed', 'domready', 'position_changed', 'zindex_changed'\n\t\t];\n\t\tvar InfoWindow = (function () {\n\t\t    function InfoWindow(ng2MapComponent, elementRef, ng2Map) {\n\t\t        var _this = this;\n\t\t        this.ng2MapComponent = ng2MapComponent;\n\t\t        this.elementRef = elementRef;\n\t\t        this.ng2Map = ng2Map;\n\t\t        this.objectOptions = {};\n\t\t        this.inputChanges$ = new Subject_1.Subject();\n\t\t        this.initialized$ = new core_1.EventEmitter();\n\t\t        this.elementRef.nativeElement.style.display = 'none';\n\t\t        OUTPUTS.forEach(function (output) { return _this[output] = new core_1.EventEmitter(); });\n\t\t    }\n\t\t    // Initialize this map object when map is ready\n\t\t    InfoWindow.prototype.ngOnInit = function () {\n\t\t        var _this = this;\n\t\t        if (this.ng2MapComponent.mapIdledOnce) {\n\t\t            this.initialize();\n\t\t        }\n\t\t        else {\n\t\t            this.ng2MapComponent.mapReady$.subscribe(function (map) { return _this.initialize(); });\n\t\t        }\n\t\t    };\n\t\t    InfoWindow.prototype.ngOnChanges = function (changes) {\n\t\t        this.inputChanges$.next(changes);\n\t\t    };\n\t\t    // called when map is ready\n\t\t    InfoWindow.prototype.initialize = function () {\n\t\t        var _this = this;\n\t\t        this.template = this.elementRef.nativeElement.innerHTML;\n\t\t        this.objectOptions = this.ng2MapComponent.optionBuilder.googlizeAllInputs(INPUTS, this);\n\t\t        this.infoWindow = new google.maps.InfoWindow(this.objectOptions);\n\t\t        this.infoWindow['mapObjectName'] = 'InfoWindow';\n\t\t        // register infoWindow ids to Ng2Map, so that it can be opened by id\n\t\t        this.el = this.elementRef.nativeElement;\n\t\t        if (this.el.id) {\n\t\t            this.ng2MapComponent.infoWindows[this.el.id] = this;\n\t\t        }\n\t\t        else {\n\t\t            console.error('An InfoWindow must have an id. e.g. id=\"detail\"');\n\t\t        }\n\t\t        // set google events listeners and emits to this outputs listeners\n\t\t        this.ng2Map.setObjectEvents(OUTPUTS, this, 'infoWindow');\n\t\t        // update object when input changes\n\t\t        this.inputChanges$\n\t\t            .debounceTime(1000)\n\t\t            .subscribe(function (changes) { return _this.ng2Map.updateGoogleObject(_this.infoWindow, changes); });\n\t\t        this.ng2MapComponent.addToMapObjectGroup('InfoWindow', this.infoWindow);\n\t\t        this.initialized$.emit(this.infoWindow);\n\t\t    };\n\t\t    InfoWindow.prototype.open = function (anchor, data) {\n\t\t        var html = this.template;\n\t\t        for (var key in data) {\n\t\t            this[key] = data[key];\n\t\t            html = html.replace(\"[[\" + key + \"]]\", data[key]);\n\t\t        }\n\t\t        // set content and open it\n\t\t        this.infoWindow.setContent(html);\n\t\t        this.infoWindow.open(this.ng2MapComponent.map, anchor);\n\t\t    };\n\t\t    InfoWindow.prototype.ngOnDestroy = function () {\n\t\t        var _this = this;\n\t\t        if (this.infoWindow) {\n\t\t            OUTPUTS.forEach(function (output) { return google.maps.event.clearListeners(_this.infoWindow, output); });\n\t\t            delete this.infoWindow;\n\t\t        }\n\t\t    };\n\t\t    InfoWindow = __decorate([\n\t\t        core_1.Component({\n\t\t            selector: 'ng2-map > info-window',\n\t\t            inputs: INPUTS,\n\t\t            outputs: OUTPUTS,\n\t\t            template: \"<ng-content></ng-content>\",\n\t\t        }), \n\t\t        __metadata('design:paramtypes', [ng2_map_component_1.Ng2MapComponent, core_1.ElementRef, ng2_map_1.Ng2Map])\n\t\t    ], InfoWindow);\n\t\t    return InfoWindow;\n\t\t}());\n\t\texports.InfoWindow = InfoWindow;\n\t\n\t\n\t/***/ },\n\t/* 14 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __extends = (this && this.__extends) || function (d, b) {\n\t\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t\t    function __() { this.constructor = d; }\n\t\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t\t};\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(2);\n\t\tvar base_map_directive_1 = __webpack_require__(3);\n\t\tvar ng2_map_component_1 = __webpack_require__(4);\n\t\tvar INPUTS = [\n\t\t    'center', 'clickable', 'draggable', 'editable', 'fillColor', 'fillOpacity', 'map', 'radius',\n\t\t    'strokeColor', 'strokeOpacity', 'strokePosition', 'strokeWeight', 'visible', 'zIndex', 'options',\n\t\t    //ng2-map specific inputs\n\t\t    'geoFallbackCenter'\n\t\t];\n\t\tvar OUTPUTS = [\n\t\t    'centerChanged', 'click', 'dblclick', 'drag', 'dragend', 'dragstart',\n\t\t    'mousedown', 'mousemove', 'mouseout', 'mouseover', 'mouseup', 'radiusChanged', 'rightclick',\n\t\t];\n\t\tvar Circle = (function (_super) {\n\t\t    __extends(Circle, _super);\n\t\t    function Circle(ng2MapComp) {\n\t\t        _super.call(this, ng2MapComp, 'Circle', INPUTS, OUTPUTS);\n\t\t        this.ng2MapComp = ng2MapComp;\n\t\t        this.objectOptions = {};\n\t\t    }\n\t\t    Circle.prototype.initialize = function () {\n\t\t        _super.prototype.initialize.call(this);\n\t\t        this.setCenter();\n\t\t    };\n\t\t    Circle.prototype.setCenter = function () {\n\t\t        var _this = this;\n\t\t        if (!this['center']) {\n\t\t            this._subscriptions.push(this.ng2MapComp.geolocation.getCurrentPosition().subscribe(function (center) {\n\t\t                var latLng = new google.maps.LatLng(center.coords.latitude, center.coords.longitude);\n\t\t                _this.mapObject.setCenter(latLng);\n\t\t            }, function (error) {\n\t\t                console.error(error);\n\t\t                _this.mapObject.setCenter(_this.objectOptions['geoFallbackCenter'] || new google.maps.LatLng(0, 0));\n\t\t            }));\n\t\t        }\n\t\t        else if (typeof this['center'] === 'string') {\n\t\t            this._subscriptions.push(this.ng2MapComp.geoCoder.geocode({ address: this['center'] }).subscribe(function (results) {\n\t\t                _this.mapObject.setCenter(results[0].geometry.location);\n\t\t            }, function (error) {\n\t\t                console.error(error);\n\t\t                _this.mapObject.setCenter(_this.objectOptions['geoFallbackCenter'] || new google.maps.LatLng(0, 0));\n\t\t            }));\n\t\t        }\n\t\t    };\n\t\t    Circle = __decorate([\n\t\t        core_1.Directive({\n\t\t            selector: 'ng2-map>circle, ng2-map>map-circle',\n\t\t            inputs: INPUTS,\n\t\t            outputs: OUTPUTS,\n\t\t        }), \n\t\t        __metadata('design:paramtypes', [ng2_map_component_1.Ng2MapComponent])\n\t\t    ], Circle);\n\t\t    return Circle;\n\t\t}(base_map_directive_1.BaseMapDirective));\n\t\texports.Circle = Circle;\n\t\n\t\n\t/***/ },\n\t/* 15 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __extends = (this && this.__extends) || function (d, b) {\n\t\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t\t    function __() { this.constructor = d; }\n\t\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t\t};\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(2);\n\t\tvar base_map_directive_1 = __webpack_require__(3);\n\t\tvar ng2_map_component_1 = __webpack_require__(4);\n\t\tvar INPUTS = ['controlPosition', 'controls', 'drawingMode', 'featureFactory', 'style', 'geoJson'];\n\t\tvar OUTPUTS = [\n\t\t    'addfeature', 'click', 'dblclick', 'mousedown', 'mouseout', 'mouseover',\n\t\t    'mouseup', 'removefeature', 'removeproperty', 'rightclick', 'setgeometry', 'setproperty'\n\t\t];\n\t\tvar DataLayer = (function (_super) {\n\t\t    __extends(DataLayer, _super);\n\t\t    function DataLayer(ng2MapComponent) {\n\t\t        _super.call(this, ng2MapComponent, 'Data', INPUTS, OUTPUTS);\n\t\t    }\n\t\t    // only called when map is ready\n\t\t    DataLayer.prototype.initialize = function () {\n\t\t        if (this['geoJson']) {\n\t\t            this.ng2MapComponent.map.data.loadGeoJson(this['geoJson']);\n\t\t        }\n\t\t        else {\n\t\t            this.objectOptions = this.optionBuilder.googlizeAllInputs(this.inputs, this);\n\t\t            this.ng2MapComponent.map.data.add(this.objectOptions);\n\t\t        }\n\t\t        // unlike others, data belongs to map. e.g., map.data.loadGeoJson(), map.data.add()\n\t\t        this.mapObject = this.ng2MapComponent.map.data;\n\t\t        // set google events listeners and emits to this outputs listeners\n\t\t        this.ng2Map.setObjectEvents(this.outputs, this, 'mapObject');\n\t\t        this.ng2MapComponent.addToMapObjectGroup(this.mapObjectName, this.mapObject);\n\t\t        this.initialized$.emit(this.mapObject);\n\t\t    };\n\t\t    DataLayer = __decorate([\n\t\t        core_1.Directive({\n\t\t            selector: 'ng2-map > data-layer',\n\t\t            inputs: INPUTS,\n\t\t            outputs: OUTPUTS,\n\t\t        }), \n\t\t        __metadata('design:paramtypes', [ng2_map_component_1.Ng2MapComponent])\n\t\t    ], DataLayer);\n\t\t    return DataLayer;\n\t\t}(base_map_directive_1.BaseMapDirective));\n\t\texports.DataLayer = DataLayer;\n\t\n\t\n\t/***/ },\n\t/* 16 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __extends = (this && this.__extends) || function (d, b) {\n\t\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t\t    function __() { this.constructor = d; }\n\t\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t\t};\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(2);\n\t\tvar base_map_directive_1 = __webpack_require__(3);\n\t\tvar ng2_map_component_1 = __webpack_require__(4);\n\t\tvar navigator_geolocation_1 = __webpack_require__(9);\n\t\tvar INPUTS = [\n\t\t    'directions', 'draggable', 'hideRouteList', 'infoWindow', 'panel', 'markerOptions',\n\t\t    'polylineOptions', 'preserveViewport', 'routeIndex', 'suppressBicyclingLayer',\n\t\t    'suppressInfoWindows', 'suppressMarkers', 'suppressPolylines'\n\t\t];\n\t\tvar OUTPUTS = ['directions_changed'];\n\t\tvar DirectionsRenderer = (function (_super) {\n\t\t    __extends(DirectionsRenderer, _super);\n\t\t    function DirectionsRenderer(ng2MapComponent, geolocation) {\n\t\t        _super.call(this, ng2MapComponent, 'DirectionsRenderer', INPUTS, OUTPUTS);\n\t\t        this.geolocation = geolocation;\n\t\t    }\n\t\t    // only called when map is ready\n\t\t    DirectionsRenderer.prototype.initialize = function () {\n\t\t        this.objectOptions = this.optionBuilder.googlizeAllInputs(this.inputs, this);\n\t\t        if (typeof this.objectOptions['panel'] === 'string') {\n\t\t            this.objectOptions['panel'] = document.querySelector(this.objectOptions['panel']);\n\t\t        }\n\t\t        this.directionsService = new google.maps.DirectionsService();\n\t\t        this.directionsRenderer = new google.maps.DirectionsRenderer(this.objectOptions);\n\t\t        this.directionsRenderer.setMap(this.ng2MapComponent.map);\n\t\t        // set google events listeners and emidirectionsRenderer to this outputs listeners\n\t\t        this.showDirections(this.directionsRequest);\n\t\t        this.ng2Map.setObjectEvents(this.outputs, this, 'directionsRenderer');\n\t\t        this.ng2MapComponent.addToMapObjectGroup(this.mapObjectName, this.mapObject);\n\t\t        this.initialized$.emit(this.directionsRenderer);\n\t\t    };\n\t\t    DirectionsRenderer.prototype.ngOnChanges = function (changes) {\n\t\t        var newOptions = {};\n\t\t        for (var key in changes) {\n\t\t            if (this.inputs.indexOf(key) !== -1) {\n\t\t                newOptions[key] = this.optionBuilder.googlize(changes[key].currentValue);\n\t\t            }\n\t\t        }\n\t\t        if (changes['directionsRequest'] && this.directionsRenderer) {\n\t\t            this.directionsService && this.showDirections(this.directionsRequest);\n\t\t        }\n\t\t    };\n\t\t    DirectionsRenderer.prototype.showDirections = function (directionsRequest) {\n\t\t        var _this = this;\n\t\t        this.directionsService.route(directionsRequest, function (response, status) {\n\t\t            if (status == google.maps.DirectionsStatus.OK) {\n\t\t                _this.directionsRenderer.setDirections(response);\n\t\t            }\n\t\t            else {\n\t\t                console.error('Directions request failed due to ' + status);\n\t\t            }\n\t\t        });\n\t\t    };\n\t\t    __decorate([\n\t\t        core_1.Input('directions-request'), \n\t\t        __metadata('design:type', Object)\n\t\t    ], DirectionsRenderer.prototype, \"directionsRequest\", void 0);\n\t\t    DirectionsRenderer = __decorate([\n\t\t        core_1.Directive({\n\t\t            selector: 'ng2-map > directions-renderer',\n\t\t            inputs: INPUTS,\n\t\t            outputs: OUTPUTS,\n\t\t        }), \n\t\t        __metadata('design:paramtypes', [ng2_map_component_1.Ng2MapComponent, navigator_geolocation_1.NavigatorGeolocation])\n\t\t    ], DirectionsRenderer);\n\t\t    return DirectionsRenderer;\n\t\t}(base_map_directive_1.BaseMapDirective));\n\t\texports.DirectionsRenderer = DirectionsRenderer;\n\t\n\t\n\t/***/ },\n\t/* 17 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __extends = (this && this.__extends) || function (d, b) {\n\t\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t\t    function __() { this.constructor = d; }\n\t\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t\t};\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(2);\n\t\tvar base_map_directive_1 = __webpack_require__(3);\n\t\tvar ng2_map_component_1 = __webpack_require__(4);\n\t\tvar INPUTS = [\n\t\t    'options',\n\t\t    'circleOptions', 'drawingControl', 'drawingControlOptions', 'drawingMode',\n\t\t    'map', 'markerOptions', 'polygonOptions', 'polylineOptions', 'rectangleOptions'\n\t\t];\n\t\tvar OUTPUTS = [\n\t\t    'circlecomplete', 'markercomplete', 'overlaycomplete',\n\t\t    'polygoncomplete', 'polylinecomplete', 'rectanglecomplete'\n\t\t];\n\t\tvar DrawingManager = (function (_super) {\n\t\t    __extends(DrawingManager, _super);\n\t\t    function DrawingManager(ng2MapComp) {\n\t\t        _super.call(this, ng2MapComp, 'DrawingManager', INPUTS, OUTPUTS);\n\t\t        this.libraryName = 'drawing';\n\t\t    }\n\t\t    DrawingManager = __decorate([\n\t\t        core_1.Directive({\n\t\t            selector: 'ng2-map > drawing-manager',\n\t\t            inputs: INPUTS,\n\t\t            outputs: OUTPUTS,\n\t\t        }), \n\t\t        __metadata('design:paramtypes', [ng2_map_component_1.Ng2MapComponent])\n\t\t    ], DrawingManager);\n\t\t    return DrawingManager;\n\t\t}(base_map_directive_1.BaseMapDirective));\n\t\texports.DrawingManager = DrawingManager;\n\t\n\t\n\t/***/ },\n\t/* 18 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __extends = (this && this.__extends) || function (d, b) {\n\t\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t\t    function __() { this.constructor = d; }\n\t\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t\t};\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(2);\n\t\tvar base_map_directive_1 = __webpack_require__(3);\n\t\tvar ng2_map_component_1 = __webpack_require__(4);\n\t\tvar INPUTS = ['url', 'bounds', 'clickable', 'opacity'];\n\t\tvar OUTPUTS = ['click', 'dblclick'];\n\t\tvar GroundOverlay = (function (_super) {\n\t\t    __extends(GroundOverlay, _super);\n\t\t    function GroundOverlay(ng2MapComp) {\n\t\t        _super.call(this, ng2MapComp, 'GroundOverlay', INPUTS, OUTPUTS);\n\t\t        this.objectOptions = {};\n\t\t    }\n\t\t    // re-declaring initialize function. called when map is ready\n\t\t    GroundOverlay.prototype.initialize = function () {\n\t\t        // url, bounds are not the options of GroundOverlay\n\t\t        this.objectOptions = this.optionBuilder.googlizeAllInputs(['clickable', 'opacity'], this);\n\t\t        // noinspection TypeScriptUnresolvedFunction\n\t\t        this.mapObject = new google.maps.GroundOverlay(this['url'], this['bounds'], this.objectOptions);\n\t\t        this.mapObject.setMap(this.ng2MapComponent.map);\n\t\t        this.mapObject['mapObjectName'] = this.mapObjectName;\n\t\t        // set google events listeners and emits to this outputs listeners\n\t\t        this.ng2Map.setObjectEvents(this.outputs, this, 'mapObject');\n\t\t        this.ng2MapComponent.addToMapObjectGroup(this.mapObjectName, this.mapObject);\n\t\t        this.initialized$.emit(this.mapObject);\n\t\t    };\n\t\t    GroundOverlay = __decorate([\n\t\t        core_1.Directive({\n\t\t            selector: 'ng2-map > ground-overlay',\n\t\t            inputs: INPUTS,\n\t\t            outputs: OUTPUTS,\n\t\t        }), \n\t\t        __metadata('design:paramtypes', [ng2_map_component_1.Ng2MapComponent])\n\t\t    ], GroundOverlay);\n\t\t    return GroundOverlay;\n\t\t}(base_map_directive_1.BaseMapDirective));\n\t\texports.GroundOverlay = GroundOverlay;\n\t\n\t\n\t/***/ },\n\t/* 19 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __extends = (this && this.__extends) || function (d, b) {\n\t\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t\t    function __() { this.constructor = d; }\n\t\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t\t};\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(2);\n\t\tvar base_map_directive_1 = __webpack_require__(3);\n\t\tvar ng2_map_component_1 = __webpack_require__(4);\n\t\tvar INPUTS = ['data', 'dissipating', 'gradient', 'maxIntensity', 'opacity', 'radius', 'options'];\n\t\tvar OUTPUTS = [];\n\t\tvar HeatmapLayer = (function (_super) {\n\t\t    __extends(HeatmapLayer, _super);\n\t\t    function HeatmapLayer(ng2MapComp) {\n\t\t        _super.call(this, ng2MapComp, 'HeatmapLayer', INPUTS, OUTPUTS);\n\t\t        this.libraryName = 'visualization';\n\t\t    }\n\t\t    HeatmapLayer = __decorate([\n\t\t        core_1.Directive({\n\t\t            selector: 'ng2-map > heatmap-layer',\n\t\t            inputs: INPUTS,\n\t\t            outputs: OUTPUTS,\n\t\t        }), \n\t\t        __metadata('design:paramtypes', [ng2_map_component_1.Ng2MapComponent])\n\t\t    ], HeatmapLayer);\n\t\t    return HeatmapLayer;\n\t\t}(base_map_directive_1.BaseMapDirective));\n\t\texports.HeatmapLayer = HeatmapLayer;\n\t\n\t\n\t/***/ },\n\t/* 20 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __extends = (this && this.__extends) || function (d, b) {\n\t\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t\t    function __() { this.constructor = d; }\n\t\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t\t};\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(2);\n\t\tvar base_map_directive_1 = __webpack_require__(3);\n\t\tvar ng2_map_component_1 = __webpack_require__(4);\n\t\tvar INPUTS = ['clickable', 'preserveViewport', 'screenOverlays', 'suppressInfoWindows', 'url', 'zIndex', 'options'];\n\t\tvar OUTPUTS = ['click', 'defaultviewport_changed', 'status_changed'];\n\t\tvar KmlLayer = (function (_super) {\n\t\t    __extends(KmlLayer, _super);\n\t\t    function KmlLayer(ng2MapComp) {\n\t\t        _super.call(this, ng2MapComp, 'KmlLayer', INPUTS, OUTPUTS);\n\t\t    }\n\t\t    KmlLayer = __decorate([\n\t\t        core_1.Directive({\n\t\t            selector: 'ng2-map > kml-layer',\n\t\t            inputs: INPUTS,\n\t\t            outputs: OUTPUTS,\n\t\t        }), \n\t\t        __metadata('design:paramtypes', [ng2_map_component_1.Ng2MapComponent])\n\t\t    ], KmlLayer);\n\t\t    return KmlLayer;\n\t\t}(base_map_directive_1.BaseMapDirective));\n\t\texports.KmlLayer = KmlLayer;\n\t\n\t\n\t/***/ },\n\t/* 21 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __extends = (this && this.__extends) || function (d, b) {\n\t\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t\t    function __() { this.constructor = d; }\n\t\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t\t};\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(2);\n\t\tvar base_map_directive_1 = __webpack_require__(3);\n\t\tvar ng2_map_component_1 = __webpack_require__(4);\n\t\tvar INPUTS = [\n\t\t    'anchorPoint', 'animation', 'clickable', 'cursor', 'draggable', 'icon', 'label', 'opacity',\n\t\t    'optimized', 'place', 'position', 'shape', 'title', 'visible', 'zIndex', 'options',\n\t\t    //ng2-map specific inputs\n\t\t    'geoFallbackPosition'\n\t\t];\n\t\tvar OUTPUTS = [\n\t\t    'animationChanged', 'click', 'clickableChanged', 'cursorChanged', 'dblclick', 'drag', 'dragend', 'draggableChanged',\n\t\t    'dragstart', 'flatChanged', 'iconChanged', 'mousedown', 'mouseout', 'mouseover', 'mouseup', 'positionChanged', 'rightclick',\n\t\t    'shapeChanged', 'titleChanged', 'visibleChanged', 'zindexChanged'\n\t\t];\n\t\tvar Marker = (function (_super) {\n\t\t    __extends(Marker, _super);\n\t\t    function Marker(ng2MapComp) {\n\t\t        _super.call(this, ng2MapComp, 'Marker', INPUTS, OUTPUTS);\n\t\t        this.ng2MapComp = ng2MapComp;\n\t\t        this.objectOptions = {};\n\t\t    }\n\t\t    Marker.prototype.initialize = function () {\n\t\t        _super.prototype.initialize.call(this);\n\t\t        this.setPosition();\n\t\t    };\n\t\t    Marker.prototype.setPosition = function () {\n\t\t        var _this = this;\n\t\t        if (!this['position']) {\n\t\t            this._subscriptions.push(this.ng2MapComp.geolocation.getCurrentPosition().subscribe(function (position) {\n\t\t                var latLng = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);\n\t\t                _this.mapObject.setPosition(latLng);\n\t\t            }, function (error) {\n\t\t                console.error(error);\n\t\t                _this.mapObject.setPosition(_this.objectOptions['geoFallbackPosition'] || new google.maps.LatLng(0, 0));\n\t\t            }));\n\t\t        }\n\t\t        else if (typeof this['position'] === 'string') {\n\t\t            this._subscriptions.push(this.ng2MapComp.geoCoder.geocode({ address: this['position'] }).subscribe(function (results) {\n\t\t                _this.mapObject.setPosition(results[0].geometry.location);\n\t\t            }, function (error) {\n\t\t                console.error(error);\n\t\t                _this.mapObject.setPosition(_this.objectOptions['geoFallbackPosition'] || new google.maps.LatLng(0, 0));\n\t\t            }));\n\t\t        }\n\t\t    };\n\t\t    Marker = __decorate([\n\t\t        core_1.Directive({\n\t\t            selector: 'ng2-map > marker',\n\t\t            inputs: INPUTS,\n\t\t            outputs: OUTPUTS,\n\t\t        }), \n\t\t        __metadata('design:paramtypes', [ng2_map_component_1.Ng2MapComponent])\n\t\t    ], Marker);\n\t\t    return Marker;\n\t\t}(base_map_directive_1.BaseMapDirective));\n\t\texports.Marker = Marker;\n\t\n\t\n\t/***/ },\n\t/* 22 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(2);\n\t\tvar option_builder_1 = __webpack_require__(5);\n\t\tvar ng2_map_component_1 = __webpack_require__(4);\n\t\tvar PlacesAutoComplete = (function () {\n\t\t    function PlacesAutoComplete(optionBuilder, elementRef) {\n\t\t        var _this = this;\n\t\t        this.optionBuilder = optionBuilder;\n\t\t        this.elementRef = elementRef;\n\t\t        this.place_changed = new core_1.EventEmitter();\n\t\t        this.initialized$ = new core_1.EventEmitter();\n\t\t        // only called when map is ready\n\t\t        this.initialize = function () {\n\t\t            _this.objectOptions =\n\t\t                _this.optionBuilder.googlizeAllInputs(['bounds', 'componentRestrictions', 'types'], _this);\n\t\t            _this.autocomplete = new google.maps.places.Autocomplete(_this.elementRef.nativeElement, _this.objectOptions);\n\t\t            _this.autocomplete.addListener('place_changed', function (place) { return _this.place_changed.emit(); });\n\t\t            _this.initialized$.emit(_this.autocomplete);\n\t\t        };\n\t\t        if (typeof google === 'undefined' || typeof google.maps === 'undefined' || !google.maps.Map) {\n\t\t            this.addGoogleMapsApi();\n\t\t        }\n\t\t        else {\n\t\t            this.initialize();\n\t\t        }\n\t\t    }\n\t\t    PlacesAutoComplete.prototype.addGoogleMapsApi = function () {\n\t\t        window['initializePlacesAutoComplete'] = this.initialize;\n\t\t        if ((!window['google'] || !window['google']['maps']) && !document.querySelector('#ng2-map-api')) {\n\t\t            var script = document.createElement('script');\n\t\t            script.id = 'ng2-map-api';\n\t\t            // script.src = \"https://maps.google.com/maps/api/js?callback=initNg2Map\";\n\t\t            var apiUrl = ng2_map_component_1.Ng2MapComponent['apiUrl'] || 'https://maps.google.com/maps/api/js';\n\t\t            apiUrl += apiUrl.indexOf('?') ? '&' : '?';\n\t\t            script.src = apiUrl + 'callback=initializePlacesAutoComplete';\n\t\t            document.querySelector('body').appendChild(script);\n\t\t        }\n\t\t    };\n\t\t    __decorate([\n\t\t        core_1.Input('bounds'), \n\t\t        __metadata('design:type', Object)\n\t\t    ], PlacesAutoComplete.prototype, \"bounds\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input('componentRestrictions'), \n\t\t        __metadata('design:type', Object)\n\t\t    ], PlacesAutoComplete.prototype, \"componentRestrictions\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input('types'), \n\t\t        __metadata('design:type', Array)\n\t\t    ], PlacesAutoComplete.prototype, \"types\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Output('place_changed'), \n\t\t        __metadata('design:type', core_1.EventEmitter)\n\t\t    ], PlacesAutoComplete.prototype, \"place_changed\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Output('initialized$'), \n\t\t        __metadata('design:type', core_1.EventEmitter)\n\t\t    ], PlacesAutoComplete.prototype, \"initialized$\", void 0);\n\t\t    PlacesAutoComplete = __decorate([\n\t\t        core_1.Directive({\n\t\t            selector: '[places-auto-complete]'\n\t\t        }), \n\t\t        __metadata('design:paramtypes', [option_builder_1.OptionBuilder, core_1.ElementRef])\n\t\t    ], PlacesAutoComplete);\n\t\t    return PlacesAutoComplete;\n\t\t}());\n\t\texports.PlacesAutoComplete = PlacesAutoComplete;\n\t\n\t\n\t/***/ },\n\t/* 23 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __extends = (this && this.__extends) || function (d, b) {\n\t\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t\t    function __() { this.constructor = d; }\n\t\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t\t};\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(2);\n\t\tvar base_map_directive_1 = __webpack_require__(3);\n\t\tvar ng2_map_component_1 = __webpack_require__(4);\n\t\tvar INPUTS = [\n\t\t    'clickable', 'draggable', 'editable', 'fillColor', 'fillOpacity', 'geodesic', 'paths',\n\t\t    'strokeColor', 'strokeOpacity', 'strokePosition', 'strokeWeight', 'visible', 'zIndex', 'options',\n\t\t];\n\t\tvar OUTPUTS = [\n\t\t    'click', 'dblclick', 'drag', 'dragend', 'dragstart', 'mousedown',\n\t\t    'mousemove', 'mouseout', 'mouseover', 'mouseup', 'rightclick',\n\t\t];\n\t\tvar Polygon = (function (_super) {\n\t\t    __extends(Polygon, _super);\n\t\t    function Polygon(ng2MapComp) {\n\t\t        _super.call(this, ng2MapComp, 'Polygon', INPUTS, OUTPUTS);\n\t\t    }\n\t\t    Polygon = __decorate([\n\t\t        core_1.Directive({\n\t\t            selector: 'ng2-map>polygon, ng2-map>map-polygon',\n\t\t            inputs: INPUTS,\n\t\t            outputs: OUTPUTS,\n\t\t        }), \n\t\t        __metadata('design:paramtypes', [ng2_map_component_1.Ng2MapComponent])\n\t\t    ], Polygon);\n\t\t    return Polygon;\n\t\t}(base_map_directive_1.BaseMapDirective));\n\t\texports.Polygon = Polygon;\n\t\n\t\n\t/***/ },\n\t/* 24 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __extends = (this && this.__extends) || function (d, b) {\n\t\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t\t    function __() { this.constructor = d; }\n\t\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t\t};\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(2);\n\t\tvar base_map_directive_1 = __webpack_require__(3);\n\t\tvar ng2_map_component_1 = __webpack_require__(4);\n\t\tvar INPUTS = [\n\t\t    'clickable', 'draggable', 'editable', 'geodesic', 'icons', 'path', 'strokeColor',\n\t\t    'strokeOpacity', 'strokeWeight', 'visible', 'zIndex', 'options'\n\t\t];\n\t\tvar OUTPUTS = [\n\t\t    'click', 'dblclick', 'drag', 'dragend', 'dragstart', 'mousedown',\n\t\t    'mousemove', 'mouseout', 'mouseover', 'mouseup', 'rightclick'\n\t\t];\n\t\tvar Polyline = (function (_super) {\n\t\t    __extends(Polyline, _super);\n\t\t    function Polyline(ng2MapComp) {\n\t\t        _super.call(this, ng2MapComp, 'Polyline', INPUTS, OUTPUTS);\n\t\t    }\n\t\t    Polyline = __decorate([\n\t\t        core_1.Directive({\n\t\t            selector: 'ng2-map > polyline',\n\t\t            inputs: INPUTS,\n\t\t            outputs: OUTPUTS,\n\t\t        }), \n\t\t        __metadata('design:paramtypes', [ng2_map_component_1.Ng2MapComponent])\n\t\t    ], Polyline);\n\t\t    return Polyline;\n\t\t}(base_map_directive_1.BaseMapDirective));\n\t\texports.Polyline = Polyline;\n\t\n\t\n\t/***/ },\n\t/* 25 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __extends = (this && this.__extends) || function (d, b) {\n\t\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t\t    function __() { this.constructor = d; }\n\t\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t\t};\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(2);\n\t\tvar base_map_directive_1 = __webpack_require__(3);\n\t\tvar ng2_map_component_1 = __webpack_require__(4);\n\t\tvar INPUTS = [\n\t\t    'selector', 'options',\n\t\t    'addressControl', 'addressControlOptions', 'clickToGo', 'disableDefaultUI', 'disableDoubleClickZoom',\n\t\t    'enableCloseButton', 'fullscreenControl', 'fullscreenControlOptions', 'imageDateControl', 'linksControl',\n\t\t    'motionTracking', 'motionTrackingControl', 'panControl', 'panControlOptions', 'pano',\n\t\t    'position', 'pov', 'scrollwheel', 'showRoadLabels', 'visible', 'zoomControl', 'zoomControlOptions'\n\t\t];\n\t\tvar OUTPUTS = [\n\t\t    'closeclick', 'pano_changed', 'position_changed', 'pov_changed', 'resize', 'status_changed',\n\t\t    'visible_changed', 'zoom_changed'\n\t\t];\n\t\tvar StreetViewPanorama = (function (_super) {\n\t\t    __extends(StreetViewPanorama, _super);\n\t\t    function StreetViewPanorama(ng2MapComp) {\n\t\t        _super.call(this, ng2MapComp, 'StreetViewPanorama', INPUTS, OUTPUTS);\n\t\t    }\n\t\t    // only called when map is ready\n\t\t    StreetViewPanorama.prototype.initialize = function () {\n\t\t        this.objectOptions = this.optionBuilder.googlizeAllInputs(this.inputs, this);\n\t\t        var element;\n\t\t        if (this.objectOptions.selector) {\n\t\t            //noinspection TypeScriptValidateTypes\n\t\t            element = document.querySelector(this['selector']);\n\t\t            delete this.objectOptions.selector;\n\t\t        }\n\t\t        else {\n\t\t            element = this.ng2MapComponent.el;\n\t\t        }\n\t\t        // will be set after geocoded\n\t\t        typeof this.objectOptions.position === 'string' && (delete this.objectOptions.position);\n\t\t        this.mapObject = new google.maps[this.mapObjectName](element, this.objectOptions);\n\t\t        this.mapObject['mapObjectName'] = this.mapObjectName;\n\t\t        this.mapObject['ng2MapComponent'] = this.ng2MapComponent;\n\t\t        // set google events listeners and emits to this outputs listeners\n\t\t        this.ng2Map.setObjectEvents(this.outputs, this, 'mapObject');\n\t\t        this.ng2MapComponent.addToMapObjectGroup(this.mapObjectName, this.mapObject);\n\t\t        this.initialized$.emit(this.mapObject);\n\t\t    };\n\t\t    // When destroyed, remove event listener, and delete this object to prevent memory leak\n\t\t    StreetViewPanorama.prototype.ngOnDestroy = function () {\n\t\t        var _this = this;\n\t\t        if (this.ng2MapComponent.el) {\n\t\t            OUTPUTS.forEach(function (output) { return google.maps.event.clearListeners(_this.mapObject, output); });\n\t\t        }\n\t\t    };\n\t\t    StreetViewPanorama = __decorate([\n\t\t        core_1.Directive({\n\t\t            selector: 'ng2-map > street-view-panorama',\n\t\t            inputs: INPUTS,\n\t\t            outputs: OUTPUTS,\n\t\t        }), \n\t\t        __metadata('design:paramtypes', [ng2_map_component_1.Ng2MapComponent])\n\t\t    ], StreetViewPanorama);\n\t\t    return StreetViewPanorama;\n\t\t}(base_map_directive_1.BaseMapDirective));\n\t\texports.StreetViewPanorama = StreetViewPanorama;\n\t\n\t\n\t/***/ },\n\t/* 26 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __extends = (this && this.__extends) || function (d, b) {\n\t\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t\t    function __() { this.constructor = d; }\n\t\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t\t};\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(2);\n\t\tvar base_map_directive_1 = __webpack_require__(3);\n\t\tvar ng2_map_component_1 = __webpack_require__(4);\n\t\tvar INPUTS = ['autoRefresh', 'options'];\n\t\tvar OUTPUTS = [];\n\t\tvar TrafficLayer = (function (_super) {\n\t\t    __extends(TrafficLayer, _super);\n\t\t    function TrafficLayer(ng2MapComp) {\n\t\t        _super.call(this, ng2MapComp, 'TrafficLayer', INPUTS, OUTPUTS);\n\t\t    }\n\t\t    TrafficLayer = __decorate([\n\t\t        core_1.Directive({\n\t\t            selector: 'ng2-map > traffic-layer',\n\t\t            inputs: INPUTS,\n\t\t            outputs: OUTPUTS,\n\t\t        }), \n\t\t        __metadata('design:paramtypes', [ng2_map_component_1.Ng2MapComponent])\n\t\t    ], TrafficLayer);\n\t\t    return TrafficLayer;\n\t\t}(base_map_directive_1.BaseMapDirective));\n\t\texports.TrafficLayer = TrafficLayer;\n\t\n\t\n\t/***/ },\n\t/* 27 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __extends = (this && this.__extends) || function (d, b) {\n\t\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t\t    function __() { this.constructor = d; }\n\t\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t\t};\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(2);\n\t\tvar base_map_directive_1 = __webpack_require__(3);\n\t\tvar ng2_map_component_1 = __webpack_require__(4);\n\t\tvar INPUTS = [];\n\t\tvar OUTPUTS = [];\n\t\tvar TransitLayer = (function (_super) {\n\t\t    __extends(TransitLayer, _super);\n\t\t    function TransitLayer(ng2MapComp) {\n\t\t        _super.call(this, ng2MapComp, 'TransitLayer', INPUTS, OUTPUTS);\n\t\t    }\n\t\t    TransitLayer = __decorate([\n\t\t        core_1.Directive({\n\t\t            selector: 'ng2-map > transit-layer',\n\t\t            inputs: INPUTS,\n\t\t            outputs: OUTPUTS,\n\t\t        }), \n\t\t        __metadata('design:paramtypes', [ng2_map_component_1.Ng2MapComponent])\n\t\t    ], TransitLayer);\n\t\t    return TransitLayer;\n\t\t}(base_map_directive_1.BaseMapDirective));\n\t\texports.TransitLayer = TransitLayer;\n\t\n\t\n\t/***/ },\n\t/* 28 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(2);\n\t\tvar common_1 = __webpack_require__(29);\n\t\tvar option_builder_1 = __webpack_require__(5);\n\t\tvar geo_coder_1 = __webpack_require__(7);\n\t\tvar navigator_geolocation_1 = __webpack_require__(9);\n\t\tvar config_1 = __webpack_require__(10);\n\t\tvar ng2_map_component_1 = __webpack_require__(4);\n\t\tvar info_window_1 = __webpack_require__(13);\n\t\tvar custom_marker_1 = __webpack_require__(30);\n\t\tvar bicycling_layer_1 = __webpack_require__(1);\n\t\tvar circle_1 = __webpack_require__(14);\n\t\tvar data_layer_1 = __webpack_require__(15);\n\t\tvar directions_renderer_1 = __webpack_require__(16);\n\t\tvar drawing_manager_1 = __webpack_require__(17);\n\t\tvar ground_overlay_1 = __webpack_require__(18);\n\t\tvar heatmap_layer_1 = __webpack_require__(19);\n\t\tvar kml_layer_1 = __webpack_require__(20);\n\t\tvar marker_1 = __webpack_require__(21);\n\t\tvar ng2_map_1 = __webpack_require__(11);\n\t\tvar places_auto_complete_1 = __webpack_require__(22);\n\t\tvar polygon_1 = __webpack_require__(23);\n\t\tvar polyline_1 = __webpack_require__(24);\n\t\tvar street_view_panorama_1 = __webpack_require__(25);\n\t\tvar traffic_layer_1 = __webpack_require__(26);\n\t\tvar transit_layer_1 = __webpack_require__(27);\n\t\tvar COMPONENTS_DIRECTIVES = [\n\t\t    ng2_map_component_1.Ng2MapComponent, info_window_1.InfoWindow,\n\t\t    marker_1.Marker, circle_1.Circle, custom_marker_1.CustomMarker, polygon_1.Polygon, info_window_1.InfoWindow, polyline_1.Polyline, ground_overlay_1.GroundOverlay,\n\t\t    transit_layer_1.TransitLayer, traffic_layer_1.TrafficLayer, heatmap_layer_1.HeatmapLayer, bicycling_layer_1.BicyclingLayer, kml_layer_1.KmlLayer, data_layer_1.DataLayer,\n\t\t    street_view_panorama_1.StreetViewPanorama, places_auto_complete_1.PlacesAutoComplete, directions_renderer_1.DirectionsRenderer,\n\t\t    drawing_manager_1.DrawingManager,\n\t\t];\n\t\tvar Ng2MapModule = (function () {\n\t\t    function Ng2MapModule() {\n\t\t    }\n\t\t    Ng2MapModule.forRoot = function (config) {\n\t\t        if (config === void 0) { config = {}; }\n\t\t        return {\n\t\t            ngModule: Ng2MapModule,\n\t\t            providers: [\n\t\t                { provide: config_1.NG_MAP_CONFIG_TOKEN, useValue: config },\n\t\t                geo_coder_1.GeoCoder,\n\t\t                navigator_geolocation_1.NavigatorGeolocation,\n\t\t                ng2_map_1.Ng2Map,\n\t\t                option_builder_1.OptionBuilder,\n\t\t            ],\n\t\t        };\n\t\t    };\n\t\t    Ng2MapModule = __decorate([\n\t\t        core_1.NgModule({\n\t\t            imports: [common_1.CommonModule],\n\t\t            declarations: COMPONENTS_DIRECTIVES,\n\t\t            exports: [COMPONENTS_DIRECTIVES],\n\t\t        }), \n\t\t        __metadata('design:paramtypes', [])\n\t\t    ], Ng2MapModule);\n\t\t    return Ng2MapModule;\n\t\t}());\n\t\texports.Ng2MapModule = Ng2MapModule;\n\t\n\t\n\t/***/ },\n\t/* 29 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_29__;\n\t\n\t/***/ },\n\t/* 30 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __extends = (this && this.__extends) || function (d, b) {\n\t\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t\t    function __() { this.constructor = d; }\n\t\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t\t};\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(2);\n\t\tvar Subject_1 = __webpack_require__(8);\n\t\tvar ng2_map_1 = __webpack_require__(11);\n\t\tvar ng2_map_component_1 = __webpack_require__(4);\n\t\tvar INPUTS = [\n\t\t    'position'\n\t\t];\n\t\tvar OUTPUTS = [\n\t\t    'animationChanged', 'click', 'clickableChanged', 'cursorChanged', 'dblclick', 'drag', 'dragend', 'draggableChanged',\n\t\t    'dragstart', 'flatChanged', 'iconChanged', 'mousedown', 'mouseout', 'mouseover', 'mouseup', 'positionChanged', 'rightclick',\n\t\t    'shapeChanged', 'titleChanged', 'visibleChanged', 'zindexChanged',\n\t\t    //to avoid DOM event conflicts\n\t\t    'map_click', 'map_mouseover', 'map_mouseout', 'map_mouseup', 'map_mousedown', 'map_drag', 'map_dragend'\n\t\t];\n\t\t/**\n\t\t * Wrapper to a create extend OverlayView at runtime, only after google maps is loaded.\n\t\t * Otherwise throws a google is unknown error.\n\t\t */\n\t\tfunction getCustomMarkerOverlayView(htmlEl, position) {\n\t\t    var CustomMarkerOverlayView = (function (_super) {\n\t\t        __extends(CustomMarkerOverlayView, _super);\n\t\t        function CustomMarkerOverlayView(htmlEl, position) {\n\t\t            _super.call(this);\n\t\t            this.visible = true;\n\t\t            this.htmlEl = htmlEl;\n\t\t            this.position = position;\n\t\t        }\n\t\t        CustomMarkerOverlayView.prototype.onAdd = function () {\n\t\t            this.getPanes().overlayMouseTarget.appendChild(this.htmlEl);\n\t\t            // required for correct display inside google maps container\n\t\t            this.htmlEl.style.position = 'absolute';\n\t\t        };\n\t\t        CustomMarkerOverlayView.prototype.draw = function () {\n\t\t            this.setPosition(this.position);\n\t\t            this.setZIndex(this.zIndex);\n\t\t            this.setVisible(this.visible);\n\t\t        };\n\t\t        CustomMarkerOverlayView.prototype.onRemove = function () {\n\t\t            //\n\t\t        };\n\t\t        CustomMarkerOverlayView.prototype.setPosition = function (position) {\n\t\t            var _this = this;\n\t\t            var _setPosition = function (latLng) {\n\t\t                var posPixel = _this.getProjection().fromLatLngToDivPixel(latLng);\n\t\t                var x = Math.round(posPixel.x - (_this.htmlEl.offsetWidth / 2));\n\t\t                var y = Math.round(posPixel.y - (_this.htmlEl.offsetHeight / 2));\n\t\t                _this.htmlEl.style.left = x + 'px';\n\t\t                _this.htmlEl.style.top = y + 'px';\n\t\t                _this.htmlEl.style.visibility = 'visible';\n\t\t            };\n\t\t            if (typeof position === 'string') {\n\t\t                // geocode it\n\t\t                var geocoder = new google.maps.Geocoder();\n\t\t                geocoder.geocode({ address: position }, function (results, status) {\n\t\t                    if (status === google.maps.GeocoderStatus.OK) {\n\t\t                        _setPosition(results[0].geometry.location);\n\t\t                    }\n\t\t                    else {\n\t\t                    }\n\t\t                });\n\t\t            }\n\t\t            else {\n\t\t                // assume array format [lat, lng]\n\t\t                var latLng = new google.maps.LatLng(position[0], position[1]);\n\t\t                _setPosition(latLng);\n\t\t            }\n\t\t        };\n\t\t        CustomMarkerOverlayView.prototype.setZIndex = function (zIndex) {\n\t\t            zIndex && (this.zIndex = zIndex); /* jshint ignore:line */\n\t\t            this.htmlEl.style.zIndex = this.zIndex;\n\t\t        };\n\t\t        CustomMarkerOverlayView.prototype.setVisible = function (visible) {\n\t\t            this.htmlEl.style.display = visible ? 'inline-block' : 'none';\n\t\t            this.visible = visible;\n\t\t        };\n\t\t        ;\n\t\t        return CustomMarkerOverlayView;\n\t\t    }(google.maps.OverlayView));\n\t\t    return new CustomMarkerOverlayView(htmlEl, position);\n\t\t}\n\t\tvar CustomMarker = (function () {\n\t\t    function CustomMarker(ng2MapComponent, elementRef, ng2Map) {\n\t\t        var _this = this;\n\t\t        this.ng2MapComponent = ng2MapComponent;\n\t\t        this.elementRef = elementRef;\n\t\t        this.ng2Map = ng2Map;\n\t\t        this.inputChanges$ = new Subject_1.Subject();\n\t\t        this.initialized$ = new core_1.EventEmitter();\n\t\t        this.elementRef.nativeElement.style.display = 'none';\n\t\t        OUTPUTS.forEach(function (output) { return _this[output] = new core_1.EventEmitter(); });\n\t\t    }\n\t\t    // Initialize this map object when map is ready\n\t\t    CustomMarker.prototype.ngOnInit = function () {\n\t\t        var _this = this;\n\t\t        if (this.ng2MapComponent.mapIdledOnce) {\n\t\t            this.initialize();\n\t\t        }\n\t\t        else {\n\t\t            this.ng2MapComponent.mapReady$.subscribe(function (map) { return _this.initialize(); });\n\t\t        }\n\t\t    };\n\t\t    CustomMarker.prototype.ngOnChanges = function (changes) {\n\t\t        this.inputChanges$.next(changes);\n\t\t    };\n\t\t    CustomMarker.prototype.ngOnDestroy = function () {\n\t\t        var _this = this;\n\t\t        this.ng2MapComponent.removeFromMapObjectGroup('CustomMarker', this.mapObject);\n\t\t        if (this.mapObject) {\n\t\t            OUTPUTS.forEach(function (output) { return google.maps.event.clearListeners(_this.mapObject, output); });\n\t\t            this.mapObject.setMap(null);\n\t\t            delete this.mapObject;\n\t\t        }\n\t\t    };\n\t\t    CustomMarker.prototype.initialize = function () {\n\t\t        var _this = this;\n\t\t        this.el = this.elementRef.nativeElement;\n\t\t        this.mapObject = getCustomMarkerOverlayView(this.el, this['position']);\n\t\t        this.mapObject.setMap(this.ng2MapComponent.map);\n\t\t        // set google events listeners and emits to this outputs listeners\n\t\t        this.ng2Map.setObjectEvents(OUTPUTS, this, 'mapObject');\n\t\t        // update object when input changes\n\t\t        this.inputChanges$\n\t\t            .debounceTime(1000)\n\t\t            .subscribe(function (changes) { return _this.ng2Map.updateGoogleObject(_this.mapObject, changes); });\n\t\t        this.ng2MapComponent.addToMapObjectGroup('CustomMarker', this.mapObject);\n\t\t        this.initialized$.emit(this.mapObject);\n\t\t    };\n\t\t    CustomMarker = __decorate([\n\t\t        core_1.Component({\n\t\t            selector: 'ng2-map > custom-marker',\n\t\t            inputs: INPUTS,\n\t\t            outputs: OUTPUTS,\n\t\t            template: \"\\n    <ng-content></ng-content>\\n  \",\n\t\t        }), \n\t\t        __metadata('design:paramtypes', [ng2_map_component_1.Ng2MapComponent, core_1.ElementRef, ng2_map_1.Ng2Map])\n\t\t    ], CustomMarker);\n\t\t    return CustomMarker;\n\t\t}());\n\t\texports.CustomMarker = CustomMarker;\n\t\n\t\n\t/***/ }\n\t/******/ ])\n\t});\n\t;\n\t//# sourceMappingURL=ng2-map.umd.js.map\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_11__;\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_12__;\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function webpackUniversalModuleDefinition(root, factory) {\n\t\tif(true)\n\t\t\tmodule.exports = factory(__webpack_require__(2), __webpack_require__(3), __webpack_require__(8));\n\t\telse if(typeof define === 'function' && define.amd)\n\t\t\tdefine([\"@angular/core\", \"@angular/forms\", \"@angular/common\"], factory);\n\t\telse if(typeof exports === 'object')\n\t\t\texports[\"ng2-popup\"] = factory(require(\"@angular/core\"), require(\"@angular/forms\"), require(\"@angular/common\"));\n\t\telse\n\t\t\troot[\"ng2-popup\"] = factory(root[\"@angular/core\"], root[\"@angular/forms\"], root[\"@angular/common\"]);\n\t})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__) {\n\treturn /******/ (function(modules) { // webpackBootstrap\n\t/******/ \t// The module cache\n\t/******/ \tvar installedModules = {};\n\t/******/\n\t/******/ \t// The require function\n\t/******/ \tfunction __webpack_require__(moduleId) {\n\t/******/\n\t/******/ \t\t// Check if module is in cache\n\t/******/ \t\tif(installedModules[moduleId])\n\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\t/******/\n\t/******/ \t\t// Create a new module (and put it into the cache)\n\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t/******/ \t\t\texports: {},\n\t/******/ \t\t\tid: moduleId,\n\t/******/ \t\t\tloaded: false\n\t/******/ \t\t};\n\t/******/\n\t/******/ \t\t// Execute the module function\n\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t/******/\n\t/******/ \t\t// Flag the module as loaded\n\t/******/ \t\tmodule.loaded = true;\n\t/******/\n\t/******/ \t\t// Return the exports of the module\n\t/******/ \t\treturn module.exports;\n\t/******/ \t}\n\t/******/\n\t/******/\n\t/******/ \t// expose the modules object (__webpack_modules__)\n\t/******/ \t__webpack_require__.m = modules;\n\t/******/\n\t/******/ \t// expose the module cache\n\t/******/ \t__webpack_require__.c = installedModules;\n\t/******/\n\t/******/ \t// __webpack_public_path__\n\t/******/ \t__webpack_require__.p = \"\";\n\t/******/\n\t/******/ \t// Load entry module and return exports\n\t/******/ \treturn __webpack_require__(0);\n\t/******/ })\n\t/************************************************************************/\n\t/******/ ([\n\t/* 0 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar ng2_popup_component_1 = __webpack_require__(1);\n\t\texports.Ng2PopupComponent = ng2_popup_component_1.Ng2PopupComponent;\n\t\tvar ng2_message_popup_component_1 = __webpack_require__(6);\n\t\texports.Ng2MessagePopupComponent = ng2_message_popup_component_1.Ng2MessagePopupComponent;\n\t\tvar ng2_popup_module_1 = __webpack_require__(7);\n\t\texports.Ng2PopupModule = ng2_popup_module_1.Ng2PopupModule;\n\t\n\t\n\t/***/ },\n\t/* 1 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(2);\n\t\tvar ng2_overlay_1 = __webpack_require__(3);\n\t\tvar Ng2PopupComponent = (function () {\n\t\t    function Ng2PopupComponent(componentResolver, overlayManager) {\n\t\t        this.componentResolver = componentResolver;\n\t\t        this.overlayManager = overlayManager;\n\t\t    }\n\t\t    Ng2PopupComponent.prototype.ngAfterViewInit = function () {\n\t\t        var overlayEl = this.marker.element.nativeElement.parentElement.parentElement;\n\t\t        var overlay = new ng2_overlay_1.Ng2Overlay(overlayEl, {\n\t\t            id: 'ng2-popup-overlay',\n\t\t            windowOverlay: true,\n\t\t            position: 'center center'\n\t\t        });\n\t\t        this.overlayManager.register(overlay);\n\t\t    };\n\t\t    Ng2PopupComponent.prototype.open = function (component, options) {\n\t\t        this.close();\n\t\t        this.opened = true;\n\t\t        this.classNames = options.classNames;\n\t\t        this.closeButton = options.closeButton;\n\t\t        var factory = this.componentResolver.resolveComponentFactory(component);\n\t\t        var componentRef = this.marker.createComponent(factory);\n\t\t        componentRef.instance.popupOptions = options;\n\t\t        componentRef.instance.popup = this;\n\t\t        this.overlayManager.open('ng2-popup-overlay', null); //(id, event)\n\t\t    };\n\t\t    Ng2PopupComponent.prototype.close = function () {\n\t\t        this.opened = false;\n\t\t        this.overlayManager.close('ng2-popup-overlay');\n\t\t        try {\n\t\t            this.marker.remove();\n\t\t        }\n\t\t        catch (e) { }\n\t\t    };\n\t\t    return Ng2PopupComponent;\n\t\t}());\n\t\t__decorate([\n\t\t    core_1.ViewChild('marker', { read: core_1.ViewContainerRef }),\n\t\t    __metadata(\"design:type\", Object)\n\t\t], Ng2PopupComponent.prototype, \"marker\", void 0);\n\t\tNg2PopupComponent = __decorate([\n\t\t    core_1.Component({\n\t\t        selector: 'ng2-popup',\n\t\t        directives: [ng2_overlay_1.Ng2OverlayDirective],\n\t\t        providers: [ng2_overlay_1.Ng2OverlayManager],\n\t\t        template: \"\\n    <div id=\\\"ng2-popup-overlay\\\"> <!-- <-- this is overlay -->\\n      <div class=\\\"popup-container {{classNames}}\\\" [ngClass]=\\\"{opened: opened}\\\">\\n        <div *ngIf=\\\"closeButton != false\\\" class=\\\"close-popup\\\" (click)=\\\"close()\\\">x</div>\\n        <div class=\\\"marker\\\" #marker></div> <!-- to position popup component -->\\n        <!-- popup component will be here -->\\n      </div>\\n    </div>\\n  \",\n\t\t        styles: [\"\\n    .popup-container { \\n      background: #fff;\\n      border: 1px solid #ccc;\\n      box-shadow: 0 5px 15px rgba(0,0,0,.5);\\n      border-radius: 5px;\\n      width: 600px;\\n      display: none;\\n    }\\n    .popup-container.opened { \\n      display: block;\\n    }\\n    .close-popup {\\n      font-family: \\\"Helvetica Neue\\\", Helvetica, Arial, sans-serif;\\n      float: right; \\n      cursor: pointer; \\n      font-size: 21px;\\n      line-height: 1;\\n      text-shadow: 0 1px 0 #fff;\\n      opacity: 0.2;\\n      padding: 10px;\\n    }\\n    /*.marker ~ * { display:block; background: #fff}*/\\n    .popup-container.small { width: 300px}\\n    .popup-container.large { width: 900px}\\n  \"],\n\t\t        encapsulation: core_1.ViewEncapsulation.None\n\t\t    }),\n\t\t    __metadata(\"design:paramtypes\", [core_1.ComponentFactoryResolver,\n\t\t        ng2_overlay_1.Ng2OverlayManager])\n\t\t], Ng2PopupComponent);\n\t\texports.Ng2PopupComponent = Ng2PopupComponent;\n\t\n\t\n\t/***/ },\n\t/* 2 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\t\n\t/***/ },\n\t/* 3 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t(function webpackUniversalModuleDefinition(root, factory) {\n\t\t\tif(true)\n\t\t\t\tmodule.exports = factory(__webpack_require__(2), __webpack_require__(4), __webpack_require__(5));\n\t\t\telse if(typeof define === 'function' && define.amd)\n\t\t\t\tdefine([\"@angular/core\", \"@angular/forms\", \"@angular/common\"], factory);\n\t\t\telse if(typeof exports === 'object')\n\t\t\t\texports[\"ng2-overlay\"] = factory(require(\"@angular/core\"), require(\"@angular/forms\"), require(\"@angular/common\"));\n\t\t\telse\n\t\t\t\troot[\"ng2-overlay\"] = factory(root[\"@angular/core\"], root[\"@angular/forms\"], root[\"@angular/common\"]);\n\t\t})(this, function(__WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_7__, __WEBPACK_EXTERNAL_MODULE_8__) {\n\t\treturn /******/ (function(modules) { // webpackBootstrap\n\t\t/******/ \t// The module cache\n\t\t/******/ \tvar installedModules = {};\n\t\t/******/\n\t\t/******/ \t// The require function\n\t\t/******/ \tfunction __webpack_require__(moduleId) {\n\t\t/******/\n\t\t/******/ \t\t// Check if module is in cache\n\t\t/******/ \t\tif(installedModules[moduleId])\n\t\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\t\t/******/\n\t\t/******/ \t\t// Create a new module (and put it into the cache)\n\t\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t\t/******/ \t\t\texports: {},\n\t\t/******/ \t\t\tid: moduleId,\n\t\t/******/ \t\t\tloaded: false\n\t\t/******/ \t\t};\n\t\t/******/\n\t\t/******/ \t\t// Execute the module function\n\t\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t\t/******/\n\t\t/******/ \t\t// Flag the module as loaded\n\t\t/******/ \t\tmodule.loaded = true;\n\t\t/******/\n\t\t/******/ \t\t// Return the exports of the module\n\t\t/******/ \t\treturn module.exports;\n\t\t/******/ \t}\n\t\t/******/\n\t\t/******/\n\t\t/******/ \t// expose the modules object (__webpack_modules__)\n\t\t/******/ \t__webpack_require__.m = modules;\n\t\t/******/\n\t\t/******/ \t// expose the module cache\n\t\t/******/ \t__webpack_require__.c = installedModules;\n\t\t/******/\n\t\t/******/ \t// __webpack_public_path__\n\t\t/******/ \t__webpack_require__.p = \"\";\n\t\t/******/\n\t\t/******/ \t// Load entry module and return exports\n\t\t/******/ \treturn __webpack_require__(0);\n\t\t/******/ })\n\t\t/************************************************************************/\n\t\t/******/ ([\n\t\t/* 0 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar ng2_overlay_1 = __webpack_require__(1);\n\t\t\texports.Ng2Overlay = ng2_overlay_1.Ng2Overlay;\n\t\t\tvar ng2_overlay_manager_1 = __webpack_require__(3);\n\t\t\texports.Ng2OverlayManager = ng2_overlay_manager_1.Ng2OverlayManager;\n\t\t\tvar ng2_overlay_directive_1 = __webpack_require__(5);\n\t\t\texports.Ng2OverlayDirective = ng2_overlay_directive_1.Ng2OverlayDirective;\n\t\t\tvar ng2_overlay_module_1 = __webpack_require__(6);\n\t\t\texports.Ng2OverlayModule = ng2_overlay_module_1.Ng2OverlayModule;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 1 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar ng2_util_1 = __webpack_require__(2);\n\t\t\tvar Ng2Overlay = (function () {\n\t\t\t    function Ng2Overlay(el, options) {\n\t\t\t        options = options || {};\n\t\t\t        this.id = options.id;\n\t\t\t        this.type = options.type;\n\t\t\t        if (!this.id) {\n\t\t\t            throw \"Invalid overlay id\";\n\t\t\t        }\n\t\t\t        this.element = el; // overlay wrapper element with table dsplay\n\t\t\t        this.windowOverlay = options.windowOverlay;\n\t\t\t        this.position = this.getPositionProperty(options.position || 'center center');\n\t\t\t    }\n\t\t\t    Ng2Overlay.prototype.positionIt = function (event) {\n\t\t\t        if (this.position.inside) {\n\t\t\t            this.positionItInside(this.position);\n\t\t\t        }\n\t\t\t        else {\n\t\t\t            this.positionItOutside(this.position, event);\n\t\t\t        }\n\t\t\t    };\n\t\t\t    Ng2Overlay.prototype.getPositionProperty = function (positionStr) {\n\t\t\t        var position = {}, inside;\n\t\t\t        var _a = positionStr.split(' '), vertical = _a[0], horizontal = _a[1], insideStr = _a[2];\n\t\t\t        horizontal = horizontal || 'center';\n\t\t\t        vertical = vertical || 'center';\n\t\t\t        inside = (insideStr !== 'outside' || this.windowOverlay);\n\t\t\t        position.horizontal = Ng2Overlay[horizontal.toUpperCase()];\n\t\t\t        position.vertical = Ng2Overlay[vertical.toUpperCase()];\n\t\t\t        position.inside = inside;\n\t\t\t        return position;\n\t\t\t    };\n\t\t\t    Ng2Overlay.prototype.positionItInside = function (position) {\n\t\t\t        this.element.style.display = 'flex';\n\t\t\t        //top / left positioning\n\t\t\t        if (this.windowOverlay) {\n\t\t\t            this.element.style.position = 'fixed';\n\t\t\t            //works as blocker\n\t\t\t            Object.assign(this.element.style, {\n\t\t\t                backgroundColor: 'rgba(0,0,0,0.2)',\n\t\t\t                top: '0', left: '0', bottom: '0', right: '0',\n\t\t\t                width: '100%', height: '100%'\n\t\t\t            });\n\t\t\t        }\n\t\t\t        else {\n\t\t\t            //adjust top/left to match to parentElement\n\t\t\t            var parentEl = this.element.parentElement;\n\t\t\t            //works as a blocker\n\t\t\t            Object.assign(this.element.style, {\n\t\t\t                position: 'absolute',\n\t\t\t                // backgroundColor: 'transparent',\n\t\t\t                backgroundColor: 'rgba(0,0,0,0.2)',\n\t\t\t                top: parentEl.offsetTop + 'px',\n\t\t\t                left: parentEl.offsetLeft + 'px',\n\t\t\t                width: parentEl.offsetWidth + 'px',\n\t\t\t                height: parentEl.offsetHeight + 'px'\n\t\t\t            });\n\t\t\t        }\n\t\t\t        ;\n\t\t\t        //horizontal position\n\t\t\t        switch (position.horizontal) {\n\t\t\t            case Ng2Overlay.LEFT:\n\t\t\t                this.element.style.justifyContent = 'flex-start';\n\t\t\t                break;\n\t\t\t            case Ng2Overlay.CENTER:\n\t\t\t                this.element.style.justifyContent = 'center';\n\t\t\t                break;\n\t\t\t            case Ng2Overlay.RIGHT:\n\t\t\t                this.element.style.justifyContent = 'flex-end';\n\t\t\t                break;\n\t\t\t        }\n\t\t\t        //vertical position\n\t\t\t        switch (position.vertical) {\n\t\t\t            case Ng2Overlay.LEFT:\n\t\t\t                this.element.style.alignItems = 'flex-start';\n\t\t\t                break;\n\t\t\t            case Ng2Overlay.CENTER:\n\t\t\t            case Ng2Overlay.MIDDLE:\n\t\t\t                this.element.style.alignItems = 'center';\n\t\t\t                break;\n\t\t\t            case Ng2Overlay.RIGHT:\n\t\t\t                this.element.style.alignItems = 'flex-end';\n\t\t\t                break;\n\t\t\t        }\n\t\t\t    };\n\t\t\t    Ng2Overlay.prototype.positionItOutside = function (position, event) {\n\t\t\t        //adjust top/left to match to parentElement\n\t\t\t        var parentEl = this.element.parentElement;\n\t\t\t        //works as guide line?\n\t\t\t        Object.assign(this.element.style, {\n\t\t\t            position: 'absolute',\n\t\t\t            pointerEvents: 'none',\n\t\t\t            top: parentEl.offsetTop + 'px',\n\t\t\t            left: parentEl.offsetLeft + 'px',\n\t\t\t            width: parentEl.offsetWidth + 'px',\n\t\t\t            height: parentEl.offsetHeight + 'px'\n\t\t\t        });\n\t\t\t        this.element.style.display = 'block';\n\t\t\t        var elToPosition = (this.element.children[0]);\n\t\t\t        elToPosition.style.position = 'absolute';\n\t\t\t        elToPosition.style.pointerEvents = 'auto';\n\t\t\t        switch (position.vertical) {\n\t\t\t            case Ng2Overlay.TOP:\n\t\t\t                elToPosition.style.bottom = this.element.offsetHeight + 'px';\n\t\t\t                break;\n\t\t\t            case Ng2Overlay.BOTTOM:\n\t\t\t                elToPosition.style.top = this.element.offsetHeight + 'px';\n\t\t\t                break;\n\t\t\t            case Ng2Overlay.LEFT:\n\t\t\t                elToPosition.style.right = this.element.offsetWidth + 'px';\n\t\t\t                break;\n\t\t\t            case Ng2Overlay.RIGHT:\n\t\t\t                elToPosition.style.left = this.element.offsetWidth + 'px';\n\t\t\t                break;\n\t\t\t        }\n\t\t\t        switch (position.horizontal) {\n\t\t\t            case Ng2Overlay.CENTER:\n\t\t\t                elToPosition.style.left = (this.element.offsetWidth - elToPosition.offsetWidth) / 2 + 'px';\n\t\t\t                break;\n\t\t\t            case Ng2Overlay.LEFT:\n\t\t\t                elToPosition.style.left = '0';\n\t\t\t                break;\n\t\t\t            case Ng2Overlay.RIGHT:\n\t\t\t                elToPosition.style.right = '0';\n\t\t\t                break;\n\t\t\t            case Ng2Overlay.TOP:\n\t\t\t                elToPosition.style.top = '0';\n\t\t\t                break;\n\t\t\t            case Ng2Overlay.BOTTOM:\n\t\t\t                elToPosition.style.bottom = '0';\n\t\t\t                break;\n\t\t\t            case Ng2Overlay.CURSOR:\n\t\t\t                var mousePos = ng2_util_1.Ng2Util.getMousePositionInElement(event, this.element);\n\t\t\t                if ((mousePos.x + elToPosition.offsetWidth) > this.element.offsetWidth) {\n\t\t\t                    elToPosition.style.left = (this.element.offsetWidth - elToPosition.offsetWidth - 5) + 'px';\n\t\t\t                }\n\t\t\t                else if (mousePos.x < elToPosition.offsetWidth / 2) {\n\t\t\t                    elToPosition.style.left = '0px';\n\t\t\t                }\n\t\t\t                else {\n\t\t\t                    elToPosition.style.left = mousePos.x - elToPosition.offsetWidth / 2 + 'px';\n\t\t\t                }\n\t\t\t                break;\n\t\t\t        }\n\t\t\t    };\n\t\t\t    Ng2Overlay.TOP = 11;\n\t\t\t    Ng2Overlay.MIDDLE = 12;\n\t\t\t    Ng2Overlay.BOTTOM = 13;\n\t\t\t    Ng2Overlay.LEFT = 21;\n\t\t\t    Ng2Overlay.CENTER = 22;\n\t\t\t    Ng2Overlay.RIGHT = 23;\n\t\t\t    Ng2Overlay.CURSOR = 31;\n\t\t\t    return Ng2Overlay;\n\t\t\t}());\n\t\t\texports.Ng2Overlay = Ng2Overlay;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 2 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar Ng2Util = (function () {\n\t\t\t    function Ng2Util() {\n\t\t\t    }\n\t\t\t    Ng2Util.getDocumentPosition = function (oElement) {\n\t\t\t        var posX = 0, posY = 0;\n\t\t\t        if (oElement.offsetParent) {\n\t\t\t            for (; oElement; oElement = oElement.offsetParent) {\n\t\t\t                posX += oElement.offsetLeft;\n\t\t\t                posY += oElement.offsetTop;\n\t\t\t            }\n\t\t\t            return { x: posX, y: posY };\n\t\t\t        }\n\t\t\t        else {\n\t\t\t            return { x: oElement['x'], y: oElement['y'] };\n\t\t\t        }\n\t\t\t    };\n\t\t\t    Ng2Util.getMousePositionInElement = function (evt, element) {\n\t\t\t        evt = evt || window.event;\n\t\t\t        var posX = 0, posY = 0;\n\t\t\t        var elPos = this.getDocumentPosition(element);\n\t\t\t        if (evt.pageX || evt.pageY) {\n\t\t\t            posX = evt.pageX;\n\t\t\t            posY = evt.pageY;\n\t\t\t        }\n\t\t\t        else if (evt.clientX || evt.clientY) {\n\t\t\t            posX = evt.clientX +\n\t\t\t                document.body.scrollLeft +\n\t\t\t                document.documentElement.scrollLeft;\n\t\t\t            posY = evt.clientY +\n\t\t\t                document.body.scrollTop +\n\t\t\t                document.documentElement.scrollTop;\n\t\t\t        }\n\t\t\t        return {\n\t\t\t            x: posX - elPos.x,\n\t\t\t            y: posY - elPos.y\n\t\t\t        };\n\t\t\t    };\n\t\t\t    return Ng2Util;\n\t\t\t}());\n\t\t\texports.Ng2Util = Ng2Util;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 3 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t};\n\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t};\n\t\t\tvar core_1 = __webpack_require__(4);\n\t\t\tvar Ng2OverlayManager = (function () {\n\t\t\t    function Ng2OverlayManager() {\n\t\t\t    }\n\t\t\t    Ng2OverlayManager.prototype.register = function (overlay) {\n\t\t\t        Ng2OverlayManager.overlays[overlay.id] = overlay;\n\t\t\t        // console.log('overlay.register, OverlayManager.overlays', OverlayManager.overlays);\n\t\t\t    };\n\t\t\t    Ng2OverlayManager.prototype.open = function (arg, event) {\n\t\t\t        var overlay = typeof arg === 'string' ? Ng2OverlayManager.overlays[arg] : arg;\n\t\t\t        if (!overlay.opened) {\n\t\t\t            overlay.positionIt(event);\n\t\t\t            overlay.opened = true;\n\t\t\t        }\n\t\t\t    };\n\t\t\t    Ng2OverlayManager.prototype.close = function (arg) {\n\t\t\t        var overlay = typeof arg === 'string' ? Ng2OverlayManager.overlays[arg] : arg;\n\t\t\t        overlay.element.style.display = 'none';\n\t\t\t        overlay.opened = false;\n\t\t\t    };\n\t\t\t    //list of overlay objects\n\t\t\t    Ng2OverlayManager.overlays = {};\n\t\t\t    Ng2OverlayManager = __decorate([\n\t\t\t        core_1.Injectable(), \n\t\t\t        __metadata('design:paramtypes', [])\n\t\t\t    ], Ng2OverlayManager);\n\t\t\t    return Ng2OverlayManager;\n\t\t\t}());\n\t\t\texports.Ng2OverlayManager = Ng2OverlayManager;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 4 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\t\t\n\t\t/***/ },\n\t\t/* 5 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t};\n\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t};\n\t\t\tvar core_1 = __webpack_require__(4);\n\t\t\tvar ng2_overlay_manager_1 = __webpack_require__(3);\n\t\t\tvar ng2_overlay_1 = __webpack_require__(1);\n\t\t\tvar Ng2OverlayDirective = (function () {\n\t\t\t    function Ng2OverlayDirective(viewContainerRef, overlayManager) {\n\t\t\t        this.viewContainerRef = viewContainerRef;\n\t\t\t        this.overlayManager = overlayManager;\n\t\t\t        this.el = this.viewContainerRef.element.nativeElement;\n\t\t\t    }\n\t\t\t    Ng2OverlayDirective.prototype.ngAfterViewInit = function () {\n\t\t\t        this.wrapItWithOverlayTag();\n\t\t\t        this.registerToOverlayManager();\n\t\t\t    };\n\t\t\t    Ng2OverlayDirective.prototype.wrapItWithOverlayTag = function () {\n\t\t\t        //console.log('wrapped overlay directive element with <ng2-overlay>');\n\t\t\t        this.overlayEl = document.createElement('ng2-overlay');\n\t\t\t        this.overlayEl.style.display = 'none';\n\t\t\t        this.el.parentElement.insertBefore(this.overlayEl, this.el.nextSibling);\n\t\t\t        this.overlayEl.appendChild(this.el);\n\t\t\t    };\n\t\t\t    //create Overlay object,  then register this element to overlayManager\n\t\t\t    Ng2OverlayDirective.prototype.registerToOverlayManager = function () {\n\t\t\t        var positionStr = this.overlayPosition;\n\t\t\t        var overlay = new ng2_overlay_1.Ng2Overlay(this.overlayEl, {\n\t\t\t            id: this.el.id,\n\t\t\t            windowOverlay: this.overlayOf == \"window\",\n\t\t\t            position: positionStr\n\t\t\t        });\n\t\t\t        //console.log('registering overlay', overlay);\n\t\t\t        this.overlayManager.register(overlay);\n\t\t\t    };\n\t\t\t    __decorate([\n\t\t\t        core_1.Input('ng2-overlay-of'), \n\t\t\t        __metadata('design:type', String)\n\t\t\t    ], Ng2OverlayDirective.prototype, \"overlayOf\", void 0);\n\t\t\t    __decorate([\n\t\t\t        core_1.Input('ng2-overlay-position'), \n\t\t\t        __metadata('design:type', String)\n\t\t\t    ], Ng2OverlayDirective.prototype, \"overlayPosition\", void 0);\n\t\t\t    Ng2OverlayDirective = __decorate([\n\t\t\t        core_1.Directive({\n\t\t\t            selector: '[ng2-overlay], [ng2-overlay-of], [ng2-overlay-position]',\n\t\t\t        }), \n\t\t\t        __metadata('design:paramtypes', [core_1.ViewContainerRef, ng2_overlay_manager_1.Ng2OverlayManager])\n\t\t\t    ], Ng2OverlayDirective);\n\t\t\t    return Ng2OverlayDirective;\n\t\t\t}());\n\t\t\texports.Ng2OverlayDirective = Ng2OverlayDirective;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 6 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t};\n\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t};\n\t\t\tvar core_1 = __webpack_require__(4);\n\t\t\tvar forms_1 = __webpack_require__(7);\n\t\t\tvar common_1 = __webpack_require__(8);\n\t\t\tvar ng2_overlay_manager_1 = __webpack_require__(3);\n\t\t\tvar ng2_overlay_directive_1 = __webpack_require__(5);\n\t\t\tvar Ng2OverlayModule = (function () {\n\t\t\t    function Ng2OverlayModule() {\n\t\t\t    }\n\t\t\t    Ng2OverlayModule = __decorate([\n\t\t\t        core_1.NgModule({\n\t\t\t            imports: [common_1.CommonModule, forms_1.FormsModule],\n\t\t\t            declarations: [ng2_overlay_directive_1.Ng2OverlayDirective],\n\t\t\t            providers: [ng2_overlay_manager_1.Ng2OverlayManager],\n\t\t\t            exports: [ng2_overlay_directive_1.Ng2OverlayDirective]\n\t\t\t        }), \n\t\t\t        __metadata('design:paramtypes', [])\n\t\t\t    ], Ng2OverlayModule);\n\t\t\t    return Ng2OverlayModule;\n\t\t\t}());\n\t\t\texports.Ng2OverlayModule = Ng2OverlayModule;\n\t\t\t;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 7 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_7__;\n\t\t\n\t\t/***/ },\n\t\t/* 8 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_8__;\n\t\t\n\t\t/***/ }\n\t\t/******/ ])\n\t\t});\n\t\t;\n\t\t//# sourceMappingURL=ng2-overlay.umd.js.map\n\t\n\t/***/ },\n\t/* 4 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\t\n\t/***/ },\n\t/* 5 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\t\n\t/***/ },\n\t/* 6 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(2);\n\t\tvar Ng2MessagePopupComponent = (function () {\n\t\t    function Ng2MessagePopupComponent() {\n\t\t    }\n\t\t    return Ng2MessagePopupComponent;\n\t\t}());\n\t\tNg2MessagePopupComponent = __decorate([\n\t\t    core_1.Component({\n\t\t        selector: 'ng2-message-popup',\n\t\t        template: \"\\n    <div>\\n      <div class=\\\"popup-header\\\">{{popupOptions.title}}</div>\\n      <div class=\\\"popup-body\\\">{{popupOptions.message}}</div>\\n      <div class=\\\"popup-footer\\\" *ngIf=\\\"popupOptions.buttons\\\">\\n        <button *ngIf=\\\"popupOptions.buttons.OK\\\"\\n          (click)=\\\"popupOptions.buttons.OK()\\\">Ok</button>\\n        <button *ngIf=\\\"popupOptions.buttons.CANCEL\\\"\\n          (click)=\\\"popupOptions.buttons.CANCEL()\\\">Cancel</button>\\n      </div>\\n    </div>\\n  \",\n\t\t        encapsulation: core_1.ViewEncapsulation.None,\n\t\t        styles: [\"\\n    .popup-header, .popup-body, .popup-footer {\\n      padding: 15px;\\n      text-align: center;\\n    }\\n    .popup-header  {\\n      font-weight: bold;\\n      font-size: 18px;\\n      border-bottom: 1px solid #ccc;\\n    }\\n  \"]\n\t\t    }),\n\t\t    __metadata(\"design:paramtypes\", [])\n\t\t], Ng2MessagePopupComponent);\n\t\texports.Ng2MessagePopupComponent = Ng2MessagePopupComponent;\n\t\n\t\n\t/***/ },\n\t/* 7 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(2);\n\t\tvar forms_1 = __webpack_require__(4);\n\t\tvar common_1 = __webpack_require__(5);\n\t\tvar ng2_overlay_1 = __webpack_require__(3);\n\t\tvar ng2_popup_component_1 = __webpack_require__(1);\n\t\texports.Ng2PopupComponent = ng2_popup_component_1.Ng2PopupComponent;\n\t\tvar ng2_message_popup_component_1 = __webpack_require__(6);\n\t\texports.Ng2MessagePopupComponent = ng2_message_popup_component_1.Ng2MessagePopupComponent;\n\t\tvar Ng2PopupModule = (function () {\n\t\t    function Ng2PopupModule() {\n\t\t    }\n\t\t    return Ng2PopupModule;\n\t\t}());\n\t\tNg2PopupModule = __decorate([\n\t\t    core_1.NgModule({\n\t\t        imports: [common_1.CommonModule, forms_1.FormsModule, ng2_overlay_1.Ng2OverlayModule],\n\t\t        declarations: [ng2_message_popup_component_1.Ng2MessagePopupComponent, ng2_popup_component_1.Ng2PopupComponent],\n\t\t        exports: [ng2_message_popup_component_1.Ng2MessagePopupComponent, ng2_popup_component_1.Ng2PopupComponent],\n\t\t        entryComponents: [ng2_message_popup_component_1.Ng2MessagePopupComponent]\n\t\t    }),\n\t\t    __metadata(\"design:paramtypes\", [])\n\t\t], Ng2PopupModule);\n\t\texports.Ng2PopupModule = Ng2PopupModule;\n\t\n\t\n\t/***/ }\n\t/******/ ])\n\t});\n\t;\n\t//# sourceMappingURL=ng2-popup.umd.js.map\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function webpackUniversalModuleDefinition(root, factory) {\n\t\tif(true)\n\t\t\tmodule.exports = factory(__webpack_require__(2), __webpack_require__(3), __webpack_require__(4));\n\t\telse if(typeof define === 'function' && define.amd)\n\t\t\tdefine([\"@angular/core\", \"@angular/forms\", \"@angular/platform-browser\"], factory);\n\t\telse if(typeof exports === 'object')\n\t\t\texports[\"ng2-menu\"] = factory(require(\"@angular/core\"), require(\"@angular/forms\"), require(\"@angular/platform-browser\"));\n\t\telse\n\t\t\troot[\"ng2-menu\"] = factory(root[\"@angular/core\"], root[\"@angular/forms\"], root[\"@angular/platform-browser\"]);\n\t})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__) {\n\treturn /******/ (function(modules) { // webpackBootstrap\n\t/******/ \t// The module cache\n\t/******/ \tvar installedModules = {};\n\t/******/\n\t/******/ \t// The require function\n\t/******/ \tfunction __webpack_require__(moduleId) {\n\t/******/\n\t/******/ \t\t// Check if module is in cache\n\t/******/ \t\tif(installedModules[moduleId])\n\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\t/******/\n\t/******/ \t\t// Create a new module (and put it into the cache)\n\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t/******/ \t\t\texports: {},\n\t/******/ \t\t\tid: moduleId,\n\t/******/ \t\t\tloaded: false\n\t/******/ \t\t};\n\t/******/\n\t/******/ \t\t// Execute the module function\n\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t/******/\n\t/******/ \t\t// Flag the module as loaded\n\t/******/ \t\tmodule.loaded = true;\n\t/******/\n\t/******/ \t\t// Return the exports of the module\n\t/******/ \t\treturn module.exports;\n\t/******/ \t}\n\t/******/\n\t/******/\n\t/******/ \t// expose the modules object (__webpack_modules__)\n\t/******/ \t__webpack_require__.m = modules;\n\t/******/\n\t/******/ \t// expose the module cache\n\t/******/ \t__webpack_require__.c = installedModules;\n\t/******/\n\t/******/ \t// __webpack_public_path__\n\t/******/ \t__webpack_require__.p = \"\";\n\t/******/\n\t/******/ \t// Load entry module and return exports\n\t/******/ \treturn __webpack_require__(0);\n\t/******/ })\n\t/************************************************************************/\n\t/******/ ([\n\t/* 0 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar ng2_menu_directive_1 = __webpack_require__(1);\n\t\texports.Ng2MenuDirective = ng2_menu_directive_1.Ng2MenuDirective;\n\t\tvar ng2_menu_module_1 = __webpack_require__(3);\n\t\texports.Ng2MenuModule = ng2_menu_module_1.Ng2MenuModule;\n\t\n\t\n\t/***/ },\n\t/* 1 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(2);\n\t\tvar Ng2MenuDirective = (function () {\n\t\t    function Ng2MenuDirective(viewContainerRef) {\n\t\t        this.viewContainerRef = viewContainerRef;\n\t\t        this.el = this.viewContainerRef.element.nativeElement;\n\t\t        this.el.parentElement.style.position = 'relative';\n\t\t        this.el.parentElement.className += ' has-ng2-menu';\n\t\t    }\n\t\t    Ng2MenuDirective.prototype.ngAfterViewInit = function () {\n\t\t        var _this = this;\n\t\t        this.el.parentElement.addEventListener('mouseover', function (event) {\n\t\t            _this.el.parentElement.className += \" active\";\n\t\t            _this.el.style.position = \"absolute\";\n\t\t            if (_this.el.parentElement.offsetWidth) {\n\t\t                _this.setPosition();\n\t\t            }\n\t\t            else {\n\t\t                setTimeout(function () { return _this.setPosition(); });\n\t\t            }\n\t\t        });\n\t\t        this.el.parentElement.addEventListener('mouseout', function (event) {\n\t\t            _this.el.parentElement.className = _this.el.parentElement.className.replace(/\\s?active/, '');\n\t\t        });\n\t\t    };\n\t\t    Ng2MenuDirective.prototype.setPosition = function () {\n\t\t        if (this.position === \"bottom\") {\n\t\t            this.el.style.left = \"0\";\n\t\t            this.el.style.top = this.el.parentElement.offsetHeight - 1 + 'px';\n\t\t        }\n\t\t        else if (this.position === \"top\") {\n\t\t            this.el.style.left = \"0\";\n\t\t            this.el.style.bottom = this.el.parentElement.offsetHeight - 1 + 'px';\n\t\t        }\n\t\t        else if (this.position === \"right\") {\n\t\t            this.el.style.left = this.el.parentElement.offsetWidth - 1 + 'px';\n\t\t            this.el.style.top = \"0\";\n\t\t        }\n\t\t        else if (this.position === \"left\") {\n\t\t            this.el.style.right = this.el.parentElement.offsetWidth - 1 + 'px';\n\t\t            this.el.style.top = \"0\";\n\t\t        }\n\t\t    };\n\t\t    return Ng2MenuDirective;\n\t\t}());\n\t\t__decorate([\n\t\t    core_1.Input('ng2-menu'),\n\t\t    __metadata(\"design:type\", String)\n\t\t], Ng2MenuDirective.prototype, \"position\", void 0);\n\t\tNg2MenuDirective = __decorate([\n\t\t    core_1.Directive({\n\t\t        selector: '[ng2-menu]'\n\t\t    }),\n\t\t    __metadata(\"design:paramtypes\", [core_1.ViewContainerRef])\n\t\t], Ng2MenuDirective);\n\t\texports.Ng2MenuDirective = Ng2MenuDirective;\n\t\n\t\n\t/***/ },\n\t/* 2 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\t\n\t/***/ },\n\t/* 3 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(2);\n\t\tvar forms_1 = __webpack_require__(4);\n\t\tvar platform_browser_1 = __webpack_require__(5);\n\t\tvar ng2_menu_directive_1 = __webpack_require__(1);\n\t\tvar Ng2MenuModule = (function () {\n\t\t    function Ng2MenuModule() {\n\t\t    }\n\t\t    return Ng2MenuModule;\n\t\t}());\n\t\tNg2MenuModule = __decorate([\n\t\t    core_1.NgModule({\n\t\t        imports: [platform_browser_1.BrowserModule, forms_1.FormsModule],\n\t\t        declarations: [ng2_menu_directive_1.Ng2MenuDirective],\n\t\t        exports: [ng2_menu_directive_1.Ng2MenuDirective]\n\t\t    }),\n\t\t    __metadata(\"design:paramtypes\", [])\n\t\t], Ng2MenuModule);\n\t\texports.Ng2MenuModule = Ng2MenuModule;\n\t\n\t\n\t/***/ },\n\t/* 4 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\t\n\t/***/ },\n\t/* 5 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\t\n\t/***/ }\n\t/******/ ])\n\t});\n\t;\n\t//# sourceMappingURL=ng2-menu.umd.js.map\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function webpackUniversalModuleDefinition(root, factory) {\n\t\tif(true)\n\t\t\tmodule.exports = factory(__webpack_require__(2), __webpack_require__(3), __webpack_require__(8));\n\t\telse if(typeof define === 'function' && define.amd)\n\t\t\tdefine([\"@angular/core\", \"@angular/forms\", \"@angular/common\"], factory);\n\t\telse if(typeof exports === 'object')\n\t\t\texports[\"ng2-parallax-scroll\"] = factory(require(\"@angular/core\"), require(\"@angular/forms\"), require(\"@angular/common\"));\n\t\telse\n\t\t\troot[\"ng2-parallax-scroll\"] = factory(root[\"@angular/core\"], root[\"@angular/forms\"], root[\"@angular/common\"]);\n\t})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__) {\n\treturn /******/ (function(modules) { // webpackBootstrap\n\t/******/ \t// The module cache\n\t/******/ \tvar installedModules = {};\n\t/******/\n\t/******/ \t// The require function\n\t/******/ \tfunction __webpack_require__(moduleId) {\n\t/******/\n\t/******/ \t\t// Check if module is in cache\n\t/******/ \t\tif(installedModules[moduleId])\n\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\t/******/\n\t/******/ \t\t// Create a new module (and put it into the cache)\n\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t/******/ \t\t\texports: {},\n\t/******/ \t\t\tid: moduleId,\n\t/******/ \t\t\tloaded: false\n\t/******/ \t\t};\n\t/******/\n\t/******/ \t\t// Execute the module function\n\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t/******/\n\t/******/ \t\t// Flag the module as loaded\n\t/******/ \t\tmodule.loaded = true;\n\t/******/\n\t/******/ \t\t// Return the exports of the module\n\t/******/ \t\treturn module.exports;\n\t/******/ \t}\n\t/******/\n\t/******/\n\t/******/ \t// expose the modules object (__webpack_modules__)\n\t/******/ \t__webpack_require__.m = modules;\n\t/******/\n\t/******/ \t// expose the module cache\n\t/******/ \t__webpack_require__.c = installedModules;\n\t/******/\n\t/******/ \t// __webpack_public_path__\n\t/******/ \t__webpack_require__.p = \"\";\n\t/******/\n\t/******/ \t// Load entry module and return exports\n\t/******/ \treturn __webpack_require__(0);\n\t/******/ })\n\t/************************************************************************/\n\t/******/ ([\n\t/* 0 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar ng2_parallax_scroll_directive_1 = __webpack_require__(1);\n\t\texports.Ng2ParallaxScrollDirective = ng2_parallax_scroll_directive_1.Ng2ParallaxScrollDirective;\n\t\tvar ng2_parallax_scroll_module_1 = __webpack_require__(3);\n\t\texports.Ng2ParallaxScrollModule = ng2_parallax_scroll_module_1.Ng2ParallaxScrollModule;\n\t\n\t\n\t/***/ },\n\t/* 1 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(2);\n\t\tvar Ng2ParallaxScrollDirective = (function () {\n\t\t    function Ng2ParallaxScrollDirective(viewContainer) {\n\t\t        this.viewContainer = viewContainer;\n\t\t        this.el = this.viewContainer.element.nativeElement;\n\t\t    }\n\t\t    Ng2ParallaxScrollDirective.prototype.ngAfterViewInit = function () {\n\t\t        var _this = this;\n\t\t        this.img = this.el.querySelector(\"img\");\n\t\t        this.img.onload = function () {\n\t\t            _this.imgOrgWidth = _this.imgOrgWidth || _this.img.offsetWidth;\n\t\t            _this.imgOrgHeight = _this.imgOrgHeight || _this.img.offsetHeight;\n\t\t            console.log(_this.img.offsetWidth, _this.img.offsetHeight, _this.img.width, _this.img.height);\n\t\t            _this.setParallaxImage();\n\t\t            _this.updateParallaxImage();\n\t\t            window.addEventListener('scroll', function () {\n\t\t                _this.updateParallaxImage();\n\t\t            });\n\t\t            window.addEventListener('resize', function () {\n\t\t                _this.setParallaxImage();\n\t\t                _this.updateParallaxImage();\n\t\t            });\n\t\t        };\n\t\t    };\n\t\t    Ng2ParallaxScrollDirective.prototype.setParallaxImage = function () {\n\t\t        //set img style\n\t\t        var imgSize = this.imgOrgWidth > this.el.offsetWidth ?\n\t\t            { width: this.el.offsetWidth + 'px' } : { height: this.el.offsetHeight * 1.5 + 'px' };\n\t\t        Object.assign(this.img.style, {\n\t\t            display: 'block', position: 'absolute', bottom: 0, left: 0\n\t\t        }, imgSize);\n\t\t        // set container style\n\t\t        Object.assign(this.el.style, {\n\t\t            position: 'relative', overflow: 'hidden'\n\t\t        });\n\t\t        // wrap image with a div, then set style\n\t\t        var imgWrapperEl = this.el.querySelector('.parallax-img-wrapper');\n\t\t        if (!imgWrapperEl) {\n\t\t            imgWrapperEl = document.createElement('div');\n\t\t            imgWrapperEl.className = 'parallax-img-wrapper';\n\t\t            imgWrapperEl.appendChild(this.img);\n\t\t            this.el.appendChild(imgWrapperEl);\n\t\t        }\n\t\t        Object.assign(imgWrapperEl.style, {\n\t\t            position: 'absolute', top: 0, left: 0, right: 0, bottom: 0, zIndex: -1\n\t\t        });\n\t\t    };\n\t\t    Ng2ParallaxScrollDirective.prototype.updateParallaxImage = function () {\n\t\t        var elRect = this.el.getBoundingClientRect();\n\t\t        var imgRect = this.img.getBoundingClientRect();\n\t\t        var imgDist = imgRect.height - elRect.height;\n\t\t        var bottom = this.el.offsetTop + elRect.height;\n\t\t        var top = this.el.offsetTop;\n\t\t        var scrollTop = document.body.scrollTop;\n\t\t        var windowBottom = scrollTop + window.innerHeight;\n\t\t        var percentScrolled = (windowBottom - top) / (elRect.height + window.innerHeight);\n\t\t        //console.log(imgDist, percentScrolled, imgDist * percentScrolled);\n\t\t        var parallax = Math.round((imgDist * percentScrolled));\n\t\t        if ((bottom > scrollTop) && (top < (scrollTop + window.innerHeight))) {\n\t\t            this.img.style.bottom = parallax * -1 + 'px';\n\t\t        }\n\t\t    };\n\t\t    return Ng2ParallaxScrollDirective;\n\t\t}());\n\t\tNg2ParallaxScrollDirective = __decorate([\n\t\t    core_1.Directive({\n\t\t        selector: '[ng2-parallax], ng2-parallax'\n\t\t    }),\n\t\t    __metadata(\"design:paramtypes\", [core_1.ViewContainerRef])\n\t\t], Ng2ParallaxScrollDirective);\n\t\texports.Ng2ParallaxScrollDirective = Ng2ParallaxScrollDirective;\n\t\n\t\n\t/***/ },\n\t/* 2 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\t\n\t/***/ },\n\t/* 3 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(2);\n\t\tvar forms_1 = __webpack_require__(4);\n\t\tvar common_1 = __webpack_require__(5);\n\t\tvar ng2_parallax_scroll_directive_1 = __webpack_require__(1);\n\t\tvar Ng2ParallaxScrollModule = (function () {\n\t\t    function Ng2ParallaxScrollModule() {\n\t\t    }\n\t\t    return Ng2ParallaxScrollModule;\n\t\t}());\n\t\tNg2ParallaxScrollModule = __decorate([\n\t\t    core_1.NgModule({\n\t\t        imports: [common_1.CommonModule, forms_1.FormsModule],\n\t\t        declarations: [ng2_parallax_scroll_directive_1.Ng2ParallaxScrollDirective],\n\t\t        exports: [ng2_parallax_scroll_directive_1.Ng2ParallaxScrollDirective]\n\t\t    }),\n\t\t    __metadata(\"design:paramtypes\", [])\n\t\t], Ng2ParallaxScrollModule);\n\t\texports.Ng2ParallaxScrollModule = Ng2ParallaxScrollModule;\n\t\n\t\n\t/***/ },\n\t/* 4 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\t\n\t/***/ },\n\t/* 5 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\t\n\t/***/ }\n\t/******/ ])\n\t});\n\t;\n\t//# sourceMappingURL=ng2-parallax-scroll.umd.js.map\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function webpackUniversalModuleDefinition(root, factory) {\n\t\tif(true)\n\t\t\tmodule.exports = factory(__webpack_require__(2), __webpack_require__(3), __webpack_require__(8));\n\t\telse if(typeof define === 'function' && define.amd)\n\t\t\tdefine([\"@angular/core\", \"@angular/forms\", \"@angular/common\"], factory);\n\t\telse if(typeof exports === 'object')\n\t\t\texports[\"ng2-sticky\"] = factory(require(\"@angular/core\"), require(\"@angular/forms\"), require(\"@angular/common\"));\n\t\telse\n\t\t\troot[\"ng2-sticky\"] = factory(root[\"@angular/core\"], root[\"@angular/forms\"], root[\"@angular/common\"]);\n\t})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_6__) {\n\treturn /******/ (function(modules) { // webpackBootstrap\n\t/******/ \t// The module cache\n\t/******/ \tvar installedModules = {};\n\t/******/\n\t/******/ \t// The require function\n\t/******/ \tfunction __webpack_require__(moduleId) {\n\t/******/\n\t/******/ \t\t// Check if module is in cache\n\t/******/ \t\tif(installedModules[moduleId])\n\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\t/******/\n\t/******/ \t\t// Create a new module (and put it into the cache)\n\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t/******/ \t\t\texports: {},\n\t/******/ \t\t\tid: moduleId,\n\t/******/ \t\t\tloaded: false\n\t/******/ \t\t};\n\t/******/\n\t/******/ \t\t// Execute the module function\n\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t/******/\n\t/******/ \t\t// Flag the module as loaded\n\t/******/ \t\tmodule.loaded = true;\n\t/******/\n\t/******/ \t\t// Return the exports of the module\n\t/******/ \t\treturn module.exports;\n\t/******/ \t}\n\t/******/\n\t/******/\n\t/******/ \t// expose the modules object (__webpack_modules__)\n\t/******/ \t__webpack_require__.m = modules;\n\t/******/\n\t/******/ \t// expose the module cache\n\t/******/ \t__webpack_require__.c = installedModules;\n\t/******/\n\t/******/ \t// __webpack_public_path__\n\t/******/ \t__webpack_require__.p = \"\";\n\t/******/\n\t/******/ \t// Load entry module and return exports\n\t/******/ \treturn __webpack_require__(0);\n\t/******/ })\n\t/************************************************************************/\n\t/******/ ([\n\t/* 0 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar ng2_sticky_directive_1 = __webpack_require__(1);\n\t\texports.Ng2StickyDirective = ng2_sticky_directive_1.Ng2StickyDirective;\n\t\tvar ng2_sticky_module_1 = __webpack_require__(4);\n\t\texports.Ng2StickyModule = ng2_sticky_module_1.Ng2StickyModule;\n\t\n\t\n\t/***/ },\n\t/* 1 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t'use strict';\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(2);\n\t\tvar ng2_utils_1 = __webpack_require__(3);\n\t\tvar Ng2StickyDirective = (function () {\n\t\t    function Ng2StickyDirective(el) {\n\t\t        var _this = this;\n\t\t        this.stickyOffsetTop = 0;\n\t\t        this.scrollHandler = function () {\n\t\t            // let elRect: ClientRect = this.el.getBoundingClientRect();\n\t\t            var parentRect = _this.el.parentElement.getBoundingClientRect();\n\t\t            var bodyRect = document.body.getBoundingClientRect();\n\t\t            var dynProps;\n\t\t            if (_this.original.float === 'right') {\n\t\t                var right = bodyRect.right - parentRect.right + _this.original.marginRight;\n\t\t                dynProps = { right: right + 'px' };\n\t\t            }\n\t\t            else if (_this.original.float === 'left') {\n\t\t                var left = parentRect.left - bodyRect.left + _this.original.marginLeft;\n\t\t                dynProps = { left: left + 'px' };\n\t\t            }\n\t\t            else {\n\t\t                //console.log('parentRect..............', parentRect.width);\n\t\t                dynProps = { width: parentRect.width + 'px' };\n\t\t            }\n\t\t            //console.log('dynProps', dynProps);\n\t\t            if (_this.original.marginTop + _this.original.marginBottom +\n\t\t                _this.original.boundingClientRect.height + _this.stickyOffsetTop >= parentRect.bottom) {\n\t\t                /**\n\t\t                 * stikcy element reached to the bottom of the container\n\t\t                 */\n\t\t                // console.log('case 1 (absolute)', parentRect.bottom, this.original.marginBottom);\n\t\t                var floatAdjustment = _this.original.float === 'right' ? { right: 0 } :\n\t\t                    _this.original.float === 'left' ? { left: 0 } : {};\n\t\t                Object.assign(_this.el.style, {\n\t\t                    position: 'absolute',\n\t\t                    float: 'none',\n\t\t                    top: 'inherit',\n\t\t                    bottom: 0\n\t\t                }, dynProps, floatAdjustment);\n\t\t            }\n\t\t            else if (parentRect.top * -1 + _this.original.marginTop + _this.stickyOffsetTop > _this.original.offsetTop) {\n\t\t                /**\n\t\t                 * stikcy element is in the middle of container\n\t\t                 */\n\t\t                //console.log('case 2 (fixed)', parentRect.top * -1, this.original.marginTop, this.original.offsetTop);\n\t\t                // if not floating, add an empty filler element, since the original elements becames 'fixed'\n\t\t                if (_this.original.float !== 'left' && _this.original.float !== 'right' && !_this.fillerEl) {\n\t\t                    _this.fillerEl = document.createElement('div');\n\t\t                    _this.fillerEl.style.height = _this.el.offsetHeight + 'px';\n\t\t                    _this.parentEl.insertBefore(_this.fillerEl, _this.el);\n\t\t                }\n\t\t                Object.assign(_this.el.style, {\n\t\t                    position: 'fixed',\n\t\t                    float: 'none',\n\t\t                    top: _this.stickyOffsetTop + 'px',\n\t\t                    bottom: 'inherit'\n\t\t                }, dynProps);\n\t\t            }\n\t\t            else {\n\t\t                /**\n\t\t                 * stikcy element is in the original position\n\t\t                 */\n\t\t                // console.log('case 3 (original)');\n\t\t                if (_this.fillerEl) {\n\t\t                    _this.parentEl.removeChild(_this.fillerEl); //IE11 does not work with el.remove()\n\t\t                    _this.fillerEl = undefined;\n\t\t                }\n\t\t                Object.assign(_this.el.style, {\n\t\t                    position: _this.original.position,\n\t\t                    float: _this.original.float,\n\t\t                    top: _this.original.top,\n\t\t                    bottom: _this.original.bottom,\n\t\t                    width: _this.original.width,\n\t\t                    left: _this.original.left\n\t\t                }, dynProps);\n\t\t            }\n\t\t        };\n\t\t        this.el = this.el = el.nativeElement;\n\t\t        this.parentEl = this.el.parentElement;\n\t\t    }\n\t\t    Ng2StickyDirective.prototype.ngAfterViewInit = function () {\n\t\t        this.el.style.boxSizing = 'border-box';\n\t\t        if (this.stickyAfter) {\n\t\t            var cetStickyAfterEl = document.querySelector(this.stickyAfter);\n\t\t            if (cetStickyAfterEl) {\n\t\t                this.stickyOffsetTop = cetStickyAfterEl.getBoundingClientRect().bottom;\n\t\t            }\n\t\t        }\n\t\t        // set the parent relatively positioned\n\t\t        var allowedPositions = ['absolute', 'fixed', 'relative'];\n\t\t        var parentElPosition = ng2_utils_1.computedStyle(this.parentEl, 'position');\n\t\t        if (allowedPositions.indexOf(parentElPosition) === -1) {\n\t\t            this.parentEl.style.position = 'relative';\n\t\t        }\n\t\t        this.diff = {\n\t\t            top: this.el.offsetTop - this.parentEl.offsetTop,\n\t\t            left: this.el.offsetLeft - this.parentEl.offsetLeft\n\t\t        };\n\t\t        var elRect = this.el.getBoundingClientRect();\n\t\t        this.original = {\n\t\t            boundingClientRect: elRect,\n\t\t            position: ng2_utils_1.computedStyle(this.el, 'position'),\n\t\t            float: ng2_utils_1.computedStyle(this.el, 'float'),\n\t\t            top: ng2_utils_1.computedStyle(this.el, 'top'),\n\t\t            bottom: ng2_utils_1.computedStyle(this.el, 'bottom'),\n\t\t            left: ng2_utils_1.computedStyle(this.el, 'left'),\n\t\t            width: ng2_utils_1.computedStyle(this.el, 'width'),\n\t\t            offsetTop: this.el.offsetTop,\n\t\t            offsetLeft: this.el.offsetLeft,\n\t\t            marginTop: parseInt(ng2_utils_1.computedStyle(this.el, 'marginTop')),\n\t\t            marginBottom: parseInt(ng2_utils_1.computedStyle(this.el, 'marginBottom')),\n\t\t            marginLeft: parseInt(ng2_utils_1.computedStyle(this.el, 'marginLeft')),\n\t\t            marginRight: parseInt(ng2_utils_1.computedStyle(this.el, 'marginLeft'))\n\t\t        };\n\t\t        this.attach();\n\t\t    };\n\t\t    Ng2StickyDirective.prototype.ngOnDestroy = function () {\n\t\t        this.detach();\n\t\t    };\n\t\t    Ng2StickyDirective.prototype.attach = function () {\n\t\t        window.addEventListener('scroll', this.scrollHandler);\n\t\t        window.addEventListener('resize', this.scrollHandler);\n\t\t    };\n\t\t    Ng2StickyDirective.prototype.detach = function () {\n\t\t        window.removeEventListener('scroll', this.scrollHandler);\n\t\t        window.removeEventListener('resize', this.scrollHandler);\n\t\t    };\n\t\t    return Ng2StickyDirective;\n\t\t}());\n\t\t__decorate([\n\t\t    core_1.Input('sticky-after'),\n\t\t    __metadata(\"design:type\", String)\n\t\t], Ng2StickyDirective.prototype, \"stickyAfter\", void 0);\n\t\tNg2StickyDirective = __decorate([\n\t\t    core_1.Directive({\n\t\t        selector: '[ng2-sticky]'\n\t\t    }),\n\t\t    __metadata(\"design:paramtypes\", [core_1.ElementRef])\n\t\t], Ng2StickyDirective);\n\t\texports.Ng2StickyDirective = Ng2StickyDirective;\n\t\n\t\n\t/***/ },\n\t/* 2 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\t\n\t/***/ },\n\t/* 3 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t(function webpackUniversalModuleDefinition(root, factory) {\n\t\t\tif(true)\n\t\t\t\tmodule.exports = factory(__webpack_require__(2));\n\t\t\telse if(typeof define === 'function' && define.amd)\n\t\t\t\tdefine([\"@angular/core\"], factory);\n\t\t\telse if(typeof exports === 'object')\n\t\t\t\texports[\"ng2-utils\"] = factory(require(\"@angular/core\"));\n\t\t\telse\n\t\t\t\troot[\"ng2-utils\"] = factory(root[\"@angular/core\"]);\n\t\t})(this, function(__WEBPACK_EXTERNAL_MODULE_7__) {\n\t\treturn /******/ (function(modules) { // webpackBootstrap\n\t\t/******/ \t// The module cache\n\t\t/******/ \tvar installedModules = {};\n\t\t/******/\n\t\t/******/ \t// The require function\n\t\t/******/ \tfunction __webpack_require__(moduleId) {\n\t\t/******/\n\t\t/******/ \t\t// Check if module is in cache\n\t\t/******/ \t\tif(installedModules[moduleId])\n\t\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\t\t/******/\n\t\t/******/ \t\t// Create a new module (and put it into the cache)\n\t\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t\t/******/ \t\t\texports: {},\n\t\t/******/ \t\t\tid: moduleId,\n\t\t/******/ \t\t\tloaded: false\n\t\t/******/ \t\t};\n\t\t/******/\n\t\t/******/ \t\t// Execute the module function\n\t\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t\t/******/\n\t\t/******/ \t\t// Flag the module as loaded\n\t\t/******/ \t\tmodule.loaded = true;\n\t\t/******/\n\t\t/******/ \t\t// Return the exports of the module\n\t\t/******/ \t\treturn module.exports;\n\t\t/******/ \t}\n\t\t/******/\n\t\t/******/\n\t\t/******/ \t// expose the modules object (__webpack_modules__)\n\t\t/******/ \t__webpack_require__.m = modules;\n\t\t/******/\n\t\t/******/ \t// expose the module cache\n\t\t/******/ \t__webpack_require__.c = installedModules;\n\t\t/******/\n\t\t/******/ \t// __webpack_public_path__\n\t\t/******/ \t__webpack_require__.p = \"\";\n\t\t/******/\n\t\t/******/ \t// Load entry module and return exports\n\t\t/******/ \treturn __webpack_require__(0);\n\t\t/******/ })\n\t\t/************************************************************************/\n\t\t/******/ ([\n\t\t/* 0 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar scroll_to_1 = __webpack_require__(1);\n\t\t\texports.scrollTo = scroll_to_1.scrollTo;\n\t\t\tvar element_visible_1 = __webpack_require__(2);\n\t\t\texports.elementVisible = element_visible_1.elementVisible;\n\t\t\tvar computed_style_1 = __webpack_require__(3);\n\t\t\texports.computedStyle = computed_style_1.computedStyle;\n\t\t\tvar outer_width_1 = __webpack_require__(4);\n\t\t\texports.outerWidth = outer_width_1.outerWidth;\n\t\t\tvar outer_height_1 = __webpack_require__(5);\n\t\t\texports.outerHeight = outer_height_1.outerHeight;\n\t\t\tvar html_code_pipe_1 = __webpack_require__(6);\n\t\t\texports.HtmlCodePipe = html_code_pipe_1.HtmlCodePipe;\n\t\t\tvar javascript_code_pipe_1 = __webpack_require__(8);\n\t\t\texports.JavascriptCodePipe = javascript_code_pipe_1.JavascriptCodePipe;\n\t\t\tvar ng2_utils_module_1 = __webpack_require__(13);\n\t\t\texports.Ng2UtilsModule = ng2_utils_module_1.Ng2UtilsModule;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 1 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\t/**\n\t\t\t * scroll to the selector within the parent selector by scrolling 10 times within 500ms\n\t\t\t * @param selector\n\t\t\t * @param parentSelector\n\t\t\t */\n\t\t\tfunction scrollTo(selector, parentSelector, horizontal, distance) {\n\t\t\t    // argument validation\n\t\t\t    var parentEl, targetEl;\n\t\t\t    parentSelector = parentSelector || 'body';\n\t\t\t    targetEl = document.querySelector(selector);\n\t\t\t    if (!targetEl) {\n\t\t\t        throw \"Invalid selector \" + selector;\n\t\t\t    }\n\t\t\t    parentEl = document.querySelector(parentSelector);\n\t\t\t    if (!parentEl) {\n\t\t\t        throw \"Invalid parent selector \" + parentSelector;\n\t\t\t    }\n\t\t\t    // detect the current environment\n\t\t\t    var parentElStyle = window.getComputedStyle(parentEl);\n\t\t\t    var scrollContainerEl = parentElStyle.overflow === 'auto' ? parentEl : document.body;\n\t\t\t    var currentScrollTop = scrollContainerEl.scrollTop;\n\t\t\t    var currentScrollLeft = scrollContainerEl.scrollLeft;\n\t\t\t    // determine targetOffsetTop(or Left);\n\t\t\t    var targetOffsetTop;\n\t\t\t    var targetOffsetLeft;\n\t\t\t    if (scrollContainerEl === document.body) {\n\t\t\t        var bodyRect = document.body.getBoundingClientRect();\n\t\t\t        var targetRect = targetEl.getBoundingClientRect();\n\t\t\t        targetOffsetTop = targetRect.top - bodyRect.top;\n\t\t\t        targetOffsetLeft = targetRect.left - bodyRect.left;\n\t\t\t    }\n\t\t\t    else {\n\t\t\t        targetOffsetTop = targetEl.offsetTop;\n\t\t\t        targetOffsetLeft = targetEl.offsetLeft;\n\t\t\t    }\n\t\t\t    if (distance) {\n\t\t\t        currentScrollTop += distance;\n\t\t\t        currentScrollLeft += distance;\n\t\t\t    }\n\t\t\t    // start scrolling\n\t\t\t    var step = horizontal ?\n\t\t\t        Math.ceil((targetOffsetLeft - currentScrollLeft) / 10) :\n\t\t\t        Math.ceil((targetOffsetTop - currentScrollTop) / 10);\n\t\t\t    var scrollProp = horizontal ? 'scrollLeft' : 'scrollTop';\n\t\t\t    (function loop(i, prop) {\n\t\t\t        setTimeout(function main() {\n\t\t\t            scrollContainerEl[prop] += step;\n\t\t\t            i > 1 && loop(i - 1, prop);\n\t\t\t        }, 50);\n\t\t\t    }(10, scrollProp));\n\t\t\t}\n\t\t\texports.scrollTo = scrollTo;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 2 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\t/**\n\t\t\t * Returns an element is visible within outer element\n\t\t\t * @param innerEl\n\t\t\t * @param outerEl\n\t\t\t * @param adjustment\n\t\t\t * @returns {{top: boolean, bottom: boolean, left: boolean, right: boolean}}\n\t\t\t */\n\t\t\tfunction elementVisible(innerElement, outerElement, adjustment) {\n\t\t\t    var innerEl;\n\t\t\t    var outerEl;\n\t\t\t    innerEl = (typeof innerElement === 'string') ?\n\t\t\t        document.querySelector(innerElement) : innerElement;\n\t\t\t    outerEl = (typeof outerElement === 'string') ?\n\t\t\t        document.querySelector(outerElement) : outerElement;\n\t\t\t    var innerRect = innerEl.getBoundingClientRect();\n\t\t\t    var bottomAdjustment = (adjustment && adjustment.bottom || 0);\n\t\t\t    if (outerEl === window) {\n\t\t\t        return {\n\t\t\t            top: innerRect.bottom - bottomAdjustment > window.innerHeight\n\t\t\t                && innerRect.top < window.innerHeight,\n\t\t\t            bottom: innerRect.bottom - bottomAdjustment > 0\n\t\t\t                && innerRect.bottom < window.innerHeight,\n\t\t\t            left: innerRect.right > window.innerWidth\n\t\t\t                && innerRect.left < window.innerWidth,\n\t\t\t            right: innerRect.right > 0\n\t\t\t                && innerRect.right < window.innerWidth\n\t\t\t        };\n\t\t\t    }\n\t\t\t    else {\n\t\t\t        var outerRect = outerEl.getBoundingClientRect();\n\t\t\t        var defaultView = (innerEl.ownerDocument || document).defaultView;\n\t\t\t        var computedStyle = defaultView.getComputedStyle(outerEl, null);\n\t\t\t        var outerRectBorderTopWidth = parseInt(computedStyle.getPropertyValue('border-top-width'), 10);\n\t\t\t        var outerRectBorderLeftWidth = parseInt(computedStyle.getPropertyValue('border-left-width'), 10);\n\t\t\t        /* top is visible or bottom is visible */\n\t\t\t        var topVisible = (innerRect.top >= outerRect.top\n\t\t\t            && innerRect.top < outerRect.bottom);\n\t\t\t        var bottomVisible = (innerRect.bottom > (outerRect.top + outerRectBorderTopWidth)\n\t\t\t            && innerRect.bottom < outerRect.bottom);\n\t\t\t        var leftVisible = (innerRect.left >= outerRect.left\n\t\t\t            && innerRect.left < outerRect.right);\n\t\t\t        var rightVisible = (innerRect.right > (outerRect.left + outerRectBorderLeftWidth)\n\t\t\t            && innerRect.right < outerRect.right);\n\t\t\t        return {\n\t\t\t            top: topVisible,\n\t\t\t            bottom: bottomVisible,\n\t\t\t            left: leftVisible,\n\t\t\t            right: rightVisible\n\t\t\t        };\n\t\t\t    }\n\t\t\t}\n\t\t\texports.elementVisible = elementVisible;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 3 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\t/**\n\t\t\t * returns coumputed style of given element\n\t\t\t * @param el\n\t\t\t * @param styleProp\n\t\t\t * @returns {any}\n\t\t\t */\n\t\t\tfunction computedStyle(element, styleProp) {\n\t\t\t    var el;\n\t\t\t    el = (typeof element === 'string') ? document.querySelector(element) : element;\n\t\t\t    var value, defaultView = (el.ownerDocument || document).defaultView;\n\t\t\t    // W3C standard way:\n\t\t\t    if (defaultView && defaultView.getComputedStyle) {\n\t\t\t        // sanitize property name to css notation\n\t\t\t        // (hypen separated words eg. font-Size)\n\t\t\t        styleProp = styleProp.replace(/([A-Z])/g, \"-$1\").toLowerCase();\n\t\t\t        return defaultView.getComputedStyle(el, null).getPropertyValue(styleProp);\n\t\t\t    }\n\t\t\t    else if (el['currentStyle']) {\n\t\t\t        // sanitize property name to camelCase\n\t\t\t        styleProp = styleProp.replace(/\\-(\\w)/g, function (str, letter) {\n\t\t\t            return letter.toUpperCase();\n\t\t\t        });\n\t\t\t        value = el['currentStyle'][styleProp];\n\t\t\t        // convert other units to pixels on IE\n\t\t\t        if (/^\\d+(em|pt|%|ex)?$/i.test(value)) {\n\t\t\t            return (function (value) {\n\t\t\t                var oldLeft = el.style.left, oldRsLeft = el['runtimeStyle'].left;\n\t\t\t                el['runtimeStyle'].left = el['currentStyle'].left;\n\t\t\t                el.style.left = value || 0;\n\t\t\t                value = el.style['pixelLeft'] + \"px\";\n\t\t\t                el.style.left = oldLeft;\n\t\t\t                el['runtimeStyle'].left = oldRsLeft;\n\t\t\t                return value;\n\t\t\t            })(value);\n\t\t\t        }\n\t\t\t        return value;\n\t\t\t    }\n\t\t\t}\n\t\t\texports.computedStyle = computedStyle;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 4 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tfunction outerWidth(element) {\n\t\t\t    var el;\n\t\t\t    (typeof element === 'string') ? (el = document.querySelector(element)) : element;\n\t\t\t    var style = getComputedStyle(el);\n\t\t\t    return el.offsetWidth +\n\t\t\t        parseInt(style.getPropertyValue('margin-left')) +\n\t\t\t        parseInt(style.getPropertyValue('margin-right'));\n\t\t\t}\n\t\t\texports.outerWidth = outerWidth;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 5 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tfunction outerHeight(element) {\n\t\t\t    var el;\n\t\t\t    (typeof element === 'string') ? (el = document.querySelector(element)) : element;\n\t\t\t    var style = getComputedStyle(el);\n\t\t\t    return el.offsetHeight +\n\t\t\t        parseInt(style.getPropertyValue('margin-top')) +\n\t\t\t        parseInt(style.getPropertyValue('margin-bottom'));\n\t\t\t}\n\t\t\texports.outerHeight = outerHeight;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 6 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t};\n\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t};\n\t\t\tvar core_1 = __webpack_require__(7);\n\t\t\tvar HtmlCodePipe = (function () {\n\t\t\t    function HtmlCodePipe() {\n\t\t\t    }\n\t\t\t    HtmlCodePipe.prototype.transform = function (html, tagsIncludeExclude) {\n\t\t\t        var ret;\n\t\t\t        var tagsInclude = [];\n\t\t\t        var tagsExclude = [];\n\t\t\t        (tagsIncludeExclude || '').split(',').forEach(function (tag) {\n\t\t\t            if (tag.match(/^-/)) {\n\t\t\t                tag = tag.replace(/^-/, '');\n\t\t\t                tagsExclude.push(tag);\n\t\t\t            }\n\t\t\t            else if (tag !== '') {\n\t\t\t                tagsInclude.push(tag);\n\t\t\t            }\n\t\t\t        });\n\t\t\t        ret = tagsInclude.length > 0 ? '' : html;\n\t\t\t        if (tagsInclude.length > 0) {\n\t\t\t            tagsInclude.forEach(function (tag) {\n\t\t\t                var regEx = new RegExp(\"<\" + tag + \">([\\\\s\\\\S]*?)</\" + tag + \">\");\n\t\t\t                var matches = html.match(regEx);\n\t\t\t                var output = matches[0].replace(/<\\/?ng2-utils-[0-9]+>\\s*/g, ''); //remove <ng2-utils-xxx> and </ng2-utils-xxx>\n\t\t\t                ret = ret + output;\n\t\t\t            });\n\t\t\t        }\n\t\t\t        if (tagsExclude.length > 0) {\n\t\t\t            tagsExclude.forEach(function (tag) {\n\t\t\t                var regEx = new RegExp(\"<\" + tag + \">([\\\\s\\\\S]*?)</\" + tag + \">\");\n\t\t\t                ret = ret.replace(regEx, '');\n\t\t\t            });\n\t\t\t        }\n\t\t\t        return ret;\n\t\t\t    };\n\t\t\t    return HtmlCodePipe;\n\t\t\t}());\n\t\t\tHtmlCodePipe = __decorate([\n\t\t\t    core_1.Pipe({ name: 'htmlCode' }),\n\t\t\t    __metadata(\"design:paramtypes\", [])\n\t\t\t], HtmlCodePipe);\n\t\t\texports.HtmlCodePipe = HtmlCodePipe;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 7 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_7__;\n\t\t\n\t\t/***/ },\n\t\t/* 8 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t};\n\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t};\n\t\t\tvar core_1 = __webpack_require__(7);\n\t\t\tvar js_beautify = __webpack_require__(9);\n\t\t\tvar JavascriptCodePipe = (function () {\n\t\t\t    function JavascriptCodePipe() {\n\t\t\t    }\n\t\t\t    JavascriptCodePipe.prototype.transform = function (value) {\n\t\t\t        value = value.toString();\n\t\t\t        var ret = value;\n\t\t\t        return js_beautify(value);\n\t\t\t    };\n\t\t\t    return JavascriptCodePipe;\n\t\t\t}());\n\t\t\tJavascriptCodePipe = __decorate([\n\t\t\t    core_1.Pipe({ name: 'jsCode' }),\n\t\t\t    __metadata(\"design:paramtypes\", [])\n\t\t\t], JavascriptCodePipe);\n\t\t\texports.JavascriptCodePipe = JavascriptCodePipe;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 9 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n\t\t\tThe following batches are equivalent:\n\t\t\t\n\t\t\tvar beautify_js = require('js-beautify');\n\t\t\tvar beautify_js = require('js-beautify').js;\n\t\t\tvar beautify_js = require('js-beautify').js_beautify;\n\t\t\t\n\t\t\tvar beautify_css = require('js-beautify').css;\n\t\t\tvar beautify_css = require('js-beautify').css_beautify;\n\t\t\t\n\t\t\tvar beautify_html = require('js-beautify').html;\n\t\t\tvar beautify_html = require('js-beautify').html_beautify;\n\t\t\t\n\t\t\tAll methods returned accept two arguments, the source string and an options object.\n\t\t\t**/\n\t\t\t\n\t\t\tfunction get_beautify(js_beautify, css_beautify, html_beautify) {\n\t\t\t    // the default is js\n\t\t\t    var beautify = function(src, config) {\n\t\t\t        return js_beautify.js_beautify(src, config);\n\t\t\t    };\n\t\t\t\n\t\t\t    // short aliases\n\t\t\t    beautify.js = js_beautify.js_beautify;\n\t\t\t    beautify.css = css_beautify.css_beautify;\n\t\t\t    beautify.html = html_beautify.html_beautify;\n\t\t\t\n\t\t\t    // legacy aliases\n\t\t\t    beautify.js_beautify = js_beautify.js_beautify;\n\t\t\t    beautify.css_beautify = css_beautify.css_beautify;\n\t\t\t    beautify.html_beautify = html_beautify.html_beautify;\n\t\t\t\n\t\t\t    return beautify;\n\t\t\t}\n\t\t\t\n\t\t\tif (true) {\n\t\t\t    // Add support for AMD ( https://github.com/amdjs/amdjs-api/wiki/AMD#defineamd-property- )\n\t\t\t    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t\t\t        __webpack_require__(10),\n\t\t\t        __webpack_require__(11),\n\t\t\t        __webpack_require__(12)\n\t\t\t    ], __WEBPACK_AMD_DEFINE_RESULT__ = function(js_beautify, css_beautify, html_beautify) {\n\t\t\t        return get_beautify(js_beautify, css_beautify, html_beautify);\n\t\t\t    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\t\t} else {\n\t\t\t    (function(mod) {\n\t\t\t        var js_beautify = require('./lib/beautify');\n\t\t\t        var css_beautify = require('./lib/beautify-css');\n\t\t\t        var html_beautify = require('./lib/beautify-html');\n\t\t\t\n\t\t\t        mod.exports = get_beautify(js_beautify, css_beautify, html_beautify);\n\t\t\t\n\t\t\t    })(module);\n\t\t\t}\n\t\t\n\t\t/***/ },\n\t\t/* 10 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*jshint curly:true, eqeqeq:true, laxbreak:true, noempty:false */\n\t\t\t/*\n\t\t\t\n\t\t\t  The MIT License (MIT)\n\t\t\t\n\t\t\t  Copyright (c) 2007-2013 Einar Lielmanis and contributors.\n\t\t\t\n\t\t\t  Permission is hereby granted, free of charge, to any person\n\t\t\t  obtaining a copy of this software and associated documentation files\n\t\t\t  (the \"Software\"), to deal in the Software without restriction,\n\t\t\t  including without limitation the rights to use, copy, modify, merge,\n\t\t\t  publish, distribute, sublicense, and/or sell copies of the Software,\n\t\t\t  and to permit persons to whom the Software is furnished to do so,\n\t\t\t  subject to the following conditions:\n\t\t\t\n\t\t\t  The above copyright notice and this permission notice shall be\n\t\t\t  included in all copies or substantial portions of the Software.\n\t\t\t\n\t\t\t  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n\t\t\t  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t\t\t  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n\t\t\t  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n\t\t\t  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n\t\t\t  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n\t\t\t  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\t\t\t  SOFTWARE.\n\t\t\t\n\t\t\t JS Beautifier\n\t\t\t---------------\n\t\t\t\n\t\t\t\n\t\t\t  Written by Einar Lielmanis, <einar@jsbeautifier.org>\n\t\t\t      http://jsbeautifier.org/\n\t\t\t\n\t\t\t  Originally converted to javascript by Vital, <vital76@gmail.com>\n\t\t\t  \"End braces on own line\" added by Chris J. Shull, <chrisjshull@gmail.com>\n\t\t\t  Parsing improvements for brace-less statements by Liam Newman <bitwiseman@gmail.com>\n\t\t\t\n\t\t\t\n\t\t\t  Usage:\n\t\t\t    js_beautify(js_source_text);\n\t\t\t    js_beautify(js_source_text, options);\n\t\t\t\n\t\t\t  The options are:\n\t\t\t    indent_size (default 4)          - indentation size,\n\t\t\t    indent_char (default space)      - character to indent with,\n\t\t\t    preserve_newlines (default true) - whether existing line breaks should be preserved,\n\t\t\t    max_preserve_newlines (default unlimited) - maximum number of line breaks to be preserved in one chunk,\n\t\t\t\n\t\t\t    jslint_happy (default false) - if true, then jslint-stricter mode is enforced.\n\t\t\t\n\t\t\t            jslint_happy        !jslint_happy\n\t\t\t            ---------------------------------\n\t\t\t            function ()         function()\n\t\t\t\n\t\t\t            switch () {         switch() {\n\t\t\t            case 1:               case 1:\n\t\t\t              break;                break;\n\t\t\t            }                   }\n\t\t\t\n\t\t\t    space_after_anon_function (default false) - should the space before an anonymous function's parens be added, \"function()\" vs \"function ()\",\n\t\t\t          NOTE: This option is overriden by jslint_happy (i.e. if jslint_happy is true, space_after_anon_function is true by design)\n\t\t\t\n\t\t\t    brace_style (default \"collapse\") - \"collapse-preserve-inline\" | \"collapse\" | \"expand\" | \"end-expand\" | \"none\"\n\t\t\t            put braces on the same line as control statements (default), or put braces on own line (Allman / ANSI style), or just put end braces on own line, or attempt to keep them where they are.\n\t\t\t\n\t\t\t    space_before_conditional (default true) - should the space before conditional statement be added, \"if(true)\" vs \"if (true)\",\n\t\t\t\n\t\t\t    unescape_strings (default false) - should printable characters in strings encoded in \\xNN notation be unescaped, \"example\" vs \"\\x65\\x78\\x61\\x6d\\x70\\x6c\\x65\"\n\t\t\t\n\t\t\t    wrap_line_length (default unlimited) - lines should wrap at next opportunity after this number of characters.\n\t\t\t          NOTE: This is not a hard limit. Lines will continue until a point where a newline would\n\t\t\t                be preserved if it were present.\n\t\t\t\n\t\t\t    end_with_newline (default false)  - end output with a newline\n\t\t\t\n\t\t\t\n\t\t\t    e.g\n\t\t\t\n\t\t\t    js_beautify(js_source_text, {\n\t\t\t      'indent_size': 1,\n\t\t\t      'indent_char': '\\t'\n\t\t\t    });\n\t\t\t\n\t\t\t*/\n\t\t\t\n\t\t\t// Object.values polyfill found here:\n\t\t\t// http://tokenposts.blogspot.com.au/2012/04/javascript-objectkeys-browser.html\n\t\t\tif (!Object.values) {\n\t\t\t    Object.values = function(o) {\n\t\t\t        if (o !== Object(o)) {\n\t\t\t            throw new TypeError('Object.values called on a non-object');\n\t\t\t        }\n\t\t\t        var k = [],\n\t\t\t            p;\n\t\t\t        for (p in o) {\n\t\t\t            if (Object.prototype.hasOwnProperty.call(o, p)) {\n\t\t\t                k.push(o[p]);\n\t\t\t            }\n\t\t\t        }\n\t\t\t        return k;\n\t\t\t    };\n\t\t\t}\n\t\t\t\n\t\t\t(function() {\n\t\t\t\n\t\t\t    function js_beautify(js_source_text, options) {\n\t\t\t\n\t\t\t        var acorn = {};\n\t\t\t        (function(exports) {\n\t\t\t            /* jshint curly: false */\n\t\t\t            // This section of code is taken from acorn.\n\t\t\t            //\n\t\t\t            // Acorn was written by Marijn Haverbeke and released under an MIT\n\t\t\t            // license. The Unicode regexps (for identifiers and whitespace) were\n\t\t\t            // taken from [Esprima](http://esprima.org) by Ariya Hidayat.\n\t\t\t            //\n\t\t\t            // Git repositories for Acorn are available at\n\t\t\t            //\n\t\t\t            //     http://marijnhaverbeke.nl/git/acorn\n\t\t\t            //     https://github.com/marijnh/acorn.git\n\t\t\t\n\t\t\t            // ## Character categories\n\t\t\t\n\t\t\t            // Big ugly regular expressions that match characters in the\n\t\t\t            // whitespace, identifier, and identifier-start categories. These\n\t\t\t            // are only applied when a character is found to actually have a\n\t\t\t            // code point above 128.\n\t\t\t\n\t\t\t            var nonASCIIwhitespace = /[\\u1680\\u180e\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/; // jshint ignore:line\n\t\t\t            var nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u08a0\\u08a2-\\u08ac\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097f\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d\\u0c58\\u0c59\\u0c60\\u0c61\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d60\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19c1-\\u19c7\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2e2f\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua697\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa80-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\n\t\t\t            var nonASCIIidentifierChars = \"\\u0300-\\u036f\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u0620-\\u0649\\u0672-\\u06d3\\u06e7-\\u06e8\\u06fb-\\u06fc\\u0730-\\u074a\\u0800-\\u0814\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0840-\\u0857\\u08e4-\\u08fe\\u0900-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962-\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09d7\\u09df-\\u09e0\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2-\\u0ae3\\u0ae6-\\u0aef\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b5f-\\u0b60\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c01-\\u0c03\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62-\\u0c63\\u0c66-\\u0c6f\\u0c82\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2-\\u0ce3\\u0ce6-\\u0cef\\u0d02\\u0d03\\u0d46-\\u0d48\\u0d57\\u0d62-\\u0d63\\u0d66-\\u0d6f\\u0d82\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0df2\\u0df3\\u0e34-\\u0e3a\\u0e40-\\u0e45\\u0e50-\\u0e59\\u0eb4-\\u0eb9\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f41-\\u0f47\\u0f71-\\u0f84\\u0f86-\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u1000-\\u1029\\u1040-\\u1049\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u170e-\\u1710\\u1720-\\u1730\\u1740-\\u1750\\u1772\\u1773\\u1780-\\u17b2\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u1920-\\u192b\\u1930-\\u193b\\u1951-\\u196d\\u19b0-\\u19c0\\u19c8-\\u19c9\\u19d0-\\u19d9\\u1a00-\\u1a15\\u1a20-\\u1a53\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1b46-\\u1b4b\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c00-\\u1c22\\u1c40-\\u1c49\\u1c5b-\\u1c7d\\u1cd0-\\u1cd2\\u1d00-\\u1dbe\\u1e01-\\u1f15\\u200c\\u200d\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2d81-\\u2d96\\u2de0-\\u2dff\\u3021-\\u3028\\u3099\\u309a\\ua640-\\ua66d\\ua674-\\ua67d\\ua69f\\ua6f0-\\ua6f1\\ua7f8-\\ua800\\ua806\\ua80b\\ua823-\\ua827\\ua880-\\ua881\\ua8b4-\\ua8c4\\ua8d0-\\ua8d9\\ua8f3-\\ua8f7\\ua900-\\ua909\\ua926-\\ua92d\\ua930-\\ua945\\ua980-\\ua983\\ua9b3-\\ua9c0\\uaa00-\\uaa27\\uaa40-\\uaa41\\uaa4c-\\uaa4d\\uaa50-\\uaa59\\uaa7b\\uaae0-\\uaae9\\uaaf2-\\uaaf3\\uabc0-\\uabe1\\uabec\\uabed\\uabf0-\\uabf9\\ufb20-\\ufb28\\ufe00-\\ufe0f\\ufe20-\\ufe26\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\n\t\t\t            var nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\n\t\t\t            var nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\n\t\t\t\n\t\t\t            // Whether a single character denotes a newline.\n\t\t\t\n\t\t\t            exports.newline = /[\\n\\r\\u2028\\u2029]/;\n\t\t\t\n\t\t\t            // Matches a whole line break (where CRLF is considered a single\n\t\t\t            // line break). Used to count lines.\n\t\t\t\n\t\t\t            // in javascript, these two differ\n\t\t\t            // in python they are the same, different methods are called on them\n\t\t\t            exports.lineBreak = new RegExp('\\r\\n|' + exports.newline.source);\n\t\t\t            exports.allLineBreaks = new RegExp(exports.lineBreak.source, 'g');\n\t\t\t\n\t\t\t\n\t\t\t            // Test whether a given character code starts an identifier.\n\t\t\t\n\t\t\t            exports.isIdentifierStart = function(code) {\n\t\t\t                // permit $ (36) and @ (64). @ is used in ES7 decorators.\n\t\t\t                if (code < 65) return code === 36 || code === 64;\n\t\t\t                // 65 through 91 are uppercase letters.\n\t\t\t                if (code < 91) return true;\n\t\t\t                // permit _ (95).\n\t\t\t                if (code < 97) return code === 95;\n\t\t\t                // 97 through 123 are lowercase letters.\n\t\t\t                if (code < 123) return true;\n\t\t\t                return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\n\t\t\t            };\n\t\t\t\n\t\t\t            // Test whether a given character is part of an identifier.\n\t\t\t\n\t\t\t            exports.isIdentifierChar = function(code) {\n\t\t\t                if (code < 48) return code === 36;\n\t\t\t                if (code < 58) return true;\n\t\t\t                if (code < 65) return false;\n\t\t\t                if (code < 91) return true;\n\t\t\t                if (code < 97) return code === 95;\n\t\t\t                if (code < 123) return true;\n\t\t\t                return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n\t\t\t            };\n\t\t\t        })(acorn);\n\t\t\t        /* jshint curly: true */\n\t\t\t\n\t\t\t        function in_array(what, arr) {\n\t\t\t            for (var i = 0; i < arr.length; i += 1) {\n\t\t\t                if (arr[i] === what) {\n\t\t\t                    return true;\n\t\t\t                }\n\t\t\t            }\n\t\t\t            return false;\n\t\t\t        }\n\t\t\t\n\t\t\t        function trim(s) {\n\t\t\t            return s.replace(/^\\s+|\\s+$/g, '');\n\t\t\t        }\n\t\t\t\n\t\t\t        function ltrim(s) {\n\t\t\t            return s.replace(/^\\s+/g, '');\n\t\t\t        }\n\t\t\t\n\t\t\t        // function rtrim(s) {\n\t\t\t        //     return s.replace(/\\s+$/g, '');\n\t\t\t        // }\n\t\t\t\n\t\t\t        function sanitizeOperatorPosition(opPosition) {\n\t\t\t            opPosition = opPosition || OPERATOR_POSITION.before_newline;\n\t\t\t\n\t\t\t            var validPositionValues = Object.values(OPERATOR_POSITION);\n\t\t\t\n\t\t\t            if (!in_array(opPosition, validPositionValues)) {\n\t\t\t                throw new Error(\"Invalid Option Value: The option 'operator_position' must be one of the following values\\n\" +\n\t\t\t                    validPositionValues +\n\t\t\t                    \"\\nYou passed in: '\" + opPosition + \"'\");\n\t\t\t            }\n\t\t\t\n\t\t\t            return opPosition;\n\t\t\t        }\n\t\t\t\n\t\t\t        var OPERATOR_POSITION = {\n\t\t\t            before_newline: 'before-newline',\n\t\t\t            after_newline: 'after-newline',\n\t\t\t            preserve_newline: 'preserve-newline',\n\t\t\t        };\n\t\t\t\n\t\t\t        var OPERATOR_POSITION_BEFORE_OR_PRESERVE = [OPERATOR_POSITION.before_newline, OPERATOR_POSITION.preserve_newline];\n\t\t\t\n\t\t\t        var MODE = {\n\t\t\t            BlockStatement: 'BlockStatement', // 'BLOCK'\n\t\t\t            Statement: 'Statement', // 'STATEMENT'\n\t\t\t            ObjectLiteral: 'ObjectLiteral', // 'OBJECT',\n\t\t\t            ArrayLiteral: 'ArrayLiteral', //'[EXPRESSION]',\n\t\t\t            ForInitializer: 'ForInitializer', //'(FOR-EXPRESSION)',\n\t\t\t            Conditional: 'Conditional', //'(COND-EXPRESSION)',\n\t\t\t            Expression: 'Expression' //'(EXPRESSION)'\n\t\t\t        };\n\t\t\t\n\t\t\t        function Beautifier(js_source_text, options) {\n\t\t\t            \"use strict\";\n\t\t\t            var output;\n\t\t\t            var tokens = [],\n\t\t\t                token_pos;\n\t\t\t            var Tokenizer;\n\t\t\t            var current_token;\n\t\t\t            var last_type, last_last_text, indent_string;\n\t\t\t            var flags, previous_flags, flag_store;\n\t\t\t            var prefix;\n\t\t\t\n\t\t\t            var handlers, opt;\n\t\t\t            var baseIndentString = '';\n\t\t\t\n\t\t\t            handlers = {\n\t\t\t                'TK_START_EXPR': handle_start_expr,\n\t\t\t                'TK_END_EXPR': handle_end_expr,\n\t\t\t                'TK_START_BLOCK': handle_start_block,\n\t\t\t                'TK_END_BLOCK': handle_end_block,\n\t\t\t                'TK_WORD': handle_word,\n\t\t\t                'TK_RESERVED': handle_word,\n\t\t\t                'TK_SEMICOLON': handle_semicolon,\n\t\t\t                'TK_STRING': handle_string,\n\t\t\t                'TK_EQUALS': handle_equals,\n\t\t\t                'TK_OPERATOR': handle_operator,\n\t\t\t                'TK_COMMA': handle_comma,\n\t\t\t                'TK_BLOCK_COMMENT': handle_block_comment,\n\t\t\t                'TK_COMMENT': handle_comment,\n\t\t\t                'TK_DOT': handle_dot,\n\t\t\t                'TK_UNKNOWN': handle_unknown,\n\t\t\t                'TK_EOF': handle_eof\n\t\t\t            };\n\t\t\t\n\t\t\t            function create_flags(flags_base, mode) {\n\t\t\t                var next_indent_level = 0;\n\t\t\t                if (flags_base) {\n\t\t\t                    next_indent_level = flags_base.indentation_level;\n\t\t\t                    if (!output.just_added_newline() &&\n\t\t\t                        flags_base.line_indent_level > next_indent_level) {\n\t\t\t                        next_indent_level = flags_base.line_indent_level;\n\t\t\t                    }\n\t\t\t                }\n\t\t\t\n\t\t\t                var next_flags = {\n\t\t\t                    mode: mode,\n\t\t\t                    parent: flags_base,\n\t\t\t                    last_text: flags_base ? flags_base.last_text : '', // last token text\n\t\t\t                    last_word: flags_base ? flags_base.last_word : '', // last 'TK_WORD' passed\n\t\t\t                    declaration_statement: false,\n\t\t\t                    declaration_assignment: false,\n\t\t\t                    multiline_frame: false,\n\t\t\t                    inline_frame: false,\n\t\t\t                    if_block: false,\n\t\t\t                    else_block: false,\n\t\t\t                    do_block: false,\n\t\t\t                    do_while: false,\n\t\t\t                    import_block: false,\n\t\t\t                    in_case_statement: false, // switch(..){ INSIDE HERE }\n\t\t\t                    in_case: false, // we're on the exact line with \"case 0:\"\n\t\t\t                    case_body: false, // the indented case-action block\n\t\t\t                    indentation_level: next_indent_level,\n\t\t\t                    line_indent_level: flags_base ? flags_base.line_indent_level : next_indent_level,\n\t\t\t                    start_line_index: output.get_line_number(),\n\t\t\t                    ternary_depth: 0\n\t\t\t                };\n\t\t\t                return next_flags;\n\t\t\t            }\n\t\t\t\n\t\t\t            // Some interpreters have unexpected results with foo = baz || bar;\n\t\t\t            options = options ? options : {};\n\t\t\t            opt = {};\n\t\t\t\n\t\t\t            // compatibility\n\t\t\t            if (options.braces_on_own_line !== undefined) { //graceful handling of deprecated option\n\t\t\t                opt.brace_style = options.braces_on_own_line ? \"expand\" : \"collapse\";\n\t\t\t            }\n\t\t\t            opt.brace_style = options.brace_style ? options.brace_style : (opt.brace_style ? opt.brace_style : \"collapse\");\n\t\t\t\n\t\t\t            // graceful handling of deprecated option\n\t\t\t            if (opt.brace_style === \"expand-strict\") {\n\t\t\t                opt.brace_style = \"expand\";\n\t\t\t            }\n\t\t\t\n\t\t\t            opt.indent_size = options.indent_size ? parseInt(options.indent_size, 10) : 4;\n\t\t\t            opt.indent_char = options.indent_char ? options.indent_char : ' ';\n\t\t\t            opt.eol = options.eol ? options.eol : 'auto';\n\t\t\t            opt.preserve_newlines = (options.preserve_newlines === undefined) ? true : options.preserve_newlines;\n\t\t\t            opt.break_chained_methods = (options.break_chained_methods === undefined) ? false : options.break_chained_methods;\n\t\t\t            opt.max_preserve_newlines = (options.max_preserve_newlines === undefined) ? 0 : parseInt(options.max_preserve_newlines, 10);\n\t\t\t            opt.space_in_paren = (options.space_in_paren === undefined) ? false : options.space_in_paren;\n\t\t\t            opt.space_in_empty_paren = (options.space_in_empty_paren === undefined) ? false : options.space_in_empty_paren;\n\t\t\t            opt.jslint_happy = (options.jslint_happy === undefined) ? false : options.jslint_happy;\n\t\t\t            opt.space_after_anon_function = (options.space_after_anon_function === undefined) ? false : options.space_after_anon_function;\n\t\t\t            opt.keep_array_indentation = (options.keep_array_indentation === undefined) ? false : options.keep_array_indentation;\n\t\t\t            opt.space_before_conditional = (options.space_before_conditional === undefined) ? true : options.space_before_conditional;\n\t\t\t            opt.unescape_strings = (options.unescape_strings === undefined) ? false : options.unescape_strings;\n\t\t\t            opt.wrap_line_length = (options.wrap_line_length === undefined) ? 0 : parseInt(options.wrap_line_length, 10);\n\t\t\t            opt.e4x = (options.e4x === undefined) ? false : options.e4x;\n\t\t\t            opt.end_with_newline = (options.end_with_newline === undefined) ? false : options.end_with_newline;\n\t\t\t            opt.comma_first = (options.comma_first === undefined) ? false : options.comma_first;\n\t\t\t            opt.operator_position = sanitizeOperatorPosition(options.operator_position);\n\t\t\t\n\t\t\t            // For testing of beautify ignore:start directive\n\t\t\t            opt.test_output_raw = (options.test_output_raw === undefined) ? false : options.test_output_raw;\n\t\t\t\n\t\t\t            // force opt.space_after_anon_function to true if opt.jslint_happy\n\t\t\t            if (opt.jslint_happy) {\n\t\t\t                opt.space_after_anon_function = true;\n\t\t\t            }\n\t\t\t\n\t\t\t            if (options.indent_with_tabs) {\n\t\t\t                opt.indent_char = '\\t';\n\t\t\t                opt.indent_size = 1;\n\t\t\t            }\n\t\t\t\n\t\t\t            if (opt.eol === 'auto') {\n\t\t\t                opt.eol = '\\n';\n\t\t\t                if (js_source_text && acorn.lineBreak.test(js_source_text || '')) {\n\t\t\t                    opt.eol = js_source_text.match(acorn.lineBreak)[0];\n\t\t\t                }\n\t\t\t            }\n\t\t\t\n\t\t\t            opt.eol = opt.eol.replace(/\\\\r/, '\\r').replace(/\\\\n/, '\\n');\n\t\t\t\n\t\t\t            //----------------------------------\n\t\t\t            indent_string = '';\n\t\t\t            while (opt.indent_size > 0) {\n\t\t\t                indent_string += opt.indent_char;\n\t\t\t                opt.indent_size -= 1;\n\t\t\t            }\n\t\t\t\n\t\t\t            var preindent_index = 0;\n\t\t\t            if (js_source_text && js_source_text.length) {\n\t\t\t                while ((js_source_text.charAt(preindent_index) === ' ' ||\n\t\t\t                        js_source_text.charAt(preindent_index) === '\\t')) {\n\t\t\t                    baseIndentString += js_source_text.charAt(preindent_index);\n\t\t\t                    preindent_index += 1;\n\t\t\t                }\n\t\t\t                js_source_text = js_source_text.substring(preindent_index);\n\t\t\t            }\n\t\t\t\n\t\t\t            last_type = 'TK_START_BLOCK'; // last token type\n\t\t\t            last_last_text = ''; // pre-last token text\n\t\t\t            output = new Output(indent_string, baseIndentString);\n\t\t\t\n\t\t\t            // If testing the ignore directive, start with output disable set to true\n\t\t\t            output.raw = opt.test_output_raw;\n\t\t\t\n\t\t\t\n\t\t\t            // Stack of parsing/formatting states, including MODE.\n\t\t\t            // We tokenize, parse, and output in an almost purely a forward-only stream of token input\n\t\t\t            // and formatted output.  This makes the beautifier less accurate than full parsers\n\t\t\t            // but also far more tolerant of syntax errors.\n\t\t\t            //\n\t\t\t            // For example, the default mode is MODE.BlockStatement. If we see a '{' we push a new frame of type\n\t\t\t            // MODE.BlockStatement on the the stack, even though it could be object literal.  If we later\n\t\t\t            // encounter a \":\", we'll switch to to MODE.ObjectLiteral.  If we then see a \";\",\n\t\t\t            // most full parsers would die, but the beautifier gracefully falls back to\n\t\t\t            // MODE.BlockStatement and continues on.\n\t\t\t            flag_store = [];\n\t\t\t            set_mode(MODE.BlockStatement);\n\t\t\t\n\t\t\t            this.beautify = function() {\n\t\t\t\n\t\t\t                /*jshint onevar:true */\n\t\t\t                var local_token, sweet_code;\n\t\t\t                Tokenizer = new tokenizer(js_source_text, opt, indent_string);\n\t\t\t                tokens = Tokenizer.tokenize();\n\t\t\t                token_pos = 0;\n\t\t\t\n\t\t\t                function get_local_token() {\n\t\t\t                    local_token = get_token();\n\t\t\t                    return local_token;\n\t\t\t                }\n\t\t\t\n\t\t\t                while (get_local_token()) {\n\t\t\t                    for (var i = 0; i < local_token.comments_before.length; i++) {\n\t\t\t                        // The cleanest handling of inline comments is to treat them as though they aren't there.\n\t\t\t                        // Just continue formatting and the behavior should be logical.\n\t\t\t                        // Also ignore unknown tokens.  Again, this should result in better behavior.\n\t\t\t                        handle_token(local_token.comments_before[i]);\n\t\t\t                    }\n\t\t\t                    handle_token(local_token);\n\t\t\t\n\t\t\t                    last_last_text = flags.last_text;\n\t\t\t                    last_type = local_token.type;\n\t\t\t                    flags.last_text = local_token.text;\n\t\t\t\n\t\t\t                    token_pos += 1;\n\t\t\t                }\n\t\t\t\n\t\t\t                sweet_code = output.get_code();\n\t\t\t                if (opt.end_with_newline) {\n\t\t\t                    sweet_code += '\\n';\n\t\t\t                }\n\t\t\t\n\t\t\t                if (opt.eol !== '\\n') {\n\t\t\t                    sweet_code = sweet_code.replace(/[\\n]/g, opt.eol);\n\t\t\t                }\n\t\t\t\n\t\t\t                return sweet_code;\n\t\t\t            };\n\t\t\t\n\t\t\t            function handle_token(local_token) {\n\t\t\t                var newlines = local_token.newlines;\n\t\t\t                var keep_whitespace = opt.keep_array_indentation && is_array(flags.mode);\n\t\t\t\n\t\t\t                if (keep_whitespace) {\n\t\t\t                    for (var i = 0; i < newlines; i += 1) {\n\t\t\t                        print_newline(i > 0);\n\t\t\t                    }\n\t\t\t                } else {\n\t\t\t                    if (opt.max_preserve_newlines && newlines > opt.max_preserve_newlines) {\n\t\t\t                        newlines = opt.max_preserve_newlines;\n\t\t\t                    }\n\t\t\t\n\t\t\t                    if (opt.preserve_newlines) {\n\t\t\t                        if (local_token.newlines > 1) {\n\t\t\t                            print_newline();\n\t\t\t                            for (var j = 1; j < newlines; j += 1) {\n\t\t\t                                print_newline(true);\n\t\t\t                            }\n\t\t\t                        }\n\t\t\t                    }\n\t\t\t                }\n\t\t\t\n\t\t\t                current_token = local_token;\n\t\t\t                handlers[current_token.type]();\n\t\t\t            }\n\t\t\t\n\t\t\t            // we could use just string.split, but\n\t\t\t            // IE doesn't like returning empty strings\n\t\t\t            function split_linebreaks(s) {\n\t\t\t                //return s.split(/\\x0d\\x0a|\\x0a/);\n\t\t\t\n\t\t\t                s = s.replace(acorn.allLineBreaks, '\\n');\n\t\t\t                var out = [],\n\t\t\t                    idx = s.indexOf(\"\\n\");\n\t\t\t                while (idx !== -1) {\n\t\t\t                    out.push(s.substring(0, idx));\n\t\t\t                    s = s.substring(idx + 1);\n\t\t\t                    idx = s.indexOf(\"\\n\");\n\t\t\t                }\n\t\t\t                if (s.length) {\n\t\t\t                    out.push(s);\n\t\t\t                }\n\t\t\t                return out;\n\t\t\t            }\n\t\t\t\n\t\t\t            var newline_restricted_tokens = ['break', 'continue', 'return', 'throw'];\n\t\t\t\n\t\t\t            function allow_wrap_or_preserved_newline(force_linewrap) {\n\t\t\t                force_linewrap = (force_linewrap === undefined) ? false : force_linewrap;\n\t\t\t\n\t\t\t                // Never wrap the first token on a line\n\t\t\t                if (output.just_added_newline()) {\n\t\t\t                    return;\n\t\t\t                }\n\t\t\t\n\t\t\t                var shouldPreserveOrForce = (opt.preserve_newlines && current_token.wanted_newline) || force_linewrap;\n\t\t\t                var operatorLogicApplies = in_array(flags.last_text, Tokenizer.positionable_operators) || in_array(current_token.text, Tokenizer.positionable_operators);\n\t\t\t\n\t\t\t                if (operatorLogicApplies) {\n\t\t\t                    var shouldPrintOperatorNewline = (\n\t\t\t                            in_array(flags.last_text, Tokenizer.positionable_operators) &&\n\t\t\t                            in_array(opt.operator_position, OPERATOR_POSITION_BEFORE_OR_PRESERVE)\n\t\t\t                        ) ||\n\t\t\t                        in_array(current_token.text, Tokenizer.positionable_operators);\n\t\t\t                    shouldPreserveOrForce = shouldPreserveOrForce && shouldPrintOperatorNewline;\n\t\t\t                }\n\t\t\t\n\t\t\t                if (shouldPreserveOrForce) {\n\t\t\t                    print_newline(false, true);\n\t\t\t                } else if (opt.wrap_line_length) {\n\t\t\t                    if (last_type === 'TK_RESERVED' && in_array(flags.last_text, newline_restricted_tokens)) {\n\t\t\t                        // These tokens should never have a newline inserted\n\t\t\t                        // between them and the following expression.\n\t\t\t                        return;\n\t\t\t                    }\n\t\t\t                    var proposed_line_length = output.current_line.get_character_count() + current_token.text.length +\n\t\t\t                        (output.space_before_token ? 1 : 0);\n\t\t\t                    if (proposed_line_length >= opt.wrap_line_length) {\n\t\t\t                        print_newline(false, true);\n\t\t\t                    }\n\t\t\t                }\n\t\t\t            }\n\t\t\t\n\t\t\t            function print_newline(force_newline, preserve_statement_flags) {\n\t\t\t                if (!preserve_statement_flags) {\n\t\t\t                    if (flags.last_text !== ';' && flags.last_text !== ',' && flags.last_text !== '=' && last_type !== 'TK_OPERATOR') {\n\t\t\t                        while (flags.mode === MODE.Statement && !flags.if_block && !flags.do_block) {\n\t\t\t                            restore_mode();\n\t\t\t                        }\n\t\t\t                    }\n\t\t\t                }\n\t\t\t\n\t\t\t                if (output.add_new_line(force_newline)) {\n\t\t\t                    flags.multiline_frame = true;\n\t\t\t                }\n\t\t\t            }\n\t\t\t\n\t\t\t            function print_token_line_indentation() {\n\t\t\t                if (output.just_added_newline()) {\n\t\t\t                    if (opt.keep_array_indentation && is_array(flags.mode) && current_token.wanted_newline) {\n\t\t\t                        output.current_line.push(current_token.whitespace_before);\n\t\t\t                        output.space_before_token = false;\n\t\t\t                    } else if (output.set_indent(flags.indentation_level)) {\n\t\t\t                        flags.line_indent_level = flags.indentation_level;\n\t\t\t                    }\n\t\t\t                }\n\t\t\t            }\n\t\t\t\n\t\t\t            function print_token(printable_token) {\n\t\t\t                if (output.raw) {\n\t\t\t                    output.add_raw_token(current_token);\n\t\t\t                    return;\n\t\t\t                }\n\t\t\t\n\t\t\t                if (opt.comma_first && last_type === 'TK_COMMA' &&\n\t\t\t                    output.just_added_newline()) {\n\t\t\t                    if (output.previous_line.last() === ',') {\n\t\t\t                        var popped = output.previous_line.pop();\n\t\t\t                        // if the comma was already at the start of the line,\n\t\t\t                        // pull back onto that line and reprint the indentation\n\t\t\t                        if (output.previous_line.is_empty()) {\n\t\t\t                            output.previous_line.push(popped);\n\t\t\t                            output.trim(true);\n\t\t\t                            output.current_line.pop();\n\t\t\t                            output.trim();\n\t\t\t                        }\n\t\t\t\n\t\t\t                        // add the comma in front of the next token\n\t\t\t                        print_token_line_indentation();\n\t\t\t                        output.add_token(',');\n\t\t\t                        output.space_before_token = true;\n\t\t\t                    }\n\t\t\t                }\n\t\t\t\n\t\t\t                printable_token = printable_token || current_token.text;\n\t\t\t                print_token_line_indentation();\n\t\t\t                output.add_token(printable_token);\n\t\t\t            }\n\t\t\t\n\t\t\t            function indent() {\n\t\t\t                flags.indentation_level += 1;\n\t\t\t            }\n\t\t\t\n\t\t\t            function deindent() {\n\t\t\t                if (flags.indentation_level > 0 &&\n\t\t\t                    ((!flags.parent) || flags.indentation_level > flags.parent.indentation_level)) {\n\t\t\t                    flags.indentation_level -= 1;\n\t\t\t\n\t\t\t                }\n\t\t\t            }\n\t\t\t\n\t\t\t            function set_mode(mode) {\n\t\t\t                if (flags) {\n\t\t\t                    flag_store.push(flags);\n\t\t\t                    previous_flags = flags;\n\t\t\t                } else {\n\t\t\t                    previous_flags = create_flags(null, mode);\n\t\t\t                }\n\t\t\t\n\t\t\t                flags = create_flags(previous_flags, mode);\n\t\t\t            }\n\t\t\t\n\t\t\t            function is_array(mode) {\n\t\t\t                return mode === MODE.ArrayLiteral;\n\t\t\t            }\n\t\t\t\n\t\t\t            function is_expression(mode) {\n\t\t\t                return in_array(mode, [MODE.Expression, MODE.ForInitializer, MODE.Conditional]);\n\t\t\t            }\n\t\t\t\n\t\t\t            function restore_mode() {\n\t\t\t                if (flag_store.length > 0) {\n\t\t\t                    previous_flags = flags;\n\t\t\t                    flags = flag_store.pop();\n\t\t\t                    if (previous_flags.mode === MODE.Statement) {\n\t\t\t                        output.remove_redundant_indentation(previous_flags);\n\t\t\t                    }\n\t\t\t                }\n\t\t\t            }\n\t\t\t\n\t\t\t            function start_of_object_property() {\n\t\t\t                return flags.parent.mode === MODE.ObjectLiteral && flags.mode === MODE.Statement && (\n\t\t\t                    (flags.last_text === ':' && flags.ternary_depth === 0) || (last_type === 'TK_RESERVED' && in_array(flags.last_text, ['get', 'set'])));\n\t\t\t            }\n\t\t\t\n\t\t\t            function start_of_statement() {\n\t\t\t                if (\n\t\t\t                    (last_type === 'TK_RESERVED' && in_array(flags.last_text, ['var', 'let', 'const']) && current_token.type === 'TK_WORD') ||\n\t\t\t                    (last_type === 'TK_RESERVED' && flags.last_text === 'do') ||\n\t\t\t                    (last_type === 'TK_RESERVED' && in_array(flags.last_text, ['return', 'throw']) && !current_token.wanted_newline) ||\n\t\t\t                    (last_type === 'TK_RESERVED' && flags.last_text === 'else' && !(current_token.type === 'TK_RESERVED' && current_token.text === 'if')) ||\n\t\t\t                    (last_type === 'TK_END_EXPR' && (previous_flags.mode === MODE.ForInitializer || previous_flags.mode === MODE.Conditional)) ||\n\t\t\t                    (last_type === 'TK_WORD' && flags.mode === MODE.BlockStatement &&\n\t\t\t                        !flags.in_case &&\n\t\t\t                        !(current_token.text === '--' || current_token.text === '++') &&\n\t\t\t                        last_last_text !== 'function' &&\n\t\t\t                        current_token.type !== 'TK_WORD' && current_token.type !== 'TK_RESERVED') ||\n\t\t\t                    (flags.mode === MODE.ObjectLiteral && (\n\t\t\t                        (flags.last_text === ':' && flags.ternary_depth === 0) || (last_type === 'TK_RESERVED' && in_array(flags.last_text, ['get', 'set']))))\n\t\t\t                ) {\n\t\t\t\n\t\t\t                    set_mode(MODE.Statement);\n\t\t\t                    indent();\n\t\t\t\n\t\t\t                    if (last_type === 'TK_RESERVED' && in_array(flags.last_text, ['var', 'let', 'const']) && current_token.type === 'TK_WORD') {\n\t\t\t                        flags.declaration_statement = true;\n\t\t\t                    }\n\t\t\t\n\t\t\t                    // Issue #276:\n\t\t\t                    // If starting a new statement with [if, for, while, do], push to a new line.\n\t\t\t                    // if (a) if (b) if(c) d(); else e(); else f();\n\t\t\t                    if (!start_of_object_property()) {\n\t\t\t                        allow_wrap_or_preserved_newline(\n\t\t\t                            current_token.type === 'TK_RESERVED' && in_array(current_token.text, ['do', 'for', 'if', 'while']));\n\t\t\t                    }\n\t\t\t\n\t\t\t                    return true;\n\t\t\t                }\n\t\t\t                return false;\n\t\t\t            }\n\t\t\t\n\t\t\t            function all_lines_start_with(lines, c) {\n\t\t\t                for (var i = 0; i < lines.length; i++) {\n\t\t\t                    var line = trim(lines[i]);\n\t\t\t                    if (line.charAt(0) !== c) {\n\t\t\t                        return false;\n\t\t\t                    }\n\t\t\t                }\n\t\t\t                return true;\n\t\t\t            }\n\t\t\t\n\t\t\t            function each_line_matches_indent(lines, indent) {\n\t\t\t                var i = 0,\n\t\t\t                    len = lines.length,\n\t\t\t                    line;\n\t\t\t                for (; i < len; i++) {\n\t\t\t                    line = lines[i];\n\t\t\t                    // allow empty lines to pass through\n\t\t\t                    if (line && line.indexOf(indent) !== 0) {\n\t\t\t                        return false;\n\t\t\t                    }\n\t\t\t                }\n\t\t\t                return true;\n\t\t\t            }\n\t\t\t\n\t\t\t            function is_special_word(word) {\n\t\t\t                return in_array(word, ['case', 'return', 'do', 'if', 'throw', 'else']);\n\t\t\t            }\n\t\t\t\n\t\t\t            function get_token(offset) {\n\t\t\t                var index = token_pos + (offset || 0);\n\t\t\t                return (index < 0 || index >= tokens.length) ? null : tokens[index];\n\t\t\t            }\n\t\t\t\n\t\t\t            function handle_start_expr() {\n\t\t\t                if (start_of_statement()) {\n\t\t\t                    // The conditional starts the statement if appropriate.\n\t\t\t                }\n\t\t\t\n\t\t\t                var next_mode = MODE.Expression;\n\t\t\t                if (current_token.text === '[') {\n\t\t\t\n\t\t\t                    if (last_type === 'TK_WORD' || flags.last_text === ')') {\n\t\t\t                        // this is array index specifier, break immediately\n\t\t\t                        // a[x], fn()[x]\n\t\t\t                        if (last_type === 'TK_RESERVED' && in_array(flags.last_text, Tokenizer.line_starters)) {\n\t\t\t                            output.space_before_token = true;\n\t\t\t                        }\n\t\t\t                        set_mode(next_mode);\n\t\t\t                        print_token();\n\t\t\t                        indent();\n\t\t\t                        if (opt.space_in_paren) {\n\t\t\t                            output.space_before_token = true;\n\t\t\t                        }\n\t\t\t                        return;\n\t\t\t                    }\n\t\t\t\n\t\t\t                    next_mode = MODE.ArrayLiteral;\n\t\t\t                    if (is_array(flags.mode)) {\n\t\t\t                        if (flags.last_text === '[' ||\n\t\t\t                            (flags.last_text === ',' && (last_last_text === ']' || last_last_text === '}'))) {\n\t\t\t                            // ], [ goes to new line\n\t\t\t                            // }, [ goes to new line\n\t\t\t                            if (!opt.keep_array_indentation) {\n\t\t\t                                print_newline();\n\t\t\t                            }\n\t\t\t                        }\n\t\t\t                    }\n\t\t\t\n\t\t\t                } else {\n\t\t\t                    if (last_type === 'TK_RESERVED' && flags.last_text === 'for') {\n\t\t\t                        next_mode = MODE.ForInitializer;\n\t\t\t                    } else if (last_type === 'TK_RESERVED' && in_array(flags.last_text, ['if', 'while'])) {\n\t\t\t                        next_mode = MODE.Conditional;\n\t\t\t                    } else {\n\t\t\t                        // next_mode = MODE.Expression;\n\t\t\t                    }\n\t\t\t                }\n\t\t\t\n\t\t\t                if (flags.last_text === ';' || last_type === 'TK_START_BLOCK') {\n\t\t\t                    print_newline();\n\t\t\t                } else if (last_type === 'TK_END_EXPR' || last_type === 'TK_START_EXPR' || last_type === 'TK_END_BLOCK' || flags.last_text === '.') {\n\t\t\t                    // TODO: Consider whether forcing this is required.  Review failing tests when removed.\n\t\t\t                    allow_wrap_or_preserved_newline(current_token.wanted_newline);\n\t\t\t                    // do nothing on (( and )( and ][ and ]( and .(\n\t\t\t                } else if (!(last_type === 'TK_RESERVED' && current_token.text === '(') && last_type !== 'TK_WORD' && last_type !== 'TK_OPERATOR') {\n\t\t\t                    output.space_before_token = true;\n\t\t\t                } else if ((last_type === 'TK_RESERVED' && (flags.last_word === 'function' || flags.last_word === 'typeof')) ||\n\t\t\t                    (flags.last_text === '*' &&\n\t\t\t                        (in_array(last_last_text, ['function', 'yield']) ||\n\t\t\t                            (flags.mode === MODE.ObjectLiteral && in_array(last_last_text, ['{', ',']))))) {\n\t\t\t                    // function() vs function ()\n\t\t\t                    // yield*() vs yield* ()\n\t\t\t                    // function*() vs function* ()\n\t\t\t                    if (opt.space_after_anon_function) {\n\t\t\t                        output.space_before_token = true;\n\t\t\t                    }\n\t\t\t                } else if (last_type === 'TK_RESERVED' && (in_array(flags.last_text, Tokenizer.line_starters) || flags.last_text === 'catch')) {\n\t\t\t                    if (opt.space_before_conditional) {\n\t\t\t                        output.space_before_token = true;\n\t\t\t                    }\n\t\t\t                }\n\t\t\t\n\t\t\t                // Should be a space between await and an IIFE\n\t\t\t                if (current_token.text === '(' && last_type === 'TK_RESERVED' && flags.last_word === 'await') {\n\t\t\t                    output.space_before_token = true;\n\t\t\t                }\n\t\t\t\n\t\t\t                // Support of this kind of newline preservation.\n\t\t\t                // a = (b &&\n\t\t\t                //     (c || d));\n\t\t\t                if (current_token.text === '(') {\n\t\t\t                    if (last_type === 'TK_EQUALS' || last_type === 'TK_OPERATOR') {\n\t\t\t                        if (!start_of_object_property()) {\n\t\t\t                            allow_wrap_or_preserved_newline();\n\t\t\t                        }\n\t\t\t                    }\n\t\t\t                }\n\t\t\t\n\t\t\t                // Support preserving wrapped arrow function expressions\n\t\t\t                // a.b('c',\n\t\t\t                //     () => d.e\n\t\t\t                // )\n\t\t\t                if (current_token.text === '(' && last_type !== 'TK_WORD' && last_type !== 'TK_RESERVED') {\n\t\t\t                    allow_wrap_or_preserved_newline();\n\t\t\t                }\n\t\t\t\n\t\t\t                set_mode(next_mode);\n\t\t\t                print_token();\n\t\t\t                if (opt.space_in_paren) {\n\t\t\t                    output.space_before_token = true;\n\t\t\t                }\n\t\t\t\n\t\t\t                // In all cases, if we newline while inside an expression it should be indented.\n\t\t\t                indent();\n\t\t\t            }\n\t\t\t\n\t\t\t            function handle_end_expr() {\n\t\t\t                // statements inside expressions are not valid syntax, but...\n\t\t\t                // statements must all be closed when their container closes\n\t\t\t                while (flags.mode === MODE.Statement) {\n\t\t\t                    restore_mode();\n\t\t\t                }\n\t\t\t\n\t\t\t                if (flags.multiline_frame) {\n\t\t\t                    allow_wrap_or_preserved_newline(current_token.text === ']' && is_array(flags.mode) && !opt.keep_array_indentation);\n\t\t\t                }\n\t\t\t\n\t\t\t                if (opt.space_in_paren) {\n\t\t\t                    if (last_type === 'TK_START_EXPR' && !opt.space_in_empty_paren) {\n\t\t\t                        // () [] no inner space in empty parens like these, ever, ref #320\n\t\t\t                        output.trim();\n\t\t\t                        output.space_before_token = false;\n\t\t\t                    } else {\n\t\t\t                        output.space_before_token = true;\n\t\t\t                    }\n\t\t\t                }\n\t\t\t                if (current_token.text === ']' && opt.keep_array_indentation) {\n\t\t\t                    print_token();\n\t\t\t                    restore_mode();\n\t\t\t                } else {\n\t\t\t                    restore_mode();\n\t\t\t                    print_token();\n\t\t\t                }\n\t\t\t                output.remove_redundant_indentation(previous_flags);\n\t\t\t\n\t\t\t                // do {} while () // no statement required after\n\t\t\t                if (flags.do_while && previous_flags.mode === MODE.Conditional) {\n\t\t\t                    previous_flags.mode = MODE.Expression;\n\t\t\t                    flags.do_block = false;\n\t\t\t                    flags.do_while = false;\n\t\t\t\n\t\t\t                }\n\t\t\t            }\n\t\t\t\n\t\t\t            function handle_start_block() {\n\t\t\t                // Check if this is should be treated as a ObjectLiteral\n\t\t\t                var next_token = get_token(1);\n\t\t\t                var second_token = get_token(2);\n\t\t\t                if (second_token && (\n\t\t\t                        (in_array(second_token.text, [':', ',']) && in_array(next_token.type, ['TK_STRING', 'TK_WORD', 'TK_RESERVED'])) ||\n\t\t\t                        (in_array(next_token.text, ['get', 'set']) && in_array(second_token.type, ['TK_WORD', 'TK_RESERVED']))\n\t\t\t                    )) {\n\t\t\t                    // We don't support TypeScript,but we didn't break it for a very long time.\n\t\t\t                    // We'll try to keep not breaking it.\n\t\t\t                    if (!in_array(last_last_text, ['class', 'interface'])) {\n\t\t\t                        set_mode(MODE.ObjectLiteral);\n\t\t\t                    } else {\n\t\t\t                        set_mode(MODE.BlockStatement);\n\t\t\t                    }\n\t\t\t                } else if (last_type === 'TK_OPERATOR' && flags.last_text === '=>') {\n\t\t\t                    // arrow function: (param1, paramN) => { statements }\n\t\t\t                    set_mode(MODE.BlockStatement);\n\t\t\t                } else if (in_array(last_type, ['TK_EQUALS', 'TK_START_EXPR', 'TK_COMMA', 'TK_OPERATOR']) ||\n\t\t\t                    (last_type === 'TK_RESERVED' && in_array(flags.last_text, ['return', 'throw', 'import', 'default']))\n\t\t\t                ) {\n\t\t\t                    // Detecting shorthand function syntax is difficult by scanning forward,\n\t\t\t                    //     so check the surrounding context.\n\t\t\t                    // If the block is being returned, imported, export default, passed as arg,\n\t\t\t                    //     assigned with = or assigned in a nested object, treat as an ObjectLiteral.\n\t\t\t                    set_mode(MODE.ObjectLiteral);\n\t\t\t                } else {\n\t\t\t                    set_mode(MODE.BlockStatement);\n\t\t\t                }\n\t\t\t\n\t\t\t                var empty_braces = !next_token.comments_before.length && next_token.text === '}';\n\t\t\t                var empty_anonymous_function = empty_braces && flags.last_word === 'function' &&\n\t\t\t                    last_type === 'TK_END_EXPR';\n\t\t\t\n\t\t\t\n\t\t\t                if (opt.brace_style === \"expand\" ||\n\t\t\t                    (opt.brace_style === \"none\" && current_token.wanted_newline)) {\n\t\t\t                    if (last_type !== 'TK_OPERATOR' &&\n\t\t\t                        (empty_anonymous_function ||\n\t\t\t                            last_type === 'TK_EQUALS' ||\n\t\t\t                            (last_type === 'TK_RESERVED' && is_special_word(flags.last_text) && flags.last_text !== 'else'))) {\n\t\t\t                        output.space_before_token = true;\n\t\t\t                    } else {\n\t\t\t                        print_newline(false, true);\n\t\t\t                    }\n\t\t\t                } else { // collapse\n\t\t\t                    if (opt.brace_style === 'collapse-preserve-inline') {\n\t\t\t                        // search forward for a newline wanted inside this block\n\t\t\t                        var index = 0;\n\t\t\t                        var check_token = null;\n\t\t\t                        flags.inline_frame = true;\n\t\t\t                        do {\n\t\t\t                            index += 1;\n\t\t\t                            check_token = get_token(index);\n\t\t\t                            if (check_token.wanted_newline) {\n\t\t\t                                flags.inline_frame = false;\n\t\t\t                                break;\n\t\t\t                            }\n\t\t\t                        } while (check_token.type !== 'TK_EOF' &&\n\t\t\t                            !(check_token.type === 'TK_END_BLOCK' && check_token.opened === current_token));\n\t\t\t                    }\n\t\t\t\n\t\t\t                    if (is_array(previous_flags.mode) && (last_type === 'TK_START_EXPR' || last_type === 'TK_COMMA')) {\n\t\t\t                        // if we're preserving inline,\n\t\t\t                        // allow newline between comma and next brace.\n\t\t\t                        if (last_type === 'TK_COMMA' || opt.space_in_paren) {\n\t\t\t                            output.space_before_token = true;\n\t\t\t                        }\n\t\t\t\n\t\t\t                        if (opt.brace_style === 'collapse-preserve-inline' &&\n\t\t\t                            (last_type === 'TK_COMMA' || (last_type === 'TK_START_EXPR' && flags.inline_frame))) {\n\t\t\t                            allow_wrap_or_preserved_newline();\n\t\t\t                            previous_flags.multiline_frame = previous_flags.multiline_frame || flags.multiline_frame;\n\t\t\t                            flags.multiline_frame = false;\n\t\t\t                        }\n\t\t\t                    } else if (last_type !== 'TK_OPERATOR' && last_type !== 'TK_START_EXPR') {\n\t\t\t                        if (last_type === 'TK_START_BLOCK') {\n\t\t\t                            print_newline();\n\t\t\t                        } else {\n\t\t\t                            output.space_before_token = true;\n\t\t\t                        }\n\t\t\t                    }\n\t\t\t                }\n\t\t\t                print_token();\n\t\t\t                indent();\n\t\t\t            }\n\t\t\t\n\t\t\t            function handle_end_block() {\n\t\t\t                // statements must all be closed when their container closes\n\t\t\t                while (flags.mode === MODE.Statement) {\n\t\t\t                    restore_mode();\n\t\t\t                }\n\t\t\t                var empty_braces = last_type === 'TK_START_BLOCK';\n\t\t\t\n\t\t\t                if (opt.brace_style === \"expand\") {\n\t\t\t                    if (!empty_braces) {\n\t\t\t                        print_newline();\n\t\t\t                    }\n\t\t\t                } else {\n\t\t\t                    // skip {}\n\t\t\t                    if (!empty_braces) {\n\t\t\t                        if (flags.inline_frame) {\n\t\t\t                            output.space_before_token = true;\n\t\t\t                        } else if (is_array(flags.mode) && opt.keep_array_indentation) {\n\t\t\t                            // we REALLY need a newline here, but newliner would skip that\n\t\t\t                            opt.keep_array_indentation = false;\n\t\t\t                            print_newline();\n\t\t\t                            opt.keep_array_indentation = true;\n\t\t\t\n\t\t\t                        } else {\n\t\t\t                            print_newline();\n\t\t\t                        }\n\t\t\t                    }\n\t\t\t                }\n\t\t\t                restore_mode();\n\t\t\t                print_token();\n\t\t\t            }\n\t\t\t\n\t\t\t            function handle_word() {\n\t\t\t                if (current_token.type === 'TK_RESERVED') {\n\t\t\t                    if (in_array(current_token.text, ['set', 'get']) && flags.mode !== MODE.ObjectLiteral) {\n\t\t\t                        current_token.type = 'TK_WORD';\n\t\t\t                    } else if (in_array(current_token.text, ['as', 'from']) && !flags.import_block) {\n\t\t\t                        current_token.type = 'TK_WORD';\n\t\t\t                    } else if (flags.mode === MODE.ObjectLiteral) {\n\t\t\t                        var next_token = get_token(1);\n\t\t\t                        if (next_token.text === ':') {\n\t\t\t                            current_token.type = 'TK_WORD';\n\t\t\t                        }\n\t\t\t                    }\n\t\t\t                }\n\t\t\t\n\t\t\t                if (start_of_statement()) {\n\t\t\t                    // The conditional starts the statement if appropriate.\n\t\t\t                } else if (current_token.wanted_newline && !is_expression(flags.mode) &&\n\t\t\t                    (last_type !== 'TK_OPERATOR' || (flags.last_text === '--' || flags.last_text === '++')) &&\n\t\t\t                    last_type !== 'TK_EQUALS' &&\n\t\t\t                    (opt.preserve_newlines || !(last_type === 'TK_RESERVED' && in_array(flags.last_text, ['var', 'let', 'const', 'set', 'get'])))) {\n\t\t\t\n\t\t\t                    print_newline();\n\t\t\t                }\n\t\t\t\n\t\t\t                if (flags.do_block && !flags.do_while) {\n\t\t\t                    if (current_token.type === 'TK_RESERVED' && current_token.text === 'while') {\n\t\t\t                        // do {} ## while ()\n\t\t\t                        output.space_before_token = true;\n\t\t\t                        print_token();\n\t\t\t                        output.space_before_token = true;\n\t\t\t                        flags.do_while = true;\n\t\t\t                        return;\n\t\t\t                    } else {\n\t\t\t                        // do {} should always have while as the next word.\n\t\t\t                        // if we don't see the expected while, recover\n\t\t\t                        print_newline();\n\t\t\t                        flags.do_block = false;\n\t\t\t                    }\n\t\t\t                }\n\t\t\t\n\t\t\t                // if may be followed by else, or not\n\t\t\t                // Bare/inline ifs are tricky\n\t\t\t                // Need to unwind the modes correctly: if (a) if (b) c(); else d(); else e();\n\t\t\t                if (flags.if_block) {\n\t\t\t                    if (!flags.else_block && (current_token.type === 'TK_RESERVED' && current_token.text === 'else')) {\n\t\t\t                        flags.else_block = true;\n\t\t\t                    } else {\n\t\t\t                        while (flags.mode === MODE.Statement) {\n\t\t\t                            restore_mode();\n\t\t\t                        }\n\t\t\t                        flags.if_block = false;\n\t\t\t                        flags.else_block = false;\n\t\t\t                    }\n\t\t\t                }\n\t\t\t\n\t\t\t                if (current_token.type === 'TK_RESERVED' && (current_token.text === 'case' || (current_token.text === 'default' && flags.in_case_statement))) {\n\t\t\t                    print_newline();\n\t\t\t                    if (flags.case_body || opt.jslint_happy) {\n\t\t\t                        // switch cases following one another\n\t\t\t                        deindent();\n\t\t\t                        flags.case_body = false;\n\t\t\t                    }\n\t\t\t                    print_token();\n\t\t\t                    flags.in_case = true;\n\t\t\t                    flags.in_case_statement = true;\n\t\t\t                    return;\n\t\t\t                }\n\t\t\t\n\t\t\t                if (current_token.type === 'TK_RESERVED' && current_token.text === 'function') {\n\t\t\t                    if (in_array(flags.last_text, ['}', ';']) || (output.just_added_newline() && !in_array(flags.last_text, ['[', '{', ':', '=', ',']))) {\n\t\t\t                        // make sure there is a nice clean space of at least one blank line\n\t\t\t                        // before a new function definition\n\t\t\t                        if (!output.just_added_blankline() && !current_token.comments_before.length) {\n\t\t\t                            print_newline();\n\t\t\t                            print_newline(true);\n\t\t\t                        }\n\t\t\t                    }\n\t\t\t                    if (last_type === 'TK_RESERVED' || last_type === 'TK_WORD') {\n\t\t\t                        if (last_type === 'TK_RESERVED' && in_array(flags.last_text, ['get', 'set', 'new', 'return', 'export', 'async'])) {\n\t\t\t                            output.space_before_token = true;\n\t\t\t                        } else if (last_type === 'TK_RESERVED' && flags.last_text === 'default' && last_last_text === 'export') {\n\t\t\t                            output.space_before_token = true;\n\t\t\t                        } else {\n\t\t\t                            print_newline();\n\t\t\t                        }\n\t\t\t                    } else if (last_type === 'TK_OPERATOR' || flags.last_text === '=') {\n\t\t\t                        // foo = function\n\t\t\t                        output.space_before_token = true;\n\t\t\t                    } else if (!flags.multiline_frame && (is_expression(flags.mode) || is_array(flags.mode))) {\n\t\t\t                        // (function\n\t\t\t                    } else {\n\t\t\t                        print_newline();\n\t\t\t                    }\n\t\t\t                }\n\t\t\t\n\t\t\t                if (last_type === 'TK_COMMA' || last_type === 'TK_START_EXPR' || last_type === 'TK_EQUALS' || last_type === 'TK_OPERATOR') {\n\t\t\t                    if (!start_of_object_property()) {\n\t\t\t                        allow_wrap_or_preserved_newline();\n\t\t\t                    }\n\t\t\t                }\n\t\t\t\n\t\t\t                if (current_token.type === 'TK_RESERVED' && in_array(current_token.text, ['function', 'get', 'set'])) {\n\t\t\t                    print_token();\n\t\t\t                    flags.last_word = current_token.text;\n\t\t\t                    return;\n\t\t\t                }\n\t\t\t\n\t\t\t                prefix = 'NONE';\n\t\t\t\n\t\t\t                if (last_type === 'TK_END_BLOCK') {\n\t\t\t\n\t\t\t                    if (!(current_token.type === 'TK_RESERVED' && in_array(current_token.text, ['else', 'catch', 'finally', 'from']))) {\n\t\t\t                        prefix = 'NEWLINE';\n\t\t\t                    } else {\n\t\t\t                        if (opt.brace_style === \"expand\" ||\n\t\t\t                            opt.brace_style === \"end-expand\" ||\n\t\t\t                            (opt.brace_style === \"none\" && current_token.wanted_newline)) {\n\t\t\t                            prefix = 'NEWLINE';\n\t\t\t                        } else {\n\t\t\t                            prefix = 'SPACE';\n\t\t\t                            output.space_before_token = true;\n\t\t\t                        }\n\t\t\t                    }\n\t\t\t                } else if (last_type === 'TK_SEMICOLON' && flags.mode === MODE.BlockStatement) {\n\t\t\t                    // TODO: Should this be for STATEMENT as well?\n\t\t\t                    prefix = 'NEWLINE';\n\t\t\t                } else if (last_type === 'TK_SEMICOLON' && is_expression(flags.mode)) {\n\t\t\t                    prefix = 'SPACE';\n\t\t\t                } else if (last_type === 'TK_STRING') {\n\t\t\t                    prefix = 'NEWLINE';\n\t\t\t                } else if (last_type === 'TK_RESERVED' || last_type === 'TK_WORD' ||\n\t\t\t                    (flags.last_text === '*' &&\n\t\t\t                        (in_array(last_last_text, ['function', 'yield']) ||\n\t\t\t                            (flags.mode === MODE.ObjectLiteral && in_array(last_last_text, ['{', ',']))))) {\n\t\t\t                    prefix = 'SPACE';\n\t\t\t                } else if (last_type === 'TK_START_BLOCK') {\n\t\t\t                    if (flags.inline_frame) {\n\t\t\t                        prefix = 'SPACE';\n\t\t\t                    } else {\n\t\t\t                        prefix = 'NEWLINE';\n\t\t\t                    }\n\t\t\t                } else if (last_type === 'TK_END_EXPR') {\n\t\t\t                    output.space_before_token = true;\n\t\t\t                    prefix = 'NEWLINE';\n\t\t\t                }\n\t\t\t\n\t\t\t                if (current_token.type === 'TK_RESERVED' && in_array(current_token.text, Tokenizer.line_starters) && flags.last_text !== ')') {\n\t\t\t                    if (flags.inline_frame || flags.last_text === 'else' || flags.last_text === 'export') {\n\t\t\t                        prefix = 'SPACE';\n\t\t\t                    } else {\n\t\t\t                        prefix = 'NEWLINE';\n\t\t\t                    }\n\t\t\t\n\t\t\t                }\n\t\t\t\n\t\t\t                if (current_token.type === 'TK_RESERVED' && in_array(current_token.text, ['else', 'catch', 'finally'])) {\n\t\t\t                    if (!(last_type === 'TK_END_BLOCK' && previous_flags.mode === MODE.BlockStatement) ||\n\t\t\t                        opt.brace_style === \"expand\" ||\n\t\t\t                        opt.brace_style === \"end-expand\" ||\n\t\t\t                        (opt.brace_style === \"none\" && current_token.wanted_newline)) {\n\t\t\t                        print_newline();\n\t\t\t                    } else {\n\t\t\t                        output.trim(true);\n\t\t\t                        var line = output.current_line;\n\t\t\t                        // If we trimmed and there's something other than a close block before us\n\t\t\t                        // put a newline back in.  Handles '} // comment' scenario.\n\t\t\t                        if (line.last() !== '}') {\n\t\t\t                            print_newline();\n\t\t\t                        }\n\t\t\t                        output.space_before_token = true;\n\t\t\t                    }\n\t\t\t                } else if (prefix === 'NEWLINE') {\n\t\t\t                    if (last_type === 'TK_RESERVED' && is_special_word(flags.last_text)) {\n\t\t\t                        // no newline between 'return nnn'\n\t\t\t                        output.space_before_token = true;\n\t\t\t                    } else if (last_type !== 'TK_END_EXPR') {\n\t\t\t                        if ((last_type !== 'TK_START_EXPR' || !(current_token.type === 'TK_RESERVED' && in_array(current_token.text, ['var', 'let', 'const']))) && flags.last_text !== ':') {\n\t\t\t                            // no need to force newline on 'var': for (var x = 0...)\n\t\t\t                            if (current_token.type === 'TK_RESERVED' && current_token.text === 'if' && flags.last_text === 'else') {\n\t\t\t                                // no newline for } else if {\n\t\t\t                                output.space_before_token = true;\n\t\t\t                            } else {\n\t\t\t                                print_newline();\n\t\t\t                            }\n\t\t\t                        }\n\t\t\t                    } else if (current_token.type === 'TK_RESERVED' && in_array(current_token.text, Tokenizer.line_starters) && flags.last_text !== ')') {\n\t\t\t                        print_newline();\n\t\t\t                    }\n\t\t\t                } else if (flags.multiline_frame && is_array(flags.mode) && flags.last_text === ',' && last_last_text === '}') {\n\t\t\t                    print_newline(); // }, in lists get a newline treatment\n\t\t\t                } else if (prefix === 'SPACE') {\n\t\t\t                    output.space_before_token = true;\n\t\t\t                }\n\t\t\t                print_token();\n\t\t\t                flags.last_word = current_token.text;\n\t\t\t\n\t\t\t                if (current_token.type === 'TK_RESERVED') {\n\t\t\t                    if (current_token.text === 'do') {\n\t\t\t                        flags.do_block = true;\n\t\t\t                    } else if (current_token.text === 'if') {\n\t\t\t                        flags.if_block = true;\n\t\t\t                    } else if (current_token.text === 'import') {\n\t\t\t                        flags.import_block = true;\n\t\t\t                    } else if (flags.import_block && current_token.type === 'TK_RESERVED' && current_token.text === 'from') {\n\t\t\t                        flags.import_block = false;\n\t\t\t                    }\n\t\t\t                }\n\t\t\t            }\n\t\t\t\n\t\t\t            function handle_semicolon() {\n\t\t\t                if (start_of_statement()) {\n\t\t\t                    // The conditional starts the statement if appropriate.\n\t\t\t                    // Semicolon can be the start (and end) of a statement\n\t\t\t                    output.space_before_token = false;\n\t\t\t                }\n\t\t\t                while (flags.mode === MODE.Statement && !flags.if_block && !flags.do_block) {\n\t\t\t                    restore_mode();\n\t\t\t                }\n\t\t\t\n\t\t\t                // hacky but effective for the moment\n\t\t\t                if (flags.import_block) {\n\t\t\t                    flags.import_block = false;\n\t\t\t                }\n\t\t\t                print_token();\n\t\t\t            }\n\t\t\t\n\t\t\t            function handle_string() {\n\t\t\t                if (start_of_statement()) {\n\t\t\t                    // The conditional starts the statement if appropriate.\n\t\t\t                    // One difference - strings want at least a space before\n\t\t\t                    output.space_before_token = true;\n\t\t\t                } else if (last_type === 'TK_RESERVED' || last_type === 'TK_WORD' || flags.inline_frame) {\n\t\t\t                    output.space_before_token = true;\n\t\t\t                } else if (last_type === 'TK_COMMA' || last_type === 'TK_START_EXPR' || last_type === 'TK_EQUALS' || last_type === 'TK_OPERATOR') {\n\t\t\t                    if (!start_of_object_property()) {\n\t\t\t                        allow_wrap_or_preserved_newline();\n\t\t\t                    }\n\t\t\t                } else {\n\t\t\t                    print_newline();\n\t\t\t                }\n\t\t\t                print_token();\n\t\t\t            }\n\t\t\t\n\t\t\t            function handle_equals() {\n\t\t\t                if (start_of_statement()) {\n\t\t\t                    // The conditional starts the statement if appropriate.\n\t\t\t                }\n\t\t\t\n\t\t\t                if (flags.declaration_statement) {\n\t\t\t                    // just got an '=' in a var-line, different formatting/line-breaking, etc will now be done\n\t\t\t                    flags.declaration_assignment = true;\n\t\t\t                }\n\t\t\t                output.space_before_token = true;\n\t\t\t                print_token();\n\t\t\t                output.space_before_token = true;\n\t\t\t            }\n\t\t\t\n\t\t\t            function handle_comma() {\n\t\t\t                print_token();\n\t\t\t                output.space_before_token = true;\n\t\t\t                if (flags.declaration_statement) {\n\t\t\t                    if (is_expression(flags.parent.mode)) {\n\t\t\t                        // do not break on comma, for(var a = 1, b = 2)\n\t\t\t                        flags.declaration_assignment = false;\n\t\t\t                    }\n\t\t\t\n\t\t\t                    if (flags.declaration_assignment) {\n\t\t\t                        flags.declaration_assignment = false;\n\t\t\t                        print_newline(false, true);\n\t\t\t                    } else if (opt.comma_first) {\n\t\t\t                        // for comma-first, we want to allow a newline before the comma\n\t\t\t                        // to turn into a newline after the comma, which we will fixup later\n\t\t\t                        allow_wrap_or_preserved_newline();\n\t\t\t                    }\n\t\t\t                } else if (flags.mode === MODE.ObjectLiteral ||\n\t\t\t                    (flags.mode === MODE.Statement && flags.parent.mode === MODE.ObjectLiteral)) {\n\t\t\t                    if (flags.mode === MODE.Statement) {\n\t\t\t                        restore_mode();\n\t\t\t                    }\n\t\t\t\n\t\t\t                    if (!flags.inline_frame) {\n\t\t\t                        print_newline();\n\t\t\t                    }\n\t\t\t                } else if (opt.comma_first) {\n\t\t\t                    // EXPR or DO_BLOCK\n\t\t\t                    // for comma-first, we want to allow a newline before the comma\n\t\t\t                    // to turn into a newline after the comma, which we will fixup later\n\t\t\t                    allow_wrap_or_preserved_newline();\n\t\t\t                }\n\t\t\t            }\n\t\t\t\n\t\t\t            function handle_operator() {\n\t\t\t                if (start_of_statement()) {\n\t\t\t                    // The conditional starts the statement if appropriate.\n\t\t\t                }\n\t\t\t\n\t\t\t                if (last_type === 'TK_RESERVED' && is_special_word(flags.last_text)) {\n\t\t\t                    // \"return\" had a special handling in TK_WORD. Now we need to return the favor\n\t\t\t                    output.space_before_token = true;\n\t\t\t                    print_token();\n\t\t\t                    return;\n\t\t\t                }\n\t\t\t\n\t\t\t                // hack for actionscript's import .*;\n\t\t\t                if (current_token.text === '*' && last_type === 'TK_DOT') {\n\t\t\t                    print_token();\n\t\t\t                    return;\n\t\t\t                }\n\t\t\t\n\t\t\t                if (current_token.text === '::') {\n\t\t\t                    // no spaces around exotic namespacing syntax operator\n\t\t\t                    print_token();\n\t\t\t                    return;\n\t\t\t                }\n\t\t\t\n\t\t\t                // Allow line wrapping between operators when operator_position is\n\t\t\t                //   set to before or preserve\n\t\t\t                if (last_type === 'TK_OPERATOR' && in_array(opt.operator_position, OPERATOR_POSITION_BEFORE_OR_PRESERVE)) {\n\t\t\t                    allow_wrap_or_preserved_newline();\n\t\t\t                }\n\t\t\t\n\t\t\t                if (current_token.text === ':' && flags.in_case) {\n\t\t\t                    flags.case_body = true;\n\t\t\t                    indent();\n\t\t\t                    print_token();\n\t\t\t                    print_newline();\n\t\t\t                    flags.in_case = false;\n\t\t\t                    return;\n\t\t\t                }\n\t\t\t\n\t\t\t                var space_before = true;\n\t\t\t                var space_after = true;\n\t\t\t                var in_ternary = false;\n\t\t\t                var isGeneratorAsterisk = current_token.text === '*' &&\n\t\t\t                    ((last_type === 'TK_RESERVED' && in_array(flags.last_text, ['function', 'yield'])) ||\n\t\t\t                        (flags.mode === MODE.ObjectLiteral && in_array(last_type, ['TK_START_BLOCK', 'TK_COMMA'])));\n\t\t\t                var isUnary = in_array(current_token.text, ['-', '+']) && (\n\t\t\t                    in_array(last_type, ['TK_START_BLOCK', 'TK_START_EXPR', 'TK_EQUALS', 'TK_OPERATOR']) ||\n\t\t\t                    in_array(flags.last_text, Tokenizer.line_starters) ||\n\t\t\t                    flags.last_text === ','\n\t\t\t                );\n\t\t\t\n\t\t\t                if (current_token.text === ':') {\n\t\t\t                    if (flags.ternary_depth === 0) {\n\t\t\t                        // Colon is invalid javascript outside of ternary and object, but do our best to guess what was meant.\n\t\t\t                        space_before = false;\n\t\t\t                    } else {\n\t\t\t                        flags.ternary_depth -= 1;\n\t\t\t                        in_ternary = true;\n\t\t\t                    }\n\t\t\t                } else if (current_token.text === '?') {\n\t\t\t                    flags.ternary_depth += 1;\n\t\t\t                }\n\t\t\t\n\t\t\t                // let's handle the operator_position option prior to any conflicting logic\n\t\t\t                if (!isUnary && !isGeneratorAsterisk && opt.preserve_newlines && in_array(current_token.text, Tokenizer.positionable_operators)) {\n\t\t\t                    var isColon = current_token.text === ':';\n\t\t\t                    var isTernaryColon = (isColon && in_ternary);\n\t\t\t                    var isOtherColon = (isColon && !in_ternary);\n\t\t\t\n\t\t\t                    switch (opt.operator_position) {\n\t\t\t                        case OPERATOR_POSITION.before_newline:\n\t\t\t                            // if the current token is : and it's not a ternary statement then we set space_before to false\n\t\t\t                            output.space_before_token = !isOtherColon;\n\t\t\t\n\t\t\t                            print_token();\n\t\t\t\n\t\t\t                            if (!isColon || isTernaryColon) {\n\t\t\t                                allow_wrap_or_preserved_newline();\n\t\t\t                            }\n\t\t\t\n\t\t\t                            output.space_before_token = true;\n\t\t\t                            return;\n\t\t\t\n\t\t\t                        case OPERATOR_POSITION.after_newline:\n\t\t\t                            // if the current token is anything but colon, or (via deduction) it's a colon and in a ternary statement,\n\t\t\t                            //   then print a newline.\n\t\t\t\n\t\t\t                            output.space_before_token = true;\n\t\t\t\n\t\t\t                            if (!isColon || isTernaryColon) {\n\t\t\t                                if (get_token(1).wanted_newline) {\n\t\t\t                                    print_newline(false, true);\n\t\t\t                                } else {\n\t\t\t                                    allow_wrap_or_preserved_newline();\n\t\t\t                                }\n\t\t\t                            } else {\n\t\t\t                                output.space_before_token = false;\n\t\t\t                            }\n\t\t\t\n\t\t\t                            print_token();\n\t\t\t\n\t\t\t                            output.space_before_token = true;\n\t\t\t                            return;\n\t\t\t\n\t\t\t                        case OPERATOR_POSITION.preserve_newline:\n\t\t\t                            if (!isOtherColon) {\n\t\t\t                                allow_wrap_or_preserved_newline();\n\t\t\t                            }\n\t\t\t\n\t\t\t                            // if we just added a newline, or the current token is : and it's not a ternary statement,\n\t\t\t                            //   then we set space_before to false\n\t\t\t                            space_before = !(output.just_added_newline() || isOtherColon);\n\t\t\t\n\t\t\t                            output.space_before_token = space_before;\n\t\t\t                            print_token();\n\t\t\t                            output.space_before_token = true;\n\t\t\t                            return;\n\t\t\t                    }\n\t\t\t                }\n\t\t\t\n\t\t\t                if (in_array(current_token.text, ['--', '++', '!', '~']) || isUnary) {\n\t\t\t                    // unary operators (and binary +/- pretending to be unary) special cases\n\t\t\t\n\t\t\t                    space_before = false;\n\t\t\t                    space_after = false;\n\t\t\t\n\t\t\t                    // http://www.ecma-international.org/ecma-262/5.1/#sec-7.9.1\n\t\t\t                    // if there is a newline between -- or ++ and anything else we should preserve it.\n\t\t\t                    if (current_token.wanted_newline && (current_token.text === '--' || current_token.text === '++')) {\n\t\t\t                        print_newline(false, true);\n\t\t\t                    }\n\t\t\t\n\t\t\t                    if (flags.last_text === ';' && is_expression(flags.mode)) {\n\t\t\t                        // for (;; ++i)\n\t\t\t                        //        ^^^\n\t\t\t                        space_before = true;\n\t\t\t                    }\n\t\t\t\n\t\t\t                    if (last_type === 'TK_RESERVED') {\n\t\t\t                        space_before = true;\n\t\t\t                    } else if (last_type === 'TK_END_EXPR') {\n\t\t\t                        space_before = !(flags.last_text === ']' && (current_token.text === '--' || current_token.text === '++'));\n\t\t\t                    } else if (last_type === 'TK_OPERATOR') {\n\t\t\t                        // a++ + ++b;\n\t\t\t                        // a - -b\n\t\t\t                        space_before = in_array(current_token.text, ['--', '-', '++', '+']) && in_array(flags.last_text, ['--', '-', '++', '+']);\n\t\t\t                        // + and - are not unary when preceeded by -- or ++ operator\n\t\t\t                        // a-- + b\n\t\t\t                        // a * +b\n\t\t\t                        // a - -b\n\t\t\t                        if (in_array(current_token.text, ['+', '-']) && in_array(flags.last_text, ['--', '++'])) {\n\t\t\t                            space_after = true;\n\t\t\t                        }\n\t\t\t                    }\n\t\t\t\n\t\t\t\n\t\t\t                    if (((flags.mode === MODE.BlockStatement && !flags.inline_frame) || flags.mode === MODE.Statement) &&\n\t\t\t                        (flags.last_text === '{' || flags.last_text === ';')) {\n\t\t\t                        // { foo; --i }\n\t\t\t                        // foo(); --bar;\n\t\t\t                        print_newline();\n\t\t\t                    }\n\t\t\t                } else if (isGeneratorAsterisk) {\n\t\t\t                    allow_wrap_or_preserved_newline();\n\t\t\t                    space_before = false;\n\t\t\t                    space_after = false;\n\t\t\t                }\n\t\t\t                output.space_before_token = output.space_before_token || space_before;\n\t\t\t                print_token();\n\t\t\t                output.space_before_token = space_after;\n\t\t\t            }\n\t\t\t\n\t\t\t            function handle_block_comment() {\n\t\t\t                if (output.raw) {\n\t\t\t                    output.add_raw_token(current_token);\n\t\t\t                    if (current_token.directives && current_token.directives.preserve === 'end') {\n\t\t\t                        // If we're testing the raw output behavior, do not allow a directive to turn it off.\n\t\t\t                        output.raw = opt.test_output_raw;\n\t\t\t                    }\n\t\t\t                    return;\n\t\t\t                }\n\t\t\t\n\t\t\t                if (current_token.directives) {\n\t\t\t                    print_newline(false, true);\n\t\t\t                    print_token();\n\t\t\t                    if (current_token.directives.preserve === 'start') {\n\t\t\t                        output.raw = true;\n\t\t\t                    }\n\t\t\t                    print_newline(false, true);\n\t\t\t                    return;\n\t\t\t                }\n\t\t\t\n\t\t\t                // inline block\n\t\t\t                if (!acorn.newline.test(current_token.text) && !current_token.wanted_newline) {\n\t\t\t                    output.space_before_token = true;\n\t\t\t                    print_token();\n\t\t\t                    output.space_before_token = true;\n\t\t\t                    return;\n\t\t\t                }\n\t\t\t\n\t\t\t                var lines = split_linebreaks(current_token.text);\n\t\t\t                var j; // iterator for this case\n\t\t\t                var javadoc = false;\n\t\t\t                var starless = false;\n\t\t\t                var lastIndent = current_token.whitespace_before;\n\t\t\t                var lastIndentLength = lastIndent.length;\n\t\t\t\n\t\t\t                // block comment starts with a new line\n\t\t\t                print_newline(false, true);\n\t\t\t                if (lines.length > 1) {\n\t\t\t                    javadoc = all_lines_start_with(lines.slice(1), '*');\n\t\t\t                    starless = each_line_matches_indent(lines.slice(1), lastIndent);\n\t\t\t                }\n\t\t\t\n\t\t\t                // first line always indented\n\t\t\t                print_token(lines[0]);\n\t\t\t                for (j = 1; j < lines.length; j++) {\n\t\t\t                    print_newline(false, true);\n\t\t\t                    if (javadoc) {\n\t\t\t                        // javadoc: reformat and re-indent\n\t\t\t                        print_token(' ' + ltrim(lines[j]));\n\t\t\t                    } else if (starless && lines[j].length > lastIndentLength) {\n\t\t\t                        // starless: re-indent non-empty content, avoiding trim\n\t\t\t                        print_token(lines[j].substring(lastIndentLength));\n\t\t\t                    } else {\n\t\t\t                        // normal comments output raw\n\t\t\t                        output.add_token(lines[j]);\n\t\t\t                    }\n\t\t\t                }\n\t\t\t\n\t\t\t                // for comments of more than one line, make sure there's a new line after\n\t\t\t                print_newline(false, true);\n\t\t\t            }\n\t\t\t\n\t\t\t            function handle_comment() {\n\t\t\t                if (current_token.wanted_newline) {\n\t\t\t                    print_newline(false, true);\n\t\t\t                } else {\n\t\t\t                    output.trim(true);\n\t\t\t                }\n\t\t\t\n\t\t\t                output.space_before_token = true;\n\t\t\t                print_token();\n\t\t\t                print_newline(false, true);\n\t\t\t            }\n\t\t\t\n\t\t\t            function handle_dot() {\n\t\t\t                if (start_of_statement()) {\n\t\t\t                    // The conditional starts the statement if appropriate.\n\t\t\t                }\n\t\t\t\n\t\t\t                if (last_type === 'TK_RESERVED' && is_special_word(flags.last_text)) {\n\t\t\t                    output.space_before_token = true;\n\t\t\t                } else {\n\t\t\t                    // allow preserved newlines before dots in general\n\t\t\t                    // force newlines on dots after close paren when break_chained - for bar().baz()\n\t\t\t                    allow_wrap_or_preserved_newline(flags.last_text === ')' && opt.break_chained_methods);\n\t\t\t                }\n\t\t\t\n\t\t\t                print_token();\n\t\t\t            }\n\t\t\t\n\t\t\t            function handle_unknown() {\n\t\t\t                print_token();\n\t\t\t\n\t\t\t                if (current_token.text[current_token.text.length - 1] === '\\n') {\n\t\t\t                    print_newline();\n\t\t\t                }\n\t\t\t            }\n\t\t\t\n\t\t\t            function handle_eof() {\n\t\t\t                // Unwind any open statements\n\t\t\t                while (flags.mode === MODE.Statement) {\n\t\t\t                    restore_mode();\n\t\t\t                }\n\t\t\t            }\n\t\t\t        }\n\t\t\t\n\t\t\t\n\t\t\t        function OutputLine(parent) {\n\t\t\t            var _character_count = 0;\n\t\t\t            // use indent_count as a marker for lines that have preserved indentation\n\t\t\t            var _indent_count = -1;\n\t\t\t\n\t\t\t            var _items = [];\n\t\t\t            var _empty = true;\n\t\t\t\n\t\t\t            this.set_indent = function(level) {\n\t\t\t                _character_count = parent.baseIndentLength + level * parent.indent_length;\n\t\t\t                _indent_count = level;\n\t\t\t            };\n\t\t\t\n\t\t\t            this.get_character_count = function() {\n\t\t\t                return _character_count;\n\t\t\t            };\n\t\t\t\n\t\t\t            this.is_empty = function() {\n\t\t\t                return _empty;\n\t\t\t            };\n\t\t\t\n\t\t\t            this.last = function() {\n\t\t\t                if (!this._empty) {\n\t\t\t                    return _items[_items.length - 1];\n\t\t\t                } else {\n\t\t\t                    return null;\n\t\t\t                }\n\t\t\t            };\n\t\t\t\n\t\t\t            this.push = function(input) {\n\t\t\t                _items.push(input);\n\t\t\t                _character_count += input.length;\n\t\t\t                _empty = false;\n\t\t\t            };\n\t\t\t\n\t\t\t            this.pop = function() {\n\t\t\t                var item = null;\n\t\t\t                if (!_empty) {\n\t\t\t                    item = _items.pop();\n\t\t\t                    _character_count -= item.length;\n\t\t\t                    _empty = _items.length === 0;\n\t\t\t                }\n\t\t\t                return item;\n\t\t\t            };\n\t\t\t\n\t\t\t            this.remove_indent = function() {\n\t\t\t                if (_indent_count > 0) {\n\t\t\t                    _indent_count -= 1;\n\t\t\t                    _character_count -= parent.indent_length;\n\t\t\t                }\n\t\t\t            };\n\t\t\t\n\t\t\t            this.trim = function() {\n\t\t\t                while (this.last() === ' ') {\n\t\t\t                    _items.pop();\n\t\t\t                    _character_count -= 1;\n\t\t\t                }\n\t\t\t                _empty = _items.length === 0;\n\t\t\t            };\n\t\t\t\n\t\t\t            this.toString = function() {\n\t\t\t                var result = '';\n\t\t\t                if (!this._empty) {\n\t\t\t                    if (_indent_count >= 0) {\n\t\t\t                        result = parent.indent_cache[_indent_count];\n\t\t\t                    }\n\t\t\t                    result += _items.join('');\n\t\t\t                }\n\t\t\t                return result;\n\t\t\t            };\n\t\t\t        }\n\t\t\t\n\t\t\t        function Output(indent_string, baseIndentString) {\n\t\t\t            baseIndentString = baseIndentString || '';\n\t\t\t            this.indent_cache = [baseIndentString];\n\t\t\t            this.baseIndentLength = baseIndentString.length;\n\t\t\t            this.indent_length = indent_string.length;\n\t\t\t            this.raw = false;\n\t\t\t\n\t\t\t            var lines = [];\n\t\t\t            this.baseIndentString = baseIndentString;\n\t\t\t            this.indent_string = indent_string;\n\t\t\t            this.previous_line = null;\n\t\t\t            this.current_line = null;\n\t\t\t            this.space_before_token = false;\n\t\t\t\n\t\t\t            this.add_outputline = function() {\n\t\t\t                this.previous_line = this.current_line;\n\t\t\t                this.current_line = new OutputLine(this);\n\t\t\t                lines.push(this.current_line);\n\t\t\t            };\n\t\t\t\n\t\t\t            // initialize\n\t\t\t            this.add_outputline();\n\t\t\t\n\t\t\t\n\t\t\t            this.get_line_number = function() {\n\t\t\t                return lines.length;\n\t\t\t            };\n\t\t\t\n\t\t\t            // Using object instead of string to allow for later expansion of info about each line\n\t\t\t            this.add_new_line = function(force_newline) {\n\t\t\t                if (this.get_line_number() === 1 && this.just_added_newline()) {\n\t\t\t                    return false; // no newline on start of file\n\t\t\t                }\n\t\t\t\n\t\t\t                if (force_newline || !this.just_added_newline()) {\n\t\t\t                    if (!this.raw) {\n\t\t\t                        this.add_outputline();\n\t\t\t                    }\n\t\t\t                    return true;\n\t\t\t                }\n\t\t\t\n\t\t\t                return false;\n\t\t\t            };\n\t\t\t\n\t\t\t            this.get_code = function() {\n\t\t\t                var sweet_code = lines.join('\\n').replace(/[\\r\\n\\t ]+$/, '');\n\t\t\t                return sweet_code;\n\t\t\t            };\n\t\t\t\n\t\t\t            this.set_indent = function(level) {\n\t\t\t                // Never indent your first output indent at the start of the file\n\t\t\t                if (lines.length > 1) {\n\t\t\t                    while (level >= this.indent_cache.length) {\n\t\t\t                        this.indent_cache.push(this.indent_cache[this.indent_cache.length - 1] + this.indent_string);\n\t\t\t                    }\n\t\t\t\n\t\t\t                    this.current_line.set_indent(level);\n\t\t\t                    return true;\n\t\t\t                }\n\t\t\t                this.current_line.set_indent(0);\n\t\t\t                return false;\n\t\t\t            };\n\t\t\t\n\t\t\t            this.add_raw_token = function(token) {\n\t\t\t                for (var x = 0; x < token.newlines; x++) {\n\t\t\t                    this.add_outputline();\n\t\t\t                }\n\t\t\t                this.current_line.push(token.whitespace_before);\n\t\t\t                this.current_line.push(token.text);\n\t\t\t                this.space_before_token = false;\n\t\t\t            };\n\t\t\t\n\t\t\t            this.add_token = function(printable_token) {\n\t\t\t                this.add_space_before_token();\n\t\t\t                this.current_line.push(printable_token);\n\t\t\t            };\n\t\t\t\n\t\t\t            this.add_space_before_token = function() {\n\t\t\t                if (this.space_before_token && !this.just_added_newline()) {\n\t\t\t                    this.current_line.push(' ');\n\t\t\t                }\n\t\t\t                this.space_before_token = false;\n\t\t\t            };\n\t\t\t\n\t\t\t            this.remove_redundant_indentation = function(frame) {\n\t\t\t                // This implementation is effective but has some issues:\n\t\t\t                //     - can cause line wrap to happen too soon due to indent removal\n\t\t\t                //           after wrap points are calculated\n\t\t\t                // These issues are minor compared to ugly indentation.\n\t\t\t\n\t\t\t                if (frame.multiline_frame ||\n\t\t\t                    frame.mode === MODE.ForInitializer ||\n\t\t\t                    frame.mode === MODE.Conditional) {\n\t\t\t                    return;\n\t\t\t                }\n\t\t\t\n\t\t\t                // remove one indent from each line inside this section\n\t\t\t                var index = frame.start_line_index;\n\t\t\t\n\t\t\t                var output_length = lines.length;\n\t\t\t                while (index < output_length) {\n\t\t\t                    lines[index].remove_indent();\n\t\t\t                    index++;\n\t\t\t                }\n\t\t\t            };\n\t\t\t\n\t\t\t            this.trim = function(eat_newlines) {\n\t\t\t                eat_newlines = (eat_newlines === undefined) ? false : eat_newlines;\n\t\t\t\n\t\t\t                this.current_line.trim(indent_string, baseIndentString);\n\t\t\t\n\t\t\t                while (eat_newlines && lines.length > 1 &&\n\t\t\t                    this.current_line.is_empty()) {\n\t\t\t                    lines.pop();\n\t\t\t                    this.current_line = lines[lines.length - 1];\n\t\t\t                    this.current_line.trim();\n\t\t\t                }\n\t\t\t\n\t\t\t                this.previous_line = lines.length > 1 ? lines[lines.length - 2] : null;\n\t\t\t            };\n\t\t\t\n\t\t\t            this.just_added_newline = function() {\n\t\t\t                return this.current_line.is_empty();\n\t\t\t            };\n\t\t\t\n\t\t\t            this.just_added_blankline = function() {\n\t\t\t                if (this.just_added_newline()) {\n\t\t\t                    if (lines.length === 1) {\n\t\t\t                        return true; // start of the file and newline = blank\n\t\t\t                    }\n\t\t\t\n\t\t\t                    var line = lines[lines.length - 2];\n\t\t\t                    return line.is_empty();\n\t\t\t                }\n\t\t\t                return false;\n\t\t\t            };\n\t\t\t        }\n\t\t\t\n\t\t\t        var InputScanner = function(input) {\n\t\t\t            var _input = input;\n\t\t\t            var _input_length = _input.length;\n\t\t\t            var _position = 0;\n\t\t\t\n\t\t\t            this.back = function() {\n\t\t\t                _position -= 1;\n\t\t\t            };\n\t\t\t\n\t\t\t            this.hasNext = function() {\n\t\t\t                return _position < _input_length;\n\t\t\t            };\n\t\t\t\n\t\t\t            this.next = function() {\n\t\t\t                var val = null;\n\t\t\t                if (this.hasNext()) {\n\t\t\t                    val = _input.charAt(_position);\n\t\t\t                    _position += 1;\n\t\t\t                }\n\t\t\t                return val;\n\t\t\t            };\n\t\t\t\n\t\t\t            this.peek = function(index) {\n\t\t\t                var val = null;\n\t\t\t                index = index || 0;\n\t\t\t                index += _position;\n\t\t\t                if (index >= 0 && index < _input_length) {\n\t\t\t                    val = _input.charAt(index);\n\t\t\t                }\n\t\t\t                return val;\n\t\t\t            };\n\t\t\t\n\t\t\t            this.peekCharCode = function(index) {\n\t\t\t                var val = 0;\n\t\t\t                index = index || 0;\n\t\t\t                index += _position;\n\t\t\t                if (index >= 0 && index < _input_length) {\n\t\t\t                    val = _input.charCodeAt(index);\n\t\t\t                }\n\t\t\t                return val;\n\t\t\t            };\n\t\t\t\n\t\t\t            this.test = function(pattern, index) {\n\t\t\t                index = index || 0;\n\t\t\t                pattern.lastIndex = _position + index;\n\t\t\t                return pattern.test(_input);\n\t\t\t            };\n\t\t\t\n\t\t\t            this.testChar = function(pattern, index) {\n\t\t\t                var val = this.peek(index);\n\t\t\t                return val !== null && pattern.test(val);\n\t\t\t            };\n\t\t\t\n\t\t\t            this.match = function(pattern) {\n\t\t\t                pattern.lastIndex = _position;\n\t\t\t                var pattern_match = pattern.exec(_input);\n\t\t\t                if (pattern_match && pattern_match.index === _position) {\n\t\t\t                    _position += pattern_match[0].length;\n\t\t\t                } else {\n\t\t\t                    pattern_match = null;\n\t\t\t                }\n\t\t\t                return pattern_match;\n\t\t\t            };\n\t\t\t        };\n\t\t\t\n\t\t\t        var Token = function(type, text, newlines, whitespace_before, parent) {\n\t\t\t            this.type = type;\n\t\t\t            this.text = text;\n\t\t\t            this.comments_before = [];\n\t\t\t            this.newlines = newlines || 0;\n\t\t\t            this.wanted_newline = newlines > 0;\n\t\t\t            this.whitespace_before = whitespace_before || '';\n\t\t\t            this.parent = parent || null;\n\t\t\t            this.opened = null;\n\t\t\t            this.directives = null;\n\t\t\t        };\n\t\t\t\n\t\t\t        function tokenizer(input_string, opts) {\n\t\t\t\n\t\t\t            var whitespace = \"\\n\\r\\t \".split('');\n\t\t\t            var digit = /[0-9]/;\n\t\t\t            var digit_bin = /[01]/;\n\t\t\t            var digit_oct = /[01234567]/;\n\t\t\t            var digit_hex = /[0123456789abcdefABCDEF]/;\n\t\t\t\n\t\t\t            this.positionable_operators = '!= !== % & && * ** + - / : < << <= == === > >= >> >>> ? ^ | ||'.split(' ');\n\t\t\t            var punct = this.positionable_operators.concat(\n\t\t\t                // non-positionable operators - these do not follow operator position settings\n\t\t\t                '! %= &= *= **= ++ += , -- -= /= :: <<= = => >>= >>>= ^= |= ~'.split(' '));\n\t\t\t\n\t\t\t            // words which should always start on new line.\n\t\t\t            this.line_starters = 'continue,try,throw,return,var,let,const,if,switch,case,default,for,while,break,function,import,export'.split(',');\n\t\t\t            var reserved_words = this.line_starters.concat(['do', 'in', 'else', 'get', 'set', 'new', 'catch', 'finally', 'typeof', 'yield', 'async', 'await', 'from', 'as']);\n\t\t\t\n\t\t\t            //  /* ... */ comment ends with nearest */ or end of file\n\t\t\t            var block_comment_pattern = /([\\s\\S]*?)((?:\\*\\/)|$)/g;\n\t\t\t\n\t\t\t            // comment ends just before nearest linefeed or end of file\n\t\t\t            var comment_pattern = /([^\\n\\r\\u2028\\u2029]*)/g;\n\t\t\t\n\t\t\t            var directives_block_pattern = /\\/\\* beautify( \\w+[:]\\w+)+ \\*\\//g;\n\t\t\t            var directive_pattern = / (\\w+)[:](\\w+)/g;\n\t\t\t            var directives_end_ignore_pattern = /([\\s\\S]*?)((?:\\/\\*\\sbeautify\\signore:end\\s\\*\\/)|$)/g;\n\t\t\t\n\t\t\t            var template_pattern = /((<\\?php|<\\?=)[\\s\\S]*?\\?>)|(<%[\\s\\S]*?%>)/g;\n\t\t\t\n\t\t\t            var n_newlines, whitespace_before_token, in_html_comment, tokens;\n\t\t\t            var input;\n\t\t\t\n\t\t\t            this.tokenize = function() {\n\t\t\t                input = new InputScanner(input_string);\n\t\t\t                in_html_comment = false;\n\t\t\t                tokens = [];\n\t\t\t\n\t\t\t                var next, last;\n\t\t\t                var token_values;\n\t\t\t                var open = null;\n\t\t\t                var open_stack = [];\n\t\t\t                var comments = [];\n\t\t\t\n\t\t\t                while (!(last && last.type === 'TK_EOF')) {\n\t\t\t                    token_values = tokenize_next();\n\t\t\t                    next = new Token(token_values[1], token_values[0], n_newlines, whitespace_before_token);\n\t\t\t                    while (next.type === 'TK_COMMENT' || next.type === 'TK_BLOCK_COMMENT' || next.type === 'TK_UNKNOWN') {\n\t\t\t                        if (next.type === 'TK_BLOCK_COMMENT') {\n\t\t\t                            next.directives = token_values[2];\n\t\t\t                        }\n\t\t\t                        comments.push(next);\n\t\t\t                        token_values = tokenize_next();\n\t\t\t                        next = new Token(token_values[1], token_values[0], n_newlines, whitespace_before_token);\n\t\t\t                    }\n\t\t\t\n\t\t\t                    if (comments.length) {\n\t\t\t                        next.comments_before = comments;\n\t\t\t                        comments = [];\n\t\t\t                    }\n\t\t\t\n\t\t\t                    if (next.type === 'TK_START_BLOCK' || next.type === 'TK_START_EXPR') {\n\t\t\t                        next.parent = last;\n\t\t\t                        open_stack.push(open);\n\t\t\t                        open = next;\n\t\t\t                    } else if ((next.type === 'TK_END_BLOCK' || next.type === 'TK_END_EXPR') &&\n\t\t\t                        (open && (\n\t\t\t                            (next.text === ']' && open.text === '[') ||\n\t\t\t                            (next.text === ')' && open.text === '(') ||\n\t\t\t                            (next.text === '}' && open.text === '{')))) {\n\t\t\t                        next.parent = open.parent;\n\t\t\t                        next.opened = open;\n\t\t\t\n\t\t\t                        open = open_stack.pop();\n\t\t\t                    }\n\t\t\t\n\t\t\t                    tokens.push(next);\n\t\t\t                    last = next;\n\t\t\t                }\n\t\t\t\n\t\t\t                return tokens;\n\t\t\t            };\n\t\t\t\n\t\t\t            function get_directives(text) {\n\t\t\t                if (!text.match(directives_block_pattern)) {\n\t\t\t                    return null;\n\t\t\t                }\n\t\t\t\n\t\t\t                var directives = {};\n\t\t\t                directive_pattern.lastIndex = 0;\n\t\t\t                var directive_match = directive_pattern.exec(text);\n\t\t\t\n\t\t\t                while (directive_match) {\n\t\t\t                    directives[directive_match[1]] = directive_match[2];\n\t\t\t                    directive_match = directive_pattern.exec(text);\n\t\t\t                }\n\t\t\t\n\t\t\t                return directives;\n\t\t\t            }\n\t\t\t\n\t\t\t            function tokenize_next() {\n\t\t\t                var resulting_string;\n\t\t\t                var whitespace_on_this_line = [];\n\t\t\t\n\t\t\t                n_newlines = 0;\n\t\t\t                whitespace_before_token = '';\n\t\t\t\n\t\t\t                var c = input.next();\n\t\t\t\n\t\t\t                if (c === null) {\n\t\t\t                    return ['', 'TK_EOF'];\n\t\t\t                }\n\t\t\t\n\t\t\t                var last_token;\n\t\t\t                if (tokens.length) {\n\t\t\t                    last_token = tokens[tokens.length - 1];\n\t\t\t                } else {\n\t\t\t                    // For the sake of tokenizing we can pretend that there was on open brace to start\n\t\t\t                    last_token = new Token('TK_START_BLOCK', '{');\n\t\t\t                }\n\t\t\t\n\t\t\t                while (in_array(c, whitespace)) {\n\t\t\t\n\t\t\t                    if (acorn.newline.test(c)) {\n\t\t\t                        if (!(c === '\\n' && input.peek(-2) === '\\r')) {\n\t\t\t                            n_newlines += 1;\n\t\t\t                            whitespace_on_this_line = [];\n\t\t\t                        }\n\t\t\t                    } else {\n\t\t\t                        whitespace_on_this_line.push(c);\n\t\t\t                    }\n\t\t\t\n\t\t\t                    c = input.next();\n\t\t\t\n\t\t\t                    if (c === null) {\n\t\t\t                        return ['', 'TK_EOF'];\n\t\t\t                    }\n\t\t\t                }\n\t\t\t\n\t\t\t                if (whitespace_on_this_line.length) {\n\t\t\t                    whitespace_before_token = whitespace_on_this_line.join('');\n\t\t\t                }\n\t\t\t\n\t\t\t                if (digit.test(c) || (c === '.' && input.testChar(digit))) {\n\t\t\t                    var allow_decimal = true;\n\t\t\t                    var allow_e = true;\n\t\t\t                    var local_digit = digit;\n\t\t\t\n\t\t\t                    if (c === '0' && input.testChar(/[XxOoBb]/)) {\n\t\t\t                        // switch to hex/oct/bin number, no decimal or e, just hex/oct/bin digits\n\t\t\t                        allow_decimal = false;\n\t\t\t                        allow_e = false;\n\t\t\t                        if (input.testChar(/[Bb]/)) {\n\t\t\t                            local_digit = digit_bin;\n\t\t\t                        } else if (input.testChar(/[Oo]/)) {\n\t\t\t                            local_digit = digit_oct;\n\t\t\t                        } else {\n\t\t\t                            local_digit = digit_hex;\n\t\t\t                        }\n\t\t\t                        c += input.next();\n\t\t\t                    } else if (c === '.') {\n\t\t\t                        // Already have a decimal for this literal, don't allow another\n\t\t\t                        allow_decimal = false;\n\t\t\t                    } else {\n\t\t\t                        // we know this first loop will run.  It keeps the logic simpler.\n\t\t\t                        c = '';\n\t\t\t                        input.back();\n\t\t\t                    }\n\t\t\t\n\t\t\t                    // Add the digits\n\t\t\t                    while (input.testChar(local_digit)) {\n\t\t\t                        c += input.next();\n\t\t\t\n\t\t\t                        if (allow_decimal && input.peek() === '.') {\n\t\t\t                            c += input.next();\n\t\t\t                            allow_decimal = false;\n\t\t\t                        } else if (allow_e && input.testChar(/[Ee]/)) {\n\t\t\t                            c += input.next();\n\t\t\t\n\t\t\t                            if (input.testChar(/[+-]/)) {\n\t\t\t                                c += input.next();\n\t\t\t                            }\n\t\t\t\n\t\t\t                            allow_e = false;\n\t\t\t                            allow_decimal = false;\n\t\t\t                        }\n\t\t\t                    }\n\t\t\t\n\t\t\t                    return [c, 'TK_WORD'];\n\t\t\t                }\n\t\t\t\n\t\t\t                if (acorn.isIdentifierStart(input.peekCharCode(-1))) {\n\t\t\t                    if (input.hasNext()) {\n\t\t\t                        while (acorn.isIdentifierChar(input.peekCharCode())) {\n\t\t\t                            c += input.next();\n\t\t\t                            if (!input.hasNext()) {\n\t\t\t                                break;\n\t\t\t                            }\n\t\t\t                        }\n\t\t\t                    }\n\t\t\t\n\t\t\t                    if (!(last_token.type === 'TK_DOT' ||\n\t\t\t                            (last_token.type === 'TK_RESERVED' && in_array(last_token.text, ['set', 'get']))) &&\n\t\t\t                        in_array(c, reserved_words)) {\n\t\t\t                        if (c === 'in') { // hack for 'in' operator\n\t\t\t                            return [c, 'TK_OPERATOR'];\n\t\t\t                        }\n\t\t\t                        return [c, 'TK_RESERVED'];\n\t\t\t                    }\n\t\t\t\n\t\t\t                    return [c, 'TK_WORD'];\n\t\t\t                }\n\t\t\t\n\t\t\t                if (c === '(' || c === '[') {\n\t\t\t                    return [c, 'TK_START_EXPR'];\n\t\t\t                }\n\t\t\t\n\t\t\t                if (c === ')' || c === ']') {\n\t\t\t                    return [c, 'TK_END_EXPR'];\n\t\t\t                }\n\t\t\t\n\t\t\t                if (c === '{') {\n\t\t\t                    return [c, 'TK_START_BLOCK'];\n\t\t\t                }\n\t\t\t\n\t\t\t                if (c === '}') {\n\t\t\t                    return [c, 'TK_END_BLOCK'];\n\t\t\t                }\n\t\t\t\n\t\t\t                if (c === ';') {\n\t\t\t                    return [c, 'TK_SEMICOLON'];\n\t\t\t                }\n\t\t\t\n\t\t\t                if (c === '/') {\n\t\t\t                    var comment = '';\n\t\t\t                    var comment_match;\n\t\t\t                    // peek for comment /* ... */\n\t\t\t                    if (input.peek() === '*') {\n\t\t\t                        input.next();\n\t\t\t                        comment_match = input.match(block_comment_pattern);\n\t\t\t                        comment = '/*' + comment_match[0];\n\t\t\t                        var directives = get_directives(comment);\n\t\t\t                        if (directives && directives.ignore === 'start') {\n\t\t\t                            comment_match = input.match(directives_end_ignore_pattern);\n\t\t\t                            comment += comment_match[0];\n\t\t\t                        }\n\t\t\t                        comment = comment.replace(acorn.allLineBreaks, '\\n');\n\t\t\t                        return [comment, 'TK_BLOCK_COMMENT', directives];\n\t\t\t                    }\n\t\t\t                    // peek for comment // ...\n\t\t\t                    if (input.peek() === '/') {\n\t\t\t                        input.next();\n\t\t\t                        comment_match = input.match(comment_pattern);\n\t\t\t                        comment = '//' + comment_match[0];\n\t\t\t                        return [comment, 'TK_COMMENT'];\n\t\t\t                    }\n\t\t\t\n\t\t\t                }\n\t\t\t\n\t\t\t                var startXmlRegExp = /<()([-a-zA-Z:0-9_.]+|{[\\s\\S]+?}|!\\[CDATA\\[[\\s\\S]*?\\]\\])(\\s+{[\\s\\S]+?}|\\s+[-a-zA-Z:0-9_.]+|\\s+[-a-zA-Z:0-9_.]+\\s*=\\s*('[^']*'|\"[^\"]*\"|{[\\s\\S]+?}))*\\s*(\\/?)\\s*>/g;\n\t\t\t\n\t\t\t                if (c === '`' || c === \"'\" || c === '\"' || // string\n\t\t\t                    (\n\t\t\t                        (c === '/') || // regexp\n\t\t\t                        (opts.e4x && c === \"<\" && input.test(startXmlRegExp, -1)) // xml\n\t\t\t                    ) && ( // regex and xml can only appear in specific locations during parsing\n\t\t\t                        (last_token.type === 'TK_RESERVED' && in_array(last_token.text, ['return', 'case', 'throw', 'else', 'do', 'typeof', 'yield'])) ||\n\t\t\t                        (last_token.type === 'TK_END_EXPR' && last_token.text === ')' &&\n\t\t\t                            last_token.parent && last_token.parent.type === 'TK_RESERVED' && in_array(last_token.parent.text, ['if', 'while', 'for'])) ||\n\t\t\t                        (in_array(last_token.type, ['TK_COMMENT', 'TK_START_EXPR', 'TK_START_BLOCK',\n\t\t\t                            'TK_END_BLOCK', 'TK_OPERATOR', 'TK_EQUALS', 'TK_EOF', 'TK_SEMICOLON', 'TK_COMMA'\n\t\t\t                        ]))\n\t\t\t                    )) {\n\t\t\t\n\t\t\t                    var sep = c,\n\t\t\t                        esc = false,\n\t\t\t                        has_char_escapes = false;\n\t\t\t\n\t\t\t                    resulting_string = c;\n\t\t\t\n\t\t\t                    if (sep === '/') {\n\t\t\t                        //\n\t\t\t                        // handle regexp\n\t\t\t                        //\n\t\t\t                        var in_char_class = false;\n\t\t\t                        while (input.hasNext() &&\n\t\t\t                            ((esc || in_char_class || input.peek() !== sep) &&\n\t\t\t                                !input.testChar(acorn.newline))) {\n\t\t\t                            resulting_string += input.peek();\n\t\t\t                            if (!esc) {\n\t\t\t                                esc = input.peek() === '\\\\';\n\t\t\t                                if (input.peek() === '[') {\n\t\t\t                                    in_char_class = true;\n\t\t\t                                } else if (input.peek() === ']') {\n\t\t\t                                    in_char_class = false;\n\t\t\t                                }\n\t\t\t                            } else {\n\t\t\t                                esc = false;\n\t\t\t                            }\n\t\t\t                            input.next();\n\t\t\t                        }\n\t\t\t                    } else if (opts.e4x && sep === '<') {\n\t\t\t                        //\n\t\t\t                        // handle e4x xml literals\n\t\t\t                        //\n\t\t\t\n\t\t\t                        var xmlRegExp = /[\\s\\S]*?<(\\/?)([-a-zA-Z:0-9_.]+|{[\\s\\S]+?}|!\\[CDATA\\[[\\s\\S]*?\\]\\])(\\s+{[\\s\\S]+?}|\\s+[-a-zA-Z:0-9_.]+|\\s+[-a-zA-Z:0-9_.]+\\s*=\\s*('[^']*'|\"[^\"]*\"|{[\\s\\S]+?}))*\\s*(\\/?)\\s*>/g;\n\t\t\t                        input.back();\n\t\t\t                        var xmlStr = '';\n\t\t\t                        var match = input.match(startXmlRegExp);\n\t\t\t                        if (match) {\n\t\t\t                            // Trim root tag to attempt to\n\t\t\t                            var rootTag = match[2].replace(/^{\\s+/, '{').replace(/\\s+}$/, '}');\n\t\t\t                            var isCurlyRoot = rootTag.indexOf('{') === 0;\n\t\t\t                            var depth = 0;\n\t\t\t                            while (match) {\n\t\t\t                                var isEndTag = !!match[1];\n\t\t\t                                var tagName = match[2];\n\t\t\t                                var isSingletonTag = (!!match[match.length - 1]) || (tagName.slice(0, 8) === \"![CDATA[\");\n\t\t\t                                if (!isSingletonTag &&\n\t\t\t                                    (tagName === rootTag || (isCurlyRoot && tagName.replace(/^{\\s+/, '{').replace(/\\s+}$/, '}')))) {\n\t\t\t                                    if (isEndTag) {\n\t\t\t                                        --depth;\n\t\t\t                                    } else {\n\t\t\t                                        ++depth;\n\t\t\t                                    }\n\t\t\t                                }\n\t\t\t                                xmlStr += match[0];\n\t\t\t                                if (depth <= 0) {\n\t\t\t                                    break;\n\t\t\t                                }\n\t\t\t                                match = input.match(xmlRegExp);\n\t\t\t                            }\n\t\t\t                            // if we didn't close correctly, keep unformatted.\n\t\t\t                            if (!match) {\n\t\t\t                                xmlStr += input.match(/[\\s\\S]*/g)[0];\n\t\t\t                            }\n\t\t\t                            xmlStr = xmlStr.replace(acorn.allLineBreaks, '\\n');\n\t\t\t                            return [xmlStr, \"TK_STRING\"];\n\t\t\t                        }\n\t\t\t                    } else {\n\t\t\t                        //\n\t\t\t                        // handle string\n\t\t\t                        //\n\t\t\t                        var parse_string = function(delimiter, allow_unescaped_newlines, start_sub) {\n\t\t\t                            // Template strings can travers lines without escape characters.\n\t\t\t                            // Other strings cannot\n\t\t\t                            var current_char;\n\t\t\t                            while (input.hasNext()) {\n\t\t\t                                current_char = input.peek();\n\t\t\t                                if (!(esc || (current_char !== delimiter &&\n\t\t\t                                        (allow_unescaped_newlines || !acorn.newline.test(current_char))))) {\n\t\t\t                                    break;\n\t\t\t                                }\n\t\t\t\n\t\t\t                                // Handle \\r\\n linebreaks after escapes or in template strings\n\t\t\t                                if ((esc || allow_unescaped_newlines) && acorn.newline.test(current_char)) {\n\t\t\t                                    if (current_char === '\\r' && input.peek(1) === '\\n') {\n\t\t\t                                        input.next();\n\t\t\t                                        current_char = input.peek();\n\t\t\t                                    }\n\t\t\t                                    resulting_string += '\\n';\n\t\t\t                                } else {\n\t\t\t                                    resulting_string += current_char;\n\t\t\t                                }\n\t\t\t\n\t\t\t                                if (esc) {\n\t\t\t                                    if (current_char === 'x' || current_char === 'u') {\n\t\t\t                                        has_char_escapes = true;\n\t\t\t                                    }\n\t\t\t                                    esc = false;\n\t\t\t                                } else {\n\t\t\t                                    esc = current_char === '\\\\';\n\t\t\t                                }\n\t\t\t\n\t\t\t                                input.next();\n\t\t\t\n\t\t\t                                if (start_sub && resulting_string.indexOf(start_sub, resulting_string.length - start_sub.length) !== -1) {\n\t\t\t                                    if (delimiter === '`') {\n\t\t\t                                        parse_string('}', allow_unescaped_newlines, '`');\n\t\t\t                                    } else {\n\t\t\t                                        parse_string('`', allow_unescaped_newlines, '${');\n\t\t\t                                    }\n\t\t\t                                }\n\t\t\t                            }\n\t\t\t                        };\n\t\t\t\n\t\t\t                        if (sep === '`') {\n\t\t\t                            parse_string('`', true, '${');\n\t\t\t                        } else {\n\t\t\t                            parse_string(sep);\n\t\t\t                        }\n\t\t\t                    }\n\t\t\t\n\t\t\t                    if (has_char_escapes && opts.unescape_strings) {\n\t\t\t                        resulting_string = unescape_string(resulting_string);\n\t\t\t                    }\n\t\t\t\n\t\t\t                    if (input.peek() === sep) {\n\t\t\t                        resulting_string += sep;\n\t\t\t                        input.next();\n\t\t\t\n\t\t\t                        if (sep === '/') {\n\t\t\t                            // regexps may have modifiers /regexp/MOD , so fetch those, too\n\t\t\t                            // Only [gim] are valid, but if the user puts in garbage, do what we can to take it.\n\t\t\t                            while (input.hasNext() && acorn.isIdentifierStart(input.peekCharCode())) {\n\t\t\t                                resulting_string += input.next();\n\t\t\t                            }\n\t\t\t                        }\n\t\t\t                    }\n\t\t\t                    return [resulting_string, 'TK_STRING'];\n\t\t\t                }\n\t\t\t\n\t\t\t                if (c === '#') {\n\t\t\t\n\t\t\t                    if (tokens.length === 0 && input.peek() === '!') {\n\t\t\t                        // shebang\n\t\t\t                        resulting_string = c;\n\t\t\t                        while (input.hasNext() && c !== '\\n') {\n\t\t\t                            c = input.next();\n\t\t\t                            resulting_string += c;\n\t\t\t                        }\n\t\t\t                        return [trim(resulting_string) + '\\n', 'TK_UNKNOWN'];\n\t\t\t                    }\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t                    // Spidermonkey-specific sharp variables for circular references\n\t\t\t                    // https://developer.mozilla.org/En/Sharp_variables_in_JavaScript\n\t\t\t                    // http://mxr.mozilla.org/mozilla-central/source/js/src/jsscan.cpp around line 1935\n\t\t\t                    var sharp = '#';\n\t\t\t                    if (input.hasNext() && input.testChar(digit)) {\n\t\t\t                        do {\n\t\t\t                            c = input.next();\n\t\t\t                            sharp += c;\n\t\t\t                        } while (input.hasNext() && c !== '#' && c !== '=');\n\t\t\t                        if (c === '#') {\n\t\t\t                            //\n\t\t\t                        } else if (input.peek() === '[' && input.peek(1) === ']') {\n\t\t\t                            sharp += '[]';\n\t\t\t                            input.next();\n\t\t\t                            input.next();\n\t\t\t                        } else if (input.peek() === '{' && input.peek(1) === '}') {\n\t\t\t                            sharp += '{}';\n\t\t\t                            input.next();\n\t\t\t                            input.next();\n\t\t\t                        }\n\t\t\t                        return [sharp, 'TK_WORD'];\n\t\t\t                    }\n\t\t\t                }\n\t\t\t\n\t\t\t                if (c === '<' && (input.peek() === '?' || input.peek() === '%')) {\n\t\t\t                    input.back();\n\t\t\t                    var template_match = input.match(template_pattern);\n\t\t\t                    if (template_match) {\n\t\t\t                        c = template_match[0];\n\t\t\t                        c = c.replace(acorn.allLineBreaks, '\\n');\n\t\t\t                        return [c, 'TK_STRING'];\n\t\t\t                    }\n\t\t\t                }\n\t\t\t\n\t\t\t                if (c === '<' && input.match(/\\!--/g)) {\n\t\t\t                    c = '<!--';\n\t\t\t                    while (input.hasNext() && !input.testChar(acorn.newline)) {\n\t\t\t                        c += input.next();\n\t\t\t                    }\n\t\t\t                    in_html_comment = true;\n\t\t\t                    return [c, 'TK_COMMENT'];\n\t\t\t                }\n\t\t\t\n\t\t\t                if (c === '-' && in_html_comment && input.match(/->/g)) {\n\t\t\t                    in_html_comment = false;\n\t\t\t                    return ['-->', 'TK_COMMENT'];\n\t\t\t                }\n\t\t\t\n\t\t\t                if (c === '.') {\n\t\t\t                    return [c, 'TK_DOT'];\n\t\t\t                }\n\t\t\t\n\t\t\t                if (in_array(c, punct)) {\n\t\t\t                    while (input.hasNext() && in_array(c + input.peek(), punct)) {\n\t\t\t                        c += input.next();\n\t\t\t                        if (!input.hasNext()) {\n\t\t\t                            break;\n\t\t\t                        }\n\t\t\t                    }\n\t\t\t\n\t\t\t                    if (c === ',') {\n\t\t\t                        return [c, 'TK_COMMA'];\n\t\t\t                    } else if (c === '=') {\n\t\t\t                        return [c, 'TK_EQUALS'];\n\t\t\t                    } else {\n\t\t\t                        return [c, 'TK_OPERATOR'];\n\t\t\t                    }\n\t\t\t                }\n\t\t\t\n\t\t\t                return [c, 'TK_UNKNOWN'];\n\t\t\t            }\n\t\t\t\n\t\t\t\n\t\t\t            function unescape_string(s) {\n\t\t\t                // You think that a regex would work for this\n\t\t\t                // return s.replace(/\\\\x([0-9a-f]{2})/gi, function(match, val) {\n\t\t\t                //         return String.fromCharCode(parseInt(val, 16));\n\t\t\t                //     })\n\t\t\t                // However, dealing with '\\xff', '\\\\xff', '\\\\\\xff' makes this more fun.\n\t\t\t                var out = '',\n\t\t\t                    escaped = 0;\n\t\t\t\n\t\t\t                var input_scan = new InputScanner(s);\n\t\t\t                var matched = null;\n\t\t\t\n\t\t\t                while (input_scan.hasNext()) {\n\t\t\t                    // Keep any whitespace, non-slash characters\n\t\t\t                    // also keep slash pairs.\n\t\t\t                    matched = input_scan.match(/([\\s]|[^\\\\]|\\\\\\\\)+/g);\n\t\t\t\n\t\t\t                    if (matched) {\n\t\t\t                        out += matched[0];\n\t\t\t                    }\n\t\t\t\n\t\t\t                    if (input_scan.peek() === '\\\\') {\n\t\t\t                        input_scan.next();\n\t\t\t                        if (input_scan.peek() === 'x') {\n\t\t\t                            matched = input_scan.match(/x([0-9A-Fa-f]{2})/g);\n\t\t\t                        } else if (input_scan.peek() === 'u') {\n\t\t\t                            matched = input_scan.match(/u([0-9A-Fa-f]{4})/g);\n\t\t\t                        } else {\n\t\t\t                            out += '\\\\';\n\t\t\t                            if (input_scan.hasNext()) {\n\t\t\t                                out += input_scan.next();\n\t\t\t                            }\n\t\t\t                            continue;\n\t\t\t                        }\n\t\t\t\n\t\t\t                        // If there's some error decoding, return the original string\n\t\t\t                        if (!matched) {\n\t\t\t                            return s;\n\t\t\t                        }\n\t\t\t\n\t\t\t                        escaped = parseInt(matched[1], 16);\n\t\t\t\n\t\t\t                        if (escaped > 0x7e && escaped <= 0xff && matched[0].indexOf('x') === 0) {\n\t\t\t                            // we bail out on \\x7f..\\xff,\n\t\t\t                            // leaving whole string escaped,\n\t\t\t                            // as it's probably completely binary\n\t\t\t                            return s;\n\t\t\t                        } else if (escaped >= 0x00 && escaped < 0x20) {\n\t\t\t                            // leave 0x00...0x1f escaped\n\t\t\t                            out += '\\\\' + matched[0];\n\t\t\t                            continue;\n\t\t\t                        } else if (escaped === 0x22 || escaped === 0x27 || escaped === 0x5c) {\n\t\t\t                            // single-quote, apostrophe, backslash - escape these\n\t\t\t                            out += '\\\\' + String.fromCharCode(escaped);\n\t\t\t                        } else {\n\t\t\t                            out += String.fromCharCode(escaped);\n\t\t\t                        }\n\t\t\t                    }\n\t\t\t                }\n\t\t\t\n\t\t\t                return out;\n\t\t\t            }\n\t\t\t        }\n\t\t\t\n\t\t\t        var beautifier = new Beautifier(js_source_text, options);\n\t\t\t        return beautifier.beautify();\n\t\t\t\n\t\t\t    }\n\t\t\t\n\t\t\t    if (true) {\n\t\t\t        // Add support for AMD ( https://github.com/amdjs/amdjs-api/wiki/AMD#defineamd-property- )\n\t\t\t        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t\t\t            return { js_beautify: js_beautify };\n\t\t\t        }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\t\t    } else if (typeof exports !== \"undefined\") {\n\t\t\t        // Add support for CommonJS. Just put this file somewhere on your require.paths\n\t\t\t        // and you will be able to `var js_beautify = require(\"beautify\").js_beautify`.\n\t\t\t        exports.js_beautify = js_beautify;\n\t\t\t    } else if (typeof window !== \"undefined\") {\n\t\t\t        // If we're running a web page and don't have either of the above, add our one global\n\t\t\t        window.js_beautify = js_beautify;\n\t\t\t    } else if (typeof global !== \"undefined\") {\n\t\t\t        // If we don't even have window, try global.\n\t\t\t        global.js_beautify = js_beautify;\n\t\t\t    }\n\t\t\t\n\t\t\t}());\n\t\t\n\t\t/***/ },\n\t\t/* 11 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*jshint curly:true, eqeqeq:true, laxbreak:true, noempty:false */\n\t\t\t/*\n\t\t\t\n\t\t\t  The MIT License (MIT)\n\t\t\t\n\t\t\t  Copyright (c) 2007-2013 Einar Lielmanis and contributors.\n\t\t\t\n\t\t\t  Permission is hereby granted, free of charge, to any person\n\t\t\t  obtaining a copy of this software and associated documentation files\n\t\t\t  (the \"Software\"), to deal in the Software without restriction,\n\t\t\t  including without limitation the rights to use, copy, modify, merge,\n\t\t\t  publish, distribute, sublicense, and/or sell copies of the Software,\n\t\t\t  and to permit persons to whom the Software is furnished to do so,\n\t\t\t  subject to the following conditions:\n\t\t\t\n\t\t\t  The above copyright notice and this permission notice shall be\n\t\t\t  included in all copies or substantial portions of the Software.\n\t\t\t\n\t\t\t  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n\t\t\t  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t\t\t  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n\t\t\t  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n\t\t\t  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n\t\t\t  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n\t\t\t  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\t\t\t  SOFTWARE.\n\t\t\t\n\t\t\t\n\t\t\t CSS Beautifier\n\t\t\t---------------\n\t\t\t\n\t\t\t    Written by Harutyun Amirjanyan, (amirjanyan@gmail.com)\n\t\t\t\n\t\t\t    Based on code initially developed by: Einar Lielmanis, <einar@jsbeautifier.org>\n\t\t\t        http://jsbeautifier.org/\n\t\t\t\n\t\t\t    Usage:\n\t\t\t        css_beautify(source_text);\n\t\t\t        css_beautify(source_text, options);\n\t\t\t\n\t\t\t    The options are (default in brackets):\n\t\t\t        indent_size (4)                         — indentation size,\n\t\t\t        indent_char (space)                     — character to indent with,\n\t\t\t        selector_separator_newline (true)       - separate selectors with newline or\n\t\t\t                                                  not (e.g. \"a,\\nbr\" or \"a, br\")\n\t\t\t        end_with_newline (false)                - end with a newline\n\t\t\t        newline_between_rules (true)            - add a new line after every css rule\n\t\t\t        space_around_selector_separator (false) - ensure space around selector separators:\n\t\t\t                                                  '>', '+', '~' (e.g. \"a>b\" -> \"a > b\")\n\t\t\t    e.g\n\t\t\t\n\t\t\t    css_beautify(css_source_text, {\n\t\t\t      'indent_size': 1,\n\t\t\t      'indent_char': '\\t',\n\t\t\t      'selector_separator': ' ',\n\t\t\t      'end_with_newline': false,\n\t\t\t      'newline_between_rules': true,\n\t\t\t      'space_around_selector_separator': true\n\t\t\t    });\n\t\t\t*/\n\t\t\t\n\t\t\t// http://www.w3.org/TR/CSS21/syndata.html#tokenization\n\t\t\t// http://www.w3.org/TR/css3-syntax/\n\t\t\t\n\t\t\t(function() {\n\t\t\t    function css_beautify(source_text, options) {\n\t\t\t        options = options || {};\n\t\t\t        source_text = source_text || '';\n\t\t\t        // HACK: newline parsing inconsistent. This brute force normalizes the input.\n\t\t\t        source_text = source_text.replace(/\\r\\n|[\\r\\u2028\\u2029]/g, '\\n');\n\t\t\t\n\t\t\t        var indentSize = options.indent_size || 4;\n\t\t\t        var indentCharacter = options.indent_char || ' ';\n\t\t\t        var selectorSeparatorNewline = (options.selector_separator_newline === undefined) ? true : options.selector_separator_newline;\n\t\t\t        var end_with_newline = (options.end_with_newline === undefined) ? false : options.end_with_newline;\n\t\t\t        var newline_between_rules = (options.newline_between_rules === undefined) ? true : options.newline_between_rules;\n\t\t\t        var space_around_combinator = (options.space_around_combinator === undefined) ? false : options.space_around_combinator;\n\t\t\t        space_around_combinator = space_around_combinator || ((options.space_around_selector_separator === undefined) ? false : options.space_around_selector_separator);\n\t\t\t        var eol = options.eol ? options.eol : '\\n';\n\t\t\t\n\t\t\t        // compatibility\n\t\t\t        if (typeof indentSize === \"string\") {\n\t\t\t            indentSize = parseInt(indentSize, 10);\n\t\t\t        }\n\t\t\t\n\t\t\t        if (options.indent_with_tabs) {\n\t\t\t            indentCharacter = '\\t';\n\t\t\t            indentSize = 1;\n\t\t\t        }\n\t\t\t\n\t\t\t        eol = eol.replace(/\\\\r/, '\\r').replace(/\\\\n/, '\\n');\n\t\t\t\n\t\t\t\n\t\t\t        // tokenizer\n\t\t\t        var whiteRe = /^\\s+$/;\n\t\t\t\n\t\t\t        var pos = -1,\n\t\t\t            ch;\n\t\t\t        var parenLevel = 0;\n\t\t\t\n\t\t\t        function next() {\n\t\t\t            ch = source_text.charAt(++pos);\n\t\t\t            return ch || '';\n\t\t\t        }\n\t\t\t\n\t\t\t        function peek(skipWhitespace) {\n\t\t\t            var result = '';\n\t\t\t            var prev_pos = pos;\n\t\t\t            if (skipWhitespace) {\n\t\t\t                eatWhitespace();\n\t\t\t            }\n\t\t\t            result = source_text.charAt(pos + 1) || '';\n\t\t\t            pos = prev_pos - 1;\n\t\t\t            next();\n\t\t\t            return result;\n\t\t\t        }\n\t\t\t\n\t\t\t        function eatString(endChars) {\n\t\t\t            var start = pos;\n\t\t\t            while (next()) {\n\t\t\t                if (ch === \"\\\\\") {\n\t\t\t                    next();\n\t\t\t                } else if (endChars.indexOf(ch) !== -1) {\n\t\t\t                    break;\n\t\t\t                } else if (ch === \"\\n\") {\n\t\t\t                    break;\n\t\t\t                }\n\t\t\t            }\n\t\t\t            return source_text.substring(start, pos + 1);\n\t\t\t        }\n\t\t\t\n\t\t\t        function peekString(endChar) {\n\t\t\t            var prev_pos = pos;\n\t\t\t            var str = eatString(endChar);\n\t\t\t            pos = prev_pos - 1;\n\t\t\t            next();\n\t\t\t            return str;\n\t\t\t        }\n\t\t\t\n\t\t\t        function eatWhitespace() {\n\t\t\t            var result = '';\n\t\t\t            while (whiteRe.test(peek())) {\n\t\t\t                next();\n\t\t\t                result += ch;\n\t\t\t            }\n\t\t\t            return result;\n\t\t\t        }\n\t\t\t\n\t\t\t        function skipWhitespace() {\n\t\t\t            var result = '';\n\t\t\t            if (ch && whiteRe.test(ch)) {\n\t\t\t                result = ch;\n\t\t\t            }\n\t\t\t            while (whiteRe.test(next())) {\n\t\t\t                result += ch;\n\t\t\t            }\n\t\t\t            return result;\n\t\t\t        }\n\t\t\t\n\t\t\t        function eatComment(singleLine) {\n\t\t\t            var start = pos;\n\t\t\t            singleLine = peek() === \"/\";\n\t\t\t            next();\n\t\t\t            while (next()) {\n\t\t\t                if (!singleLine && ch === \"*\" && peek() === \"/\") {\n\t\t\t                    next();\n\t\t\t                    break;\n\t\t\t                } else if (singleLine && ch === \"\\n\") {\n\t\t\t                    return source_text.substring(start, pos);\n\t\t\t                }\n\t\t\t            }\n\t\t\t\n\t\t\t            return source_text.substring(start, pos) + ch;\n\t\t\t        }\n\t\t\t\n\t\t\t\n\t\t\t        function lookBack(str) {\n\t\t\t            return source_text.substring(pos - str.length, pos).toLowerCase() ===\n\t\t\t                str;\n\t\t\t        }\n\t\t\t\n\t\t\t        // Nested pseudo-class if we are insideRule\n\t\t\t        // and the next special character found opens\n\t\t\t        // a new block\n\t\t\t        function foundNestedPseudoClass() {\n\t\t\t            var openParen = 0;\n\t\t\t            for (var i = pos + 1; i < source_text.length; i++) {\n\t\t\t                var ch = source_text.charAt(i);\n\t\t\t                if (ch === \"{\") {\n\t\t\t                    return true;\n\t\t\t                } else if (ch === '(') {\n\t\t\t                    // pseudoclasses can contain ()\n\t\t\t                    openParen += 1;\n\t\t\t                } else if (ch === ')') {\n\t\t\t                    if (openParen === 0) {\n\t\t\t                        return false;\n\t\t\t                    }\n\t\t\t                    openParen -= 1;\n\t\t\t                } else if (ch === \";\" || ch === \"}\") {\n\t\t\t                    return false;\n\t\t\t                }\n\t\t\t            }\n\t\t\t            return false;\n\t\t\t        }\n\t\t\t\n\t\t\t        // printer\n\t\t\t        var basebaseIndentString = source_text.match(/^[\\t ]*/)[0];\n\t\t\t        var singleIndent = new Array(indentSize + 1).join(indentCharacter);\n\t\t\t        var indentLevel = 0;\n\t\t\t        var nestedLevel = 0;\n\t\t\t\n\t\t\t        function indent() {\n\t\t\t            indentLevel++;\n\t\t\t            basebaseIndentString += singleIndent;\n\t\t\t        }\n\t\t\t\n\t\t\t        function outdent() {\n\t\t\t            indentLevel--;\n\t\t\t            basebaseIndentString = basebaseIndentString.slice(0, -indentSize);\n\t\t\t        }\n\t\t\t\n\t\t\t        var print = {};\n\t\t\t        print[\"{\"] = function(ch) {\n\t\t\t            print.singleSpace();\n\t\t\t            output.push(ch);\n\t\t\t            print.newLine();\n\t\t\t        };\n\t\t\t        print[\"}\"] = function(ch) {\n\t\t\t            print.newLine();\n\t\t\t            output.push(ch);\n\t\t\t            print.newLine();\n\t\t\t        };\n\t\t\t\n\t\t\t        print._lastCharWhitespace = function() {\n\t\t\t            return whiteRe.test(output[output.length - 1]);\n\t\t\t        };\n\t\t\t\n\t\t\t        print.newLine = function(keepWhitespace) {\n\t\t\t            if (output.length) {\n\t\t\t                if (!keepWhitespace && output[output.length - 1] !== '\\n') {\n\t\t\t                    print.trim();\n\t\t\t                }\n\t\t\t\n\t\t\t                output.push('\\n');\n\t\t\t\n\t\t\t                if (basebaseIndentString) {\n\t\t\t                    output.push(basebaseIndentString);\n\t\t\t                }\n\t\t\t            }\n\t\t\t        };\n\t\t\t        print.singleSpace = function() {\n\t\t\t            if (output.length && !print._lastCharWhitespace()) {\n\t\t\t                output.push(' ');\n\t\t\t            }\n\t\t\t        };\n\t\t\t\n\t\t\t        print.preserveSingleSpace = function() {\n\t\t\t            if (isAfterSpace) {\n\t\t\t                print.singleSpace();\n\t\t\t            }\n\t\t\t        };\n\t\t\t\n\t\t\t        print.trim = function() {\n\t\t\t            while (print._lastCharWhitespace()) {\n\t\t\t                output.pop();\n\t\t\t            }\n\t\t\t        };\n\t\t\t\n\t\t\t\n\t\t\t        var output = [];\n\t\t\t        /*_____________________--------------------_____________________*/\n\t\t\t\n\t\t\t        var insideRule = false;\n\t\t\t        var insidePropertyValue = false;\n\t\t\t        var enteringConditionalGroup = false;\n\t\t\t        var top_ch = '';\n\t\t\t        var last_top_ch = '';\n\t\t\t\n\t\t\t        while (true) {\n\t\t\t            var whitespace = skipWhitespace();\n\t\t\t            var isAfterSpace = whitespace !== '';\n\t\t\t            var isAfterNewline = whitespace.indexOf('\\n') !== -1;\n\t\t\t            last_top_ch = top_ch;\n\t\t\t            top_ch = ch;\n\t\t\t\n\t\t\t            if (!ch) {\n\t\t\t                break;\n\t\t\t            } else if (ch === '/' && peek() === '*') { /* css comment */\n\t\t\t                var header = indentLevel === 0;\n\t\t\t\n\t\t\t                if (isAfterNewline || header) {\n\t\t\t                    print.newLine();\n\t\t\t                }\n\t\t\t\n\t\t\t                output.push(eatComment());\n\t\t\t                print.newLine();\n\t\t\t                if (header) {\n\t\t\t                    print.newLine(true);\n\t\t\t                }\n\t\t\t            } else if (ch === '/' && peek() === '/') { // single line comment\n\t\t\t                if (!isAfterNewline && last_top_ch !== '{') {\n\t\t\t                    print.trim();\n\t\t\t                }\n\t\t\t                print.singleSpace();\n\t\t\t                output.push(eatComment());\n\t\t\t                print.newLine();\n\t\t\t            } else if (ch === '@') {\n\t\t\t                print.preserveSingleSpace();\n\t\t\t\n\t\t\t                // deal with less propery mixins @{...}\n\t\t\t                if (peek() === '{') {\n\t\t\t                    output.push(eatString('}'));\n\t\t\t                } else {\n\t\t\t                    output.push(ch);\n\t\t\t\n\t\t\t                    // strip trailing space, if present, for hash property checks\n\t\t\t                    var variableOrRule = peekString(\": ,;{}()[]/='\\\"\");\n\t\t\t\n\t\t\t                    if (variableOrRule.match(/[ :]$/)) {\n\t\t\t                        // we have a variable or pseudo-class, add it and insert one space before continuing\n\t\t\t                        next();\n\t\t\t                        variableOrRule = eatString(\": \").replace(/\\s$/, '');\n\t\t\t                        output.push(variableOrRule);\n\t\t\t                        print.singleSpace();\n\t\t\t                    }\n\t\t\t\n\t\t\t                    variableOrRule = variableOrRule.replace(/\\s$/, '');\n\t\t\t\n\t\t\t                    // might be a nesting at-rule\n\t\t\t                    if (variableOrRule in css_beautify.NESTED_AT_RULE) {\n\t\t\t                        nestedLevel += 1;\n\t\t\t                        if (variableOrRule in css_beautify.CONDITIONAL_GROUP_RULE) {\n\t\t\t                            enteringConditionalGroup = true;\n\t\t\t                        }\n\t\t\t                    }\n\t\t\t                }\n\t\t\t            } else if (ch === '#' && peek() === '{') {\n\t\t\t                print.preserveSingleSpace();\n\t\t\t                output.push(eatString('}'));\n\t\t\t            } else if (ch === '{') {\n\t\t\t                if (peek(true) === '}') {\n\t\t\t                    eatWhitespace();\n\t\t\t                    next();\n\t\t\t                    print.singleSpace();\n\t\t\t                    output.push(\"{}\");\n\t\t\t                    print.newLine();\n\t\t\t                    if (newline_between_rules && indentLevel === 0) {\n\t\t\t                        print.newLine(true);\n\t\t\t                    }\n\t\t\t                } else {\n\t\t\t                    indent();\n\t\t\t                    print[\"{\"](ch);\n\t\t\t                    // when entering conditional groups, only rulesets are allowed\n\t\t\t                    if (enteringConditionalGroup) {\n\t\t\t                        enteringConditionalGroup = false;\n\t\t\t                        insideRule = (indentLevel > nestedLevel);\n\t\t\t                    } else {\n\t\t\t                        // otherwise, declarations are also allowed\n\t\t\t                        insideRule = (indentLevel >= nestedLevel);\n\t\t\t                    }\n\t\t\t                }\n\t\t\t            } else if (ch === '}') {\n\t\t\t                outdent();\n\t\t\t                print[\"}\"](ch);\n\t\t\t                insideRule = false;\n\t\t\t                insidePropertyValue = false;\n\t\t\t                if (nestedLevel) {\n\t\t\t                    nestedLevel--;\n\t\t\t                }\n\t\t\t                if (newline_between_rules && indentLevel === 0) {\n\t\t\t                    print.newLine(true);\n\t\t\t                }\n\t\t\t            } else if (ch === \":\") {\n\t\t\t                eatWhitespace();\n\t\t\t                if ((insideRule || enteringConditionalGroup) &&\n\t\t\t                    !(lookBack(\"&\") || foundNestedPseudoClass()) &&\n\t\t\t                    !lookBack(\"(\")) {\n\t\t\t                    // 'property: value' delimiter\n\t\t\t                    // which could be in a conditional group query\n\t\t\t                    insidePropertyValue = true;\n\t\t\t                    output.push(':');\n\t\t\t                    print.singleSpace();\n\t\t\t                } else {\n\t\t\t                    // sass/less parent reference don't use a space\n\t\t\t                    // sass nested pseudo-class don't use a space\n\t\t\t\n\t\t\t                    // preserve space before pseudoclasses/pseudoelements, as it means \"in any child\"\n\t\t\t                    if (lookBack(\" \") && output[output.length - 1] !== \" \") {\n\t\t\t                        output.push(\" \");\n\t\t\t                    }\n\t\t\t                    if (peek() === \":\") {\n\t\t\t                        // pseudo-element\n\t\t\t                        next();\n\t\t\t                        output.push(\"::\");\n\t\t\t                    } else {\n\t\t\t                        // pseudo-class\n\t\t\t                        output.push(':');\n\t\t\t                    }\n\t\t\t                }\n\t\t\t            } else if (ch === '\"' || ch === '\\'') {\n\t\t\t                print.preserveSingleSpace();\n\t\t\t                output.push(eatString(ch));\n\t\t\t            } else if (ch === ';') {\n\t\t\t                insidePropertyValue = false;\n\t\t\t                output.push(ch);\n\t\t\t                print.newLine();\n\t\t\t            } else if (ch === '(') { // may be a url\n\t\t\t                if (lookBack(\"url\")) {\n\t\t\t                    output.push(ch);\n\t\t\t                    eatWhitespace();\n\t\t\t                    if (next()) {\n\t\t\t                        if (ch !== ')' && ch !== '\"' && ch !== '\\'') {\n\t\t\t                            output.push(eatString(')'));\n\t\t\t                        } else {\n\t\t\t                            pos--;\n\t\t\t                        }\n\t\t\t                    }\n\t\t\t                } else {\n\t\t\t                    parenLevel++;\n\t\t\t                    print.preserveSingleSpace();\n\t\t\t                    output.push(ch);\n\t\t\t                    eatWhitespace();\n\t\t\t                }\n\t\t\t            } else if (ch === ')') {\n\t\t\t                output.push(ch);\n\t\t\t                parenLevel--;\n\t\t\t            } else if (ch === ',') {\n\t\t\t                output.push(ch);\n\t\t\t                eatWhitespace();\n\t\t\t                if (selectorSeparatorNewline && !insidePropertyValue && parenLevel < 1) {\n\t\t\t                    print.newLine();\n\t\t\t                } else {\n\t\t\t                    print.singleSpace();\n\t\t\t                }\n\t\t\t            } else if ((ch === '>' || ch === '+' || ch === '~') &&\n\t\t\t                !insidePropertyValue && parenLevel < 1) {\n\t\t\t                //handle combinator spacing\n\t\t\t                if (space_around_combinator) {\n\t\t\t                    print.singleSpace();\n\t\t\t                    output.push(ch);\n\t\t\t                    print.singleSpace();\n\t\t\t                } else {\n\t\t\t                    output.push(ch);\n\t\t\t                    eatWhitespace();\n\t\t\t                    // squash extra whitespace\n\t\t\t                    if (ch && whiteRe.test(ch)) {\n\t\t\t                        ch = '';\n\t\t\t                    }\n\t\t\t                }\n\t\t\t            } else if (ch === ']') {\n\t\t\t                output.push(ch);\n\t\t\t            } else if (ch === '[') {\n\t\t\t                print.preserveSingleSpace();\n\t\t\t                output.push(ch);\n\t\t\t            } else if (ch === '=') { // no whitespace before or after\n\t\t\t                eatWhitespace();\n\t\t\t                ch = '=';\n\t\t\t                output.push(ch);\n\t\t\t            } else {\n\t\t\t                print.preserveSingleSpace();\n\t\t\t                output.push(ch);\n\t\t\t            }\n\t\t\t        }\n\t\t\t\n\t\t\t\n\t\t\t        var sweetCode = '';\n\t\t\t        if (basebaseIndentString) {\n\t\t\t            sweetCode += basebaseIndentString;\n\t\t\t        }\n\t\t\t\n\t\t\t        sweetCode += output.join('').replace(/[\\r\\n\\t ]+$/, '');\n\t\t\t\n\t\t\t        // establish end_with_newline\n\t\t\t        if (end_with_newline) {\n\t\t\t            sweetCode += '\\n';\n\t\t\t        }\n\t\t\t\n\t\t\t        if (eol !== '\\n') {\n\t\t\t            sweetCode = sweetCode.replace(/[\\n]/g, eol);\n\t\t\t        }\n\t\t\t\n\t\t\t        return sweetCode;\n\t\t\t    }\n\t\t\t\n\t\t\t    // https://developer.mozilla.org/en-US/docs/Web/CSS/At-rule\n\t\t\t    css_beautify.NESTED_AT_RULE = {\n\t\t\t        \"@page\": true,\n\t\t\t        \"@font-face\": true,\n\t\t\t        \"@keyframes\": true,\n\t\t\t        // also in CONDITIONAL_GROUP_RULE below\n\t\t\t        \"@media\": true,\n\t\t\t        \"@supports\": true,\n\t\t\t        \"@document\": true\n\t\t\t    };\n\t\t\t    css_beautify.CONDITIONAL_GROUP_RULE = {\n\t\t\t        \"@media\": true,\n\t\t\t        \"@supports\": true,\n\t\t\t        \"@document\": true\n\t\t\t    };\n\t\t\t\n\t\t\t    /*global define */\n\t\t\t    if (true) {\n\t\t\t        // Add support for AMD ( https://github.com/amdjs/amdjs-api/wiki/AMD#defineamd-property- )\n\t\t\t        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t\t\t            return {\n\t\t\t                css_beautify: css_beautify\n\t\t\t            };\n\t\t\t        }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\t\t    } else if (typeof exports !== \"undefined\") {\n\t\t\t        // Add support for CommonJS. Just put this file somewhere on your require.paths\n\t\t\t        // and you will be able to `var html_beautify = require(\"beautify\").html_beautify`.\n\t\t\t        exports.css_beautify = css_beautify;\n\t\t\t    } else if (typeof window !== \"undefined\") {\n\t\t\t        // If we're running a web page and don't have either of the above, add our one global\n\t\t\t        window.css_beautify = css_beautify;\n\t\t\t    } else if (typeof global !== \"undefined\") {\n\t\t\t        // If we don't even have window, try global.\n\t\t\t        global.css_beautify = css_beautify;\n\t\t\t    }\n\t\t\t\n\t\t\t}());\n\t\t\n\t\t/***/ },\n\t\t/* 12 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*jshint curly:true, eqeqeq:true, laxbreak:true, noempty:false */\n\t\t\t/*\n\t\t\t\n\t\t\t  The MIT License (MIT)\n\t\t\t\n\t\t\t  Copyright (c) 2007-2013 Einar Lielmanis and contributors.\n\t\t\t\n\t\t\t  Permission is hereby granted, free of charge, to any person\n\t\t\t  obtaining a copy of this software and associated documentation files\n\t\t\t  (the \"Software\"), to deal in the Software without restriction,\n\t\t\t  including without limitation the rights to use, copy, modify, merge,\n\t\t\t  publish, distribute, sublicense, and/or sell copies of the Software,\n\t\t\t  and to permit persons to whom the Software is furnished to do so,\n\t\t\t  subject to the following conditions:\n\t\t\t\n\t\t\t  The above copyright notice and this permission notice shall be\n\t\t\t  included in all copies or substantial portions of the Software.\n\t\t\t\n\t\t\t  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n\t\t\t  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t\t\t  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n\t\t\t  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n\t\t\t  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n\t\t\t  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n\t\t\t  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\t\t\t  SOFTWARE.\n\t\t\t\n\t\t\t\n\t\t\t Style HTML\n\t\t\t---------------\n\t\t\t\n\t\t\t  Written by Nochum Sossonko, (nsossonko@hotmail.com)\n\t\t\t\n\t\t\t  Based on code initially developed by: Einar Lielmanis, <einar@jsbeautifier.org>\n\t\t\t    http://jsbeautifier.org/\n\t\t\t\n\t\t\t  Usage:\n\t\t\t    style_html(html_source);\n\t\t\t\n\t\t\t    style_html(html_source, options);\n\t\t\t\n\t\t\t  The options are:\n\t\t\t    indent_inner_html (default false)  — indent <head> and <body> sections,\n\t\t\t    indent_size (default 4)          — indentation size,\n\t\t\t    indent_char (default space)      — character to indent with,\n\t\t\t    wrap_line_length (default 250)            -  maximum amount of characters per line (0 = disable)\n\t\t\t    brace_style (default \"collapse\") - \"collapse\" | \"expand\" | \"end-expand\" | \"none\"\n\t\t\t            put braces on the same line as control statements (default), or put braces on own line (Allman / ANSI style), or just put end braces on own line, or attempt to keep them where they are.\n\t\t\t    unformatted (defaults to inline tags) - list of tags, that shouldn't be reformatted\n\t\t\t    indent_scripts (default normal)  - \"keep\"|\"separate\"|\"normal\"\n\t\t\t    preserve_newlines (default true) - whether existing line breaks before elements should be preserved\n\t\t\t                                        Only works before elements, not inside tags or for text.\n\t\t\t    max_preserve_newlines (default unlimited) - maximum number of line breaks to be preserved in one chunk\n\t\t\t    indent_handlebars (default false) - format and indent {{#foo}} and {{/foo}}\n\t\t\t    end_with_newline (false)          - end with a newline\n\t\t\t    extra_liners (default [head,body,/html]) -List of tags that should have an extra newline before them.\n\t\t\t\n\t\t\t    e.g.\n\t\t\t\n\t\t\t    style_html(html_source, {\n\t\t\t      'indent_inner_html': false,\n\t\t\t      'indent_size': 2,\n\t\t\t      'indent_char': ' ',\n\t\t\t      'wrap_line_length': 78,\n\t\t\t      'brace_style': 'expand',\n\t\t\t      'preserve_newlines': true,\n\t\t\t      'max_preserve_newlines': 5,\n\t\t\t      'indent_handlebars': false,\n\t\t\t      'extra_liners': ['/html']\n\t\t\t    });\n\t\t\t*/\n\t\t\t\n\t\t\t(function() {\n\t\t\t\n\t\t\t    // function trim(s) {\n\t\t\t    //     return s.replace(/^\\s+|\\s+$/g, '');\n\t\t\t    // }\n\t\t\t\n\t\t\t    function ltrim(s) {\n\t\t\t        return s.replace(/^\\s+/g, '');\n\t\t\t    }\n\t\t\t\n\t\t\t    function rtrim(s) {\n\t\t\t        return s.replace(/\\s+$/g, '');\n\t\t\t    }\n\t\t\t\n\t\t\t    function style_html(html_source, options, js_beautify, css_beautify) {\n\t\t\t        //Wrapper function to invoke all the necessary constructors and deal with the output.\n\t\t\t\n\t\t\t        var multi_parser,\n\t\t\t            indent_inner_html,\n\t\t\t            indent_body_inner_html,\n\t\t\t            indent_head_inner_html,\n\t\t\t            indent_size,\n\t\t\t            indent_character,\n\t\t\t            wrap_line_length,\n\t\t\t            brace_style,\n\t\t\t            unformatted,\n\t\t\t            preserve_newlines,\n\t\t\t            max_preserve_newlines,\n\t\t\t            indent_handlebars,\n\t\t\t            wrap_attributes,\n\t\t\t            wrap_attributes_indent_size,\n\t\t\t            end_with_newline,\n\t\t\t            extra_liners,\n\t\t\t            eol;\n\t\t\t\n\t\t\t        options = options || {};\n\t\t\t\n\t\t\t        // backwards compatibility to 1.3.4\n\t\t\t        if ((options.wrap_line_length === undefined || parseInt(options.wrap_line_length, 10) === 0) &&\n\t\t\t            (options.max_char !== undefined && parseInt(options.max_char, 10) !== 0)) {\n\t\t\t            options.wrap_line_length = options.max_char;\n\t\t\t        }\n\t\t\t\n\t\t\t        indent_inner_html = (options.indent_inner_html === undefined) ? false : options.indent_inner_html;\n\t\t\t        indent_body_inner_html = (options.indent_body_inner_html === undefined) ? true : options.indent_body_inner_html;\n\t\t\t        indent_head_inner_html = (options.indent_head_inner_html === undefined) ? true : options.indent_head_inner_html;\n\t\t\t        indent_size = (options.indent_size === undefined) ? 4 : parseInt(options.indent_size, 10);\n\t\t\t        indent_character = (options.indent_char === undefined) ? ' ' : options.indent_char;\n\t\t\t        brace_style = (options.brace_style === undefined) ? 'collapse' : options.brace_style;\n\t\t\t        wrap_line_length = parseInt(options.wrap_line_length, 10) === 0 ? 32786 : parseInt(options.wrap_line_length || 250, 10);\n\t\t\t        unformatted = options.unformatted || [\n\t\t\t            // https://www.w3.org/TR/html5/dom.html#phrasing-content\n\t\t\t            'a', 'abbr', 'area', 'audio', 'b', 'bdi', 'bdo', 'br', 'button', 'canvas', 'cite',\n\t\t\t            'code', 'data', 'datalist', 'del', 'dfn', 'em', 'embed', 'i', 'iframe', 'img',\n\t\t\t            'input', 'ins', 'kbd', 'keygen', 'label', 'map', 'mark', 'math', 'meter', 'noscript',\n\t\t\t            'object', 'output', 'progress', 'q', 'ruby', 's', 'samp', /* 'script', */ 'select', 'small',\n\t\t\t            'span', 'strong', 'sub', 'sup', 'svg', 'template', 'textarea', 'time', 'u', 'var',\n\t\t\t            'video', 'wbr', 'text',\n\t\t\t            // prexisting - not sure of full effect of removing, leaving in\n\t\t\t            'acronym', 'address', 'big', 'dt', 'ins', 'small', 'strike', 'tt',\n\t\t\t            'pre',\n\t\t\t        ];\n\t\t\t        preserve_newlines = (options.preserve_newlines === undefined) ? true : options.preserve_newlines;\n\t\t\t        max_preserve_newlines = preserve_newlines ?\n\t\t\t            (isNaN(parseInt(options.max_preserve_newlines, 10)) ? 32786 : parseInt(options.max_preserve_newlines, 10)) :\n\t\t\t            0;\n\t\t\t        indent_handlebars = (options.indent_handlebars === undefined) ? false : options.indent_handlebars;\n\t\t\t        wrap_attributes = (options.wrap_attributes === undefined) ? 'auto' : options.wrap_attributes;\n\t\t\t        wrap_attributes_indent_size = (isNaN(parseInt(options.wrap_attributes_indent_size, 10))) ? indent_size : parseInt(options.wrap_attributes_indent_size, 10);\n\t\t\t        end_with_newline = (options.end_with_newline === undefined) ? false : options.end_with_newline;\n\t\t\t        extra_liners = (typeof options.extra_liners === 'object') && options.extra_liners ?\n\t\t\t            options.extra_liners.concat() : (typeof options.extra_liners === 'string') ?\n\t\t\t            options.extra_liners.split(',') : 'head,body,/html'.split(',');\n\t\t\t        eol = options.eol ? options.eol : '\\n';\n\t\t\t\n\t\t\t        if (options.indent_with_tabs) {\n\t\t\t            indent_character = '\\t';\n\t\t\t            indent_size = 1;\n\t\t\t        }\n\t\t\t\n\t\t\t        eol = eol.replace(/\\\\r/, '\\r').replace(/\\\\n/, '\\n');\n\t\t\t\n\t\t\t        function Parser() {\n\t\t\t\n\t\t\t            this.pos = 0; //Parser position\n\t\t\t            this.token = '';\n\t\t\t            this.current_mode = 'CONTENT'; //reflects the current Parser mode: TAG/CONTENT\n\t\t\t            this.tags = { //An object to hold tags, their position, and their parent-tags, initiated with default values\n\t\t\t                parent: 'parent1',\n\t\t\t                parentcount: 1,\n\t\t\t                parent1: ''\n\t\t\t            };\n\t\t\t            this.tag_type = '';\n\t\t\t            this.token_text = this.last_token = this.last_text = this.token_type = '';\n\t\t\t            this.newlines = 0;\n\t\t\t            this.indent_content = indent_inner_html;\n\t\t\t            this.indent_body_inner_html = indent_body_inner_html;\n\t\t\t            this.indent_head_inner_html = indent_head_inner_html;\n\t\t\t\n\t\t\t            this.Utils = { //Uilities made available to the various functions\n\t\t\t                whitespace: \"\\n\\r\\t \".split(''),\n\t\t\t\n\t\t\t                single_token: [\n\t\t\t                    // HTLM void elements - aka self-closing tags - aka singletons\n\t\t\t                    // https://www.w3.org/html/wg/drafts/html/master/syntax.html#void-elements\n\t\t\t                    'area', 'base', 'br', 'col', 'embed', 'hr', 'img', 'input', 'keygen',\n\t\t\t                    'link', 'menuitem', 'meta', 'param', 'source', 'track', 'wbr',\n\t\t\t                    // NOTE: Optional tags - are not understood.\n\t\t\t                    // https://www.w3.org/TR/html5/syntax.html#optional-tags\n\t\t\t                    // The rules for optional tags are too complex for a simple list\n\t\t\t                    // Also, the content of these tags should still be indented in many cases.\n\t\t\t                    // 'li' is a good exmple.\n\t\t\t\n\t\t\t                    // Doctype and xml elements\n\t\t\t                    '!doctype', '?xml',\n\t\t\t                    // ?php tag\n\t\t\t                    '?php',\n\t\t\t                    // other tags that were in this list, keeping just in case\n\t\t\t                    'basefont', 'isindex'\n\t\t\t                ],\n\t\t\t                extra_liners: extra_liners, //for tags that need a line of whitespace before them\n\t\t\t                in_array: function(what, arr) {\n\t\t\t                    for (var i = 0; i < arr.length; i++) {\n\t\t\t                        if (what === arr[i]) {\n\t\t\t                            return true;\n\t\t\t                        }\n\t\t\t                    }\n\t\t\t                    return false;\n\t\t\t                }\n\t\t\t            };\n\t\t\t\n\t\t\t            // Return true if the given text is composed entirely of whitespace.\n\t\t\t            this.is_whitespace = function(text) {\n\t\t\t                for (var n = 0; n < text.length; n++) {\n\t\t\t                    if (!this.Utils.in_array(text.charAt(n), this.Utils.whitespace)) {\n\t\t\t                        return false;\n\t\t\t                    }\n\t\t\t                }\n\t\t\t                return true;\n\t\t\t            };\n\t\t\t\n\t\t\t            this.traverse_whitespace = function() {\n\t\t\t                var input_char = '';\n\t\t\t\n\t\t\t                input_char = this.input.charAt(this.pos);\n\t\t\t                if (this.Utils.in_array(input_char, this.Utils.whitespace)) {\n\t\t\t                    this.newlines = 0;\n\t\t\t                    while (this.Utils.in_array(input_char, this.Utils.whitespace)) {\n\t\t\t                        if (preserve_newlines && input_char === '\\n' && this.newlines <= max_preserve_newlines) {\n\t\t\t                            this.newlines += 1;\n\t\t\t                        }\n\t\t\t\n\t\t\t                        this.pos++;\n\t\t\t                        input_char = this.input.charAt(this.pos);\n\t\t\t                    }\n\t\t\t                    return true;\n\t\t\t                }\n\t\t\t                return false;\n\t\t\t            };\n\t\t\t\n\t\t\t            // Append a space to the given content (string array) or, if we are\n\t\t\t            // at the wrap_line_length, append a newline/indentation.\n\t\t\t            // return true if a newline was added, false if a space was added\n\t\t\t            this.space_or_wrap = function(content) {\n\t\t\t                if (this.line_char_count >= this.wrap_line_length) { //insert a line when the wrap_line_length is reached\n\t\t\t                    this.print_newline(false, content);\n\t\t\t                    this.print_indentation(content);\n\t\t\t                    return true;\n\t\t\t                } else {\n\t\t\t                    this.line_char_count++;\n\t\t\t                    content.push(' ');\n\t\t\t                    return false;\n\t\t\t                }\n\t\t\t            };\n\t\t\t\n\t\t\t            this.get_content = function() { //function to capture regular content between tags\n\t\t\t                var input_char = '',\n\t\t\t                    content = [];\n\t\t\t\n\t\t\t                while (this.input.charAt(this.pos) !== '<') {\n\t\t\t                    if (this.pos >= this.input.length) {\n\t\t\t                        return content.length ? content.join('') : ['', 'TK_EOF'];\n\t\t\t                    }\n\t\t\t\n\t\t\t                    if (this.traverse_whitespace()) {\n\t\t\t                        this.space_or_wrap(content);\n\t\t\t                        continue;\n\t\t\t                    }\n\t\t\t\n\t\t\t                    if (indent_handlebars) {\n\t\t\t                        // Handlebars parsing is complicated.\n\t\t\t                        // {{#foo}} and {{/foo}} are formatted tags.\n\t\t\t                        // {{something}} should get treated as content, except:\n\t\t\t                        // {{else}} specifically behaves like {{#if}} and {{/if}}\n\t\t\t                        var peek3 = this.input.substr(this.pos, 3);\n\t\t\t                        if (peek3 === '{{#' || peek3 === '{{/') {\n\t\t\t                            // These are tags and not content.\n\t\t\t                            break;\n\t\t\t                        } else if (peek3 === '{{!') {\n\t\t\t                            return [this.get_tag(), 'TK_TAG_HANDLEBARS_COMMENT'];\n\t\t\t                        } else if (this.input.substr(this.pos, 2) === '{{') {\n\t\t\t                            if (this.get_tag(true) === '{{else}}') {\n\t\t\t                                break;\n\t\t\t                            }\n\t\t\t                        }\n\t\t\t                    }\n\t\t\t\n\t\t\t                    input_char = this.input.charAt(this.pos);\n\t\t\t                    this.pos++;\n\t\t\t                    this.line_char_count++;\n\t\t\t                    content.push(input_char); //letter at-a-time (or string) inserted to an array\n\t\t\t                }\n\t\t\t                return content.length ? content.join('') : '';\n\t\t\t            };\n\t\t\t\n\t\t\t            this.get_contents_to = function(name) { //get the full content of a script or style to pass to js_beautify\n\t\t\t                if (this.pos === this.input.length) {\n\t\t\t                    return ['', 'TK_EOF'];\n\t\t\t                }\n\t\t\t                var content = '';\n\t\t\t                var reg_match = new RegExp('</' + name + '\\\\s*>', 'igm');\n\t\t\t                reg_match.lastIndex = this.pos;\n\t\t\t                var reg_array = reg_match.exec(this.input);\n\t\t\t                var end_script = reg_array ? reg_array.index : this.input.length; //absolute end of script\n\t\t\t                if (this.pos < end_script) { //get everything in between the script tags\n\t\t\t                    content = this.input.substring(this.pos, end_script);\n\t\t\t                    this.pos = end_script;\n\t\t\t                }\n\t\t\t                return content;\n\t\t\t            };\n\t\t\t\n\t\t\t            this.record_tag = function(tag) { //function to record a tag and its parent in this.tags Object\n\t\t\t                if (this.tags[tag + 'count']) { //check for the existence of this tag type\n\t\t\t                    this.tags[tag + 'count']++;\n\t\t\t                    this.tags[tag + this.tags[tag + 'count']] = this.indent_level; //and record the present indent level\n\t\t\t                } else { //otherwise initialize this tag type\n\t\t\t                    this.tags[tag + 'count'] = 1;\n\t\t\t                    this.tags[tag + this.tags[tag + 'count']] = this.indent_level; //and record the present indent level\n\t\t\t                }\n\t\t\t                this.tags[tag + this.tags[tag + 'count'] + 'parent'] = this.tags.parent; //set the parent (i.e. in the case of a div this.tags.div1parent)\n\t\t\t                this.tags.parent = tag + this.tags[tag + 'count']; //and make this the current parent (i.e. in the case of a div 'div1')\n\t\t\t            };\n\t\t\t\n\t\t\t            this.retrieve_tag = function(tag) { //function to retrieve the opening tag to the corresponding closer\n\t\t\t                if (this.tags[tag + 'count']) { //if the openener is not in the Object we ignore it\n\t\t\t                    var temp_parent = this.tags.parent; //check to see if it's a closable tag.\n\t\t\t                    while (temp_parent) { //till we reach '' (the initial value);\n\t\t\t                        if (tag + this.tags[tag + 'count'] === temp_parent) { //if this is it use it\n\t\t\t                            break;\n\t\t\t                        }\n\t\t\t                        temp_parent = this.tags[temp_parent + 'parent']; //otherwise keep on climbing up the DOM Tree\n\t\t\t                    }\n\t\t\t                    if (temp_parent) { //if we caught something\n\t\t\t                        this.indent_level = this.tags[tag + this.tags[tag + 'count']]; //set the indent_level accordingly\n\t\t\t                        this.tags.parent = this.tags[temp_parent + 'parent']; //and set the current parent\n\t\t\t                    }\n\t\t\t                    delete this.tags[tag + this.tags[tag + 'count'] + 'parent']; //delete the closed tags parent reference...\n\t\t\t                    delete this.tags[tag + this.tags[tag + 'count']]; //...and the tag itself\n\t\t\t                    if (this.tags[tag + 'count'] === 1) {\n\t\t\t                        delete this.tags[tag + 'count'];\n\t\t\t                    } else {\n\t\t\t                        this.tags[tag + 'count']--;\n\t\t\t                    }\n\t\t\t                }\n\t\t\t            };\n\t\t\t\n\t\t\t            this.indent_to_tag = function(tag) {\n\t\t\t                // Match the indentation level to the last use of this tag, but don't remove it.\n\t\t\t                if (!this.tags[tag + 'count']) {\n\t\t\t                    return;\n\t\t\t                }\n\t\t\t                var temp_parent = this.tags.parent;\n\t\t\t                while (temp_parent) {\n\t\t\t                    if (tag + this.tags[tag + 'count'] === temp_parent) {\n\t\t\t                        break;\n\t\t\t                    }\n\t\t\t                    temp_parent = this.tags[temp_parent + 'parent'];\n\t\t\t                }\n\t\t\t                if (temp_parent) {\n\t\t\t                    this.indent_level = this.tags[tag + this.tags[tag + 'count']];\n\t\t\t                }\n\t\t\t            };\n\t\t\t\n\t\t\t            this.get_tag = function(peek) { //function to get a full tag and parse its type\n\t\t\t                var input_char = '',\n\t\t\t                    content = [],\n\t\t\t                    comment = '',\n\t\t\t                    space = false,\n\t\t\t                    first_attr = true,\n\t\t\t                    tag_start, tag_end,\n\t\t\t                    tag_start_char,\n\t\t\t                    orig_pos = this.pos,\n\t\t\t                    orig_line_char_count = this.line_char_count;\n\t\t\t\n\t\t\t                peek = peek !== undefined ? peek : false;\n\t\t\t\n\t\t\t                do {\n\t\t\t                    if (this.pos >= this.input.length) {\n\t\t\t                        if (peek) {\n\t\t\t                            this.pos = orig_pos;\n\t\t\t                            this.line_char_count = orig_line_char_count;\n\t\t\t                        }\n\t\t\t                        return content.length ? content.join('') : ['', 'TK_EOF'];\n\t\t\t                    }\n\t\t\t\n\t\t\t                    input_char = this.input.charAt(this.pos);\n\t\t\t                    this.pos++;\n\t\t\t\n\t\t\t                    if (this.Utils.in_array(input_char, this.Utils.whitespace)) { //don't want to insert unnecessary space\n\t\t\t                        space = true;\n\t\t\t                        continue;\n\t\t\t                    }\n\t\t\t\n\t\t\t                    if (input_char === \"'\" || input_char === '\"') {\n\t\t\t                        input_char += this.get_unformatted(input_char);\n\t\t\t                        space = true;\n\t\t\t\n\t\t\t                    }\n\t\t\t\n\t\t\t                    if (input_char === '=') { //no space before =\n\t\t\t                        space = false;\n\t\t\t                    }\n\t\t\t\n\t\t\t                    if (content.length && content[content.length - 1] !== '=' && input_char !== '>' && space) {\n\t\t\t                        //no space after = or before >\n\t\t\t                        var wrapped = this.space_or_wrap(content);\n\t\t\t                        var indentAttrs = wrapped && input_char !== '/' && wrap_attributes !== 'force';\n\t\t\t                        space = false;\n\t\t\t                        if (!first_attr && wrap_attributes === 'force' && input_char !== '/') {\n\t\t\t                            this.print_newline(false, content);\n\t\t\t                            this.print_indentation(content);\n\t\t\t                            indentAttrs = true;\n\t\t\t                        }\n\t\t\t                        if (indentAttrs) {\n\t\t\t                            //indent attributes an auto or forced line-wrap\n\t\t\t                            for (var count = 0; count < wrap_attributes_indent_size; count++) {\n\t\t\t                                content.push(indent_character);\n\t\t\t                            }\n\t\t\t                        }\n\t\t\t                        for (var i = 0; i < content.length; i++) {\n\t\t\t                            if (content[i] === ' ') {\n\t\t\t                                first_attr = false;\n\t\t\t                                break;\n\t\t\t                            }\n\t\t\t                        }\n\t\t\t                    }\n\t\t\t\n\t\t\t                    if (indent_handlebars && tag_start_char === '<') {\n\t\t\t                        // When inside an angle-bracket tag, put spaces around\n\t\t\t                        // handlebars not inside of strings.\n\t\t\t                        if ((input_char + this.input.charAt(this.pos)) === '{{') {\n\t\t\t                            input_char += this.get_unformatted('}}');\n\t\t\t                            if (content.length && content[content.length - 1] !== ' ' && content[content.length - 1] !== '<') {\n\t\t\t                                input_char = ' ' + input_char;\n\t\t\t                            }\n\t\t\t                            space = true;\n\t\t\t                        }\n\t\t\t                    }\n\t\t\t\n\t\t\t                    if (input_char === '<' && !tag_start_char) {\n\t\t\t                        tag_start = this.pos - 1;\n\t\t\t                        tag_start_char = '<';\n\t\t\t                    }\n\t\t\t\n\t\t\t                    if (indent_handlebars && !tag_start_char) {\n\t\t\t                        if (content.length >= 2 && content[content.length - 1] === '{' && content[content.length - 2] === '{') {\n\t\t\t                            if (input_char === '#' || input_char === '/' || input_char === '!') {\n\t\t\t                                tag_start = this.pos - 3;\n\t\t\t                            } else {\n\t\t\t                                tag_start = this.pos - 2;\n\t\t\t                            }\n\t\t\t                            tag_start_char = '{';\n\t\t\t                        }\n\t\t\t                    }\n\t\t\t\n\t\t\t                    this.line_char_count++;\n\t\t\t                    content.push(input_char); //inserts character at-a-time (or string)\n\t\t\t\n\t\t\t                    if (content[1] && (content[1] === '!' || content[1] === '?' || content[1] === '%')) { //if we're in a comment, do something special\n\t\t\t                        // We treat all comments as literals, even more than preformatted tags\n\t\t\t                        // we just look for the appropriate close tag\n\t\t\t                        content = [this.get_comment(tag_start)];\n\t\t\t                        break;\n\t\t\t                    }\n\t\t\t\n\t\t\t                    if (indent_handlebars && content[1] && content[1] === '{' && content[2] && content[2] === '!') { //if we're in a comment, do something special\n\t\t\t                        // We treat all comments as literals, even more than preformatted tags\n\t\t\t                        // we just look for the appropriate close tag\n\t\t\t                        content = [this.get_comment(tag_start)];\n\t\t\t                        break;\n\t\t\t                    }\n\t\t\t\n\t\t\t                    if (indent_handlebars && tag_start_char === '{' && content.length > 2 && content[content.length - 2] === '}' && content[content.length - 1] === '}') {\n\t\t\t                        break;\n\t\t\t                    }\n\t\t\t                } while (input_char !== '>');\n\t\t\t\n\t\t\t                var tag_complete = content.join('');\n\t\t\t                var tag_index;\n\t\t\t                var tag_offset;\n\t\t\t\n\t\t\t                if (tag_complete.indexOf(' ') !== -1) { //if there's whitespace, thats where the tag name ends\n\t\t\t                    tag_index = tag_complete.indexOf(' ');\n\t\t\t                } else if (tag_complete.charAt(0) === '{') {\n\t\t\t                    tag_index = tag_complete.indexOf('}');\n\t\t\t                } else { //otherwise go with the tag ending\n\t\t\t                    tag_index = tag_complete.indexOf('>');\n\t\t\t                }\n\t\t\t                if (tag_complete.charAt(0) === '<' || !indent_handlebars) {\n\t\t\t                    tag_offset = 1;\n\t\t\t                } else {\n\t\t\t                    tag_offset = tag_complete.charAt(2) === '#' ? 3 : 2;\n\t\t\t                }\n\t\t\t                var tag_check = tag_complete.substring(tag_offset, tag_index).toLowerCase();\n\t\t\t                if (tag_complete.charAt(tag_complete.length - 2) === '/' ||\n\t\t\t                    this.Utils.in_array(tag_check, this.Utils.single_token)) { //if this tag name is a single tag type (either in the list or has a closing /)\n\t\t\t                    if (!peek) {\n\t\t\t                        this.tag_type = 'SINGLE';\n\t\t\t                    }\n\t\t\t                } else if (indent_handlebars && tag_complete.charAt(0) === '{' && tag_check === 'else') {\n\t\t\t                    if (!peek) {\n\t\t\t                        this.indent_to_tag('if');\n\t\t\t                        this.tag_type = 'HANDLEBARS_ELSE';\n\t\t\t                        this.indent_content = true;\n\t\t\t                        this.traverse_whitespace();\n\t\t\t                    }\n\t\t\t                } else if (this.is_unformatted(tag_check, unformatted)) { // do not reformat the \"unformatted\" tags\n\t\t\t                    comment = this.get_unformatted('</' + tag_check + '>', tag_complete); //...delegate to get_unformatted function\n\t\t\t                    content.push(comment);\n\t\t\t                    tag_end = this.pos - 1;\n\t\t\t                    this.tag_type = 'SINGLE';\n\t\t\t                } else if (tag_check === 'script' &&\n\t\t\t                    (tag_complete.search('type') === -1 ||\n\t\t\t                        (tag_complete.search('type') > -1 &&\n\t\t\t                            tag_complete.search(/\\b(text|application|dojo)\\/(x-)?(javascript|ecmascript|jscript|livescript|(ld\\+)?json|method|aspect)/) > -1))) {\n\t\t\t                    if (!peek) {\n\t\t\t                        this.record_tag(tag_check);\n\t\t\t                        this.tag_type = 'SCRIPT';\n\t\t\t                    }\n\t\t\t                } else if (tag_check === 'style' &&\n\t\t\t                    (tag_complete.search('type') === -1 ||\n\t\t\t                        (tag_complete.search('type') > -1 && tag_complete.search('text/css') > -1))) {\n\t\t\t                    if (!peek) {\n\t\t\t                        this.record_tag(tag_check);\n\t\t\t                        this.tag_type = 'STYLE';\n\t\t\t                    }\n\t\t\t                } else if (tag_check.charAt(0) === '!') { //peek for <! comment\n\t\t\t                    // for comments content is already correct.\n\t\t\t                    if (!peek) {\n\t\t\t                        this.tag_type = 'SINGLE';\n\t\t\t                        this.traverse_whitespace();\n\t\t\t                    }\n\t\t\t                } else if (!peek) {\n\t\t\t                    if (tag_check.charAt(0) === '/') { //this tag is a double tag so check for tag-ending\n\t\t\t                        this.retrieve_tag(tag_check.substring(1)); //remove it and all ancestors\n\t\t\t                        this.tag_type = 'END';\n\t\t\t                    } else { //otherwise it's a start-tag\n\t\t\t                        this.record_tag(tag_check); //push it on the tag stack\n\t\t\t                        if (tag_check.toLowerCase() !== 'html') {\n\t\t\t                            this.indent_content = true;\n\t\t\t                        }\n\t\t\t                        this.tag_type = 'START';\n\t\t\t                    }\n\t\t\t\n\t\t\t                    // Allow preserving of newlines after a start or end tag\n\t\t\t                    if (this.traverse_whitespace()) {\n\t\t\t                        this.space_or_wrap(content);\n\t\t\t                    }\n\t\t\t\n\t\t\t                    if (this.Utils.in_array(tag_check, this.Utils.extra_liners)) { //check if this double needs an extra line\n\t\t\t                        this.print_newline(false, this.output);\n\t\t\t                        if (this.output.length && this.output[this.output.length - 2] !== '\\n') {\n\t\t\t                            this.print_newline(true, this.output);\n\t\t\t                        }\n\t\t\t                    }\n\t\t\t                }\n\t\t\t\n\t\t\t                if (peek) {\n\t\t\t                    this.pos = orig_pos;\n\t\t\t                    this.line_char_count = orig_line_char_count;\n\t\t\t                }\n\t\t\t\n\t\t\t                return content.join(''); //returns fully formatted tag\n\t\t\t            };\n\t\t\t\n\t\t\t            this.get_comment = function(start_pos) { //function to return comment content in its entirety\n\t\t\t                // this is will have very poor perf, but will work for now.\n\t\t\t                var comment = '',\n\t\t\t                    delimiter = '>',\n\t\t\t                    matched = false;\n\t\t\t\n\t\t\t                this.pos = start_pos;\n\t\t\t                var input_char = this.input.charAt(this.pos);\n\t\t\t                this.pos++;\n\t\t\t\n\t\t\t                while (this.pos <= this.input.length) {\n\t\t\t                    comment += input_char;\n\t\t\t\n\t\t\t                    // only need to check for the delimiter if the last chars match\n\t\t\t                    if (comment.charAt(comment.length - 1) === delimiter.charAt(delimiter.length - 1) &&\n\t\t\t                        comment.indexOf(delimiter) !== -1) {\n\t\t\t                        break;\n\t\t\t                    }\n\t\t\t\n\t\t\t                    // only need to search for custom delimiter for the first few characters\n\t\t\t                    if (!matched && comment.length < 10) {\n\t\t\t                        if (comment.indexOf('<![if') === 0) { //peek for <![if conditional comment\n\t\t\t                            delimiter = '<![endif]>';\n\t\t\t                            matched = true;\n\t\t\t                        } else if (comment.indexOf('<![cdata[') === 0) { //if it's a <[cdata[ comment...\n\t\t\t                            delimiter = ']]>';\n\t\t\t                            matched = true;\n\t\t\t                        } else if (comment.indexOf('<![') === 0) { // some other ![ comment? ...\n\t\t\t                            delimiter = ']>';\n\t\t\t                            matched = true;\n\t\t\t                        } else if (comment.indexOf('<!--') === 0) { // <!-- comment ...\n\t\t\t                            delimiter = '-->';\n\t\t\t                            matched = true;\n\t\t\t                        } else if (comment.indexOf('{{!') === 0) { // {{! handlebars comment\n\t\t\t                            delimiter = '}}';\n\t\t\t                            matched = true;\n\t\t\t                        } else if (comment.indexOf('<?') === 0) { // {{! handlebars comment\n\t\t\t                            delimiter = '?>';\n\t\t\t                            matched = true;\n\t\t\t                        } else if (comment.indexOf('<%') === 0) { // {{! handlebars comment\n\t\t\t                            delimiter = '%>';\n\t\t\t                            matched = true;\n\t\t\t                        }\n\t\t\t                    }\n\t\t\t\n\t\t\t                    input_char = this.input.charAt(this.pos);\n\t\t\t                    this.pos++;\n\t\t\t                }\n\t\t\t\n\t\t\t                return comment;\n\t\t\t            };\n\t\t\t\n\t\t\t            function tokenMatcher(delimiter) {\n\t\t\t                var token = '';\n\t\t\t\n\t\t\t                var add = function(str) {\n\t\t\t                    var newToken = token + str.toLowerCase();\n\t\t\t                    token = newToken.length <= delimiter.length ? newToken : newToken.substr(newToken.length - delimiter.length, delimiter.length);\n\t\t\t                };\n\t\t\t\n\t\t\t                var doesNotMatch = function() {\n\t\t\t                    return token.indexOf(delimiter) === -1;\n\t\t\t                };\n\t\t\t\n\t\t\t                return {\n\t\t\t                    add: add,\n\t\t\t                    doesNotMatch: doesNotMatch\n\t\t\t                };\n\t\t\t            }\n\t\t\t\n\t\t\t            this.get_unformatted = function(delimiter, orig_tag) { //function to return unformatted content in its entirety\n\t\t\t                if (orig_tag && orig_tag.toLowerCase().indexOf(delimiter) !== -1) {\n\t\t\t                    return '';\n\t\t\t                }\n\t\t\t                var input_char = '';\n\t\t\t                var content = '';\n\t\t\t                var space = true;\n\t\t\t\n\t\t\t                var delimiterMatcher = tokenMatcher(delimiter);\n\t\t\t\n\t\t\t                do {\n\t\t\t\n\t\t\t                    if (this.pos >= this.input.length) {\n\t\t\t                        return content;\n\t\t\t                    }\n\t\t\t\n\t\t\t                    input_char = this.input.charAt(this.pos);\n\t\t\t                    this.pos++;\n\t\t\t\n\t\t\t                    if (this.Utils.in_array(input_char, this.Utils.whitespace)) {\n\t\t\t                        if (!space) {\n\t\t\t                            this.line_char_count--;\n\t\t\t                            continue;\n\t\t\t                        }\n\t\t\t                        if (input_char === '\\n' || input_char === '\\r') {\n\t\t\t                            content += '\\n';\n\t\t\t                            /*  Don't change tab indention for unformatted blocks.  If using code for html editing, this will greatly affect <pre> tags if they are specified in the 'unformatted array'\n\t\t\t                for (var i=0; i<this.indent_level; i++) {\n\t\t\t                  content += this.indent_string;\n\t\t\t                }\n\t\t\t                space = false; //...and make sure other indentation is erased\n\t\t\t                */\n\t\t\t                            this.line_char_count = 0;\n\t\t\t                            continue;\n\t\t\t                        }\n\t\t\t                    }\n\t\t\t                    content += input_char;\n\t\t\t                    delimiterMatcher.add(input_char);\n\t\t\t                    this.line_char_count++;\n\t\t\t                    space = true;\n\t\t\t\n\t\t\t                    if (indent_handlebars && input_char === '{' && content.length && content.charAt(content.length - 2) === '{') {\n\t\t\t                        // Handlebars expressions in strings should also be unformatted.\n\t\t\t                        content += this.get_unformatted('}}');\n\t\t\t                        // Don't consider when stopping for delimiters.\n\t\t\t                    }\n\t\t\t                } while (delimiterMatcher.doesNotMatch());\n\t\t\t\n\t\t\t                return content;\n\t\t\t            };\n\t\t\t\n\t\t\t            this.get_token = function() { //initial handler for token-retrieval\n\t\t\t                var token;\n\t\t\t\n\t\t\t                if (this.last_token === 'TK_TAG_SCRIPT' || this.last_token === 'TK_TAG_STYLE') { //check if we need to format javascript\n\t\t\t                    var type = this.last_token.substr(7);\n\t\t\t                    token = this.get_contents_to(type);\n\t\t\t                    if (typeof token !== 'string') {\n\t\t\t                        return token;\n\t\t\t                    }\n\t\t\t                    return [token, 'TK_' + type];\n\t\t\t                }\n\t\t\t                if (this.current_mode === 'CONTENT') {\n\t\t\t                    token = this.get_content();\n\t\t\t                    if (typeof token !== 'string') {\n\t\t\t                        return token;\n\t\t\t                    } else {\n\t\t\t                        return [token, 'TK_CONTENT'];\n\t\t\t                    }\n\t\t\t                }\n\t\t\t\n\t\t\t                if (this.current_mode === 'TAG') {\n\t\t\t                    token = this.get_tag();\n\t\t\t                    if (typeof token !== 'string') {\n\t\t\t                        return token;\n\t\t\t                    } else {\n\t\t\t                        var tag_name_type = 'TK_TAG_' + this.tag_type;\n\t\t\t                        return [token, tag_name_type];\n\t\t\t                    }\n\t\t\t                }\n\t\t\t            };\n\t\t\t\n\t\t\t            this.get_full_indent = function(level) {\n\t\t\t                level = this.indent_level + level || 0;\n\t\t\t                if (level < 1) {\n\t\t\t                    return '';\n\t\t\t                }\n\t\t\t\n\t\t\t                return Array(level + 1).join(this.indent_string);\n\t\t\t            };\n\t\t\t\n\t\t\t            this.is_unformatted = function(tag_check, unformatted) {\n\t\t\t                //is this an HTML5 block-level link?\n\t\t\t                if (!this.Utils.in_array(tag_check, unformatted)) {\n\t\t\t                    return false;\n\t\t\t                }\n\t\t\t\n\t\t\t                if (tag_check.toLowerCase() !== 'a' || !this.Utils.in_array('a', unformatted)) {\n\t\t\t                    return true;\n\t\t\t                }\n\t\t\t\n\t\t\t                //at this point we have an  tag; is its first child something we want to remain\n\t\t\t                //unformatted?\n\t\t\t                var next_tag = this.get_tag(true /* peek. */ );\n\t\t\t\n\t\t\t                // test next_tag to see if it is just html tag (no external content)\n\t\t\t                var tag = (next_tag || \"\").match(/^\\s*<\\s*\\/?([a-z]*)\\s*[^>]*>\\s*$/);\n\t\t\t\n\t\t\t                // if next_tag comes back but is not an isolated tag, then\n\t\t\t                // let's treat the 'a' tag as having content\n\t\t\t                // and respect the unformatted option\n\t\t\t                if (!tag || this.Utils.in_array(tag, unformatted)) {\n\t\t\t                    return true;\n\t\t\t                } else {\n\t\t\t                    return false;\n\t\t\t                }\n\t\t\t            };\n\t\t\t\n\t\t\t            this.printer = function(js_source, indent_character, indent_size, wrap_line_length, brace_style) { //handles input/output and some other printing functions\n\t\t\t\n\t\t\t                this.input = js_source || ''; //gets the input for the Parser\n\t\t\t\n\t\t\t                // HACK: newline parsing inconsistent. This brute force normalizes the input.\n\t\t\t                this.input = this.input.replace(/\\r\\n|[\\r\\u2028\\u2029]/g, '\\n');\n\t\t\t\n\t\t\t                this.output = [];\n\t\t\t                this.indent_character = indent_character;\n\t\t\t                this.indent_string = '';\n\t\t\t                this.indent_size = indent_size;\n\t\t\t                this.brace_style = brace_style;\n\t\t\t                this.indent_level = 0;\n\t\t\t                this.wrap_line_length = wrap_line_length;\n\t\t\t                this.line_char_count = 0; //count to see if wrap_line_length was exceeded\n\t\t\t\n\t\t\t                for (var i = 0; i < this.indent_size; i++) {\n\t\t\t                    this.indent_string += this.indent_character;\n\t\t\t                }\n\t\t\t\n\t\t\t                this.print_newline = function(force, arr) {\n\t\t\t                    this.line_char_count = 0;\n\t\t\t                    if (!arr || !arr.length) {\n\t\t\t                        return;\n\t\t\t                    }\n\t\t\t                    if (force || (arr[arr.length - 1] !== '\\n')) { //we might want the extra line\n\t\t\t                        if ((arr[arr.length - 1] !== '\\n')) {\n\t\t\t                            arr[arr.length - 1] = rtrim(arr[arr.length - 1]);\n\t\t\t                        }\n\t\t\t                        arr.push('\\n');\n\t\t\t                    }\n\t\t\t                };\n\t\t\t\n\t\t\t                this.print_indentation = function(arr) {\n\t\t\t                    for (var i = 0; i < this.indent_level; i++) {\n\t\t\t                        arr.push(this.indent_string);\n\t\t\t                        this.line_char_count += this.indent_string.length;\n\t\t\t                    }\n\t\t\t                };\n\t\t\t\n\t\t\t                this.print_token = function(text) {\n\t\t\t                    // Avoid printing initial whitespace.\n\t\t\t                    if (this.is_whitespace(text) && !this.output.length) {\n\t\t\t                        return;\n\t\t\t                    }\n\t\t\t                    if (text || text !== '') {\n\t\t\t                        if (this.output.length && this.output[this.output.length - 1] === '\\n') {\n\t\t\t                            this.print_indentation(this.output);\n\t\t\t                            text = ltrim(text);\n\t\t\t                        }\n\t\t\t                    }\n\t\t\t                    this.print_token_raw(text);\n\t\t\t                };\n\t\t\t\n\t\t\t                this.print_token_raw = function(text) {\n\t\t\t                    // If we are going to print newlines, truncate trailing\n\t\t\t                    // whitespace, as the newlines will represent the space.\n\t\t\t                    if (this.newlines > 0) {\n\t\t\t                        text = rtrim(text);\n\t\t\t                    }\n\t\t\t\n\t\t\t                    if (text && text !== '') {\n\t\t\t                        if (text.length > 1 && text.charAt(text.length - 1) === '\\n') {\n\t\t\t                            // unformatted tags can grab newlines as their last character\n\t\t\t                            this.output.push(text.slice(0, -1));\n\t\t\t                            this.print_newline(false, this.output);\n\t\t\t                        } else {\n\t\t\t                            this.output.push(text);\n\t\t\t                        }\n\t\t\t                    }\n\t\t\t\n\t\t\t                    for (var n = 0; n < this.newlines; n++) {\n\t\t\t                        this.print_newline(n > 0, this.output);\n\t\t\t                    }\n\t\t\t                    this.newlines = 0;\n\t\t\t                };\n\t\t\t\n\t\t\t                this.indent = function() {\n\t\t\t                    this.indent_level++;\n\t\t\t                };\n\t\t\t\n\t\t\t                this.unindent = function() {\n\t\t\t                    if (this.indent_level > 0) {\n\t\t\t                        this.indent_level--;\n\t\t\t                    }\n\t\t\t                };\n\t\t\t            };\n\t\t\t            return this;\n\t\t\t        }\n\t\t\t\n\t\t\t        /*_____________________--------------------_____________________*/\n\t\t\t\n\t\t\t        multi_parser = new Parser(); //wrapping functions Parser\n\t\t\t        multi_parser.printer(html_source, indent_character, indent_size, wrap_line_length, brace_style); //initialize starting values\n\t\t\t\n\t\t\t        while (true) {\n\t\t\t            var t = multi_parser.get_token();\n\t\t\t            multi_parser.token_text = t[0];\n\t\t\t            multi_parser.token_type = t[1];\n\t\t\t\n\t\t\t            if (multi_parser.token_type === 'TK_EOF') {\n\t\t\t                break;\n\t\t\t            }\n\t\t\t\n\t\t\t            switch (multi_parser.token_type) {\n\t\t\t                case 'TK_TAG_START':\n\t\t\t                    multi_parser.print_newline(false, multi_parser.output);\n\t\t\t                    multi_parser.print_token(multi_parser.token_text);\n\t\t\t                    if (multi_parser.indent_content) {\n\t\t\t                        if ((multi_parser.indent_body_inner_html || !multi_parser.token_text.match(/<body(?:.*)>/)) &&\n\t\t\t                            (multi_parser.indent_head_inner_html || !multi_parser.token_text.match(/<head(?:.*)>/))) {\n\t\t\t\n\t\t\t                            multi_parser.indent();\n\t\t\t                        }\n\t\t\t\n\t\t\t                        multi_parser.indent_content = false;\n\t\t\t                    }\n\t\t\t                    multi_parser.current_mode = 'CONTENT';\n\t\t\t                    break;\n\t\t\t                case 'TK_TAG_STYLE':\n\t\t\t                case 'TK_TAG_SCRIPT':\n\t\t\t                    multi_parser.print_newline(false, multi_parser.output);\n\t\t\t                    multi_parser.print_token(multi_parser.token_text);\n\t\t\t                    multi_parser.current_mode = 'CONTENT';\n\t\t\t                    break;\n\t\t\t                case 'TK_TAG_END':\n\t\t\t                    //Print new line only if the tag has no content and has child\n\t\t\t                    if (multi_parser.last_token === 'TK_CONTENT' && multi_parser.last_text === '') {\n\t\t\t                        var tag_name = (multi_parser.token_text.match(/\\w+/) || [])[0];\n\t\t\t                        var tag_extracted_from_last_output = null;\n\t\t\t                        if (multi_parser.output.length) {\n\t\t\t                            tag_extracted_from_last_output = multi_parser.output[multi_parser.output.length - 1].match(/(?:<|{{#)\\s*(\\w+)/);\n\t\t\t                        }\n\t\t\t                        if (tag_extracted_from_last_output === null ||\n\t\t\t                            (tag_extracted_from_last_output[1] !== tag_name && !multi_parser.Utils.in_array(tag_extracted_from_last_output[1], unformatted))) {\n\t\t\t                            multi_parser.print_newline(false, multi_parser.output);\n\t\t\t                        }\n\t\t\t                    }\n\t\t\t                    multi_parser.print_token(multi_parser.token_text);\n\t\t\t                    multi_parser.current_mode = 'CONTENT';\n\t\t\t                    break;\n\t\t\t                case 'TK_TAG_SINGLE':\n\t\t\t                    // Don't add a newline before elements that should remain unformatted.\n\t\t\t                    var tag_check = multi_parser.token_text.match(/^\\s*<([a-z-]+)/i);\n\t\t\t                    if (!tag_check || !multi_parser.Utils.in_array(tag_check[1], unformatted)) {\n\t\t\t                        multi_parser.print_newline(false, multi_parser.output);\n\t\t\t                    }\n\t\t\t                    multi_parser.print_token(multi_parser.token_text);\n\t\t\t                    multi_parser.current_mode = 'CONTENT';\n\t\t\t                    break;\n\t\t\t                case 'TK_TAG_HANDLEBARS_ELSE':\n\t\t\t                    // Don't add a newline if opening {{#if}} tag is on the current line\n\t\t\t                    var foundIfOnCurrentLine = false;\n\t\t\t                    for (var lastCheckedOutput = multi_parser.output.length - 1; lastCheckedOutput >= 0; lastCheckedOutput--) {\n\t\t\t                        if (multi_parser.output[lastCheckedOutput] === '\\n') {\n\t\t\t                            break;\n\t\t\t                        } else {\n\t\t\t                            if (multi_parser.output[lastCheckedOutput].match(/{{#if/)) {\n\t\t\t                                foundIfOnCurrentLine = true;\n\t\t\t                                break;\n\t\t\t                            }\n\t\t\t                        }\n\t\t\t                    }\n\t\t\t                    if (!foundIfOnCurrentLine) {\n\t\t\t                        multi_parser.print_newline(false, multi_parser.output);\n\t\t\t                    }\n\t\t\t                    multi_parser.print_token(multi_parser.token_text);\n\t\t\t                    if (multi_parser.indent_content) {\n\t\t\t                        multi_parser.indent();\n\t\t\t                        multi_parser.indent_content = false;\n\t\t\t                    }\n\t\t\t                    multi_parser.current_mode = 'CONTENT';\n\t\t\t                    break;\n\t\t\t                case 'TK_TAG_HANDLEBARS_COMMENT':\n\t\t\t                    multi_parser.print_token(multi_parser.token_text);\n\t\t\t                    multi_parser.current_mode = 'TAG';\n\t\t\t                    break;\n\t\t\t                case 'TK_CONTENT':\n\t\t\t                    multi_parser.print_token(multi_parser.token_text);\n\t\t\t                    multi_parser.current_mode = 'TAG';\n\t\t\t                    break;\n\t\t\t                case 'TK_STYLE':\n\t\t\t                case 'TK_SCRIPT':\n\t\t\t                    if (multi_parser.token_text !== '') {\n\t\t\t                        multi_parser.print_newline(false, multi_parser.output);\n\t\t\t                        var text = multi_parser.token_text,\n\t\t\t                            _beautifier,\n\t\t\t                            script_indent_level = 1;\n\t\t\t                        if (multi_parser.token_type === 'TK_SCRIPT') {\n\t\t\t                            _beautifier = typeof js_beautify === 'function' && js_beautify;\n\t\t\t                        } else if (multi_parser.token_type === 'TK_STYLE') {\n\t\t\t                            _beautifier = typeof css_beautify === 'function' && css_beautify;\n\t\t\t                        }\n\t\t\t\n\t\t\t                        if (options.indent_scripts === \"keep\") {\n\t\t\t                            script_indent_level = 0;\n\t\t\t                        } else if (options.indent_scripts === \"separate\") {\n\t\t\t                            script_indent_level = -multi_parser.indent_level;\n\t\t\t                        }\n\t\t\t\n\t\t\t                        var indentation = multi_parser.get_full_indent(script_indent_level);\n\t\t\t                        if (_beautifier) {\n\t\t\t\n\t\t\t                            // call the Beautifier if avaliable\n\t\t\t                            var Child_options = function() {\n\t\t\t                                this.eol = '\\n';\n\t\t\t                            };\n\t\t\t                            Child_options.prototype = options;\n\t\t\t                            var child_options = new Child_options();\n\t\t\t                            text = _beautifier(text.replace(/^\\s*/, indentation), child_options);\n\t\t\t                        } else {\n\t\t\t                            // simply indent the string otherwise\n\t\t\t                            var white = text.match(/^\\s*/)[0];\n\t\t\t                            var _level = white.match(/[^\\n\\r]*$/)[0].split(multi_parser.indent_string).length - 1;\n\t\t\t                            var reindent = multi_parser.get_full_indent(script_indent_level - _level);\n\t\t\t                            text = text.replace(/^\\s*/, indentation)\n\t\t\t                                .replace(/\\r\\n|\\r|\\n/g, '\\n' + reindent)\n\t\t\t                                .replace(/\\s+$/, '');\n\t\t\t                        }\n\t\t\t                        if (text) {\n\t\t\t                            multi_parser.print_token_raw(text);\n\t\t\t                            multi_parser.print_newline(true, multi_parser.output);\n\t\t\t                        }\n\t\t\t                    }\n\t\t\t                    multi_parser.current_mode = 'TAG';\n\t\t\t                    break;\n\t\t\t                default:\n\t\t\t                    // We should not be getting here but we don't want to drop input on the floor\n\t\t\t                    // Just output the text and move on\n\t\t\t                    if (multi_parser.token_text !== '') {\n\t\t\t                        multi_parser.print_token(multi_parser.token_text);\n\t\t\t                    }\n\t\t\t                    break;\n\t\t\t            }\n\t\t\t            multi_parser.last_token = multi_parser.token_type;\n\t\t\t            multi_parser.last_text = multi_parser.token_text;\n\t\t\t        }\n\t\t\t        var sweet_code = multi_parser.output.join('').replace(/[\\r\\n\\t ]+$/, '');\n\t\t\t\n\t\t\t        // establish end_with_newline\n\t\t\t        if (end_with_newline) {\n\t\t\t            sweet_code += '\\n';\n\t\t\t        }\n\t\t\t\n\t\t\t        if (eol !== '\\n') {\n\t\t\t            sweet_code = sweet_code.replace(/[\\n]/g, eol);\n\t\t\t        }\n\t\t\t\n\t\t\t        return sweet_code;\n\t\t\t    }\n\t\t\t\n\t\t\t    if (true) {\n\t\t\t        // Add support for AMD ( https://github.com/amdjs/amdjs-api/wiki/AMD#defineamd-property- )\n\t\t\t        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, __webpack_require__(10), __webpack_require__(11)], __WEBPACK_AMD_DEFINE_RESULT__ = function(requireamd) {\n\t\t\t            var js_beautify = __webpack_require__(10);\n\t\t\t            var css_beautify = __webpack_require__(11);\n\t\t\t\n\t\t\t            return {\n\t\t\t                html_beautify: function(html_source, options) {\n\t\t\t                    return style_html(html_source, options, js_beautify.js_beautify, css_beautify.css_beautify);\n\t\t\t                }\n\t\t\t            };\n\t\t\t        }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\t\t    } else if (typeof exports !== \"undefined\") {\n\t\t\t        // Add support for CommonJS. Just put this file somewhere on your require.paths\n\t\t\t        // and you will be able to `var html_beautify = require(\"beautify\").html_beautify`.\n\t\t\t        var js_beautify = require('./beautify.js');\n\t\t\t        var css_beautify = require('./beautify-css.js');\n\t\t\t\n\t\t\t        exports.html_beautify = function(html_source, options) {\n\t\t\t            return style_html(html_source, options, js_beautify.js_beautify, css_beautify.css_beautify);\n\t\t\t        };\n\t\t\t    } else if (typeof window !== \"undefined\") {\n\t\t\t        // If we're running a web page and don't have either of the above, add our one global\n\t\t\t        window.html_beautify = function(html_source, options) {\n\t\t\t            return style_html(html_source, options, window.js_beautify, window.css_beautify);\n\t\t\t        };\n\t\t\t    } else if (typeof global !== \"undefined\") {\n\t\t\t        // If we don't even have window, try global.\n\t\t\t        global.html_beautify = function(html_source, options) {\n\t\t\t            return style_html(html_source, options, global.js_beautify, global.css_beautify);\n\t\t\t        };\n\t\t\t    }\n\t\t\t\n\t\t\t}());\n\t\t\n\t\t/***/ },\n\t\t/* 13 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t};\n\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t};\n\t\t\tvar core_1 = __webpack_require__(7);\n\t\t\tvar html_code_pipe_1 = __webpack_require__(6);\n\t\t\tvar javascript_code_pipe_1 = __webpack_require__(8);\n\t\t\tvar ng2_utils_directive_1 = __webpack_require__(14);\n\t\t\tvar Ng2UtilsModule = (function () {\n\t\t\t    function Ng2UtilsModule() {\n\t\t\t    }\n\t\t\t    return Ng2UtilsModule;\n\t\t\t}());\n\t\t\tNg2UtilsModule = __decorate([\n\t\t\t    core_1.NgModule({\n\t\t\t        declarations: [\n\t\t\t            html_code_pipe_1.HtmlCodePipe,\n\t\t\t            javascript_code_pipe_1.JavascriptCodePipe,\n\t\t\t            ng2_utils_directive_1.Ng2UtilsDirective\n\t\t\t        ],\n\t\t\t        exports: [\n\t\t\t            html_code_pipe_1.HtmlCodePipe,\n\t\t\t            javascript_code_pipe_1.JavascriptCodePipe,\n\t\t\t            ng2_utils_directive_1.Ng2UtilsDirective\n\t\t\t        ]\n\t\t\t    }),\n\t\t\t    __metadata(\"design:paramtypes\", [])\n\t\t\t], Ng2UtilsModule);\n\t\t\texports.Ng2UtilsModule = Ng2UtilsModule;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 14 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t};\n\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t};\n\t\t\tvar core_1 = __webpack_require__(7);\n\t\t\tvar Ng2UtilsDirective = (function () {\n\t\t\t    function Ng2UtilsDirective() {\n\t\t\t    }\n\t\t\t    return Ng2UtilsDirective;\n\t\t\t}()); // dummy directive to allow non-standard tags\n\t\t\tNg2UtilsDirective = __decorate([\n\t\t\t    core_1.Directive({\n\t\t\t        selector: 'ng2-utils-1, ng2-utils-2, ng2-utils-3, ng2-utils-4, ng2-utils-5,' +\n\t\t\t            'ng2-utils-6, ng2-utils-7, ng2-utils-8, ng2-utils-9, ng2-utils-10,' +\n\t\t\t            'ng2-utils-11, ng2-utils-12, ng2-utils-13, ng2-utils-14, ng2-utils-15,' +\n\t\t\t            'ng2-utils-16, ng2-utils-17, ng2-utils-18, ng2-utils-19, ng2-utils-20'\n\t\t\t    }),\n\t\t\t    __metadata(\"design:paramtypes\", [])\n\t\t\t], Ng2UtilsDirective);\n\t\t\texports.Ng2UtilsDirective = Ng2UtilsDirective;\n\t\t\n\t\t\n\t\t/***/ }\n\t\t/******/ ])\n\t\t});\n\t\t;\n\t\t//# sourceMappingURL=ng2-utils.umd.js.map\n\t\n\t/***/ },\n\t/* 4 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(2);\n\t\tvar forms_1 = __webpack_require__(5);\n\t\tvar common_1 = __webpack_require__(6);\n\t\tvar ng2_sticky_directive_1 = __webpack_require__(1);\n\t\texports.Ng2StickyDirective = ng2_sticky_directive_1.Ng2StickyDirective;\n\t\tvar Ng2StickyModule = (function () {\n\t\t    function Ng2StickyModule() {\n\t\t    }\n\t\t    return Ng2StickyModule;\n\t\t}());\n\t\tNg2StickyModule = __decorate([\n\t\t    core_1.NgModule({\n\t\t        imports: [common_1.CommonModule, forms_1.FormsModule],\n\t\t        declarations: [ng2_sticky_directive_1.Ng2StickyDirective],\n\t\t        exports: [ng2_sticky_directive_1.Ng2StickyDirective]\n\t\t    }),\n\t\t    __metadata(\"design:paramtypes\", [])\n\t\t], Ng2StickyModule);\n\t\texports.Ng2StickyModule = Ng2StickyModule;\n\t\n\t\n\t/***/ },\n\t/* 5 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\t\n\t/***/ },\n\t/* 6 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_6__;\n\t\n\t/***/ }\n\t/******/ ])\n\t});\n\t;\n\t//# sourceMappingURL=ng2-sticky.umd.js.map\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function webpackUniversalModuleDefinition(root, factory) {\n\t\tif(true)\n\t\t\tmodule.exports = factory(__webpack_require__(2), __webpack_require__(3), __webpack_require__(8));\n\t\telse if(typeof define === 'function' && define.amd)\n\t\t\tdefine([\"@angular/core\", \"@angular/forms\", \"@angular/common\"], factory);\n\t\telse if(typeof exports === 'object')\n\t\t\texports[\"ng2-tab\"] = factory(require(\"@angular/core\"), require(\"@angular/forms\"), require(\"@angular/common\"));\n\t\telse\n\t\t\troot[\"ng2-tab\"] = factory(root[\"@angular/core\"], root[\"@angular/forms\"], root[\"@angular/common\"]);\n\t})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__) {\n\treturn /******/ (function(modules) { // webpackBootstrap\n\t/******/ \t// The module cache\n\t/******/ \tvar installedModules = {};\n\t/******/\n\t/******/ \t// The require function\n\t/******/ \tfunction __webpack_require__(moduleId) {\n\t/******/\n\t/******/ \t\t// Check if module is in cache\n\t/******/ \t\tif(installedModules[moduleId])\n\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\t/******/\n\t/******/ \t\t// Create a new module (and put it into the cache)\n\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t/******/ \t\t\texports: {},\n\t/******/ \t\t\tid: moduleId,\n\t/******/ \t\t\tloaded: false\n\t/******/ \t\t};\n\t/******/\n\t/******/ \t\t// Execute the module function\n\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t/******/\n\t/******/ \t\t// Flag the module as loaded\n\t/******/ \t\tmodule.loaded = true;\n\t/******/\n\t/******/ \t\t// Return the exports of the module\n\t/******/ \t\treturn module.exports;\n\t/******/ \t}\n\t/******/\n\t/******/\n\t/******/ \t// expose the modules object (__webpack_modules__)\n\t/******/ \t__webpack_require__.m = modules;\n\t/******/\n\t/******/ \t// expose the module cache\n\t/******/ \t__webpack_require__.c = installedModules;\n\t/******/\n\t/******/ \t// __webpack_public_path__\n\t/******/ \t__webpack_require__.p = \"\";\n\t/******/\n\t/******/ \t// Load entry module and return exports\n\t/******/ \treturn __webpack_require__(0);\n\t/******/ })\n\t/************************************************************************/\n\t/******/ ([\n\t/* 0 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar ng2_tab_component_1 = __webpack_require__(1);\n\t\texports.Ng2TabComponent = ng2_tab_component_1.Ng2TabComponent;\n\t\tvar ng2_tab_module_1 = __webpack_require__(3);\n\t\texports.Ng2TabModule = ng2_tab_module_1.Ng2TabModule;\n\t\n\t\n\t/***/ },\n\t/* 1 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(2);\n\t\tvar Ng2TabComponent = (function () {\n\t\t    function Ng2TabComponent(viewContainer) {\n\t\t        this.viewContainer = viewContainer;\n\t\t        this.selectedIndexClass = 'selected';\n\t\t        this.selectedContentsClass = 'selected';\n\t\t        this.el = this.viewContainer.element.nativeElement;\n\t\t    }\n\t\t    Ng2TabComponent.prototype.ngAfterViewInit = function () {\n\t\t        var _this = this;\n\t\t        this.indexEls = [].slice.call(this.el.querySelectorAll('[index]'));\n\t\t        this.contentsEls = [].slice.call(this.el.querySelectorAll('[contents]'));\n\t\t        this.selectTab(this.selectedIndex);\n\t\t        this.indexEls.forEach(function (el) {\n\t\t            el.addEventListener('click', function () {\n\t\t                _this.selectTab(el.getAttribute('index'));\n\t\t            });\n\t\t        });\n\t\t    };\n\t\t    Ng2TabComponent.prototype.selectTab = function (id) {\n\t\t        var _this = this;\n\t\t        id = id || this.indexEls[0].getAttribute('index');\n\t\t        this.indexEls.forEach(function (el) {\n\t\t            _this.removeClass(el, _this.selectedIndexClass);\n\t\t            if (el.getAttribute('index') == id) {\n\t\t                _this.addClass(el, _this.selectedIndexClass);\n\t\t            }\n\t\t        });\n\t\t        this.contentsEls.forEach(function (el) {\n\t\t            el.style.display = 'none';\n\t\t            _this.removeClass(el, _this.selectedContentsClass);\n\t\t            if (el.getAttribute('contents') == id) {\n\t\t                el.style.display = '';\n\t\t                _this.addClass(el, _this.selectedContentsClass);\n\t\t            }\n\t\t        });\n\t\t    };\n\t\t    Ng2TabComponent.prototype.addClass = function (el, str) {\n\t\t        var classNames = (el.className || '').split(' ');\n\t\t        classNames.push(str);\n\t\t        el.className = classNames.join(' ');\n\t\t    };\n\t\t    Ng2TabComponent.prototype.removeClass = function (el, str) {\n\t\t        el.className = (el.className || '').replace(new RegExp('[ ]*' + str), '');\n\t\t    };\n\t\t    return Ng2TabComponent;\n\t\t}());\n\t\t__decorate([\n\t\t    core_1.Input('selected'),\n\t\t    __metadata(\"design:type\", String)\n\t\t], Ng2TabComponent.prototype, \"selectedIndex\", void 0);\n\t\t__decorate([\n\t\t    core_1.Input('selected-index-class'),\n\t\t    __metadata(\"design:type\", String)\n\t\t], Ng2TabComponent.prototype, \"selectedIndexClass\", void 0);\n\t\t__decorate([\n\t\t    core_1.Input('selected-contents-class'),\n\t\t    __metadata(\"design:type\", String)\n\t\t], Ng2TabComponent.prototype, \"selectedContentsClass\", void 0);\n\t\tNg2TabComponent = __decorate([\n\t\t    core_1.Component({\n\t\t        selector: 'ng2-tab, [ng2-tab]',\n\t\t        encapsulation: core_1.ViewEncapsulation.None,\n\t\t        template: \"<ng-content></ng-content>\",\n\t\t        styles: [\"\\n    .tabs {\\n      position: relative;\\n      top: 1px;\\n      background: transparent;\\n      display: block;\\n    }\\n    .tabs [index] {\\n      display: inline-block;\\n      border: 1px solid #999;\\n      padding: 5px 10px;\\n      border-radius: 2px 2px 0 0;\\n    }\\n    .tabs [index].selected {\\n      padding-top: 0;\\n      background: #f7f7f7;\\n      border-top: 5px solid #00BCD4;\\n      border-bottom: 1px solid transparent;\\n    }\\n    .tab-contents {\\n      border: 1px solid #999;\\n      border-radius: 2px;\\n      min-height: 3em;\\n    }\\n  \"],\n\t\t    }),\n\t\t    __metadata(\"design:paramtypes\", [core_1.ViewContainerRef])\n\t\t], Ng2TabComponent);\n\t\texports.Ng2TabComponent = Ng2TabComponent;\n\t\n\t\n\t/***/ },\n\t/* 2 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\t\n\t/***/ },\n\t/* 3 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(2);\n\t\tvar forms_1 = __webpack_require__(4);\n\t\tvar common_1 = __webpack_require__(5);\n\t\tvar ng2_tab_component_1 = __webpack_require__(1);\n\t\texports.Ng2TabComponent = ng2_tab_component_1.Ng2TabComponent;\n\t\tvar Ng2TabModule = (function () {\n\t\t    function Ng2TabModule() {\n\t\t    }\n\t\t    return Ng2TabModule;\n\t\t}());\n\t\tNg2TabModule = __decorate([\n\t\t    core_1.NgModule({\n\t\t        imports: [common_1.CommonModule, forms_1.FormsModule],\n\t\t        declarations: [ng2_tab_component_1.Ng2TabComponent],\n\t\t        exports: [ng2_tab_component_1.Ng2TabComponent]\n\t\t    }),\n\t\t    __metadata(\"design:paramtypes\", [])\n\t\t], Ng2TabModule);\n\t\texports.Ng2TabModule = Ng2TabModule;\n\t\n\t\n\t/***/ },\n\t/* 4 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\t\n\t/***/ },\n\t/* 5 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\t\n\t/***/ }\n\t/******/ ])\n\t});\n\t;\n\t//# sourceMappingURL=ng2-tab.umd.js.map\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function webpackUniversalModuleDefinition(root, factory) {\n\t\tif(true)\n\t\t\tmodule.exports = factory(__webpack_require__(2), __webpack_require__(3), __webpack_require__(8));\n\t\telse if(typeof define === 'function' && define.amd)\n\t\t\tdefine([\"@angular/core\", \"@angular/forms\", \"@angular/common\"], factory);\n\t\telse if(typeof exports === 'object')\n\t\t\texports[\"ng2-tooltip-overlay\"] = factory(require(\"@angular/core\"), require(\"@angular/forms\"), require(\"@angular/common\"));\n\t\telse\n\t\t\troot[\"ng2-tooltip-overlay\"] = factory(root[\"@angular/core\"], root[\"@angular/forms\"], root[\"@angular/common\"]);\n\t})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__) {\n\treturn /******/ (function(modules) { // webpackBootstrap\n\t/******/ \t// The module cache\n\t/******/ \tvar installedModules = {};\n\t/******/\n\t/******/ \t// The require function\n\t/******/ \tfunction __webpack_require__(moduleId) {\n\t/******/\n\t/******/ \t\t// Check if module is in cache\n\t/******/ \t\tif(installedModules[moduleId])\n\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\t/******/\n\t/******/ \t\t// Create a new module (and put it into the cache)\n\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t/******/ \t\t\texports: {},\n\t/******/ \t\t\tid: moduleId,\n\t/******/ \t\t\tloaded: false\n\t/******/ \t\t};\n\t/******/\n\t/******/ \t\t// Execute the module function\n\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t/******/\n\t/******/ \t\t// Flag the module as loaded\n\t/******/ \t\tmodule.loaded = true;\n\t/******/\n\t/******/ \t\t// Return the exports of the module\n\t/******/ \t\treturn module.exports;\n\t/******/ \t}\n\t/******/\n\t/******/\n\t/******/ \t// expose the modules object (__webpack_modules__)\n\t/******/ \t__webpack_require__.m = modules;\n\t/******/\n\t/******/ \t// expose the module cache\n\t/******/ \t__webpack_require__.c = installedModules;\n\t/******/\n\t/******/ \t// __webpack_public_path__\n\t/******/ \t__webpack_require__.p = \"\";\n\t/******/\n\t/******/ \t// Load entry module and return exports\n\t/******/ \treturn __webpack_require__(0);\n\t/******/ })\n\t/************************************************************************/\n\t/******/ ([\n\t/* 0 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar ng2_tooltip_directive_1 = __webpack_require__(1);\n\t\texports.Ng2TooltipDirective = ng2_tooltip_directive_1.Ng2TooltipDirective;\n\t\tvar ng2_tooltip_overlay_module_1 = __webpack_require__(6);\n\t\texports.Ng2TooltipOverlayModule = ng2_tooltip_overlay_module_1.Ng2TooltipOverlayModule;\n\t\n\t\n\t/***/ },\n\t/* 1 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(2);\n\t\tvar ng2_overlay_1 = __webpack_require__(3);\n\t\tvar Ng2TooltipDirective = (function () {\n\t\t    function Ng2TooltipDirective(viewContainerRef, overlayManager) {\n\t\t        this.viewContainerRef = viewContainerRef;\n\t\t        this.overlayManager = overlayManager;\n\t\t        this.el = this.viewContainerRef.element.nativeElement;\n\t\t    }\n\t\t    Ng2TooltipDirective.prototype.ngAfterViewInit = function () {\n\t\t        this.overlay = this.getTooltipOverlay(this.el, this.tooltip);\n\t\t    };\n\t\t    Ng2TooltipDirective.prototype.showTooltip = function ($event) {\n\t\t        this.overlayManager.open(this.overlay, $event);\n\t\t        $event.stopPropagation();\n\t\t    };\n\t\t    Ng2TooltipDirective.prototype.hideTooltip = function ($event) {\n\t\t        this.overlayManager.close(this.overlay);\n\t\t        $event.stopPropagation();\n\t\t    };\n\t\t    Ng2TooltipDirective.prototype.getTooltipOverlay = function (el, tooltip) {\n\t\t        var tooltipEl = document.createElement('ng2-tooltip');\n\t\t        tooltipEl.style.display = 'none';\n\t\t        var divEl = document.createElement('div');\n\t\t        divEl.innerHTML = \"\\n       <div class='tooltip-contents'>\" + tooltip + \"</div>\\n       <div class='tooltip-down-arrow'></div>\\n    \";\n\t\t        tooltipEl.appendChild(divEl);\n\t\t        //el.parentElement.insertBefore(tooltipEl, el.nextSibling);\n\t\t        el.appendChild(tooltipEl);\n\t\t        var overlay = new ng2_overlay_1.Ng2Overlay(tooltipEl, {\n\t\t            id: 'tooltip-' + (el.id || Math.floor(Math.random() * 1000000)),\n\t\t            position: 'top cursor outside'\n\t\t        });\n\t\t        this.overlayManager.register(overlay);\n\t\t        return overlay;\n\t\t    };\n\t\t    return Ng2TooltipDirective;\n\t\t}());\n\t\t__decorate([\n\t\t    core_1.Input('ng2-tooltip'),\n\t\t    __metadata(\"design:type\", String)\n\t\t], Ng2TooltipDirective.prototype, \"tooltip\", void 0);\n\t\tNg2TooltipDirective = __decorate([\n\t\t    core_1.Directive({\n\t\t        selector: '[ng2-tooltip]',\n\t\t        host: {\n\t\t            '(mouseover)': 'showTooltip($event)',\n\t\t            '(mouseout)': 'hideTooltip($event)'\n\t\t        }\n\t\t    }),\n\t\t    __metadata(\"design:paramtypes\", [core_1.ViewContainerRef,\n\t\t        ng2_overlay_1.Ng2OverlayManager])\n\t\t], Ng2TooltipDirective);\n\t\texports.Ng2TooltipDirective = Ng2TooltipDirective;\n\t\n\t\n\t/***/ },\n\t/* 2 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\t\n\t/***/ },\n\t/* 3 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t(function webpackUniversalModuleDefinition(root, factory) {\n\t\t\tif(true)\n\t\t\t\tmodule.exports = factory(__webpack_require__(2), __webpack_require__(4), __webpack_require__(5));\n\t\t\telse if(typeof define === 'function' && define.amd)\n\t\t\t\tdefine([\"@angular/core\", \"@angular/forms\", \"@angular/common\"], factory);\n\t\t\telse if(typeof exports === 'object')\n\t\t\t\texports[\"ng2-overlay\"] = factory(require(\"@angular/core\"), require(\"@angular/forms\"), require(\"@angular/common\"));\n\t\t\telse\n\t\t\t\troot[\"ng2-overlay\"] = factory(root[\"@angular/core\"], root[\"@angular/forms\"], root[\"@angular/common\"]);\n\t\t})(this, function(__WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_7__, __WEBPACK_EXTERNAL_MODULE_8__) {\n\t\treturn /******/ (function(modules) { // webpackBootstrap\n\t\t/******/ \t// The module cache\n\t\t/******/ \tvar installedModules = {};\n\t\t/******/\n\t\t/******/ \t// The require function\n\t\t/******/ \tfunction __webpack_require__(moduleId) {\n\t\t/******/\n\t\t/******/ \t\t// Check if module is in cache\n\t\t/******/ \t\tif(installedModules[moduleId])\n\t\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\t\t/******/\n\t\t/******/ \t\t// Create a new module (and put it into the cache)\n\t\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t\t/******/ \t\t\texports: {},\n\t\t/******/ \t\t\tid: moduleId,\n\t\t/******/ \t\t\tloaded: false\n\t\t/******/ \t\t};\n\t\t/******/\n\t\t/******/ \t\t// Execute the module function\n\t\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t\t/******/\n\t\t/******/ \t\t// Flag the module as loaded\n\t\t/******/ \t\tmodule.loaded = true;\n\t\t/******/\n\t\t/******/ \t\t// Return the exports of the module\n\t\t/******/ \t\treturn module.exports;\n\t\t/******/ \t}\n\t\t/******/\n\t\t/******/\n\t\t/******/ \t// expose the modules object (__webpack_modules__)\n\t\t/******/ \t__webpack_require__.m = modules;\n\t\t/******/\n\t\t/******/ \t// expose the module cache\n\t\t/******/ \t__webpack_require__.c = installedModules;\n\t\t/******/\n\t\t/******/ \t// __webpack_public_path__\n\t\t/******/ \t__webpack_require__.p = \"\";\n\t\t/******/\n\t\t/******/ \t// Load entry module and return exports\n\t\t/******/ \treturn __webpack_require__(0);\n\t\t/******/ })\n\t\t/************************************************************************/\n\t\t/******/ ([\n\t\t/* 0 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar ng2_overlay_1 = __webpack_require__(1);\n\t\t\texports.Ng2Overlay = ng2_overlay_1.Ng2Overlay;\n\t\t\tvar ng2_overlay_manager_1 = __webpack_require__(3);\n\t\t\texports.Ng2OverlayManager = ng2_overlay_manager_1.Ng2OverlayManager;\n\t\t\tvar ng2_overlay_directive_1 = __webpack_require__(5);\n\t\t\texports.Ng2OverlayDirective = ng2_overlay_directive_1.Ng2OverlayDirective;\n\t\t\tvar ng2_overlay_module_1 = __webpack_require__(6);\n\t\t\texports.Ng2OverlayModule = ng2_overlay_module_1.Ng2OverlayModule;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 1 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar ng2_util_1 = __webpack_require__(2);\n\t\t\tvar Ng2Overlay = (function () {\n\t\t\t    function Ng2Overlay(el, options) {\n\t\t\t        options = options || {};\n\t\t\t        this.id = options.id;\n\t\t\t        this.type = options.type;\n\t\t\t        if (!this.id) {\n\t\t\t            throw \"Invalid overlay id\";\n\t\t\t        }\n\t\t\t        this.element = el; // overlay wrapper element with table dsplay\n\t\t\t        this.windowOverlay = options.windowOverlay;\n\t\t\t        this.position = this.getPositionProperty(options.position || 'center center');\n\t\t\t    }\n\t\t\t    Ng2Overlay.prototype.positionIt = function (event) {\n\t\t\t        if (this.position.inside) {\n\t\t\t            this.positionItInside(this.position);\n\t\t\t        }\n\t\t\t        else {\n\t\t\t            this.positionItOutside(this.position, event);\n\t\t\t        }\n\t\t\t    };\n\t\t\t    Ng2Overlay.prototype.getPositionProperty = function (positionStr) {\n\t\t\t        var position = {}, inside;\n\t\t\t        var _a = positionStr.split(' '), vertical = _a[0], horizontal = _a[1], insideStr = _a[2];\n\t\t\t        horizontal = horizontal || 'center';\n\t\t\t        vertical = vertical || 'center';\n\t\t\t        inside = (insideStr !== 'outside' || this.windowOverlay);\n\t\t\t        position.horizontal = Ng2Overlay[horizontal.toUpperCase()];\n\t\t\t        position.vertical = Ng2Overlay[vertical.toUpperCase()];\n\t\t\t        position.inside = inside;\n\t\t\t        return position;\n\t\t\t    };\n\t\t\t    Ng2Overlay.prototype.positionItInside = function (position) {\n\t\t\t        this.element.style.display = 'flex';\n\t\t\t        //top / left positioning\n\t\t\t        if (this.windowOverlay) {\n\t\t\t            this.element.style.position = 'fixed';\n\t\t\t            //works as blocker\n\t\t\t            Object.assign(this.element.style, {\n\t\t\t                backgroundColor: 'rgba(0,0,0,0.2)',\n\t\t\t                top: '0', left: '0', bottom: '0', right: '0',\n\t\t\t                width: '100%', height: '100%'\n\t\t\t            });\n\t\t\t        }\n\t\t\t        else {\n\t\t\t            //adjust top/left to match to parentElement\n\t\t\t            var parentEl = this.element.parentElement;\n\t\t\t            //works as a blocker\n\t\t\t            Object.assign(this.element.style, {\n\t\t\t                position: 'absolute',\n\t\t\t                // backgroundColor: 'transparent',\n\t\t\t                backgroundColor: 'rgba(0,0,0,0.2)',\n\t\t\t                top: parentEl.offsetTop + 'px',\n\t\t\t                left: parentEl.offsetLeft + 'px',\n\t\t\t                width: parentEl.offsetWidth + 'px',\n\t\t\t                height: parentEl.offsetHeight + 'px'\n\t\t\t            });\n\t\t\t        }\n\t\t\t        ;\n\t\t\t        //horizontal position\n\t\t\t        switch (position.horizontal) {\n\t\t\t            case Ng2Overlay.LEFT:\n\t\t\t                this.element.style.justifyContent = 'flex-start';\n\t\t\t                break;\n\t\t\t            case Ng2Overlay.CENTER:\n\t\t\t                this.element.style.justifyContent = 'center';\n\t\t\t                break;\n\t\t\t            case Ng2Overlay.RIGHT:\n\t\t\t                this.element.style.justifyContent = 'flex-end';\n\t\t\t                break;\n\t\t\t        }\n\t\t\t        //vertical position\n\t\t\t        switch (position.vertical) {\n\t\t\t            case Ng2Overlay.LEFT:\n\t\t\t                this.element.style.alignItems = 'flex-start';\n\t\t\t                break;\n\t\t\t            case Ng2Overlay.CENTER:\n\t\t\t            case Ng2Overlay.MIDDLE:\n\t\t\t                this.element.style.alignItems = 'center';\n\t\t\t                break;\n\t\t\t            case Ng2Overlay.RIGHT:\n\t\t\t                this.element.style.alignItems = 'flex-end';\n\t\t\t                break;\n\t\t\t        }\n\t\t\t    };\n\t\t\t    Ng2Overlay.prototype.positionItOutside = function (position, event) {\n\t\t\t        //adjust top/left to match to parentElement\n\t\t\t        var parentEl = this.element.parentElement;\n\t\t\t        //works as guide line?\n\t\t\t        Object.assign(this.element.style, {\n\t\t\t            position: 'absolute',\n\t\t\t            pointerEvents: 'none',\n\t\t\t            top: parentEl.offsetTop + 'px',\n\t\t\t            left: parentEl.offsetLeft + 'px',\n\t\t\t            width: parentEl.offsetWidth + 'px',\n\t\t\t            height: parentEl.offsetHeight + 'px'\n\t\t\t        });\n\t\t\t        this.element.style.display = 'block';\n\t\t\t        var elToPosition = (this.element.children[0]);\n\t\t\t        elToPosition.style.position = 'absolute';\n\t\t\t        elToPosition.style.pointerEvents = 'auto';\n\t\t\t        switch (position.vertical) {\n\t\t\t            case Ng2Overlay.TOP:\n\t\t\t                elToPosition.style.bottom = this.element.offsetHeight + 'px';\n\t\t\t                break;\n\t\t\t            case Ng2Overlay.BOTTOM:\n\t\t\t                elToPosition.style.top = this.element.offsetHeight + 'px';\n\t\t\t                break;\n\t\t\t            case Ng2Overlay.LEFT:\n\t\t\t                elToPosition.style.right = this.element.offsetWidth + 'px';\n\t\t\t                break;\n\t\t\t            case Ng2Overlay.RIGHT:\n\t\t\t                elToPosition.style.left = this.element.offsetWidth + 'px';\n\t\t\t                break;\n\t\t\t        }\n\t\t\t        switch (position.horizontal) {\n\t\t\t            case Ng2Overlay.CENTER:\n\t\t\t                elToPosition.style.left = (this.element.offsetWidth - elToPosition.offsetWidth) / 2 + 'px';\n\t\t\t                break;\n\t\t\t            case Ng2Overlay.LEFT:\n\t\t\t                elToPosition.style.left = '0';\n\t\t\t                break;\n\t\t\t            case Ng2Overlay.RIGHT:\n\t\t\t                elToPosition.style.right = '0';\n\t\t\t                break;\n\t\t\t            case Ng2Overlay.TOP:\n\t\t\t                elToPosition.style.top = '0';\n\t\t\t                break;\n\t\t\t            case Ng2Overlay.BOTTOM:\n\t\t\t                elToPosition.style.bottom = '0';\n\t\t\t                break;\n\t\t\t            case Ng2Overlay.CURSOR:\n\t\t\t                var mousePos = ng2_util_1.Ng2Util.getMousePositionInElement(event, this.element);\n\t\t\t                if ((mousePos.x + elToPosition.offsetWidth) > this.element.offsetWidth) {\n\t\t\t                    elToPosition.style.left = (this.element.offsetWidth - elToPosition.offsetWidth - 5) + 'px';\n\t\t\t                }\n\t\t\t                else if (mousePos.x < elToPosition.offsetWidth / 2) {\n\t\t\t                    elToPosition.style.left = '0px';\n\t\t\t                }\n\t\t\t                else {\n\t\t\t                    elToPosition.style.left = mousePos.x - elToPosition.offsetWidth / 2 + 'px';\n\t\t\t                }\n\t\t\t                break;\n\t\t\t        }\n\t\t\t    };\n\t\t\t    Ng2Overlay.TOP = 11;\n\t\t\t    Ng2Overlay.MIDDLE = 12;\n\t\t\t    Ng2Overlay.BOTTOM = 13;\n\t\t\t    Ng2Overlay.LEFT = 21;\n\t\t\t    Ng2Overlay.CENTER = 22;\n\t\t\t    Ng2Overlay.RIGHT = 23;\n\t\t\t    Ng2Overlay.CURSOR = 31;\n\t\t\t    return Ng2Overlay;\n\t\t\t}());\n\t\t\texports.Ng2Overlay = Ng2Overlay;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 2 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar Ng2Util = (function () {\n\t\t\t    function Ng2Util() {\n\t\t\t    }\n\t\t\t    Ng2Util.getDocumentPosition = function (oElement) {\n\t\t\t        var posX = 0, posY = 0;\n\t\t\t        if (oElement.offsetParent) {\n\t\t\t            for (; oElement; oElement = oElement.offsetParent) {\n\t\t\t                posX += oElement.offsetLeft;\n\t\t\t                posY += oElement.offsetTop;\n\t\t\t            }\n\t\t\t            return { x: posX, y: posY };\n\t\t\t        }\n\t\t\t        else {\n\t\t\t            return { x: oElement['x'], y: oElement['y'] };\n\t\t\t        }\n\t\t\t    };\n\t\t\t    Ng2Util.getMousePositionInElement = function (evt, element) {\n\t\t\t        evt = evt || window.event;\n\t\t\t        var posX = 0, posY = 0;\n\t\t\t        var elPos = this.getDocumentPosition(element);\n\t\t\t        if (evt.pageX || evt.pageY) {\n\t\t\t            posX = evt.pageX;\n\t\t\t            posY = evt.pageY;\n\t\t\t        }\n\t\t\t        else if (evt.clientX || evt.clientY) {\n\t\t\t            posX = evt.clientX +\n\t\t\t                document.body.scrollLeft +\n\t\t\t                document.documentElement.scrollLeft;\n\t\t\t            posY = evt.clientY +\n\t\t\t                document.body.scrollTop +\n\t\t\t                document.documentElement.scrollTop;\n\t\t\t        }\n\t\t\t        return {\n\t\t\t            x: posX - elPos.x,\n\t\t\t            y: posY - elPos.y\n\t\t\t        };\n\t\t\t    };\n\t\t\t    return Ng2Util;\n\t\t\t}());\n\t\t\texports.Ng2Util = Ng2Util;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 3 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t};\n\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t};\n\t\t\tvar core_1 = __webpack_require__(4);\n\t\t\tvar Ng2OverlayManager = (function () {\n\t\t\t    function Ng2OverlayManager() {\n\t\t\t    }\n\t\t\t    Ng2OverlayManager.prototype.register = function (overlay) {\n\t\t\t        Ng2OverlayManager.overlays[overlay.id] = overlay;\n\t\t\t        // console.log('overlay.register, OverlayManager.overlays', OverlayManager.overlays);\n\t\t\t    };\n\t\t\t    Ng2OverlayManager.prototype.open = function (arg, event) {\n\t\t\t        var overlay = typeof arg === 'string' ? Ng2OverlayManager.overlays[arg] : arg;\n\t\t\t        if (!overlay.opened) {\n\t\t\t            overlay.positionIt(event);\n\t\t\t            overlay.opened = true;\n\t\t\t        }\n\t\t\t    };\n\t\t\t    Ng2OverlayManager.prototype.close = function (arg) {\n\t\t\t        var overlay = typeof arg === 'string' ? Ng2OverlayManager.overlays[arg] : arg;\n\t\t\t        overlay.element.style.display = 'none';\n\t\t\t        overlay.opened = false;\n\t\t\t    };\n\t\t\t    //list of overlay objects\n\t\t\t    Ng2OverlayManager.overlays = {};\n\t\t\t    Ng2OverlayManager = __decorate([\n\t\t\t        core_1.Injectable(), \n\t\t\t        __metadata('design:paramtypes', [])\n\t\t\t    ], Ng2OverlayManager);\n\t\t\t    return Ng2OverlayManager;\n\t\t\t}());\n\t\t\texports.Ng2OverlayManager = Ng2OverlayManager;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 4 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\t\t\n\t\t/***/ },\n\t\t/* 5 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t};\n\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t};\n\t\t\tvar core_1 = __webpack_require__(4);\n\t\t\tvar ng2_overlay_manager_1 = __webpack_require__(3);\n\t\t\tvar ng2_overlay_1 = __webpack_require__(1);\n\t\t\tvar Ng2OverlayDirective = (function () {\n\t\t\t    function Ng2OverlayDirective(viewContainerRef, overlayManager) {\n\t\t\t        this.viewContainerRef = viewContainerRef;\n\t\t\t        this.overlayManager = overlayManager;\n\t\t\t        this.el = this.viewContainerRef.element.nativeElement;\n\t\t\t    }\n\t\t\t    Ng2OverlayDirective.prototype.ngAfterViewInit = function () {\n\t\t\t        this.wrapItWithOverlayTag();\n\t\t\t        this.registerToOverlayManager();\n\t\t\t    };\n\t\t\t    Ng2OverlayDirective.prototype.wrapItWithOverlayTag = function () {\n\t\t\t        //console.log('wrapped overlay directive element with <ng2-overlay>');\n\t\t\t        this.overlayEl = document.createElement('ng2-overlay');\n\t\t\t        this.overlayEl.style.display = 'none';\n\t\t\t        this.el.parentElement.insertBefore(this.overlayEl, this.el.nextSibling);\n\t\t\t        this.overlayEl.appendChild(this.el);\n\t\t\t    };\n\t\t\t    //create Overlay object,  then register this element to overlayManager\n\t\t\t    Ng2OverlayDirective.prototype.registerToOverlayManager = function () {\n\t\t\t        var positionStr = this.overlayPosition;\n\t\t\t        var overlay = new ng2_overlay_1.Ng2Overlay(this.overlayEl, {\n\t\t\t            id: this.el.id,\n\t\t\t            windowOverlay: this.overlayOf == \"window\",\n\t\t\t            position: positionStr\n\t\t\t        });\n\t\t\t        //console.log('registering overlay', overlay);\n\t\t\t        this.overlayManager.register(overlay);\n\t\t\t    };\n\t\t\t    __decorate([\n\t\t\t        core_1.Input('ng2-overlay-of'), \n\t\t\t        __metadata('design:type', String)\n\t\t\t    ], Ng2OverlayDirective.prototype, \"overlayOf\", void 0);\n\t\t\t    __decorate([\n\t\t\t        core_1.Input('ng2-overlay-position'), \n\t\t\t        __metadata('design:type', String)\n\t\t\t    ], Ng2OverlayDirective.prototype, \"overlayPosition\", void 0);\n\t\t\t    Ng2OverlayDirective = __decorate([\n\t\t\t        core_1.Directive({\n\t\t\t            selector: '[ng2-overlay], [ng2-overlay-of], [ng2-overlay-position]',\n\t\t\t        }), \n\t\t\t        __metadata('design:paramtypes', [core_1.ViewContainerRef, ng2_overlay_manager_1.Ng2OverlayManager])\n\t\t\t    ], Ng2OverlayDirective);\n\t\t\t    return Ng2OverlayDirective;\n\t\t\t}());\n\t\t\texports.Ng2OverlayDirective = Ng2OverlayDirective;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 6 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t};\n\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t};\n\t\t\tvar core_1 = __webpack_require__(4);\n\t\t\tvar forms_1 = __webpack_require__(7);\n\t\t\tvar common_1 = __webpack_require__(8);\n\t\t\tvar ng2_overlay_manager_1 = __webpack_require__(3);\n\t\t\tvar ng2_overlay_directive_1 = __webpack_require__(5);\n\t\t\tvar Ng2OverlayModule = (function () {\n\t\t\t    function Ng2OverlayModule() {\n\t\t\t    }\n\t\t\t    Ng2OverlayModule = __decorate([\n\t\t\t        core_1.NgModule({\n\t\t\t            imports: [common_1.CommonModule, forms_1.FormsModule],\n\t\t\t            declarations: [ng2_overlay_directive_1.Ng2OverlayDirective],\n\t\t\t            providers: [ng2_overlay_manager_1.Ng2OverlayManager],\n\t\t\t            exports: [ng2_overlay_directive_1.Ng2OverlayDirective]\n\t\t\t        }), \n\t\t\t        __metadata('design:paramtypes', [])\n\t\t\t    ], Ng2OverlayModule);\n\t\t\t    return Ng2OverlayModule;\n\t\t\t}());\n\t\t\texports.Ng2OverlayModule = Ng2OverlayModule;\n\t\t\t;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 7 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_7__;\n\t\t\n\t\t/***/ },\n\t\t/* 8 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_8__;\n\t\t\n\t\t/***/ }\n\t\t/******/ ])\n\t\t});\n\t\t;\n\t\t//# sourceMappingURL=ng2-overlay.umd.js.map\n\t\n\t/***/ },\n\t/* 4 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\t\n\t/***/ },\n\t/* 5 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\t\n\t/***/ },\n\t/* 6 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(2);\n\t\tvar forms_1 = __webpack_require__(4);\n\t\tvar common_1 = __webpack_require__(5);\n\t\tvar ng2_overlay_1 = __webpack_require__(3);\n\t\tvar ng2_tooltip_directive_1 = __webpack_require__(1);\n\t\tvar Ng2TooltipOverlayModule = (function () {\n\t\t    function Ng2TooltipOverlayModule() {\n\t\t    }\n\t\t    return Ng2TooltipOverlayModule;\n\t\t}());\n\t\tNg2TooltipOverlayModule = __decorate([\n\t\t    core_1.NgModule({\n\t\t        imports: [common_1.CommonModule, forms_1.FormsModule, ng2_overlay_1.Ng2OverlayModule],\n\t\t        declarations: [ng2_tooltip_directive_1.Ng2TooltipDirective],\n\t\t        exports: [ng2_tooltip_directive_1.Ng2TooltipDirective]\n\t\t    }),\n\t\t    __metadata(\"design:paramtypes\", [])\n\t\t], Ng2TooltipOverlayModule);\n\t\texports.Ng2TooltipOverlayModule = Ng2TooltipOverlayModule;\n\t\n\t\n\t/***/ }\n\t/******/ ])\n\t});\n\t;\n\t//# sourceMappingURL=ng2-tooltip-overlay.umd.js.map\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function webpackUniversalModuleDefinition(root, factory) {\n\t\tif(true)\n\t\t\tmodule.exports = factory(__webpack_require__(2), __webpack_require__(3), __webpack_require__(8));\n\t\telse if(typeof define === 'function' && define.amd)\n\t\t\tdefine([\"@angular/core\", \"@angular/forms\", \"@angular/common\"], factory);\n\t\telse if(typeof exports === 'object')\n\t\t\texports[\"ng2-ui-sortable\"] = factory(require(\"@angular/core\"), require(\"@angular/forms\"), require(\"@angular/common\"));\n\t\telse\n\t\t\troot[\"ng2-ui-sortable\"] = factory(root[\"@angular/core\"], root[\"@angular/forms\"], root[\"@angular/common\"]);\n\t})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__) {\n\treturn /******/ (function(modules) { // webpackBootstrap\n\t/******/ \t// The module cache\n\t/******/ \tvar installedModules = {};\n\t/******/\n\t/******/ \t// The require function\n\t/******/ \tfunction __webpack_require__(moduleId) {\n\t/******/\n\t/******/ \t\t// Check if module is in cache\n\t/******/ \t\tif(installedModules[moduleId])\n\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\t/******/\n\t/******/ \t\t// Create a new module (and put it into the cache)\n\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t/******/ \t\t\texports: {},\n\t/******/ \t\t\tid: moduleId,\n\t/******/ \t\t\tloaded: false\n\t/******/ \t\t};\n\t/******/\n\t/******/ \t\t// Execute the module function\n\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t/******/\n\t/******/ \t\t// Flag the module as loaded\n\t/******/ \t\tmodule.loaded = true;\n\t/******/\n\t/******/ \t\t// Return the exports of the module\n\t/******/ \t\treturn module.exports;\n\t/******/ \t}\n\t/******/\n\t/******/\n\t/******/ \t// expose the modules object (__webpack_modules__)\n\t/******/ \t__webpack_require__.m = modules;\n\t/******/\n\t/******/ \t// expose the module cache\n\t/******/ \t__webpack_require__.c = installedModules;\n\t/******/\n\t/******/ \t// __webpack_public_path__\n\t/******/ \t__webpack_require__.p = \"\";\n\t/******/\n\t/******/ \t// Load entry module and return exports\n\t/******/ \treturn __webpack_require__(0);\n\t/******/ })\n\t/************************************************************************/\n\t/******/ ([\n\t/* 0 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar ng2_sortable_directive_1 = __webpack_require__(1);\n\t\texports.Ng2SortableDirective = ng2_sortable_directive_1.Ng2SortableDirective;\n\t\tvar ng2_sortable_module_1 = __webpack_require__(3);\n\t\texports.Ng2SortableModule = ng2_sortable_module_1.Ng2SortableModule;\n\t\n\t\n\t/***/ },\n\t/* 1 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(2);\n\t\tvar Ng2SortableDirective = (function () {\n\t\t    function Ng2SortableDirective(viewContainerRef) {\n\t\t        var _this = this;\n\t\t        this.viewContainerRef = viewContainerRef;\n\t\t        this.orderChanged = new core_1.EventEmitter();\n\t\t        this.dragStartHandler = function (event) {\n\t\t            //console.log('dragStartHandler');\n\t\t            _this.draggingEl = event.target;\n\t\t            //noinspection TypeScriptUnresolvedFunction\n\t\t            Object.assign(_this.draggingEl.style, {\n\t\t                zIndex: 3,\n\t\t                pointerEvents: 'none'\n\t\t            });\n\t\t        };\n\t\t        this.dragHandler = function (event) {\n\t\t            //console.log('dragHandler');\n\t\t            //noinspection TypeScriptUnresolvedFunction\n\t\t            Object.assign(_this.draggingEl.style, {\n\t\t                transform: 'translate(0px,' + event.deltaY + 'px)'\n\t\t            });\n\t\t            var newElDragEnter = document.elementFromPoint(event.center.x, event.center.y);\n\t\t            if (_this.elDragEnter !== newElDragEnter) {\n\t\t                if (_this.elDragEnter) {\n\t\t                    _this.elDragEnter.className = _this.elDragEnter.className.replace(/\\ drag-enter/g, '');\n\t\t                }\n\t\t                _this.elDragEnter = newElDragEnter;\n\t\t                if (newElDragEnter.tagName === 'LI') {\n\t\t                    newElDragEnter.className += ' drag-enter';\n\t\t                }\n\t\t            }\n\t\t        };\n\t\t        this.dragEndHandler = function (event) {\n\t\t            //console.log('dragEndHandler');\n\t\t            //noinspection TypeScriptUnresolvedFunction\n\t\t            Object.assign(_this.draggingEl.style, {\n\t\t                transform: 'translate(0,0)',\n\t\t                zIndex: 1,\n\t\t                pointerEvents: 'inherit'\n\t\t            });\n\t\t            // remove class and drop the element\n\t\t            if (_this.elDragEnter) {\n\t\t                _this.elDragEnter.className = _this.elDragEnter.className.replace(/\\ drag-enter/g, '');\n\t\t                _this.elDragEnter.parentNode.insertBefore(_this.draggingEl, _this.elDragEnter);\n\t\t                _this.emitOrderChanged();\n\t\t            }\n\t\t        };\n\t\t        this.ulEl = this.viewContainerRef.element.nativeElement;\n\t\t    }\n\t\t    Ng2SortableDirective.prototype.ngAfterViewInit = function () {\n\t\t        this.liEls = this.ulEl.querySelectorAll('li');\n\t\t        for (var i = 0; i < this.liEls.length; i++) {\n\t\t            var liEl = this.liEls[i];\n\t\t            // create a simple instance by default, it only adds horizontal recognizers\n\t\t            var mc = new Hammer(liEl);\n\t\t            // let the pan gesture support all directions.\n\t\t            // this will block the vertical scrolling on a touch-device while on the element\n\t\t            mc.get('pan').set({ direction: Hammer.DIRECTION_ALL });\n\t\t            mc.on('panstart', this.dragStartHandler);\n\t\t            mc.on('panup pandown', this.dragHandler);\n\t\t            mc.on('panend', this.dragEndHandler);\n\t\t            this.emitOrderChanged();\n\t\t        }\n\t\t    };\n\t\t    Ng2SortableDirective.prototype.emitOrderChanged = function () {\n\t\t        var liEls = this.ulEl.querySelectorAll('li');\n\t\t        var orders = Array.prototype.slice.call(liEls).map(function (el) { return el.id; });\n\t\t        this.orderChanged.emit(orders);\n\t\t    };\n\t\t    return Ng2SortableDirective;\n\t\t}());\n\t\t__decorate([\n\t\t    core_1.Output(),\n\t\t    __metadata(\"design:type\", Object)\n\t\t], Ng2SortableDirective.prototype, \"orderChanged\", void 0);\n\t\tNg2SortableDirective = __decorate([\n\t\t    core_1.Directive({\n\t\t        selector: '[ng2-sortable]'\n\t\t    }),\n\t\t    __metadata(\"design:paramtypes\", [core_1.ViewContainerRef])\n\t\t], Ng2SortableDirective);\n\t\texports.Ng2SortableDirective = Ng2SortableDirective;\n\t\n\t\n\t/***/ },\n\t/* 2 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\t\n\t/***/ },\n\t/* 3 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(2);\n\t\tvar forms_1 = __webpack_require__(4);\n\t\tvar common_1 = __webpack_require__(5);\n\t\tvar ng2_sortable_directive_1 = __webpack_require__(1);\n\t\tvar Ng2SortableModule = (function () {\n\t\t    function Ng2SortableModule() {\n\t\t    }\n\t\t    return Ng2SortableModule;\n\t\t}());\n\t\tNg2SortableModule = __decorate([\n\t\t    core_1.NgModule({\n\t\t        imports: [common_1.CommonModule, forms_1.FormsModule],\n\t\t        declarations: [ng2_sortable_directive_1.Ng2SortableDirective],\n\t\t        exports: [ng2_sortable_directive_1.Ng2SortableDirective]\n\t\t    }),\n\t\t    __metadata(\"design:paramtypes\", [])\n\t\t], Ng2SortableModule);\n\t\texports.Ng2SortableModule = Ng2SortableModule;\n\t\n\t\n\t/***/ },\n\t/* 4 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\t\n\t/***/ },\n\t/* 5 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\t\n\t/***/ }\n\t/******/ ])\n\t});\n\t;\n\t//# sourceMappingURL=ng2-ui-sortable.umd.js.map\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function webpackUniversalModuleDefinition(root, factory) {\n\t\tif(true)\n\t\t\tmodule.exports = factory(__webpack_require__(2), __webpack_require__(3), __webpack_require__(8));\n\t\telse if(typeof define === 'function' && define.amd)\n\t\t\tdefine([\"@angular/core\", \"@angular/forms\", \"@angular/common\"], factory);\n\t\telse if(typeof exports === 'object')\n\t\t\texports[\"ng2-overlay\"] = factory(require(\"@angular/core\"), require(\"@angular/forms\"), require(\"@angular/common\"));\n\t\telse\n\t\t\troot[\"ng2-overlay\"] = factory(root[\"@angular/core\"], root[\"@angular/forms\"], root[\"@angular/common\"]);\n\t})(this, function(__WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_7__, __WEBPACK_EXTERNAL_MODULE_8__) {\n\treturn /******/ (function(modules) { // webpackBootstrap\n\t/******/ \t// The module cache\n\t/******/ \tvar installedModules = {};\n\t/******/\n\t/******/ \t// The require function\n\t/******/ \tfunction __webpack_require__(moduleId) {\n\t/******/\n\t/******/ \t\t// Check if module is in cache\n\t/******/ \t\tif(installedModules[moduleId])\n\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\t/******/\n\t/******/ \t\t// Create a new module (and put it into the cache)\n\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t/******/ \t\t\texports: {},\n\t/******/ \t\t\tid: moduleId,\n\t/******/ \t\t\tloaded: false\n\t/******/ \t\t};\n\t/******/\n\t/******/ \t\t// Execute the module function\n\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t/******/\n\t/******/ \t\t// Flag the module as loaded\n\t/******/ \t\tmodule.loaded = true;\n\t/******/\n\t/******/ \t\t// Return the exports of the module\n\t/******/ \t\treturn module.exports;\n\t/******/ \t}\n\t/******/\n\t/******/\n\t/******/ \t// expose the modules object (__webpack_modules__)\n\t/******/ \t__webpack_require__.m = modules;\n\t/******/\n\t/******/ \t// expose the module cache\n\t/******/ \t__webpack_require__.c = installedModules;\n\t/******/\n\t/******/ \t// __webpack_public_path__\n\t/******/ \t__webpack_require__.p = \"\";\n\t/******/\n\t/******/ \t// Load entry module and return exports\n\t/******/ \treturn __webpack_require__(0);\n\t/******/ })\n\t/************************************************************************/\n\t/******/ ([\n\t/* 0 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar ng2_overlay_1 = __webpack_require__(1);\n\t\texports.Ng2Overlay = ng2_overlay_1.Ng2Overlay;\n\t\tvar ng2_overlay_manager_1 = __webpack_require__(3);\n\t\texports.Ng2OverlayManager = ng2_overlay_manager_1.Ng2OverlayManager;\n\t\tvar ng2_overlay_directive_1 = __webpack_require__(5);\n\t\texports.Ng2OverlayDirective = ng2_overlay_directive_1.Ng2OverlayDirective;\n\t\tvar ng2_overlay_module_1 = __webpack_require__(6);\n\t\texports.Ng2OverlayModule = ng2_overlay_module_1.Ng2OverlayModule;\n\t\n\t\n\t/***/ },\n\t/* 1 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar ng2_util_1 = __webpack_require__(2);\n\t\tvar Ng2Overlay = (function () {\n\t\t    function Ng2Overlay(el, options) {\n\t\t        options = options || {};\n\t\t        this.id = options.id;\n\t\t        this.type = options.type;\n\t\t        if (!this.id) {\n\t\t            throw \"Invalid overlay id\";\n\t\t        }\n\t\t        this.element = el; // overlay wrapper element with table dsplay\n\t\t        this.windowOverlay = options.windowOverlay;\n\t\t        this.position = this.getPositionProperty(options.position || 'center center');\n\t\t    }\n\t\t    Ng2Overlay.prototype.positionIt = function (event) {\n\t\t        if (this.position.inside) {\n\t\t            this.positionItInside(this.position);\n\t\t        }\n\t\t        else {\n\t\t            this.positionItOutside(this.position, event);\n\t\t        }\n\t\t    };\n\t\t    Ng2Overlay.prototype.getPositionProperty = function (positionStr) {\n\t\t        var position = {}, inside;\n\t\t        var _a = positionStr.split(' '), vertical = _a[0], horizontal = _a[1], insideStr = _a[2];\n\t\t        horizontal = horizontal || 'center';\n\t\t        vertical = vertical || 'center';\n\t\t        inside = (insideStr !== 'outside' || this.windowOverlay);\n\t\t        position.horizontal = Ng2Overlay[horizontal.toUpperCase()];\n\t\t        position.vertical = Ng2Overlay[vertical.toUpperCase()];\n\t\t        position.inside = inside;\n\t\t        return position;\n\t\t    };\n\t\t    Ng2Overlay.prototype.positionItInside = function (position) {\n\t\t        this.element.style.display = 'flex';\n\t\t        //top / left positioning\n\t\t        if (this.windowOverlay) {\n\t\t            this.element.style.position = 'fixed';\n\t\t            //works as blocker\n\t\t            Object.assign(this.element.style, {\n\t\t                backgroundColor: 'rgba(0,0,0,0.2)',\n\t\t                top: '0', left: '0', bottom: '0', right: '0',\n\t\t                width: '100%', height: '100%'\n\t\t            });\n\t\t        }\n\t\t        else {\n\t\t            //adjust top/left to match to parentElement\n\t\t            var parentEl = this.element.parentElement;\n\t\t            //works as a blocker\n\t\t            Object.assign(this.element.style, {\n\t\t                position: 'absolute',\n\t\t                // backgroundColor: 'transparent',\n\t\t                backgroundColor: 'rgba(0,0,0,0.2)',\n\t\t                top: parentEl.offsetTop + 'px',\n\t\t                left: parentEl.offsetLeft + 'px',\n\t\t                width: parentEl.offsetWidth + 'px',\n\t\t                height: parentEl.offsetHeight + 'px'\n\t\t            });\n\t\t        }\n\t\t        ;\n\t\t        //horizontal position\n\t\t        switch (position.horizontal) {\n\t\t            case Ng2Overlay.LEFT:\n\t\t                this.element.style.justifyContent = 'flex-start';\n\t\t                break;\n\t\t            case Ng2Overlay.CENTER:\n\t\t                this.element.style.justifyContent = 'center';\n\t\t                break;\n\t\t            case Ng2Overlay.RIGHT:\n\t\t                this.element.style.justifyContent = 'flex-end';\n\t\t                break;\n\t\t        }\n\t\t        //vertical position\n\t\t        switch (position.vertical) {\n\t\t            case Ng2Overlay.LEFT:\n\t\t                this.element.style.alignItems = 'flex-start';\n\t\t                break;\n\t\t            case Ng2Overlay.CENTER:\n\t\t            case Ng2Overlay.MIDDLE:\n\t\t                this.element.style.alignItems = 'center';\n\t\t                break;\n\t\t            case Ng2Overlay.RIGHT:\n\t\t                this.element.style.alignItems = 'flex-end';\n\t\t                break;\n\t\t        }\n\t\t    };\n\t\t    Ng2Overlay.prototype.positionItOutside = function (position, event) {\n\t\t        //adjust top/left to match to parentElement\n\t\t        var parentEl = this.element.parentElement;\n\t\t        //works as guide line?\n\t\t        Object.assign(this.element.style, {\n\t\t            position: 'absolute',\n\t\t            pointerEvents: 'none',\n\t\t            top: parentEl.offsetTop + 'px',\n\t\t            left: parentEl.offsetLeft + 'px',\n\t\t            width: parentEl.offsetWidth + 'px',\n\t\t            height: parentEl.offsetHeight + 'px'\n\t\t        });\n\t\t        this.element.style.display = 'block';\n\t\t        var elToPosition = (this.element.children[0]);\n\t\t        elToPosition.style.position = 'absolute';\n\t\t        elToPosition.style.pointerEvents = 'auto';\n\t\t        switch (position.vertical) {\n\t\t            case Ng2Overlay.TOP:\n\t\t                elToPosition.style.bottom = this.element.offsetHeight + 'px';\n\t\t                break;\n\t\t            case Ng2Overlay.BOTTOM:\n\t\t                elToPosition.style.top = this.element.offsetHeight + 'px';\n\t\t                break;\n\t\t            case Ng2Overlay.LEFT:\n\t\t                elToPosition.style.right = this.element.offsetWidth + 'px';\n\t\t                break;\n\t\t            case Ng2Overlay.RIGHT:\n\t\t                elToPosition.style.left = this.element.offsetWidth + 'px';\n\t\t                break;\n\t\t        }\n\t\t        switch (position.horizontal) {\n\t\t            case Ng2Overlay.CENTER:\n\t\t                elToPosition.style.left = (this.element.offsetWidth - elToPosition.offsetWidth) / 2 + 'px';\n\t\t                break;\n\t\t            case Ng2Overlay.LEFT:\n\t\t                elToPosition.style.left = '0';\n\t\t                break;\n\t\t            case Ng2Overlay.RIGHT:\n\t\t                elToPosition.style.right = '0';\n\t\t                break;\n\t\t            case Ng2Overlay.TOP:\n\t\t                elToPosition.style.top = '0';\n\t\t                break;\n\t\t            case Ng2Overlay.BOTTOM:\n\t\t                elToPosition.style.bottom = '0';\n\t\t                break;\n\t\t            case Ng2Overlay.CURSOR:\n\t\t                var mousePos = ng2_util_1.Ng2Util.getMousePositionInElement(event, this.element);\n\t\t                if ((mousePos.x + elToPosition.offsetWidth) > this.element.offsetWidth) {\n\t\t                    elToPosition.style.left = (this.element.offsetWidth - elToPosition.offsetWidth - 5) + 'px';\n\t\t                }\n\t\t                else if (mousePos.x < elToPosition.offsetWidth / 2) {\n\t\t                    elToPosition.style.left = '0px';\n\t\t                }\n\t\t                else {\n\t\t                    elToPosition.style.left = mousePos.x - elToPosition.offsetWidth / 2 + 'px';\n\t\t                }\n\t\t                break;\n\t\t        }\n\t\t    };\n\t\t    return Ng2Overlay;\n\t\t}());\n\t\tNg2Overlay.TOP = 11;\n\t\tNg2Overlay.MIDDLE = 12;\n\t\tNg2Overlay.BOTTOM = 13;\n\t\tNg2Overlay.LEFT = 21;\n\t\tNg2Overlay.CENTER = 22;\n\t\tNg2Overlay.RIGHT = 23;\n\t\tNg2Overlay.CURSOR = 31;\n\t\texports.Ng2Overlay = Ng2Overlay;\n\t\n\t\n\t/***/ },\n\t/* 2 */\n\t/***/ function(module, exports) {\n\t\n\t\t\"use strict\";\n\t\tvar Ng2Util = (function () {\n\t\t    function Ng2Util() {\n\t\t    }\n\t\t    Ng2Util.getDocumentPosition = function (oElement) {\n\t\t        var posX = 0, posY = 0;\n\t\t        if (oElement.offsetParent) {\n\t\t            for (; oElement; oElement = oElement.offsetParent) {\n\t\t                posX += oElement.offsetLeft;\n\t\t                posY += oElement.offsetTop;\n\t\t            }\n\t\t            return { x: posX, y: posY };\n\t\t        }\n\t\t        else {\n\t\t            return { x: oElement['x'], y: oElement['y'] };\n\t\t        }\n\t\t    };\n\t\t    Ng2Util.getMousePositionInElement = function (evt, element) {\n\t\t        evt = evt || window.event;\n\t\t        var posX = 0, posY = 0;\n\t\t        var elPos = this.getDocumentPosition(element);\n\t\t        if (evt.pageX || evt.pageY) {\n\t\t            posX = evt.pageX;\n\t\t            posY = evt.pageY;\n\t\t        }\n\t\t        else if (evt.clientX || evt.clientY) {\n\t\t            posX = evt.clientX +\n\t\t                document.body.scrollLeft +\n\t\t                document.documentElement.scrollLeft;\n\t\t            posY = evt.clientY +\n\t\t                document.body.scrollTop +\n\t\t                document.documentElement.scrollTop;\n\t\t        }\n\t\t        return {\n\t\t            x: posX - elPos.x,\n\t\t            y: posY - elPos.y\n\t\t        };\n\t\t    };\n\t\t    return Ng2Util;\n\t\t}());\n\t\texports.Ng2Util = Ng2Util;\n\t\n\t\n\t/***/ },\n\t/* 3 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar core_1 = __webpack_require__(4);\n\t\tvar Ng2OverlayManager = Ng2OverlayManager_1 = (function () {\n\t\t    function Ng2OverlayManager() {\n\t\t    }\n\t\t    Ng2OverlayManager.prototype.register = function (overlay) {\n\t\t        Ng2OverlayManager_1.overlays[overlay.id] = overlay;\n\t\t        // console.log('overlay.register, OverlayManager.overlays', OverlayManager.overlays);\n\t\t    };\n\t\t    Ng2OverlayManager.prototype.open = function (arg, event) {\n\t\t        var overlay = typeof arg === 'string' ? Ng2OverlayManager_1.overlays[arg] : arg;\n\t\t        if (!overlay.opened) {\n\t\t            overlay.positionIt(event);\n\t\t            overlay.opened = true;\n\t\t        }\n\t\t    };\n\t\t    Ng2OverlayManager.prototype.close = function (arg) {\n\t\t        var overlay = typeof arg === 'string' ? Ng2OverlayManager_1.overlays[arg] : arg;\n\t\t        overlay.element.style.display = 'none';\n\t\t        overlay.opened = false;\n\t\t    };\n\t\t    return Ng2OverlayManager;\n\t\t}());\n\t\t//list of overlay objects\n\t\tNg2OverlayManager.overlays = {};\n\t\tNg2OverlayManager = Ng2OverlayManager_1 = __decorate([\n\t\t    core_1.Injectable()\n\t\t], Ng2OverlayManager);\n\t\texports.Ng2OverlayManager = Ng2OverlayManager;\n\t\tvar Ng2OverlayManager_1;\n\t\n\t\n\t/***/ },\n\t/* 4 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\t\n\t/***/ },\n\t/* 5 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(4);\n\t\tvar ng2_overlay_manager_1 = __webpack_require__(3);\n\t\tvar ng2_overlay_1 = __webpack_require__(1);\n\t\tvar Ng2OverlayDirective = (function () {\n\t\t    function Ng2OverlayDirective(viewContainerRef, overlayManager) {\n\t\t        this.viewContainerRef = viewContainerRef;\n\t\t        this.overlayManager = overlayManager;\n\t\t        this.el = this.viewContainerRef.element.nativeElement;\n\t\t    }\n\t\t    Ng2OverlayDirective.prototype.ngAfterViewInit = function () {\n\t\t        this.wrapItWithOverlayTag();\n\t\t        this.registerToOverlayManager();\n\t\t    };\n\t\t    Ng2OverlayDirective.prototype.wrapItWithOverlayTag = function () {\n\t\t        //console.log('wrapped overlay directive element with <ng2-overlay>');\n\t\t        this.overlayEl = document.createElement('ng2-overlay');\n\t\t        this.overlayEl.style.display = 'none';\n\t\t        this.el.parentElement.insertBefore(this.overlayEl, this.el.nextSibling);\n\t\t        this.overlayEl.appendChild(this.el);\n\t\t    };\n\t\t    //create Overlay object,  then register this element to overlayManager\n\t\t    Ng2OverlayDirective.prototype.registerToOverlayManager = function () {\n\t\t        var positionStr = this.overlayPosition;\n\t\t        var overlay = new ng2_overlay_1.Ng2Overlay(this.overlayEl, {\n\t\t            id: this.el.id,\n\t\t            windowOverlay: this.overlayOf == \"window\",\n\t\t            position: positionStr\n\t\t        });\n\t\t        //console.log('registering overlay', overlay);\n\t\t        this.overlayManager.register(overlay);\n\t\t    };\n\t\t    return Ng2OverlayDirective;\n\t\t}());\n\t\t__decorate([\n\t\t    core_1.Input('ng2-overlay-of'),\n\t\t    __metadata(\"design:type\", String)\n\t\t], Ng2OverlayDirective.prototype, \"overlayOf\", void 0);\n\t\t__decorate([\n\t\t    core_1.Input('ng2-overlay-position'),\n\t\t    __metadata(\"design:type\", String)\n\t\t], Ng2OverlayDirective.prototype, \"overlayPosition\", void 0);\n\t\tNg2OverlayDirective = __decorate([\n\t\t    core_1.Directive({\n\t\t        selector: '[ng2-overlay], [ng2-overlay-of], [ng2-overlay-position]',\n\t\t    }),\n\t\t    __metadata(\"design:paramtypes\", [core_1.ViewContainerRef,\n\t\t        ng2_overlay_manager_1.Ng2OverlayManager])\n\t\t], Ng2OverlayDirective);\n\t\texports.Ng2OverlayDirective = Ng2OverlayDirective;\n\t\n\t\n\t/***/ },\n\t/* 6 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar core_1 = __webpack_require__(4);\n\t\tvar forms_1 = __webpack_require__(7);\n\t\tvar common_1 = __webpack_require__(8);\n\t\tvar ng2_overlay_manager_1 = __webpack_require__(3);\n\t\texports.Ng2OverlayManager = ng2_overlay_manager_1.Ng2OverlayManager;\n\t\tvar ng2_overlay_directive_1 = __webpack_require__(5);\n\t\tvar Ng2OverlayModule = (function () {\n\t\t    function Ng2OverlayModule() {\n\t\t    }\n\t\t    return Ng2OverlayModule;\n\t\t}());\n\t\tNg2OverlayModule = __decorate([\n\t\t    core_1.NgModule({\n\t\t        imports: [common_1.CommonModule, forms_1.FormsModule],\n\t\t        declarations: [ng2_overlay_directive_1.Ng2OverlayDirective],\n\t\t        providers: [ng2_overlay_manager_1.Ng2OverlayManager],\n\t\t        exports: [ng2_overlay_directive_1.Ng2OverlayDirective]\n\t\t    })\n\t\t], Ng2OverlayModule);\n\t\texports.Ng2OverlayModule = Ng2OverlayModule;\n\t\t;\n\t\n\t\n\t/***/ },\n\t/* 7 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_7__;\n\t\n\t/***/ },\n\t/* 8 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_8__;\n\t\n\t/***/ }\n\t/******/ ])\n\t});\n\t;\n\t//# sourceMappingURL=ng2-overlay.umd.js.map\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function webpackUniversalModuleDefinition(root, factory) {\n\t\tif(true)\n\t\t\tmodule.exports = factory(__webpack_require__(2), __webpack_require__(3), __webpack_require__(8));\n\t\telse if(typeof define === 'function' && define.amd)\n\t\t\tdefine([\"@angular/core\", \"@angular/forms\", \"@angular/common\"], factory);\n\t\telse if(typeof exports === 'object')\n\t\t\texports[\"ng2-scrollable\"] = factory(require(\"@angular/core\"), require(\"@angular/forms\"), require(\"@angular/common\"));\n\t\telse\n\t\t\troot[\"ng2-scrollable\"] = factory(root[\"@angular/core\"], root[\"@angular/forms\"], root[\"@angular/common\"]);\n\t})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_6__) {\n\treturn /******/ (function(modules) { // webpackBootstrap\n\t/******/ \t// The module cache\n\t/******/ \tvar installedModules = {};\n\t/******/\n\t/******/ \t// The require function\n\t/******/ \tfunction __webpack_require__(moduleId) {\n\t/******/\n\t/******/ \t\t// Check if module is in cache\n\t/******/ \t\tif(installedModules[moduleId])\n\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\t/******/\n\t/******/ \t\t// Create a new module (and put it into the cache)\n\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t/******/ \t\t\texports: {},\n\t/******/ \t\t\tid: moduleId,\n\t/******/ \t\t\tloaded: false\n\t/******/ \t\t};\n\t/******/\n\t/******/ \t\t// Execute the module function\n\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t/******/\n\t/******/ \t\t// Flag the module as loaded\n\t/******/ \t\tmodule.loaded = true;\n\t/******/\n\t/******/ \t\t// Return the exports of the module\n\t/******/ \t\treturn module.exports;\n\t/******/ \t}\n\t/******/\n\t/******/\n\t/******/ \t// expose the modules object (__webpack_modules__)\n\t/******/ \t__webpack_require__.m = modules;\n\t/******/\n\t/******/ \t// expose the module cache\n\t/******/ \t__webpack_require__.c = installedModules;\n\t/******/\n\t/******/ \t// __webpack_public_path__\n\t/******/ \t__webpack_require__.p = \"\";\n\t/******/\n\t/******/ \t// Load entry module and return exports\n\t/******/ \treturn __webpack_require__(0);\n\t/******/ })\n\t/************************************************************************/\n\t/******/ ([\n\t/* 0 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar ng2_scrollable_directive_1 = __webpack_require__(1);\n\t\texports.Ng2ScrollableDirective = ng2_scrollable_directive_1.Ng2ScrollableDirective;\n\t\tvar ng2_scrollable_module_1 = __webpack_require__(4);\n\t\texports.Ng2ScrollableModule = ng2_scrollable_module_1.Ng2ScrollableModule;\n\t\n\t\n\t/***/ },\n\t/* 1 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(2);\n\t\tvar ng2_utils_1 = __webpack_require__(3);\n\t\tvar Ng2ScrollableDirective = (function () {\n\t\t    function Ng2ScrollableDirective(el) {\n\t\t        this.elementVisible = new core_1.EventEmitter();\n\t\t        this.sections = [];\n\t\t        this.visible = ng2_utils_1.elementVisible;\n\t\t        this.el = el.nativeElement;\n\t\t        this.el.style.position = 'relative';\n\t\t    }\n\t\t    // setup list of sections\n\t\t    Ng2ScrollableDirective.prototype.ngOnInit = function () {\n\t\t        for (var i = 0; i < this.el.children.length; i++) {\n\t\t            var childEl = this.el.children[i];\n\t\t            childEl.id && this.sections.push(childEl);\n\t\t        }\n\t\t        var thisElStyle = window.getComputedStyle(this.el);\n\t\t        var elToListenScroll = thisElStyle.overflow === 'auto' ? this.el : window;\n\t\t        this.listenScrollOn(elToListenScroll);\n\t\t    };\n\t\t    Ng2ScrollableDirective.prototype.listenScrollOn = function (el) {\n\t\t        var _this = this;\n\t\t        el.addEventListener('scroll', function () {\n\t\t            var elScrolledToVisible = null;\n\t\t            for (var i = 0; i < _this.sections.length; i++) {\n\t\t                var section = _this.sections[i];\n\t\t                var visible = _this.visible(section, el);\n\t\t                if (_this.horizontal && (visible.left || visible.right)) {\n\t\t                    elScrolledToVisible = section;\n\t\t                    break;\n\t\t                }\n\t\t                else if (!_this.horizontal && (visible.top || visible.bottom)) {\n\t\t                    elScrolledToVisible = section;\n\t\t                    break;\n\t\t                }\n\t\t            }\n\t\t            elScrolledToVisible && _this.elementVisible.emit(elScrolledToVisible);\n\t\t        });\n\t\t    };\n\t\t    Ng2ScrollableDirective.scrollTo = function (selector, parentSelector, horizontal, distance) {\n\t\t        // argument validation\n\t\t        var parentEl, targetEl;\n\t\t        parentSelector = parentSelector || 'body';\n\t\t        targetEl = document.querySelector(selector);\n\t\t        if (!targetEl) {\n\t\t            throw \"Invalid selector \" + selector;\n\t\t        }\n\t\t        parentEl = document.querySelector(parentSelector);\n\t\t        if (!parentEl) {\n\t\t            throw \"Invalid parent selector \" + parentSelector;\n\t\t        }\n\t\t        // detect the current environment\n\t\t        var parentElStyle = window.getComputedStyle(parentEl);\n\t\t        var scrollContainerEl = parentElStyle.overflow === 'auto' ?\n\t\t            parentEl : document.body;\n\t\t        var currentScrollTop = scrollContainerEl.scrollTop;\n\t\t        var currentScrollLeft = scrollContainerEl.scrollLeft;\n\t\t        // determine targetOffsetTop(or Left);\n\t\t        var targetOffsetTop;\n\t\t        var targetOffsetLeft;\n\t\t        if (scrollContainerEl === document.body) {\n\t\t            var bodyRect = document.body.getBoundingClientRect();\n\t\t            var targetRect = targetEl.getBoundingClientRect();\n\t\t            targetOffsetTop = targetRect.top - bodyRect.top;\n\t\t            targetOffsetLeft = targetRect.left - bodyRect.left;\n\t\t        }\n\t\t        else {\n\t\t            targetOffsetTop = targetEl.offsetTop;\n\t\t            targetOffsetLeft = targetEl.offsetLeft;\n\t\t        }\n\t\t        if (distance) {\n\t\t            currentScrollTop += distance;\n\t\t            currentScrollLeft += distance;\n\t\t        }\n\t\t        // start scrolling\n\t\t        var step = horizontal ?\n\t\t            Math.ceil((targetOffsetLeft - currentScrollLeft) / 10) :\n\t\t            Math.ceil((targetOffsetTop - currentScrollTop) / 10);\n\t\t        var scrollProp = horizontal ? 'scrollLeft' : 'scrollTop';\n\t\t        (function loop(i, prop) {\n\t\t            setTimeout(function main() {\n\t\t                scrollContainerEl[prop] += step;\n\t\t                i > 1 && loop(i - 1, prop);\n\t\t            }, 50);\n\t\t        }(10, scrollProp));\n\t\t    };\n\t\t    return Ng2ScrollableDirective;\n\t\t}());\n\t\t__decorate([\n\t\t    core_1.Input(),\n\t\t    __metadata(\"design:type\", Boolean)\n\t\t], Ng2ScrollableDirective.prototype, \"horizontal\", void 0);\n\t\t__decorate([\n\t\t    core_1.Output(),\n\t\t    __metadata(\"design:type\", Object)\n\t\t], Ng2ScrollableDirective.prototype, \"elementVisible\", void 0);\n\t\tNg2ScrollableDirective = __decorate([\n\t\t    core_1.Directive({\n\t\t        selector: '[ng2-scrollable]'\n\t\t    }),\n\t\t    __metadata(\"design:paramtypes\", [core_1.ElementRef])\n\t\t], Ng2ScrollableDirective);\n\t\texports.Ng2ScrollableDirective = Ng2ScrollableDirective;\n\t\n\t\n\t/***/ },\n\t/* 2 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\t\n\t/***/ },\n\t/* 3 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t(function webpackUniversalModuleDefinition(root, factory) {\n\t\t\tif(true)\n\t\t\t\tmodule.exports = factory(__webpack_require__(2));\n\t\t\telse if(typeof define === 'function' && define.amd)\n\t\t\t\tdefine([\"@angular/core\"], factory);\n\t\t\telse if(typeof exports === 'object')\n\t\t\t\texports[\"ng2-utils\"] = factory(require(\"@angular/core\"));\n\t\t\telse\n\t\t\t\troot[\"ng2-utils\"] = factory(root[\"@angular/core\"]);\n\t\t})(this, function(__WEBPACK_EXTERNAL_MODULE_1__) {\n\t\treturn /******/ (function(modules) { // webpackBootstrap\n\t\t/******/ \t// The module cache\n\t\t/******/ \tvar installedModules = {};\n\t\t/******/\n\t\t/******/ \t// The require function\n\t\t/******/ \tfunction __webpack_require__(moduleId) {\n\t\t/******/\n\t\t/******/ \t\t// Check if module is in cache\n\t\t/******/ \t\tif(installedModules[moduleId])\n\t\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\t\t/******/\n\t\t/******/ \t\t// Create a new module (and put it into the cache)\n\t\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t\t/******/ \t\t\texports: {},\n\t\t/******/ \t\t\tid: moduleId,\n\t\t/******/ \t\t\tloaded: false\n\t\t/******/ \t\t};\n\t\t/******/\n\t\t/******/ \t\t// Execute the module function\n\t\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t\t/******/\n\t\t/******/ \t\t// Flag the module as loaded\n\t\t/******/ \t\tmodule.loaded = true;\n\t\t/******/\n\t\t/******/ \t\t// Return the exports of the module\n\t\t/******/ \t\treturn module.exports;\n\t\t/******/ \t}\n\t\t/******/\n\t\t/******/\n\t\t/******/ \t// expose the modules object (__webpack_modules__)\n\t\t/******/ \t__webpack_require__.m = modules;\n\t\t/******/\n\t\t/******/ \t// expose the module cache\n\t\t/******/ \t__webpack_require__.c = installedModules;\n\t\t/******/\n\t\t/******/ \t// __webpack_public_path__\n\t\t/******/ \t__webpack_require__.p = \"\";\n\t\t/******/\n\t\t/******/ \t// Load entry module and return exports\n\t\t/******/ \treturn __webpack_require__(0);\n\t\t/******/ })\n\t\t/************************************************************************/\n\t\t/******/ ([\n\t\t/* 0 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t};\n\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t};\n\t\t\tvar core_1 = __webpack_require__(1);\n\t\t\tvar scroll_to_1 = __webpack_require__(2);\n\t\t\texports.scrollTo = scroll_to_1.scrollTo;\n\t\t\tvar element_visible_1 = __webpack_require__(3);\n\t\t\texports.elementVisible = element_visible_1.elementVisible;\n\t\t\tvar computed_style_1 = __webpack_require__(4);\n\t\t\texports.computedStyle = computed_style_1.computedStyle;\n\t\t\tvar outer_width_1 = __webpack_require__(5);\n\t\t\texports.outerWidth = outer_width_1.outerWidth;\n\t\t\tvar outer_height_1 = __webpack_require__(6);\n\t\t\texports.outerHeight = outer_height_1.outerHeight;\n\t\t\tvar Ng2UtilsModule = (function () {\n\t\t\t    function Ng2UtilsModule() {\n\t\t\t    }\n\t\t\t    Ng2UtilsModule = __decorate([\n\t\t\t        core_1.NgModule({\n\t\t\t            declarations: [\n\t\t\t                scroll_to_1.scrollTo,\n\t\t\t                element_visible_1.elementVisible,\n\t\t\t                computed_style_1.computedStyle,\n\t\t\t                outer_width_1.outerWidth,\n\t\t\t                outer_height_1.outerHeight\n\t\t\t            ],\n\t\t\t            exports: [\n\t\t\t                scroll_to_1.scrollTo,\n\t\t\t                element_visible_1.elementVisible,\n\t\t\t                computed_style_1.computedStyle,\n\t\t\t                outer_width_1.outerWidth,\n\t\t\t                outer_height_1.outerHeight\n\t\t\t            ]\n\t\t\t        }), \n\t\t\t        __metadata('design:paramtypes', [])\n\t\t\t    ], Ng2UtilsModule);\n\t\t\t    return Ng2UtilsModule;\n\t\t\t}());\n\t\t\texports.Ng2UtilsModule = Ng2UtilsModule;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 1 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\t\t\n\t\t/***/ },\n\t\t/* 2 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\t/**\n\t\t\t * scroll to the selector within the parent selector by scrolling 10 times within 500ms\n\t\t\t * @param selector\n\t\t\t * @param parentSelector\n\t\t\t */\n\t\t\tfunction scrollTo(selector, parentSelector) {\n\t\t\t    console.log('selector', selector, 'parentSelector', parentSelector);\n\t\t\t    var parentEl, targetEl;\n\t\t\t    targetEl = document.querySelector(selector);\n\t\t\t    if (!targetEl) {\n\t\t\t        throw \"Invalid selector \" + selector;\n\t\t\t    }\n\t\t\t    parentEl = document.querySelector(parentSelector);\n\t\t\t    if (!parentEl) {\n\t\t\t        throw \"Invalid parent selector \" + parentSelector;\n\t\t\t    }\n\t\t\t    var parentElStyle = window.getComputedStyle(parentEl);\n\t\t\t    parentEl = parentElStyle['overflow'] === 'auto' ? parentEl : document.body;\n\t\t\t    var currentScrollTop = parentEl.scrollTop;\n\t\t\t    var targetOffsetTop = targetEl.offsetTop;\n\t\t\t    if (parentEl === document.body) {\n\t\t\t        var bodyRect = document.body.getBoundingClientRect();\n\t\t\t        var targetRect = targetEl.getBoundingClientRect();\n\t\t\t        targetOffsetTop = targetRect.top - bodyRect.top;\n\t\t\t    }\n\t\t\t    var step = Math.ceil((targetOffsetTop - currentScrollTop) / 10);\n\t\t\t    (function loop(i) {\n\t\t\t        setTimeout(function main() {\n\t\t\t            parentEl.scrollTop += step;\n\t\t\t            i > 1 && loop(i - 1);\n\t\t\t        }, 50);\n\t\t\t    }(10));\n\t\t\t}\n\t\t\texports.scrollTo = scrollTo;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 3 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\t/**\n\t\t\t * Returns an element is visible within outer element\n\t\t\t * @param innerEl\n\t\t\t * @param outerEl\n\t\t\t * @param adjustment\n\t\t\t * @returns {{top: boolean, bottom: boolean, left: boolean, right: boolean}}\n\t\t\t */\n\t\t\tfunction elementVisible(innerEl, outerEl, adjustment) {\n\t\t\t    var innerRect = innerEl.getBoundingClientRect();\n\t\t\t    var bottomAdjustment = (adjustment && adjustment.bottom || 0);\n\t\t\t    if (outerEl === window) {\n\t\t\t        return {\n\t\t\t            top: innerRect.bottom - bottomAdjustment > window.innerHeight\n\t\t\t                && innerRect.top < window.innerHeight,\n\t\t\t            bottom: innerRect.bottom - bottomAdjustment > 0\n\t\t\t                && innerRect.bottom < window.innerHeight,\n\t\t\t            left: innerRect.right > window.innerWidth\n\t\t\t                && innerRect.left < window.innerWidth,\n\t\t\t            right: innerRect.right > 0\n\t\t\t                && innerRect.right < window.innerWidth\n\t\t\t        };\n\t\t\t    }\n\t\t\t    else {\n\t\t\t        var outerRect = outerEl.getBoundingClientRect();\n\t\t\t        var defaultView = (innerEl.ownerDocument || document).defaultView;\n\t\t\t        var computedStyle = defaultView.getComputedStyle(outerEl, null);\n\t\t\t        var outerRectBorderTopWidth = parseInt(computedStyle.getPropertyValue('border-top-width'), 10);\n\t\t\t        var outerRectBorderLeftWidth = parseInt(computedStyle.getPropertyValue('border-left-width'), 10);\n\t\t\t        /* top is visible or bottom is visible */\n\t\t\t        var topVisible = (innerRect.top >= outerRect.top\n\t\t\t            && innerRect.top < outerRect.bottom);\n\t\t\t        var bottomVisible = (innerRect.bottom > (outerRect.top + outerRectBorderTopWidth)\n\t\t\t            && innerRect.bottom < outerRect.bottom);\n\t\t\t        var leftVisible = (innerRect.left >= outerRect.left\n\t\t\t            && innerRect.left < outerRect.right);\n\t\t\t        var rightVisible = (innerRect.right > (outerRect.left + outerRectBorderLeftWidth)\n\t\t\t            && innerRect.right < outerRect.right);\n\t\t\t        return {\n\t\t\t            top: topVisible,\n\t\t\t            bottom: bottomVisible,\n\t\t\t            left: leftVisible,\n\t\t\t            right: rightVisible\n\t\t\t        };\n\t\t\t    }\n\t\t\t}\n\t\t\texports.elementVisible = elementVisible;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 4 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\t/**\n\t\t\t * returns coumputed style of given element\n\t\t\t * @param el\n\t\t\t * @param styleProp\n\t\t\t * @returns {any}\n\t\t\t */\n\t\t\tfunction computedStyle(el, styleProp) {\n\t\t\t    var value, defaultView = (el.ownerDocument || document).defaultView;\n\t\t\t    // W3C standard way:\n\t\t\t    if (defaultView && defaultView.getComputedStyle) {\n\t\t\t        // sanitize property name to css notation\n\t\t\t        // (hypen separated words eg. font-Size)\n\t\t\t        styleProp = styleProp.replace(/([A-Z])/g, \"-$1\").toLowerCase();\n\t\t\t        return defaultView.getComputedStyle(el, null).getPropertyValue(styleProp);\n\t\t\t    }\n\t\t\t    else if (el['currentStyle']) {\n\t\t\t        // sanitize property name to camelCase\n\t\t\t        styleProp = styleProp.replace(/\\-(\\w)/g, function (str, letter) {\n\t\t\t            return letter.toUpperCase();\n\t\t\t        });\n\t\t\t        value = el['currentStyle'][styleProp];\n\t\t\t        // convert other units to pixels on IE\n\t\t\t        if (/^\\d+(em|pt|%|ex)?$/i.test(value)) {\n\t\t\t            return (function (value) {\n\t\t\t                var oldLeft = el.style.left, oldRsLeft = el['runtimeStyle'].left;\n\t\t\t                el['runtimeStyle'].left = el['currentStyle'].left;\n\t\t\t                el.style.left = value || 0;\n\t\t\t                value = el.style['pixelLeft'] + \"px\";\n\t\t\t                el.style.left = oldLeft;\n\t\t\t                el['runtimeStyle'].left = oldRsLeft;\n\t\t\t                return value;\n\t\t\t            })(value);\n\t\t\t        }\n\t\t\t        return value;\n\t\t\t    }\n\t\t\t}\n\t\t\texports.computedStyle = computedStyle;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 5 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tfunction outerWidth(el) {\n\t\t\t    var style = getComputedStyle(el);\n\t\t\t    return el.offsetWidth +\n\t\t\t        parseInt(style.getPropertyValue('margin-left')) +\n\t\t\t        parseInt(style.getPropertyValue('margin-right'));\n\t\t\t}\n\t\t\texports.outerWidth = outerWidth;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 6 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tfunction outerHeight(el) {\n\t\t\t    var style = getComputedStyle(el);\n\t\t\t    return el.offsetHeight +\n\t\t\t        parseInt(style.getPropertyValue('margin-top')) +\n\t\t\t        parseInt(style.getPropertyValue('margin-bottom'));\n\t\t\t}\n\t\t\texports.outerHeight = outerHeight;\n\t\t\n\t\t\n\t\t/***/ }\n\t\t/******/ ])\n\t\t});\n\t\t;\n\t\t//# sourceMappingURL=ng2-utils.umd.js.map\n\t\n\t/***/ },\n\t/* 4 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(2);\n\t\tvar forms_1 = __webpack_require__(5);\n\t\tvar common_1 = __webpack_require__(6);\n\t\tvar ng2_scrollable_directive_1 = __webpack_require__(1);\n\t\texports.Ng2ScrollableDirective = ng2_scrollable_directive_1.Ng2ScrollableDirective;\n\t\tvar Ng2ScrollableModule = (function () {\n\t\t    function Ng2ScrollableModule() {\n\t\t    }\n\t\t    return Ng2ScrollableModule;\n\t\t}());\n\t\tNg2ScrollableModule = __decorate([\n\t\t    core_1.NgModule({\n\t\t        imports: [common_1.CommonModule, forms_1.FormsModule],\n\t\t        declarations: [ng2_scrollable_directive_1.Ng2ScrollableDirective],\n\t\t        exports: [ng2_scrollable_directive_1.Ng2ScrollableDirective]\n\t\t    }),\n\t\t    __metadata(\"design:paramtypes\", [])\n\t\t], Ng2ScrollableModule);\n\t\texports.Ng2ScrollableModule = Ng2ScrollableModule;\n\t\n\t\n\t/***/ },\n\t/* 5 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\t\n\t/***/ },\n\t/* 6 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_6__;\n\t\n\t/***/ }\n\t/******/ ])\n\t});\n\t;\n\t//# sourceMappingURL=ng2-scrollable.umd.js.map\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function webpackUniversalModuleDefinition(root, factory) {\n\t\tif(true)\n\t\t\tmodule.exports = factory(__webpack_require__(2), __webpack_require__(8), __webpack_require__(3));\n\t\telse if(typeof define === 'function' && define.amd)\n\t\t\tdefine([\"@angular/core\", \"@angular/common\", \"@angular/forms\"], factory);\n\t\telse if(typeof exports === 'object')\n\t\t\texports[\"ng2-collapsable\"] = factory(require(\"@angular/core\"), require(\"@angular/common\"), require(\"@angular/forms\"));\n\t\telse\n\t\t\troot[\"ng2-collapsable\"] = factory(root[\"@angular/core\"], root[\"@angular/common\"], root[\"@angular/forms\"]);\n\t})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__) {\n\treturn /******/ (function(modules) { // webpackBootstrap\n\t/******/ \t// The module cache\n\t/******/ \tvar installedModules = {};\n\t/******/\n\t/******/ \t// The require function\n\t/******/ \tfunction __webpack_require__(moduleId) {\n\t/******/\n\t/******/ \t\t// Check if module is in cache\n\t/******/ \t\tif(installedModules[moduleId])\n\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\t/******/\n\t/******/ \t\t// Create a new module (and put it into the cache)\n\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t/******/ \t\t\texports: {},\n\t/******/ \t\t\tid: moduleId,\n\t/******/ \t\t\tloaded: false\n\t/******/ \t\t};\n\t/******/\n\t/******/ \t\t// Execute the module function\n\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t/******/\n\t/******/ \t\t// Flag the module as loaded\n\t/******/ \t\tmodule.loaded = true;\n\t/******/\n\t/******/ \t\t// Return the exports of the module\n\t/******/ \t\treturn module.exports;\n\t/******/ \t}\n\t/******/\n\t/******/\n\t/******/ \t// expose the modules object (__webpack_modules__)\n\t/******/ \t__webpack_require__.m = modules;\n\t/******/\n\t/******/ \t// expose the module cache\n\t/******/ \t__webpack_require__.c = installedModules;\n\t/******/\n\t/******/ \t// __webpack_public_path__\n\t/******/ \t__webpack_require__.p = \"\";\n\t/******/\n\t/******/ \t// Load entry module and return exports\n\t/******/ \treturn __webpack_require__(0);\n\t/******/ })\n\t/************************************************************************/\n\t/******/ ([\n\t/* 0 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar ng2_collapsable_component_1 = __webpack_require__(1);\n\t\texports.Ng2CollapsableComponent = ng2_collapsable_component_1.Ng2CollapsableComponent;\n\t\tvar ng2_collapsable_module_1 = __webpack_require__(3);\n\t\texports.Ng2CollapsableModule = ng2_collapsable_module_1.Ng2CollapsableModule;\n\t\n\t\n\t/***/ },\n\t/* 1 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(2);\n\t\tvar Ng2CollapsableComponent = (function () {\n\t\t    function Ng2CollapsableComponent(viewContainer) {\n\t\t        this.viewContainer = viewContainer;\n\t\t        this.selectedIndexClass = 'selected';\n\t\t        this.selectedContentsClass = 'selected';\n\t\t        this.el = this.viewContainer.element.nativeElement;\n\t\t    }\n\t\t    Ng2CollapsableComponent.prototype.ngAfterViewInit = function () {\n\t\t        var _this = this;\n\t\t        this.indexEls = [].slice.call(this.el.querySelectorAll('[index]'));\n\t\t        this.contentsEls = [].slice.call(this.el.querySelectorAll('[contents]'));\n\t\t        this.selectTab(this.selectedIndex);\n\t\t        this.indexEls.forEach(function (el) {\n\t\t            el.addEventListener('click', function () {\n\t\t                _this.selectTab(el.getAttribute('index'));\n\t\t            });\n\t\t        });\n\t\t    };\n\t\t    Ng2CollapsableComponent.prototype.selectTab = function (id) {\n\t\t        var _this = this;\n\t\t        id = id || this.indexEls[0].getAttribute('index');\n\t\t        this.indexEls.forEach(function (el) {\n\t\t            _this.removeClass(el, _this.selectedIndexClass);\n\t\t            if (el.getAttribute('index') == id) {\n\t\t                _this.addClass(el, _this.selectedIndexClass);\n\t\t            }\n\t\t        });\n\t\t        this.contentsEls.forEach(function (el) {\n\t\t            _this.removeClass(el, _this.selectedContentsClass);\n\t\t            if (el.getAttribute('contents') == id) {\n\t\t                _this.addClass(el, _this.selectedContentsClass);\n\t\t            }\n\t\t        });\n\t\t    };\n\t\t    Ng2CollapsableComponent.prototype.addClass = function (el, str) {\n\t\t        var classNames = (el.className || '').split(' ');\n\t\t        classNames.push(str);\n\t\t        el.className = classNames.join(' ');\n\t\t    };\n\t\t    Ng2CollapsableComponent.prototype.removeClass = function (el, str) {\n\t\t        el.className = (el.className || '').replace(new RegExp('[ ]*' + str), '');\n\t\t    };\n\t\t    return Ng2CollapsableComponent;\n\t\t}());\n\t\t__decorate([\n\t\t    core_1.Input('selected'),\n\t\t    __metadata(\"design:type\", String)\n\t\t], Ng2CollapsableComponent.prototype, \"selectedIndex\", void 0);\n\t\t__decorate([\n\t\t    core_1.Input('selected-index-class'),\n\t\t    __metadata(\"design:type\", String)\n\t\t], Ng2CollapsableComponent.prototype, \"selectedIndexClass\", void 0);\n\t\t__decorate([\n\t\t    core_1.Input('selected-contents-class'),\n\t\t    __metadata(\"design:type\", String)\n\t\t], Ng2CollapsableComponent.prototype, \"selectedContentsClass\", void 0);\n\t\tNg2CollapsableComponent = __decorate([\n\t\t    core_1.Component({\n\t\t        selector: 'ng2-collapsable, [ng2-collapsable]',\n\t\t        encapsulation: core_1.ViewEncapsulation.None,\n\t\t        template: \"<ng-content></ng-content>\",\n\t\t        styles: [\"\\n    [ng2-collapsable] [index] {\\n      display: block;\\n      cursor: pointer;\\n      position: relative;\\n      margin: 2px 0 0 0;\\n      padding: .5em .5em .5em .7em;\\n      border: 1px solid #cccccc;\\n      background: #ededed;\\n      font-weight: normal;\\n      border-radius: 2px; \\n      color: #2b2b2b;\\n    }\\n    [ng2-collapsable] [index].selected {\\n      border: 1px solid #003eff;\\n      background: #007fff;\\n      color: #ffffff;\\n      border-radius: 2px 2px 0 0;\\n    }\\n    [ng2-collapsable] [contents] {\\n      border-top: 0;\\n      background: #ffffff;\\n      color: #333333;\\n      padding: 0px;\\n      border-radius: 0 0 2px 2px;\\n      height: 0;\\n      border: 0;\\n      font-size: 0;\\n    }\\n    [ng2-collapsable] [contents].selected {\\n      height: 50px;\\n      padding: 10px;\\n      border: 1px solid #dddddd;\\n      transition: font-size 0.3s ease-in, height 0.3s ease-in;\\n      font-size: inherit;\\n    }\\n  \"],\n\t\t    }),\n\t\t    __metadata(\"design:paramtypes\", [core_1.ViewContainerRef])\n\t\t], Ng2CollapsableComponent);\n\t\texports.Ng2CollapsableComponent = Ng2CollapsableComponent;\n\t\n\t\n\t/***/ },\n\t/* 2 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\t\n\t/***/ },\n\t/* 3 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(2);\n\t\tvar common_1 = __webpack_require__(4);\n\t\tvar forms_1 = __webpack_require__(5);\n\t\tvar ng2_collapsable_component_1 = __webpack_require__(1);\n\t\tvar Ng2CollapsableModule = (function () {\n\t\t    function Ng2CollapsableModule() {\n\t\t    }\n\t\t    return Ng2CollapsableModule;\n\t\t}());\n\t\tNg2CollapsableModule = __decorate([\n\t\t    core_1.NgModule({\n\t\t        imports: [common_1.CommonModule, forms_1.FormsModule],\n\t\t        declarations: [ng2_collapsable_component_1.Ng2CollapsableComponent],\n\t\t        exports: [ng2_collapsable_component_1.Ng2CollapsableComponent]\n\t\t    }),\n\t\t    __metadata(\"design:paramtypes\", [])\n\t\t], Ng2CollapsableModule);\n\t\texports.Ng2CollapsableModule = Ng2CollapsableModule;\n\t\n\t\n\t/***/ },\n\t/* 4 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\t\n\t/***/ },\n\t/* 5 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\t\n\t/***/ }\n\t/******/ ])\n\t});\n\t;\n\t//# sourceMappingURL=ng2-collapsable.umd.js.map\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function webpackUniversalModuleDefinition(root, factory) {\n\t\tif(true)\n\t\t\tmodule.exports = factory(__webpack_require__(2), __webpack_require__(3), __webpack_require__(4));\n\t\telse if(typeof define === 'function' && define.amd)\n\t\t\tdefine([\"@angular/core\", \"@angular/forms\", \"@angular/platform-browser\"], factory);\n\t\telse if(typeof exports === 'object')\n\t\t\texports[\"ng2-infinite-list\"] = factory(require(\"@angular/core\"), require(\"@angular/forms\"), require(\"@angular/platform-browser\"));\n\t\telse\n\t\t\troot[\"ng2-infinite-list\"] = factory(root[\"@angular/core\"], root[\"@angular/forms\"], root[\"@angular/platform-browser\"]);\n\t})(this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__) {\n\treturn /******/ (function(modules) { // webpackBootstrap\n\t/******/ \t// The module cache\n\t/******/ \tvar installedModules = {};\n\t/******/\n\t/******/ \t// The require function\n\t/******/ \tfunction __webpack_require__(moduleId) {\n\t/******/\n\t/******/ \t\t// Check if module is in cache\n\t/******/ \t\tif(installedModules[moduleId])\n\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\t/******/\n\t/******/ \t\t// Create a new module (and put it into the cache)\n\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t/******/ \t\t\texports: {},\n\t/******/ \t\t\tid: moduleId,\n\t/******/ \t\t\tloaded: false\n\t/******/ \t\t};\n\t/******/\n\t/******/ \t\t// Execute the module function\n\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t/******/\n\t/******/ \t\t// Flag the module as loaded\n\t/******/ \t\tmodule.loaded = true;\n\t/******/\n\t/******/ \t\t// Return the exports of the module\n\t/******/ \t\treturn module.exports;\n\t/******/ \t}\n\t/******/\n\t/******/\n\t/******/ \t// expose the modules object (__webpack_modules__)\n\t/******/ \t__webpack_require__.m = modules;\n\t/******/\n\t/******/ \t// expose the module cache\n\t/******/ \t__webpack_require__.c = installedModules;\n\t/******/\n\t/******/ \t// __webpack_public_path__\n\t/******/ \t__webpack_require__.p = \"\";\n\t/******/\n\t/******/ \t// Load entry module and return exports\n\t/******/ \treturn __webpack_require__(0);\n\t/******/ })\n\t/************************************************************************/\n\t/******/ ([\n\t/* 0 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(1);\n\t\tvar forms_1 = __webpack_require__(2);\n\t\tvar platform_browser_1 = __webpack_require__(3);\n\t\tvar ng2_infinite_list_directive_1 = __webpack_require__(4);\n\t\texports.Ng2InfiniteListDirective = ng2_infinite_list_directive_1.Ng2InfiniteListDirective;\n\t\tvar Ng2InfiniteListModule = (function () {\n\t\t    function Ng2InfiniteListModule() {\n\t\t    }\n\t\t    return Ng2InfiniteListModule;\n\t\t}());\n\t\tNg2InfiniteListModule = __decorate([\n\t\t    core_1.NgModule({\n\t\t        imports: [platform_browser_1.BrowserModule, forms_1.FormsModule],\n\t\t        declarations: [ng2_infinite_list_directive_1.Ng2InfiniteListDirective],\n\t\t        exports: [ng2_infinite_list_directive_1.Ng2InfiniteListDirective]\n\t\t    }),\n\t\t    __metadata(\"design:paramtypes\", [])\n\t\t], Ng2InfiniteListModule);\n\t\texports.Ng2InfiniteListModule = Ng2InfiniteListModule;\n\t\n\t\n\t/***/ },\n\t/* 1 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\t\n\t/***/ },\n\t/* 2 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\t\n\t/***/ },\n\t/* 3 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\t\n\t/***/ },\n\t/* 4 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(1);\n\t\tvar ng2_utils_1 = __webpack_require__(5);\n\t\tvar Ng2InfiniteListDirective = (function () {\n\t\t    function Ng2InfiniteListDirective(el) {\n\t\t        var _this = this;\n\t\t        this.endVisible = new core_1.EventEmitter();\n\t\t        this.elementVisible = ng2_utils_1.elementVisible;\n\t\t        this.scrollListener = function () {\n\t\t            var visible = _this.elementVisible(_this.endEl, _this.el);\n\t\t            if (_this.horizontal && (visible.left || visible.right)) {\n\t\t                _this.endVisible.emit(true);\n\t\t            }\n\t\t            else if (!_this.horizontal && (visible.top || visible.bottom)) {\n\t\t                _this.endVisible.emit(true);\n\t\t            }\n\t\t        };\n\t\t        this.el = el.nativeElement;\n\t\t    }\n\t\t    // setup list of sections\n\t\t    Ng2InfiniteListDirective.prototype.ngOnInit = function () {\n\t\t        this.endEl = this.el.querySelector('[ng2-infinite-list-end]');\n\t\t        if (!this.endEl) {\n\t\t            throw \"Invalid 'ng2-infinite-list-end\";\n\t\t        }\n\t\t        this.scrollListener();\n\t\t        this.el.addEventListener('scroll', this.scrollListener);\n\t\t        window.addEventListener('resize', this.scrollListener);\n\t\t    };\n\t\t    return Ng2InfiniteListDirective;\n\t\t}());\n\t\t__decorate([\n\t\t    core_1.Input(),\n\t\t    __metadata(\"design:type\", Boolean)\n\t\t], Ng2InfiniteListDirective.prototype, \"horizontal\", void 0);\n\t\t__decorate([\n\t\t    core_1.Output(),\n\t\t    __metadata(\"design:type\", Object)\n\t\t], Ng2InfiniteListDirective.prototype, \"endVisible\", void 0);\n\t\tNg2InfiniteListDirective = __decorate([\n\t\t    core_1.Directive({ selector: '[ng2-infinite-list]' }),\n\t\t    __metadata(\"design:paramtypes\", [core_1.ElementRef])\n\t\t], Ng2InfiniteListDirective);\n\t\texports.Ng2InfiniteListDirective = Ng2InfiniteListDirective;\n\t\n\t\n\t/***/ },\n\t/* 5 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t(function webpackUniversalModuleDefinition(root, factory) {\n\t\t\tif(true)\n\t\t\t\tmodule.exports = factory(__webpack_require__(1));\n\t\t\telse if(typeof define === 'function' && define.amd)\n\t\t\t\tdefine([\"@angular/core\"], factory);\n\t\t\telse if(typeof exports === 'object')\n\t\t\t\texports[\"ng2-utils\"] = factory(require(\"@angular/core\"));\n\t\t\telse\n\t\t\t\troot[\"ng2-utils\"] = factory(root[\"@angular/core\"]);\n\t\t})(this, function(__WEBPACK_EXTERNAL_MODULE_1__) {\n\t\treturn /******/ (function(modules) { // webpackBootstrap\n\t\t/******/ \t// The module cache\n\t\t/******/ \tvar installedModules = {};\n\t\t/******/\n\t\t/******/ \t// The require function\n\t\t/******/ \tfunction __webpack_require__(moduleId) {\n\t\t/******/\n\t\t/******/ \t\t// Check if module is in cache\n\t\t/******/ \t\tif(installedModules[moduleId])\n\t\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\t\t/******/\n\t\t/******/ \t\t// Create a new module (and put it into the cache)\n\t\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t\t/******/ \t\t\texports: {},\n\t\t/******/ \t\t\tid: moduleId,\n\t\t/******/ \t\t\tloaded: false\n\t\t/******/ \t\t};\n\t\t/******/\n\t\t/******/ \t\t// Execute the module function\n\t\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t\t/******/\n\t\t/******/ \t\t// Flag the module as loaded\n\t\t/******/ \t\tmodule.loaded = true;\n\t\t/******/\n\t\t/******/ \t\t// Return the exports of the module\n\t\t/******/ \t\treturn module.exports;\n\t\t/******/ \t}\n\t\t/******/\n\t\t/******/\n\t\t/******/ \t// expose the modules object (__webpack_modules__)\n\t\t/******/ \t__webpack_require__.m = modules;\n\t\t/******/\n\t\t/******/ \t// expose the module cache\n\t\t/******/ \t__webpack_require__.c = installedModules;\n\t\t/******/\n\t\t/******/ \t// __webpack_public_path__\n\t\t/******/ \t__webpack_require__.p = \"\";\n\t\t/******/\n\t\t/******/ \t// Load entry module and return exports\n\t\t/******/ \treturn __webpack_require__(0);\n\t\t/******/ })\n\t\t/************************************************************************/\n\t\t/******/ ([\n\t\t/* 0 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t};\n\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t};\n\t\t\tvar core_1 = __webpack_require__(1);\n\t\t\tvar scroll_to_1 = __webpack_require__(2);\n\t\t\texports.scrollTo = scroll_to_1.scrollTo;\n\t\t\tvar element_visible_1 = __webpack_require__(3);\n\t\t\texports.elementVisible = element_visible_1.elementVisible;\n\t\t\tvar computed_style_1 = __webpack_require__(4);\n\t\t\texports.computedStyle = computed_style_1.computedStyle;\n\t\t\tvar outer_width_1 = __webpack_require__(5);\n\t\t\texports.outerWidth = outer_width_1.outerWidth;\n\t\t\tvar outer_height_1 = __webpack_require__(6);\n\t\t\texports.outerHeight = outer_height_1.outerHeight;\n\t\t\tvar Ng2UtilsModule = (function () {\n\t\t\t    function Ng2UtilsModule() {\n\t\t\t    }\n\t\t\t    Ng2UtilsModule = __decorate([\n\t\t\t        core_1.NgModule({\n\t\t\t            declarations: [\n\t\t\t                scroll_to_1.scrollTo,\n\t\t\t                element_visible_1.elementVisible,\n\t\t\t                computed_style_1.computedStyle,\n\t\t\t                outer_width_1.outerWidth,\n\t\t\t                outer_height_1.outerHeight\n\t\t\t            ],\n\t\t\t            exports: [\n\t\t\t                scroll_to_1.scrollTo,\n\t\t\t                element_visible_1.elementVisible,\n\t\t\t                computed_style_1.computedStyle,\n\t\t\t                outer_width_1.outerWidth,\n\t\t\t                outer_height_1.outerHeight\n\t\t\t            ]\n\t\t\t        }), \n\t\t\t        __metadata('design:paramtypes', [])\n\t\t\t    ], Ng2UtilsModule);\n\t\t\t    return Ng2UtilsModule;\n\t\t\t}());\n\t\t\texports.Ng2UtilsModule = Ng2UtilsModule;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 1 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\t\t\n\t\t/***/ },\n\t\t/* 2 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\t/**\n\t\t\t * scroll to the selector within the parent selector by scrolling 10 times within 500ms\n\t\t\t * @param selector\n\t\t\t * @param parentSelector\n\t\t\t */\n\t\t\tfunction scrollTo(selector, parentSelector) {\n\t\t\t    console.log('selector', selector, 'parentSelector', parentSelector);\n\t\t\t    var parentEl, targetEl;\n\t\t\t    targetEl = document.querySelector(selector);\n\t\t\t    if (!targetEl) {\n\t\t\t        throw \"Invalid selector \" + selector;\n\t\t\t    }\n\t\t\t    parentEl = document.querySelector(parentSelector);\n\t\t\t    if (!parentEl) {\n\t\t\t        throw \"Invalid parent selector \" + parentSelector;\n\t\t\t    }\n\t\t\t    var parentElStyle = window.getComputedStyle(parentEl);\n\t\t\t    parentEl = parentElStyle['overflow'] === 'auto' ? parentEl : document.body;\n\t\t\t    var currentScrollTop = parentEl.scrollTop;\n\t\t\t    var targetOffsetTop = targetEl.offsetTop;\n\t\t\t    if (parentEl === document.body) {\n\t\t\t        var bodyRect = document.body.getBoundingClientRect();\n\t\t\t        var targetRect = targetEl.getBoundingClientRect();\n\t\t\t        targetOffsetTop = targetRect.top - bodyRect.top;\n\t\t\t    }\n\t\t\t    var step = Math.ceil((targetOffsetTop - currentScrollTop) / 10);\n\t\t\t    (function loop(i) {\n\t\t\t        setTimeout(function main() {\n\t\t\t            parentEl.scrollTop += step;\n\t\t\t            i > 1 && loop(i - 1);\n\t\t\t        }, 50);\n\t\t\t    }(10));\n\t\t\t}\n\t\t\texports.scrollTo = scrollTo;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 3 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\t/**\n\t\t\t * Returns an element is visible within outer element\n\t\t\t * @param innerEl\n\t\t\t * @param outerEl\n\t\t\t * @param adjustment\n\t\t\t * @returns {{top: boolean, bottom: boolean, left: boolean, right: boolean}}\n\t\t\t */\n\t\t\tfunction elementVisible(innerEl, outerEl, adjustment) {\n\t\t\t    var innerRect = innerEl.getBoundingClientRect();\n\t\t\t    var bottomAdjustment = (adjustment && adjustment.bottom || 0);\n\t\t\t    if (outerEl === window) {\n\t\t\t        return {\n\t\t\t            top: innerRect.bottom - bottomAdjustment > window.innerHeight\n\t\t\t                && innerRect.top < window.innerHeight,\n\t\t\t            bottom: innerRect.bottom - bottomAdjustment > 0\n\t\t\t                && innerRect.bottom < window.innerHeight,\n\t\t\t            left: innerRect.right > window.innerWidth\n\t\t\t                && innerRect.left < window.innerWidth,\n\t\t\t            right: innerRect.right > 0\n\t\t\t                && innerRect.right < window.innerWidth\n\t\t\t        };\n\t\t\t    }\n\t\t\t    else {\n\t\t\t        var outerRect = outerEl.getBoundingClientRect();\n\t\t\t        var defaultView = (innerEl.ownerDocument || document).defaultView;\n\t\t\t        var computedStyle = defaultView.getComputedStyle(outerEl, null);\n\t\t\t        var outerRectBorderTopWidth = parseInt(computedStyle.getPropertyValue('border-top-width'), 10);\n\t\t\t        var outerRectBorderLeftWidth = parseInt(computedStyle.getPropertyValue('border-left-width'), 10);\n\t\t\t        /* top is visible or bottom is visible */\n\t\t\t        var topVisible = (innerRect.top >= outerRect.top\n\t\t\t            && innerRect.top < outerRect.bottom);\n\t\t\t        var bottomVisible = (innerRect.bottom > (outerRect.top + outerRectBorderTopWidth)\n\t\t\t            && innerRect.bottom < outerRect.bottom);\n\t\t\t        var leftVisible = (innerRect.left >= outerRect.left\n\t\t\t            && innerRect.left < outerRect.right);\n\t\t\t        var rightVisible = (innerRect.right > (outerRect.left + outerRectBorderLeftWidth)\n\t\t\t            && innerRect.right < outerRect.right);\n\t\t\t        return {\n\t\t\t            top: topVisible,\n\t\t\t            bottom: bottomVisible,\n\t\t\t            left: leftVisible,\n\t\t\t            right: rightVisible\n\t\t\t        };\n\t\t\t    }\n\t\t\t}\n\t\t\texports.elementVisible = elementVisible;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 4 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\t/**\n\t\t\t * returns coumputed style of given element\n\t\t\t * @param el\n\t\t\t * @param styleProp\n\t\t\t * @returns {any}\n\t\t\t */\n\t\t\tfunction computedStyle(el, styleProp) {\n\t\t\t    var value, defaultView = (el.ownerDocument || document).defaultView;\n\t\t\t    // W3C standard way:\n\t\t\t    if (defaultView && defaultView.getComputedStyle) {\n\t\t\t        // sanitize property name to css notation\n\t\t\t        // (hypen separated words eg. font-Size)\n\t\t\t        styleProp = styleProp.replace(/([A-Z])/g, \"-$1\").toLowerCase();\n\t\t\t        return defaultView.getComputedStyle(el, null).getPropertyValue(styleProp);\n\t\t\t    }\n\t\t\t    else if (el['currentStyle']) {\n\t\t\t        // sanitize property name to camelCase\n\t\t\t        styleProp = styleProp.replace(/\\-(\\w)/g, function (str, letter) {\n\t\t\t            return letter.toUpperCase();\n\t\t\t        });\n\t\t\t        value = el['currentStyle'][styleProp];\n\t\t\t        // convert other units to pixels on IE\n\t\t\t        if (/^\\d+(em|pt|%|ex)?$/i.test(value)) {\n\t\t\t            return (function (value) {\n\t\t\t                var oldLeft = el.style.left, oldRsLeft = el['runtimeStyle'].left;\n\t\t\t                el['runtimeStyle'].left = el['currentStyle'].left;\n\t\t\t                el.style.left = value || 0;\n\t\t\t                value = el.style['pixelLeft'] + \"px\";\n\t\t\t                el.style.left = oldLeft;\n\t\t\t                el['runtimeStyle'].left = oldRsLeft;\n\t\t\t                return value;\n\t\t\t            })(value);\n\t\t\t        }\n\t\t\t        return value;\n\t\t\t    }\n\t\t\t}\n\t\t\texports.computedStyle = computedStyle;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 5 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tfunction outerWidth(el) {\n\t\t\t    var style = getComputedStyle(el);\n\t\t\t    return el.offsetWidth +\n\t\t\t        parseInt(style.getPropertyValue('margin-left')) +\n\t\t\t        parseInt(style.getPropertyValue('margin-right'));\n\t\t\t}\n\t\t\texports.outerWidth = outerWidth;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 6 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tfunction outerHeight(el) {\n\t\t\t    var style = getComputedStyle(el);\n\t\t\t    return el.offsetHeight +\n\t\t\t        parseInt(style.getPropertyValue('margin-top')) +\n\t\t\t        parseInt(style.getPropertyValue('margin-bottom'));\n\t\t\t}\n\t\t\texports.outerHeight = outerHeight;\n\t\t\n\t\t\n\t\t/***/ }\n\t\t/******/ ])\n\t\t});\n\t\t;\n\t\t//# sourceMappingURL=ng2-utils.umd.js.map\n\t\n\t/***/ }\n\t/******/ ])\n\t});\n\t;\n\t//# sourceMappingURL=ng2-infinite-list.umd.js.map\n\n/***/ }\n/******/ ])\n});\n;\n//# sourceMappingURL=ng2-ui.umd.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-ui/dist/ng2-ui.umd.js\n// module id = 61\n// module chunks = 0","module.exports = \"<header class=\\\"masthead\\\">\\n  <div class=\\\"container bg-blue border-0 w-980\\\">\\n    <a href=\\\"/\\\" class=\\\"logo left text-white\\\">\\n      <img class=\\\"v-middle\\\" src=\\\"https://avatars1.githubusercontent.com/u/20460529?v=3&s=32\\\" />\\n      <span>NG2-UI</span>\\n    </a>\\n    <repo-info class=\\\"masthead-nav right\\\" numbers-section=\\\"1\\\"></repo-info>\\n  </div>\\n</header>\\n<div class=\\\"main container\\\">\\n  <div class=\\\"columns\\\">\\n    <div class=\\\"drawer one-fourth column\\\">\\n      <drawer-component class=\\\"drawer shadow-1\\\"></drawer-component>\\n      <repo-info contributors-section=\\\"1\\\"></repo-info>\\n    </div>\\n    <div class=\\\"three-fourths column markdown-body\\\">\\n      <router-outlet></router-outlet>\\n    </div>\\n  </div>\\n  <footer class=\\\"footer\\\">\\n    <div>\\n      Copyright Allen Kim 2016, 2017.<br>\\n      Created and maintained by Allen Kim.\\n    </div>\\n  </footer>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/app.html\n// module id = 70\n// module chunks = 0","import {Component} from \"@angular/core\";\n\n@Component({\n  selector: 'drawer-component',\n  template: `\n    <ul class=\"menu\">\n      <li class=\"menu-item\" routerLinkActive=\"selected\"><a routerLink=\"/getting-started\">Getting Started</a>\n      <li class=\"menu-item components\">\n        <div class=\"pb-3\">Components</div>\n        <ul class=\"menu \">\n          <li class=\"menu-item\" routerLinkActive=\"selected\"><a routerLink=\"/auto-complete\">Auto Complete</a>\n          <li class=\"menu-item\" routerLinkActive=\"selected\"><a routerLink=\"/datetime-picker\">Datetime Picker</a>\n          <li class=\"menu-item\" routerLinkActive=\"selected\"><a routerLink=\"/google-map\">Google Map</a>\n          <li class=\"menu-item\" routerLinkActive=\"selected\"><a routerLink=\"/infinite-list\">Infinite List</a>\n          <li class=\"menu-item\" routerLinkActive=\"selected\"><a routerLink=\"/tab\">Tab</a>\n          <li class=\"menu-item\" routerLinkActive=\"selected\"><a routerLink=\"/accordion\">Accordion </a>\n          <li class=\"menu-item\" routerLinkActive=\"selected\"><a routerLink=\"/tooltip\">Tooltip</a>\n          <li class=\"menu-item\" routerLinkActive=\"selected\"><a routerLink=\"/menu\">Menu</a>\n          <li class=\"menu-item\" routerLinkActive=\"selected\"><a routerLink=\"/parallax\">Parallax Scroll</a>\n          <li class=\"menu-item\" routerLinkActive=\"selected\"><a routerLink=\"/overlay\">Overlay</a>\n          <li class=\"menu-item\" routerLinkActive=\"selected\"><a routerLink=\"/popup\">Popup</a>\n          <li class=\"menu-item\" routerLinkActive=\"selected\"><a routerLink=\"/scrollable\">Scrollable</a>\n          <li class=\"menu-item\" routerLinkActive=\"selected\"><a routerLink=\"/sortable\">Sortable</a>\n          <li class=\"menu-item\" routerLinkActive=\"selected\"><a routerLink=\"/sticky\">Sticky Section</a>\n        </ul>\n      <li class=\"menu-item\"><a href=\"https://github.com/ng2-ui/ng2-ui/issues\">Help</a>\n    </ul>\n  `\n})\nexport class DrawerComponent {\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/strip-loader/lib?strip[]=debug,strip[]=console.log!./app/drawer.component.ts","import {Component, Input} from \"@angular/core\";\nimport {Router, NavigationStart} from \"@angular/router\";\nimport {Http, Response} from \"@angular/http\";\nimport {Observable} from \"rxjs\";\n\nimport {HttpCache} from './http-cache';\n\n@Component({\n  selector: 'repo-info',\n  template: `\n    <div *ngIf=\"numbersSection\">\n      <div *ngIf=\"currentUrl && currentRepo\">\n        <span class=\"numbers d-inline-block\">\n          <button class=\"btn btn-sm\">\n            <a href=\"{{currentRepo.html_url}}\">\n              <span class=\"octicon octicon-repo\"></span>\n              {{currentUrl.replace('/','')}}\n            </a>\n          </button>\n        </span>\n        \n        <span class=\"numbers d-inline-block\">\n          <button class=\"btn btn-sm btn-with-count\">\n            <a href=\"{{currentRepo.html_url}}\">\n              <span class=\"octicon octicon-star\"></span>\n              Star           \n            </a>\n          </button>\n          <a class=\"social-count\" \n            href=\"{{currentRepo.html_url}}/stargazers\">\n            {{currentRepo.stargazers_count}}\n          </a>\n        </span>\n        \n        <span class=\"numbers d-inline-block\">\n          <button class=\"btn btn-sm\">\n            <a href=\"{{currentRepo.html_url}}/issues\">\n              <span class=\"octicon octicon-issue-opened\"></span>\n              {{currentRepo.open_issues}}\n              Issues\n            </a>\n          </button>\n        </span>\n      </div>\n    </div>\n    \n    <div *ngIf=\"contributorsSection\"\n      class=\"container p-3 border\">\n      <h3>Contributors</h3> \n      <ul *ngIf=\"contributors\">\n        <li class=\"contributor\" *ngFor=\"let user of contributors\">\n          <a href=\"{{user.html_url}}\">\n           <img src=\"{{user.avatar_url}}\" height=\"64\" /> <br/>\n           <div class=\"name\">{{user.login}}</div>\n          </a>\n        </li>\n        <li class=\"contributor\">\n          <a href=\"{{currentRepo.html_url}}\">\n           <div class=\"you\">You</div><br/>\n           <div class=\"name\">Your Name</div>\n          </a>\n        </li>\n      </ul>\n    </div>\n  `\n})\nexport class RepoInfoComponent {\n  @Input('contributors-section') contributorsSection: string;\n  @Input('numbers-section') numbersSection: string;\n\n  currentUrl: string;\n  repositories: any[];\n  currentRepo: any;\n  contributors: any;\n\n  constructor(private router: Router, private httpCache: HttpCache) {\n    router.events.subscribe(event => {\n      if(event instanceof NavigationStart) { //..End, ..Cancel, ..Error, etc\n        this.currentUrl = event.url;\n\n        if (this.repositories) {\n          this.update();\n        }\n      }\n    });\n  }\n\n  ngOnInit() {\n    this.httpCache.get('https://api.github.com/users/ng2-ui/repos')\n      .subscribe(resp => {\n\n        this.repositories = <any>resp;\n        this.update();\n      })\n  }\n\n  update(): void {\n    let currentRepoUrl = this.getCurrentRepoUrl();\n\n\n    for (var i = 0; i < this.repositories.length; i++) {\n      let repo = this.repositories[i];\n      if (repo.url === currentRepoUrl) {\n        this.currentRepo = repo;\n\n        break;\n      }\n    }\n\n    this.getContributors(currentRepoUrl).subscribe(resp => {\n\n      this.contributors = resp;\n    });\n  }\n\n  getContributors(repoUrl: string): Observable<Response>{\n    return this.httpCache.get(repoUrl + '/contributors');\n  }\n\n  getCurrentRepoUrl() {\n    switch(this.currentUrl) {\n      case '/auto-complete':   return 'https://api.github.com/repos/ng2-ui/ng2-auto-complete';\n      case '/datetime-picker': return 'https://api.github.com/repos/ng2-ui/ng2-datetime-picker';\n      case '/google-map':      return 'https://api.github.com/repos/ng2-ui/ng2-map';\n      case '/infinite-list':   return 'https://api.github.com/repos/ng2-ui/ng2-infinite-list';\n      case '/tab':             return 'https://api.github.com/repos/ng2-ui/ng2-tab';\n      case '/accordion':       return 'https://api.github.com/repos/ng2-ui/ng2-collapsable';\n      case '/tooltip':         return 'https://api.github.com/repos/ng2-ui/ng2-tooltip-overlay';\n      case '/menu':            return 'https://api.github.com/repos/ng2-ui/ng2-menu';\n      case '/parallax':        return 'https://api.github.com/repos/ng2-ui/ng2-parallax-scroll';\n      case '/popup':           return 'https://api.github.com/repos/ng2-ui/ng2-popup';\n      case '/scrollable':      return 'https://api.github.com/repos/ng2-ui/ng2-scrollable';\n      case '/sortable':        return 'https://api.github.com/repos/ng2-ui/ng2-ui-sortable';\n      case '/sticky':          return 'https://api.github.com/repos/ng2-ui/ng2-sticky';\n      default: return 'https://api.github.com/repos/ng2-ui/ng2-ui';\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/strip-loader/lib?strip[]=debug,strip[]=console.log!./app/repo-info.component.ts","import {Injectable} from \"@angular/core\";\nimport {Observable} from \"rxjs/Rx\";\nimport {Http} from \"@angular/http\";\nimport {Ng2Storage} from \"./ng2-storage\";\n\n@Injectable()\nexport class HttpCache {\n  constructor(\n    private http: Http,\n    private storage: Ng2Storage\n  ) {}\n\n  get(url: string): Observable<any> {\n    let cached: any;\n    if (cached = this.storage.getItem(url)) {\n      return Observable.of(cached);\n    } else {\n      return this.http.get(url)\n        .map(resp => {\n\n          this.storage.setItem(url, resp.text());\n          return resp.json();\n        });\n    }\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/strip-loader/lib?strip[]=debug,strip[]=console.log!./app/http-cache.ts","import {Injectable} from \"@angular/core\";\n\nclass MemoryStorage {\n  data: any = {};\n  get length(): number                   { return Object.keys(this.data).length; }\n  getItem(key: string)                   { return this.data[key]; }\n  setItem(key: string, value: any): void { this.data[key] = value; }\n  removeItem(key: string): void          { delete this.data[key]; }\n  clear(): void                          { this.data = {} }\n  key(num: number): string               { return Object.keys(this.data)[num]; }\n}\n\n@Injectable()\nexport class Ng2Storage {\n  preference: any = 'sessionStorage';\n  storage: any;\n\n  constructor() {\n    // preference && (this.preference = preference);   //'localStorage' or 'sessionStorage'\n\n    if (this.preference == 'localStorage' && this.hasStorage('localStorage')) {\n      this.storage = window.localStorage\n    } else if(this.preference == 'sessionStorage' && this.hasStorage('sessionStorage')) {\n      this.storage = window.sessionStorage\n    } else {\n      this.storage = new MemoryStorage()\n    }\n  }\n\n  get length(): number                   { return this.storage.length; }\n  getItem(key: any)                   {\n    let strValue = this.storage.getItem(key);\n    try {\n      return JSON.parse(strValue);\n    } catch(e) {\n      return strValue;\n    }\n  }\n  setItem(key: string, value: any): void {\n    let strValue = typeof value === 'object' ? JSON.stringify(value) : value.toString();\n    this.storage.setItem(key, strValue);\n  }\n  removeItem(key: string): void          { this.storage.removeItem(key); }\n  clear(): void                          { this.storage.clear()  }\n\n  private hasStorage(name: string) {\n    try {\n      window[name].setItem('test', '1');\n      window[name].removeItem('test');\n      return true\n    } catch (e) {\n      return false\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/strip-loader/lib?strip[]=debug,strip[]=console.log!./app/ng2-storage.ts","import { Routes, RouterModule } from '@angular/router';\nimport { ModuleWithProviders } from '@angular/core';\n\nimport { ComponentsRoutes }            from \"./ng2-ui-components/components.route\";\nimport { GettingStartedComponent }     from \"./getting-started.component\";\n\n\nexport const routes: Routes = [\n  { path: 'getting-started', component: GettingStartedComponent},\n  ...ComponentsRoutes,\n  { path: '',  redirectTo: '/getting-started', pathMatch: 'full'}\n];\n\nexport const APP_ROUTER_PROVIDERS: ModuleWithProviders = RouterModule.forRoot(routes);\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/strip-loader/lib?strip[]=debug,strip[]=console.log!./app/app.routes.ts","import { Routes } from '@angular/router';\n\nimport {AccordionComponent} from \"./accordion.component\";\nimport {DatetimePickerComponent} from \"./datetime-picker.component\";\nimport {GoogleMapComponent} from \"./google-map.component\";\nimport {InfiniteListComponent} from \"./infinite-list.component\";\nimport {OverlayComponent} from \"./overlay.component\";\nimport {ParallaxScrollComponent} from \"./parallax-scroll.component\";\nimport {PopupComponent} from \"./popup.component\";\nimport {ScrollableComponent} from \"./scrollable.component\";\nimport {StickyComponent} from \"./sticky.component\";\nimport {TabComponent} from \"./tab.component\";\nimport {TooltipComponent} from \"./tooltip.component\";\nimport {AutoCompleteComponent} from \"./auto-complete.component\";\nimport {MenuComponent} from \"./menu.component\";\nimport {SortableComponent} from \"./sortable.component\";\n\nexport const ComponentsRoutes: Routes = [\n  {path: 'auto-complete', component: AutoCompleteComponent},\n  {path: 'datetime-picker', component: DatetimePickerComponent},\n  {path: 'google-map', component: GoogleMapComponent},\n  {path: 'infinite-list', component: InfiniteListComponent},\n  {path: 'tab', component: TabComponent},\n  {path: 'accordion', component: AccordionComponent},\n  {path: 'tooltip', component: TooltipComponent},\n  {path: 'menu', component: MenuComponent},\n  {path: 'overlay', component: OverlayComponent},\n  {path: 'parallax', component: ParallaxScrollComponent},\n  {path: 'popup', component: PopupComponent},\n  {path: 'scrollable', component: ScrollableComponent},\n  {path: 'sticky', component: StickyComponent},\n  {path: 'sortable', component: SortableComponent}\n];\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/strip-loader/lib?strip[]=debug,strip[]=console.log!./app/ng2-ui-components/components.route.ts","import { Component } from '@angular/core';\n\nlet code: any = {};\ncode.html= `\n  <div ng2-collapsable\n    selected=\"js\"\n    selected-index-class=\"selected\"\n    selected-contents-class=\"selected\">\n    <div index=\"html\">HTML</div>\n    <div contents=\"html\">HTML {{foo}}</div>\n    \n    <div index=\"js\">Javascript</div>\n    <div contents=\"js\">Javascript {{bar}}</div>\n    \n    <div index=\"css\">Css</div>\n    <div contents=\"css\">Style Sheet</div>\n  </div>`;\ncode.js = `\n  import { Component } from '@angular/core';\n\n  @Component({\n    templateUr: 'app.html'\n  })\n  export class AppComponent {\n    foo: any = 'foo';\n    bar: any = 'bar';\n  }`;\n@Component({\n  template: `\n    <div class=\"container page-title\">\n      <h1>Accordion</h1>\n    </div>\n    <div class=\"container\">\n      ${code.html}\n      <div class=\"spacer x2\"></div>\n      <div ng2-tab> \n        <div class=\"tabs\">\n          <div index=\"html\">HTML</div>\n          <div index=\"js\">Javascript</div>\n        </div>\n        <div class=\"tab-contents\">\n          <div contents=\"html\">\n            <pre>{{code.html | htmlCode}}</pre>\n          </div>\n          <div contents=\"js\">\n            <pre>{{code.js | htmlCode }}</pre>\n          </div>\n        </div>\n      </div>\n    </div>`\n})\nexport class AccordionComponent {\n  foo: any = 'foo';\n  bar: any = 'bar';\n  code: string = code;\n\n  ngAfterViewInit(): void {\n    window.scroll(0,0);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/strip-loader/lib?strip[]=debug,strip[]=console.log!./app/ng2-ui-components/accordion.component.ts","import { Component } from '@angular/core';\n\nlet code: any = {title:[], html: [], js: []};\ncode.title[0] = \"Date/Time Both\"\ncode.html[0] =`\n  <input\n    [(ngModel)]=\"date1\" \n    ng2-datetime-picker />\n  date2: {{date2}}\n`;\ncode.js[0] =`\n  import { Component } from '@angular/core';\n  @Component({\n    selector: 'my-app',\n    template: require('./myapp.html'),\n  })\n  export classAppComponent {\n    date1 = null;\n  }\n`;\n\ncode.title[1] = \"Min Date, Max Date, and Disabled Dates\"\ncode.html[1] =`\n  <input\n    [(ngModel)]=\"date2\" \n    ng2-datetime-picker\n    [disabled-dates]=\"date2DisabledDates\"\n    [min-date]=\"date2MinDate\"\n    [max-date]=\"date2MaxDate\"\n    date-only=\"true\" />\n  date2: {{date2}}\n`;\ncode.js[1] =`\n  import { Component } from '@angular/core';\n  @Component({\n    selector: 'my-app',\n    template: require('./myapp.html'),\n  })\n  export classAppComponent {\n    date2 = new Date(2017, 0, 28);\n    date2DisabledDates = [new Date(2017, 0, 10), new Date(2017, 0, 20)];\n    date2MinDate = new Date(2017, 0, 1);\n    date2MaxDate = new Date(2017, 11, 31);\n  }\n`;\n\n//timeonly\ncode.title[2] = \"Time Only\";\ncode.html[2] =`\n  <input [(ngModel)]=\"date3\"\n    ng2-datetime-picker \n    date-format=\"DD-MM-YYYY hh:mm\"\n    time-only=\"true\"\n    minute-step=\"5\"\n    close-on-select=\"false\" />`;\ncode.js[2] =`\n  import { Component } from '@angular/core';\n  @Component({\n    selector: 'my-app',\n    template: require('./myapp.html'),\n  })\n  export classAppComponent {\n    date3 = new Date(\"Thu Jan 01 2015 00:00:00 GMT-0500 (EST)\");\n  }\n`;\n\n@Component({\n  template: `\n    <div class=\"container page-title\">\n      <h1>Datetime Picker</h1>\n    </div>\n    \n    <div class=\"container\">\n      <p>\n        Datetime picker converts input field into datetime selector by simply adding \"ng2-datetime-picker\" as an attribute.\n      </p> \n    \n      <h2> {{code.title[0]}} </h2>\n      <div class=\"spacer x3\"></div>\n      <div class=\"container round-border\">\n        <p>${code.html[0]}\n        <ng2-tab>\n          <div class=\"tabs\">\n             <div index=\"html\">HTML</div>\n             <div index=\"js\">Javascript</div>\n           </div> \n           <div class=\"tab-contents\">\n             <div contents=\"html\">\n               <pre><code>{{code.html[0]}}</code></pre>\n             </div>\n             <div contents=\"js\">\n               <pre><code>{{code.js[0]}}</code></pre>\n             </div>\n           </div>\n        </ng2-tab>\n      </div>\n      <div class=\"spacer x4\"></div>\n      \n      <h2> {{code.title[1]}} </h2>\n      <div class=\"spacer x3\"></div>\n      <div class=\"container round-border\">\n        <p>${code.html[1]}\n        <ng2-tab>\n          <div class=\"tabs\">\n             <div index=\"html\">HTML</div>\n             <div index=\"js\">Javascript</div>\n           </div> \n           <div class=\"tab-contents\">\n             <div contents=\"html\">\n               <pre><code>{{code.html[1]}}</code></pre>\n             </div>\n             <div contents=\"js\">\n               <pre><code>{{code.js[1]}}</code></pre>\n             </div>\n           </div>\n        </ng2-tab>\n      </div>\n      <div class=\"spacer x4\"></div>\n        \n      <h2> {{code.title[2]}} </h2>\n      <div class=\"spacer x3\"></div>\n      <div class=\"container round-border\">\n        <p>${code.html[2]}\n        <ng2-tab>\n          <div class=\"tabs\">\n             <div index=\"html\">HTML</div>\n             <div index=\"js\">Javascript</div>\n           </div> \n           <div class=\"tab-contents\">\n             <div contents=\"html\">\n               <pre><code>{{code.html[2]}}</code></pre>\n             </div>\n             <div contents=\"js\">\n               <pre><code>{{code.js[2]}}</code></pre>\n             </div>\n           </div>\n        </ng2-tab>\n      </div>\n      <div class=\"spacer x4\"></div>\n        \n    </div>`\n})\nexport class DatetimePickerComponent {\n  code: any = code;\n\n  date1 = null;\n  date1DefaultValue = new Date(2014, 11, 31, 21, 45, 59);\n\n  date2 = new Date(2017, 0, 28);\n  date2DisabledDates = [new Date(2017, 0, 10), new Date(2017, 0, 20)];\n  date2MinDate = new Date(2017, 0, 1);\n  date2MaxDate = new Date(2017, 11, 31);\n\n  date3 = new Date(\"Thu Jan 01 2015 00:00:00 GMT-0500 (EST)\");\n\n  ngAfterViewInit(): void {\n    window.scroll(0,0);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/strip-loader/lib?strip[]=debug,strip[]=console.log!./app/ng2-ui-components/datetime-picker.component.ts","import { Component } from '@angular/core';\n\nlet code: any = {title:[], html: [], js: []};\ncode.title[0] = \"Map With Dynamic Markers\";\ncode.html[0] =`\n  <ng2-map zoom=\"13\" center=\"Brampton, Canada\" scrollwheel=\"false\">\n    <marker *ngFor=\"let pos of positions\" [position]=\"pos\"></marker>\n  </ng2-map>\n`;\ncode.js[0] =`\n  import { Component } from '@angular/core';\n\n  @Component({\n    template: require('./app.html')\n  })\n  class AppCompoment {\n    public positions=[];\n    \n    showRandomMarkers() {\n      let randomLat: number, randomLng: number;\n\n      this.positions = [];\n      for (let i=0; i<9; i++) {\n        randomLat = Math.random() * (43.7399 - 43.7300) + 43.7300;\n        randomLng = Math.random() * (-79.7600 - -79.7699) + -79.7699;\n        this.positions.push([randomLat, randomLng]);\n      }\n    }\n  }\n`;\n\ncode.title[1] = \"Simple Map\";\ncode.html[1] =`\n  <ng2-map center=\"Brampton, Canada\" scrollwheel=\"false\">\n  </ng2-map>\n`;\ncode.js[1] =`\n  import { Component } from '@angular/core';\n\n  @Component({\n    template: require('./app.html')\n  })\n  class AppCompoment {}\n`;\n\ncode.title[2] = \"Simple Marker\";\ncode.html[2] =`\n  <ng2-map center=\"Brampton, Canada\" >\n    <marker position=\"Brampton, Canada\"\n      draggable=\"true\"></marker>\n  </ng2-map>\n`;\ncode.js[2] =`\n  import { Component } from '@angular/core';\n\n  @Component({\n    template: require('./app.html')\n  })\n  class AppCompoment {}\n`;\n\ncode.title[3] = \"Simple InfoWindow\";\ncode.html[3] =`\n  <ng2-map center=\"Brampton, Canada\">\n    <marker position=\"Brampton, Canada\" \n      draggable=\"true\" \n      (click)=\"clicked($event)\">\n    </marker>\n    <info-window id=\"iw\">\n      lat: [[lat]], lng: [[lng]]\n    </info-window>\n  </ng2-map>\n`;\ncode.js[3] =`\n  import { Component } from '@angular/core';\n\n  @Component({\n    template: require('./app.html')\n  })\n  class AppCompoment {\n    clicked(event) {\n      let marker = event.target;\n      marker.ng2MapComponent.openInfoWindow('iw', marker, {\n        lat: marker.getPosition().lat(), \n        lng: marker.getPosition().lng(),\n      });\n    }\n  }\n`;\n\n@Component({\n  template: `\n    <div class=\"container page-title\" xmlns=\"http://www.w3.org/1999/html\">\n      <h1>Google Map</h1>\n    </div>\n    <div class=\"container\">\n    \n      <h2> {{code.title[0]}} </h2>\n      <div class=\"spacer x3\"></div>\n      <div class=\"container round-border\">\n        <!--<p>${code.html[0]}-->\n        <ng2-tab>\n          <div class=\"tabs\">\n             <div index=\"html\">HTML</div>\n             <div index=\"js\">Javascript</div>\n           </div> \n           <div class=\"tab-contents\">\n             <div contents=\"html\">\n               <pre><code>{{code.html[0]}}</code></pre>\n             </div>\n             <div contents=\"js\">\n               <pre><code>{{code.js[0]}}</code></pre>\n             </div>\n           </div>\n        </ng2-tab>\n      </div>\n      <div class=\"spacer x4\"></div>\n     \n      <h2> {{code.title[1]}} </h2>\n      <div class=\"spacer x3\"></div>\n      <div class=\"container round-border\">\n        <!--<p>${code.html[1]}-->\n        <ng2-tab>\n          <div class=\"tabs\">\n             <div index=\"html\">HTML</div>\n             <div index=\"js\">Javascript</div>\n           </div> \n           <div class=\"tab-contents\">\n             <div contents=\"html\">\n               <pre><code>{{code.html[1]}}</code></pre>\n             </div>\n             <div contents=\"js\">\n               <pre><code>{{code.js[1]}}</code></pre>\n             </div>\n           </div>\n        </ng2-tab>\n      </div>\n      <div class=\"spacer x4\"></div>\n     \n      <h2> {{code.title[2]}} </h2>\n      <div class=\"spacer x3\"></div>\n      <div class=\"container round-border\">\n        <!--<p>${code.html[2]}-->\n        <ng2-tab>\n          <div class=\"tabs\">\n             <div index=\"html\">HTML</div>\n             <div index=\"js\">Javascript</div>\n           </div> \n           <div class=\"tab-contents\">\n             <div contents=\"html\">\n               <pre><code>{{code.html[2]}}</code></pre>\n             </div>\n             <div contents=\"js\">\n               <pre><code>{{code.js[2]}}</code></pre>\n             </div>\n           </div>\n        </ng2-tab>\n      </div>\n      <div class=\"spacer x4\"></div>\n     \n      <h2> {{code.title[3]}} </h2>\n      <div class=\"spacer x3\"></div>\n      <div class=\"container round-border\">\n        <p>${code.html[3]}\n        <ng2-tab>\n          <div class=\"tabs\">\n             <div index=\"html\">HTML</div>\n             <div index=\"js\">Javascript</div>\n           </div> \n           <div class=\"tab-contents\">\n             <div contents=\"html\">\n               <pre><code>{{code.html[3]}}</code></pre>\n             </div>\n             <div contents=\"js\">\n               <pre><code>{{code.js[3]}}</code></pre>\n             </div>\n           </div>\n        </ng2-tab>\n      </div>\n      <div class=\"spacer x4\"></div>\n    </div>`\n})\nexport class GoogleMapComponent {\n  positions: any[] =[];\n  code: any = code;\n\n  ngAfterViewInit(): void {\n    window.scroll(0,0);\n  }\n\n  clicked(event) {\n    let marker = event.target;\n    marker.ng2MapComponent.openInfoWindow('iw', marker, {\n      lat: marker.getPosition().lat(),\n      lng: marker.getPosition().lng(),\n    });\n  }\n\n  showRandomMarkers() {\n    let randomLat: number, randomLng: number;\n\n    this.positions = [];\n    for (let i=0; i<9; i++) {\n      randomLat = Math.random() * (43.7399 - 43.7300) + 43.7300;\n      randomLng = Math.random() * (-79.7600 - -79.7699) + -79.7699;\n      this.positions.push([randomLat, randomLng]);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/strip-loader/lib?strip[]=debug,strip[]=console.log!./app/ng2-ui-components/google-map.component.ts","import { Component } from '@angular/core';\n\nlet code: any = {title:[], html: [], js: []};\ncode.title[0] = \"Vertically\";\ncode.html[0] =`\n  <ul ng2-infinite-list  class=\"infinite-list\"\n      (endVisible)=\"loadMore(set1)\">\n    <li *ngFor=\"let item of set1.list\">{{item+1}}</li>\n    <div ng2-infinite-list-end>\n      <div *ngIf=\"set1.loadingInProgress\">Loading</div>\n      <div *ngIf=\"set1.endOfList\">End Of List</div>\n    </div>\n  </ul>\n  loading in progress : {{set1.loadingInProgress}};\n`;\ncode.js[0] =`\n  import { Component } from '@angular/core';\n\n  @Component({\n    templates: 'app.tpl.html'\n  })  \n  export class AppComponent {\n\n    set1: any = {\n      limit: 10, offset: 0, endOfList: false, loadingInProgress: false, list: []\n    };\n\n    loadMore(data: any): void {\n      if (!data.loadingInProgress) {\n        if (data.offset > 99) {    // detect the end of list\n          data.endOfList = true;\n        } else {\n          setTimeout(() => data.loadingInProgress = true);\n          setTimeout(() => {      // mimics http call delay\n            let max = data.offset + data.limit;\n            for (let i = data.offset; i < max; i++) {\n              data.list.push(i);\n            }\n            data.offset = max;\n            data.loadingInProgress = false;\n          }, 1000);\n        }\n      }\n    }\n  }\n`;\n\ncode.title[1] = \"Horizontally\";\ncode.html[1] =`\n  <div ng2-infinite-list horizontal=\"true\"\n       class=\"infinite-list horizontal\"\n       (endVisible)=\"loadMore(set2)\">\n    <div *ngFor=\"let item of set2.list\">{{item+1}}</div>\n      <div ng2-infinite-list-end>\n      &nbsp;\n      <div *ngIf=\"set2.loadingInProgress\">Loading</div>\n      <div *ngIf=\"set2.endOfList\">End Of List</div>\n    </div>\n  </div>\n  loading in progress : {{set2.loadingInProgress}}      \n`;\ncode.js[1] =`\n  import { Component } from '@angular/core';\n\n  @Component({\n    templates: 'app.tpl.html'\n  })  \n  export class AppComponent {\n\n    set2: any = {\n      limit: 10, offset: 0, endOfList: false, loadingInProgress: false, list: []\n    };\n\n    loadMore(data: any): void {\n      if (!data.loadingInProgress) {\n        if (data.offset > 99) {    // detect the end of list\n          data.endOfList = true;\n        } else {\n          setTimeout(() => data.loadingInProgress = true);\n          setTimeout(() => {      // mimics http call delay\n            let max = data.offset + data.limit;\n            for (let i = data.offset; i < max; i++) {\n              data.list.push(i);\n            }\n            data.offset = max;\n            data.loadingInProgress = false;\n          }, 1000);\n        }\n      }\n    }\n  }\n`;\n\n@Component({\n  template: `\n    <div class=\"container page-title\" xmlns=\"http://www.w3.org/1999/html\">\n      <h1>Infinite List</h1>\n    </div>\n    <div class=\"container\">\n    \n      <h2> {{code.title[0]}} </h2>\n      <div class=\"spacer x3\"></div>\n      <div class=\"container round-border\">\n        <p>${code.html[0]}\n        <ng2-tab>\n          <div class=\"tabs\">\n             <div index=\"html\">HTML</div>\n             <div index=\"js\">Javascript</div>\n           </div> \n           <div class=\"tab-contents\">\n             <div contents=\"html\">\n               <pre><code>{{code.html[0]}}</code></pre>\n             </div>\n             <div contents=\"js\">\n               <pre><code>{{code.js[0]}}</code></pre>\n             </div>\n           </div>\n        </ng2-tab>\n      </div>\n      <div class=\"spacer x4\"></div>\n      \n      <h2> {{code.title[1]}} </h2>\n      <div class=\"spacer x3\"></div>\n      <div class=\"container round-border\">\n        <p>${code.html[1]}\n        <ng2-tab>\n          <div class=\"tabs\">\n             <div index=\"html\">HTML</div>\n             <div index=\"js\">Javascript</div>\n           </div> \n           <div class=\"tab-contents\">\n             <div contents=\"html\">\n               <pre><code>{{code.html[1]}}</code></pre>\n             </div>\n             <div contents=\"js\">\n               <pre><code>{{code.js[1]}}</code></pre>\n             </div>\n           </div>\n        </ng2-tab>\n      </div>\n      <div class=\"spacer x4\"></div>\n      \n   </div> \n`,\n  styles: [`\n    .infinite-list {\n      overflow: auto;\n      border: 5px solid #999;\n      height: 200px;\n      position: relative;\n    }\n    .infinite-list > * {\n      min-height: 20px\n    }\n\n    .infinite-list > *:nth-child(odd) {\n      background-color: #eee\n    }\n\n    .infinite-list.horizontal {\n      height: 120px;\n      white-space: nowrap;\n      overflow-y: hidden;\n    }\n    .infinite-list.horizontal > div {\n      border: 1px solid #666;\n      width: 50px;\n      height: 80px;\n      display: inline-block;\n      margin: 10px;\n      vertical-align: top;\n    }`]\n})\nexport class InfiniteListComponent {\n  code: any = code;\n\n  set1: any = {\n    limit: 10, offset: 0, endOfList: false, loadingInProgress: false, list: []\n  };\n\n  set2: any = {\n    limit: 10, offset: 0, endOfList: false, loadingInProgress: false, list: []\n  };\n\n  ngAfterViewInit(): void {\n    window.scroll(0,0);\n  }\n\n  loadMore(data: any): void {\n    if (!data.loadingInProgress) {\n      if (data.offset > 99) {    // detect the end of list\n        data.endOfList = true;\n      } else {\n        setTimeout(() => data.loadingInProgress = true);\n        setTimeout(() => {      // mimics http call delay\n          let max = data.offset + data.limit;\n          for (let i = data.offset; i < max; i++) {\n            data.list.push(i);\n          }\n          data.offset = max;\n          data.loadingInProgress = false;\n        }, 1000);\n      }\n    }\n  }\n}\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/strip-loader/lib?strip[]=debug,strip[]=console.log!./app/ng2-ui-components/infinite-list.component.ts","import { Component } from '@angular/core';\nimport { Ng2OverlayManager } from 'ng2-ui';\n\nlet code: any = {title:[], html: [], js: [], css: []};\ncode.title[0] = \"Window Overlay - Modal\";\ncode.html[0] =`\n  <div id=\"window-loading\" ng2-overlay-of=\"window\">\n    <div style=\"color:#fff\">Loading</div>\n    <button (click)=\"overlayManager.close('window-loading')\">Close</button>\n  </div>\n  <button (click)=\"overlayManager.open('window-loading')\">Show Loading For Window</button>\n`;\ncode.js[0] =`\n  import { Component } from '@angular/core';\n\n  @Component({\n    templateUr: 'app.html',\n    styles: [require('./app.css')]\n  })\n  export class OverlayComponent{\n    constructor(public overlayManager: Ng2OverlayManager) {}\n\n    ngAfterViewInit(): void {\n      window.scroll(0,0);\n    }\n  }\n`;\n\n@Component({\n  template: `\n    <div class=\"container page-title\">\n      <h1>Overlay</h1>\n    </div>\n    <div class=\"container\">\n      <p class=\"page-title-description\">\n        Overlay is an on-the-top layer over DOM elements. Commonly this is used to have some feature to show on the top \n        of html or an element and to disappear when action is taken.\n      </p>\n      \n      For example\n      <ul>\n        <li>Loading Sign</li>\n        <li>Tooltip</li>\n        <li>Hover Effect</li>\n        <li>Etc</li>\n      </ul>\n      \n      <h2> {{code.title[0]}} </h2>\n      <div class=\"spacer x3\"></div>\n      <div class=\"container round-border\">\n        <p>${code.html[0]}\n        <ng2-tab>\n          <div class=\"tabs\">\n             <div index=\"html\">HTML</div>\n             <div index=\"js\">Javascript</div>\n           </div> \n           <div class=\"tab-contents\">\n             <div contents=\"html\">\n               <pre><code>{{code.html[0]}}</code></pre>\n             </div>\n             <div contents=\"js\">\n               <pre><code>{{code.js[0]}}</code></pre>\n             </div>\n           </div>\n        </ng2-tab>\n      </div>\n      <div class=\"spacer x4\"></div>\n      \n    </div>`,\n  styles: [`li {list-style-position: inside}`]\n})\nexport class OverlayComponent{\n  code: any = code;\n  constructor(public overlayManager: Ng2OverlayManager) {}\n\n  ngAfterViewInit(): void {\n    window.scroll(0,0);\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/strip-loader/lib?strip[]=debug,strip[]=console.log!./app/ng2-ui-components/overlay.component.ts","import { Component } from '@angular/core';\n\nlet code: any = {title:[], html: [], js: [], css: []};\ncode.title[0] = \"Parallax Scroll 1\";\ncode.html[0] = `\n  <div ng2-parallax style=\"height: 400px\">\n    <img src=\"http://materializecss.com/images/parallax1.jpg\" />\n  </div>\n`;\ncode.js[0] = `\n  import { Component } from '@angular/core';\n  @Component({templateUr: 'app.html'})\n  export class AppComponent{}\n`;\n\ncode.title[1] = \"Parallax Scroll 2\";\ncode.html[1] = `\n  <div ng2-parallax style=\"height: 400px\">\n    <img src=\"http://materializecss.com/images/parallax2.jpg\" />\n  </div>\n`;\ncode.js[1] = `\n  import { Component } from '@angular/core';\n  @Component({templateUr: 'app.html'})\n  export class AppComponent{}\n`;\n\n@Component({\n  template: `\n    <div class=\"container page-title\">\n      <h1>Parallax Scroll</h1>\n    </div>\n    <div class=\"container\">\n      <div> \n        <p>\n          <b>Parallax scrolling</b> is a scrolling technique used computer graphics\n          in which background images move more slowly than images in the foreground, \n          creating the illusion of depth and immersion.\n        </p>\n        <p>\n          scroll up/down and see how image changes.\n          To see the proper parallax effect, the container window\n          should be smaller than the image behind.\n        </p>\n      </div>\n      \n      <h2> {{code.title[0]}} </h2>\n      <div class=\"spacer x3\"></div>\n      <div class=\"container round-border\">\n        <p>${code.html[0]}\n        <ng2-tab>\n          <div class=\"tabs\">\n             <div index=\"html\">HTML</div>\n             <div index=\"js\">Javascript</div>\n           </div> \n           <div class=\"tab-contents\">\n             <div contents=\"html\">\n               <pre><code>{{code.html[0]}}</code></pre>\n             </div>\n             <div contents=\"js\">\n               <pre><code>{{code.js[0]}}</code></pre>\n             </div>\n           </div>\n        </ng2-tab>\n      </div>\n      <div class=\"spacer x4\"></div>\n      \n      <div style=\"height: 400px\">\n         This space is intentionally added for scrolling\n      </div>\n      \n      <h2> {{code.title[1]}} </h2>\n      <div class=\"spacer x3\"></div>\n      <div class=\"container round-border\">\n        <p>${code.html[1]}\n        <ng2-tab>\n          <div class=\"tabs\">\n             <div index=\"html\">HTML</div>\n             <div index=\"js\">Javascript</div>\n           </div> \n           <div class=\"tab-contents\">\n             <div contents=\"html\">\n               <pre><code>{{code.html[1]}}</code></pre>\n             </div>\n             <div contents=\"js\">\n               <pre><code>{{code.js[1]}}</code></pre>\n             </div>\n           </div>\n        </ng2-tab>\n      </div>\n      \n      <div style=\"height: 400px\">\n         This space is intentionally added for scrolling\n      </div>\n      \n    </div>`\n})\nexport class ParallaxScrollComponent {\n  code: any = code;\n\n  ngAfterViewInit(): void {\n    window.scroll(0,0);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/strip-loader/lib?strip[]=debug,strip[]=console.log!./app/ng2-ui-components/parallax-scroll.component.ts","import {Component, ViewChild} from '@angular/core';\nimport { Ng2PopupComponent, Ng2MessagePopupComponent } from 'ng2-ui';\n\nlet code: any = {title:[], html: [], js: [], css: []};\ncode.title[0] = \"Popup 1\";\ncode.html[0] = `\n  <ng2-popup #popup></ng2-popup>\n  <br/>\n  {{message}}\n  <br/>\n  \n  <button (click)=\"openPopup('small', 'Hello Small Popup')\">open small message popup</button>\n  <br/>\n  <button (click)=\"openPopup('medium', 'Hello Medium Popup')\">open medium message popup</button>\n  <br/>\n`;\ncode.js[0] = `\n  import { Component, ViewChild } from '@angular/core';\n  import { Ng2PopupComponent, Ng2MessagePopupComponent } from 'ng2-ui';\n\n  export class popupComponent {\n    @ViewChild(Ng2PopupComponent) popup: Ng2PopupComponent;\n    message: string;\n\n    openPopup(size, title) {\n      this.popup.open(Ng2MessagePopupComponent, {\n        classNames: size,\n        title: title,\n        message: \"This is message given using popup.open()\",\n        buttons: {\n          OK: () => {\n            this.message = \"Ok button is pressed\";\n          },\n          CANCEL: () => {\n            this.message = \"Cancel button is pressed\";\n            this.popup.close();\n          }\n        }\n      });\n    }\n  }\n`;\n\ncode.title[1] = \"Custom Popup\";\ncode.html[1] = `\n  <div class=\"spacer\"></div>\n  <button (click)=\"openCustomPopup()\">open custom popup</button>\n  <br/>\n  <div class=\"spacer\"></div>\n`;\ncode.js[1] = `\n  import {Component, ViewChild} from '@angular/core';\n  import { Ng2PopupComponent } from 'ng2-ui';\n\n  @Component({\n    template: \\`\n    &lt;p>This is custom popup&lt;/p>\n    {{number}} &lt;button (click)=\"number = number+1\">increase number&lt;/button>&lt;br/>\n    &lt;button (click)=\"popup.close()\">close&lt;/button>\n    \\`\n  })\n  class CustomPopupComponent {\n    number: number = 0;\n  }\n\n  export class popupComponent {\n    @ViewChild(Ng2PopupComponent) popup: Ng2PopupComponent;\n    message: string;\n\n    openCustomPopup() {\n      this.popup.open(CustomPopupComponent, {\n        classNames: 'custom',\n        closeButton: false\n      });\n    }\n  }\n`;\n\n@Component({\n  template: `\n    <p>This is custom popup</p>\n    {{number}} <button (click)=\"number = number+1\">increase number</button><br/>\n    <button (click)=\"popup.close()\">close</button>`\n})\nclass CustomPopupComponent {\n  number: number = 0;\n}\n\n@Component({\n  template: `\n    <div class=\"container page-title\">\n      <h1>Popup</h1>\n    </div>\n    <div class=\"container\">\n    \n      <h2> {{code.title[0]}} </h2>\n      <div class=\"spacer x3\"></div>\n      <div class=\"container round-border\">\n        <p>${code.html[0]}\n        <ng2-tab>\n          <div class=\"tabs\">\n             <div index=\"html\">HTML</div>\n             <div index=\"js\">Javascript</div>\n           </div> \n           <div class=\"tab-contents\">\n             <div contents=\"html\">\n               <pre><code>{{code.html[0]}}</code></pre>\n             </div>\n             <div contents=\"js\">\n               <pre><code>{{code.js[0]}}</code></pre>\n             </div>\n           </div>\n        </ng2-tab>\n      </div>\n      <div class=\"spacer x4\"></div>\n      \n      <h2> {{code.title[1]}} </h2>\n      <div class=\"spacer x3\"></div>\n      <div class=\"container round-border\">\n        <p>${code.html[1]}\n        <ng2-tab>\n          <div class=\"tabs\">\n             <div index=\"html\">HTML</div>\n             <div index=\"js\">Javascript</div>\n           </div> \n           <div class=\"tab-contents\">\n             <div contents=\"html\">\n               <pre><code>{{code.html[1]}}</code></pre>\n             </div>\n             <div contents=\"js\">\n               <pre><code>{{code.js[1]}}</code></pre>\n             </div>\n           </div>\n        </ng2-tab>\n      </div>\n      <div class=\"spacer x4\"></div>\n    </div>`\n})\nexport class PopupComponent {\n  code: any = code;\n\n  @ViewChild(Ng2PopupComponent) popup: Ng2PopupComponent;\n  message: string;\n\n  ngafterviewinit(): void {\n    window.scroll(0,0);\n  }\n\n  openPopup(size: string, title: string) {\n    this.popup.open(Ng2MessagePopupComponent, {\n      classNames: size,\n      title: title,\n      message: \"This is message given using popup.open()\",\n      buttons: {\n        OK: () => {\n          this.message = \"Ok button is pressed\";\n        },\n        CANCEL: () => {\n          this.message = \"Cancel button is pressed\";\n          this.popup.close();\n        }\n      }\n    });\n  }\n\n  openCustomPopup() {\n    this.popup.open(CustomPopupComponent, {\n      classNames: 'custom',\n      closeButton: false,\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/strip-loader/lib?strip[]=debug,strip[]=console.log!./app/ng2-ui-components/popup.component.ts","import { Component } from '@angular/core';\nimport { Ng2ScrollableDirective } from 'ng2-ui';\n\nlet code: any = {title:[], html: [], js: [], css: []};\ncode.title[0] = \"Scroll Within a Section Vertically\";\ncode.html[0] = `\n  <ul>\n    <li *ngFor=\"let num of [1,2,3,4,5,6,7,8,9,10]\"\n        [class.current]=\"id == 's'+ num \"\n        (click)=\"scrollTo('#s'+num, '#v-scrollable')\">{{num}}\n  </ul>\n\n  scrolled to: {{id}}\n  <div id=\"v-scrollable\" class=\"scrollable section\"\n       ng2-scrollable (elementVisible)=\"id = $event.id\">\n    <div id=\"s1\">Section 1  (scroll to here)</div>\n    <div id=\"s2\">Section 2  (scroll to here)</div>\n    <div id=\"s3\">Section 3  (scroll to here)</div>\n    <div id=\"s4\">Section 4  (scroll to here)</div>\n    <div id=\"s5\">Section 5  (scroll to here)</div>\n    <div id=\"s6\">Section 6  (scroll to here)</div>\n    <div id=\"s7\">Section 7  (scroll to here)</div>\n    <div id=\"s8\">Section 8  (scroll to here)</div>\n    <div id=\"s9\">Section 9  (scroll to here)</div>\n    <div id=\"s10\">Section 10  (scroll to here)</div>\n  </div>\n`;\ncode.js[0] = `\n  import { Component } from '@angular/core';\n  import { Ng2ScrollableDirective } from 'ng2-ui';\n\n  @Component({\n    templateUr: 'app.html'\n  })\n  export class AppComponent{\n    id: string = 's1';\n    hid: string = 'h1';\n    wid: string = 'w1';\n    scrollTo(selector: string, parentSelector: string, horizontal: boolean) {\n      Ng2ScrollableDirective.scrollTo(\n        selector,       // scroll to this\n        parentSelector, // scroll within (null if window scrolling)\n        horizontal,     // is it horizontal scrolling\n        10              // distance from top or left\n      );\n    }\n  }\n`;\ncode.css[0] = `\n  ul {list-style: none}\n  ul li {display: inline-block; border: 1px solid #999; padding: 10px; cursor: pointer;}\n  ul li.current { background: #333; color: #fff}\n  .scrollable { height: 200px; border: 1px solid #999; position: relative;}\n  .scrollable > div {height: 110px}\n  .scrollable > div:nth-child(odd) { background-color: #ccc}\n  .scrollable.section {overflow:auto;}\n\n  .horizontal {\n    height: 100px;\n    width: 100%;\n    max-width: 450px;\n    white-space: nowrap;\n    overflow-y: hidden !important;\n  }\n  .horizontal > div {\n    border: 1px solid #666;\n    width: 200px;\n    height: 80px;\n    display: inline-block;\n    text-align: center;\n  }\n`;\n\ncode.title[1] = \"Scroll Within Window\";\ncode.html[1] = `\n  <div class=\"scrollable window\"\n       (elementVisible)=\"wid = $event.id\"\n       (elementHidden)=\"whid = $event.id\"\n       ng2-scrollable>\n    <div id=\"w1\">One</div>\n    <div id=\"w2\">Two</div>\n    <div id=\"w3\">Three</div>\n    <div id=\"w4\">Four</div>\n    <div id=\"w5\">Five</div>\n    <div id=\"w6\">Six</div>\n    <div id=\"w7\">Seven</div>\n    <div id=\"w8\">Eight</div>\n    <div id=\"w9\">Nine</div>\n    <div id=\"w10\">Ten</div>\n  </div>\n\n  <ul style=\"position: fixed; bottom: 0; z-index: 1; background-color: #999\">\n    id: {{wid}}\n    <li *ngFor=\"let num of [1,2,3,4,5,6,7,8,9,10]\"\n        [class.current]=\"wid == 'w'+ num \"\n        (click)=\"scrollTo('#w'+num)\">{{num}}</li>\n  </ul> \n`;\n\n@Component({\n  template: `\n    <div class=\"container page-title\">\n      <h1>Scrollable</h1>\n    </div>\n    <div class=\"container\">\n    \n      <h2> {{code.title[0]}} </h2>\n      <div class=\"spacer x3\"></div>\n      <div class=\"container round-border\">\n        <p>${code.html[0]}\n        <ng2-tab>\n          <div class=\"tabs\">\n             <div index=\"html\">HTML</div>\n             <div index=\"js\">Javascript</div>\n             <div index=\"css\">Css</div>\n           </div> \n           <div class=\"tab-contents\">\n             <div contents=\"html\">\n               <pre><code>{{code.html[0]}}</code></pre>\n             </div>\n             <div contents=\"js\">\n               <pre><code>{{code.js[0]}}</code></pre>\n             </div>\n             <div contents=\"css\">\n               <pre><code>{{code.css[0]}}</code></pre>\n             </div>\n           </div>\n        </ng2-tab>\n      </div>\n      <div class=\"spacer x4\"></div>\n      \n      <h2> {{code.title[1]}} </h2>\n      <div class=\"spacer x3\"></div>\n      <div class=\"container round-border\">\n        <p>${code.html[1]}\n        <ng2-tab>\n          <div class=\"tabs\">\n             <div index=\"html\">HTML</div>\n             <div index=\"js\">Javascript</div>\n             <div index=\"css\">Css</div>\n           </div> \n           <div class=\"tab-contents\">\n             <div contents=\"html\">\n               <pre><code>{{code.html[1]}}</code></pre>\n             </div>\n             <div contents=\"js\">\n               <pre><code>{{code.js[0]}}</code></pre>\n             </div>\n             <div contents=\"css\">\n               <pre><code>{{code.css[0]}}</code></pre>\n             </div>\n           </div>\n        </ng2-tab>\n      </div>\n      <div class=\"spacer x4\"></div>\n      \n    </div>`,\n  styles: [`\n    ul {list-style: none}\n    ul li {display: inline-block; border: 1px solid #999; padding: 10px; cursor: pointer;}\n    ul li.current { background: #333; color: #fff}\n    .scrollable { height: 200px; border: 1px solid #999; position: relative;}\n    .scrollable.window { height: auto;}\n    .scrollable > div {height: 110px}\n    .scrollable > div:nth-child(odd) { background-color: #ccc}\n\n    ul.window {position: fixed; top: 0; left: 0; background: yellow; z-index: 1;}\n    ul.window li {display: block; }\n    .scrollable.section {overflow:auto;}\n    \n    .horizontal {\n      height: 100px;\n      width: 100%;\n      max-width: 450px;\n      white-space: nowrap;\n      overflow-y: hidden !important;\n    }\n    .horizontal > div {\n      border: 1px solid #666;\n      width: 200px;\n      height: 80px;\n      display: inline-block;\n      text-align: center;\n    }\n  `]\n})\nexport class ScrollableComponent {\n  ngAfterViewInit(): void {\n    window.scroll(0,0);\n  }\n\n  code: any = code;\n  id: string = 's1';\n  hid: string = 'h1';\n  wid: string = 'w1';\n  scrollTo(selector: string, parentSelector: string, horizontal: boolean) {\n    Ng2ScrollableDirective.scrollTo(\n      selector,       // scroll to this\n      parentSelector, // scroll within (null if window scrolling)\n      horizontal,     // is it horizontal scrolling\n      10              // distance from top or left\n    );\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/strip-loader/lib?strip[]=debug,strip[]=console.log!./app/ng2-ui-components/scrollable.component.ts","import { Component } from '@angular/core';\n\nlet code: any = {title:[], html: [], js: [], css: []};\ncode.title[0] = \"Sticky On The Right Side\";\ncode.html[0] = `\n  <div class=\"sticky-container\">\n    <div class=\"sticky-float-right\">\n      <div ng2-sticky style=\"float: right\"> float: right </div>\n    </div>\n  </div>\n`;\ncode.js[0] = `\n  import { Component } from '@angular/core';\n\n  @Component({\n    templateUr: 'app.html'\n  })\n  export class AppComponent{\n  }\n`;\ncode.css[0] =`\n  .sticky-container > div {\n    border: 1px solid #333;\n    background-image: linear-gradient(rgba(255, 255, 255, 1) 50%, transparent 50%, transparent);\n    background-size: 50px 50px;\n    height: 300px;\n  }\n  .sticky-float-right {\n    background-color: rgba(0,255,0, .2);\n  }\n  div[ng2-sticky] {\n    min-width: 400px;\n    text-align: center;\n    background: #333;\n    color: #fff;\n    border: 1px solid #333;\n    padding: 10px;\n  }\n`;\n\ncode.title[1] = \"Sticy On The Left-Side\";\ncode.html[1] = `\n  <div class=\"sticky-container\">\n    <div class=\"sticky-float-left\">\n      <div ng2-sticky style=\"float: left\"> float: left </div>\n    </div>\n  </div>\n`;\ncode.js[1] = `\n  import { Component } from '@angular/core';\n\n  @Component({\n    templateUr: 'app.html'\n  })\n  export class AppComponent{\n  }\n`;\ncode.css[1] = `\n  .sticky-container > div {\n    border: 1px solid #333;\n    background-image: linear-gradient(rgba(255, 255, 255, 1) 50%, transparent 50%, transparent);\n    background-size: 50px 50px;\n    height: 300px;\n  }\n  .sticky-float-left {\n    background-color: rgba(255,0,0, .2);\n  }\n  div[ng2-sticky] {\n    min-width: 400px;\n    text-align: center;\n    background: #333;\n    color: #fff;\n    border: 1px solid #333;\n    padding: 10px;\n  }\n`;\n\ncode.title[2] = \"Sticky In The Middle\";\ncode.html[2] = `\n  <div class=\"sticky-container\">\n    <div class=\"div-middle\">\n      <div>One</div>\n      <div>After</div>\n      <div>Another</div>\n      <div ng2-sticky> &lt;div> tag in the middle </div>\n      <div>One</div>\n      <div>After</div>\n      <div>Another</div>\n    </div>\n  </div>\n`;\ncode.js[2] = `\n  import { Component } from '@angular/core';\n\n  @Component({\n    templateUr: 'app.html'\n  })\n  export class AppComponent{\n  }\n`;\ncode.css[2] = `\n  .sticky-container > div {\n    border: 1px solid #333;\n    background-image: linear-gradient(rgba(255, 255, 255, 1) 50%, transparent 50%, transparent);\n    background-size: 50px 50px;\n    height: 300px;\n  }\n  .div-middle {\n    background-color: rgba(0,0,255, .2);\n  }\n  div[ng2-sticky] {\n    min-width: 400px;\n    text-align: center;\n    background: #333;\n    color: #fff;\n    border: 1px solid #333;\n    padding: 10px;\n  }\n  .div-middle div[ng2-sticky] {\n    margin: 0;\n  }\n`;\n\n@Component({\n  template: `\n    <div class=\"container page-title\">\n      <h1>Sticky</h1>\n    </div>\n    <div class=\"container\">\n      \n      <h2> {{code.title[0]}} </h2>\n      <div class=\"spacer x3\"></div>\n      <div class=\"container round-border\">\n        <p>${code.html[0]}\n        <ng2-tab>\n          <div class=\"tabs\">\n             <div index=\"html\">HTML</div>\n             <div index=\"js\">Javascript</div>\n             <div index=\"css\">Css</div>\n           </div> \n           <div class=\"tab-contents\">\n             <div contents=\"html\">\n               <pre><code>{{code.html[0]}}</code></pre>\n             </div>\n             <div contents=\"js\">\n               <pre><code>{{code.js[0]}}</code></pre>\n             </div>\n             <div contents=\"css\">\n               <pre><code>{{code.css[0]}}</code></pre>\n             </div>\n           </div>\n        </ng2-tab>\n      </div>\n      \n      <h2> {{code.title[1]}} </h2>\n      <div class=\"spacer x3\"></div>\n      <div class=\"container round-border\">\n        <p>${code.html[1]}\n        <ng2-tab>\n          <div class=\"tabs\">\n             <div index=\"html\">HTML</div>\n             <div index=\"js\">Javascript</div>\n             <div index=\"css\">CSS</div>\n           </div> \n           <div class=\"tab-contents\">\n             <div contents=\"html\">\n               <pre><code>{{code.html[1]}}</code></pre>\n             </div>\n             <div contents=\"js\">\n               <pre><code>{{code.js[1]}}</code></pre>\n             </div>\n             <div contents=\"css\">\n               <pre><code>{{code.css[0]}}</code></pre>\n             </div>\n           </div>\n        </ng2-tab>\n      </div>\n      \n      <h2> {{code.title[2]}} </h2>\n      <div class=\"spacer x3\"></div>\n      <div class=\"container round-border\">\n        <p>${code.html[2]}\n        <ng2-tab>\n          <div class=\"tabs\">\n             <div index=\"html\">HTML</div>\n             <div index=\"js\">Javascript</div>\n             <div index=\"css\">CSS</div>\n           </div> \n           <div class=\"tab-contents\">\n             <div contents=\"html\">\n               <pre><code>{{code.html[2]}}</code></pre>\n             </div>\n             <div contents=\"js\">\n               <pre><code>{{code.js[2]}}</code></pre>\n             </div>\n             <div contents=\"css\">\n               <pre><code>{{code.css[2]}}</code></pre>\n             </div>\n           </div>\n        </ng2-tab>\n      </div>\n      \n      <div class=\"spacer x4\"></div>\n      <div style=\"height:300px\">\n        This space is left-blank intentionally to see scroll effect\n      </div>\n    </div>`,\n  styles: [`\n    .sticky-container > div {\n      /*margin: 20px;*/\n      border: 1px solid #333;\n      background-image: linear-gradient(rgba(255, 255, 255, 1) 50%, transparent 50%, transparent);\n      background-size: 50px 50px;\n      height: 300px;\n    }\n    .sticky-float-left {\n      background-color: rgba(255,0,0, .2);\n    }\n    .sticky-float-right {\n      background-color: rgba(0,255,0, .2);\n    }\n    .div-middle {\n      background-color: rgba(0,0,255, .2);\n    }\n    div[ng2-sticky] {\n      /*margin: 30px 10px 10px 10px;*/\n      min-width: 400px;\n      text-align: center;\n      background: #333;\n      color: #fff;\n      border: 1px solid #333;\n      padding: 10px;\n    }\n    .div-middle div[ng2-sticky] {\n      margin: 0;\n    }\n  `]\n})\nexport class StickyComponent {\n  code: any = code;\n\n  ngAfterViewInit(): void {\n    window.scroll(0,0);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/strip-loader/lib?strip[]=debug,strip[]=console.log!./app/ng2-ui-components/sticky.component.ts","import { Component } from '@angular/core';\n\nlet code: any = {title:[], html: [], js: [], css: []};\ncode.title[0] = \"Simple Tab\";\ncode.html[0] = `\n<div ng2-tab> \n <div class=\"tabs\">\n    <div index=\"html\">HTML</div>\n    <div index=\"js\">Javascript</div>\n  </div>\n  <div class=\"tab-contents\">\n    <div contents=\"html\">HTML  </div>\n    <div contents=\"js\">Javascript  </div>\n  </div>\n</div>\n`;\ncode.js[0] = `\n  import { Component } from '@angular/core';\n  @Component({ templateUr: 'app.html' })\n  export class AppComponent{ }\n`;\n\ncode.title[1] = \"Tab With Animation\";\ncode.html[1] = `\n  <ng2-tab selected=\"js\" \n    selected-contents-class=\"fadeIn animated\" \n    selected-index-class=\"selected\">\n    <div class=\"tabs\">\n      <div index=\"html\">HTML</div>\n      <div index=\"js\">Javascript</div>\n    </div>\n    <div class=\"tab-contents\">\n      <div contents=\"html\">HTML</div>\n      <div contents=\"js\">Javascript</div>\n    </div>\n  </ng2-tab>\n`;\ncode.js[1] = `\n  import { Component } from '@angular/core';\n  @Component({ templateUr: 'app.html' })\n  export class AppComponent{ }\n`;\n\n@Component({\n  template: `\n    <div class=\"container page-title\">\n      <h1>Tab</h1>\n    </div>\n    <div class=\"container\">\n    \n      <h2> {{code.title[0]}} </h2>\n      <div class=\"spacer x3\"></div>\n      <div class=\"container round-border\">\n        <p>${code.html[0]}\n        <ng2-tab>\n          <div class=\"tabs\">\n             <div index=\"html\">HTML</div>\n             <div index=\"js\">Javascript</div>\n           </div> \n           <div class=\"tab-contents\">\n             <div contents=\"html\">\n               <pre><code>{{code.html[0]}}</code></pre>\n             </div>\n             <div contents=\"js\">\n               <pre><code>{{code.js[0]}}</code></pre>\n             </div>\n           </div>\n        </ng2-tab>\n      </div>\n      <div class=\"spacer x4\"></div>\n      \n      \n      <h2> {{code.title[1]}} </h2>\n      <div class=\"spacer x3\"></div>\n      <div class=\"container round-border\">\n        <p>${code.html[1]}\n        <ng2-tab>\n          <div class=\"tabs\">\n             <div index=\"html\">HTML</div>\n             <div index=\"js\">Javascript</div>\n           </div> \n           <div class=\"tab-contents\">\n             <div contents=\"html\">\n               <pre><code>{{code.html[1]}}</code></pre>\n             </div>\n             <div contents=\"js\">\n               <pre><code>{{code.js[1]}}</code></pre>\n             </div>\n           </div>\n        </ng2-tab>\n      </div>\n      <div class=\"spacer x4\"></div>\n      NOTE: There is a default css given by component, but a user can override the tab style.\n    </div>\n`\n})\nexport class TabComponent {\n  code: any = code;\n  ngAfterViewInit(): void {\n    window.scroll(0,0);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/strip-loader/lib?strip[]=debug,strip[]=console.log!./app/ng2-ui-components/tab.component.ts","import { Component } from '@angular/core';\n\nlet code: any = {title:[], html: [], js: [], css: []};\ncode.title[0] = \"Tooltip Example\";\ncode.html[0] = `\n  <div ng2-tooltip=\"This is my tooltip\">\n    tooltip 1\n    <div ng2-tooltip=\"this is also tootip\">\n      tooltip 2 \n      <div ng2-tooltip=\"this is too tootip\">\n        tooltip 3\n      </div>\n    </div>\n  </div>\n`;\ncode.js[0] = `\n  import { Component } from '@angular/core';\n\n  @Component({\n    templateUr: 'app.html'\n  })\n  export class AppComponent{\n  }\n`;\ncode.css[0] = `\n  [ng2-tooltip] {margin: 40px; border: 1px solid #ccc }\n\n  [ng2-tooltip] .tooltip-contents {\n    border: 1px solid #ccc; padding: 5px\n  }\n  [ng2-tooltip] .tooltip-down-arrow {\n    height: 10px;\n  }\n  [ng2-tooltip] .tooltip-down-arrow:before {\n    content: '';\n    display: block;\n    position: absolute;\n    width: 10px;\n    height: 10px;\n    left: 45%;\n    bottom: 5px;\n    background: #FFFFFF;\n    border-left:1px solid #ccc;\n    border-bottom:1px solid #ccc;\n    transform:rotate(-45deg);\n  }\n`;\n\n@Component({\n  template: `\n    <div class=\"container page-title\">\n      <h1>Tooltip</h1>\n    </div>\n    <div class=\"container\">\n      \n      <h2> {{code.title[0]}} </h2>\n      <div class=\"spacer x3\"></div>\n      <div class=\"container round-border\">\n        <p>${code.html[0]}\n        <ng2-tab>\n          <div class=\"tabs\">\n             <div index=\"html\">HTML</div>\n             <div index=\"js\">Javascript</div>\n           </div> \n           <div class=\"tab-contents\">\n             <div contents=\"html\">\n               <pre><code>{{code.html[0]}}</code></pre>\n             </div>\n             <div contents=\"js\">\n               <pre><code>{{code.js[0]}}</code></pre>\n             </div>\n           </div>\n        </ng2-tab>\n      </div>\n      <div class=\"spacer x4\"></div>\n      \n    </div>`\n})\nexport class TooltipComponent {\n  code: any = code;\n  ngAfterViewInit(): void {\n    window.scroll(0,0);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/strip-loader/lib?strip[]=debug,strip[]=console.log!./app/ng2-ui-components/tooltip.component.ts","import { Component } from '@angular/core';\nlet code: any = {title: [], html: [], js: []};\n\ncode.title[0] = \"Simple Array Of String\"\ncode.html[0]= `\n  <input ng2-auto-complete\n    [(ngModel)]=\"model1\"\n    [source]=\"arrayOfStrings\"\n    placeholder=\"enter text\"/>\n  <p><b>model1</b>: {{ model1 | json }}`;\ncode.js[0] = `\n  import { Component } from '@angular/core';\n  @Component({\n    templaeUr: 'app.html'\n  })\n  export class AppComponent {\n    model1: any;\n    arrayOfStrings: string[] =\n      [\"this\", \"is\", \"array\", \"of\", \"text\"];\n  }`;\n\ncode.title[0] = \"Simple Array Of Object(id/value)\"\ncode.html[1] = `\n  <input ng2-auto-complete\n    [(ngModel)]=\"model2\"\n    [source]=\"arrayOfKeyValues\" \n    placeholder=\"enter text\"/> \n  <p><b>model2</b>: {{model2 | json }}\n`;\ncode.js[1] = `\n  import { Component } from '@angular/core';\n\n  @Component({\n    templateUr: 'app.html'\n  })\n  export class AppComponent{\n    model2: any;\n    arrayOfKeyValues: any[] =\n      [{id:1, value:'One'}, {id:2, value:'Two'}, {id:3, value:'Three'}, {id:4, value:'Four'}];\n  }\n`;\n\ncode.title[0] = \"Simple Array Of Object(key/name)\"\ncode.html[2] = `\n  <input ng2-auto-complete \n    [source]=\"arrayOfKeyValues2\"\n    [(ngModel)]=\"model3\"\n    placeholder=\"enter text\"\n    list-formatter=\"(key) name\"\n    display-property-name=\"name\"/>\n  <p><b>model3:</b> {{ model3 | json }}\n`;\ncode.js[2] = `\n  import { Component } from '@angular/core';\n  @Component({\n    templateUr: 'app.html'\n  })\n  export class AppComponent{\n    model3: any;\n    arrayOfKeyValues2: any[] =\n      [{key:1, name:'Key One'}, {key:2, name:'Key Two'}, {key:3, name:'Key Three'}, {key:4, name:'Key Four'}];\n  }`;\n\ncode.title[0] = \"Remote Source\"\ncode.html[3] = `\n  <input ng2-auto-complete\n    [(ngModel)]=\"model4\"\n    placeholder=\"Enter Address(min. 2 chars)\"\n    [source]=\"googleGeoCode\" \n    list-formatter=\"formatted_address\"\n    path-to-data=\"results\"\n    min-chars=\"2\" />\n  <p><b>model4</b>: {{ model4 | json }}\n`;\ncode.js[3] = `\n  import { Component } from '@angular/core';\n\n  @Component({\n    templateUr: 'app.html'\n  })\n  export class AppComponent{\n    model4: any;\n    googleGeoCode: string = \"https://maps.googleapis.com/maps/api/geocode/json?address=:keyword\";\n  }\n`;\n@Component({\n  template: `\n\n    <div class=\"container page-title\">\n      <h1>Auto Complete</h1>\n    </div>\n    \n    <div class=\"container\">\n      <h2> {{code.title[0]}} </h2>\n      <div class=\"spacer x3\"></div>\n      <div class=\"container round-border\">\n        <div class=\"title\">Simple string of array as source</div>\n        <p>${code.html[0]}\n        <ng2-tab>\n          <div class=\"tabs\">\n             <div index=\"html\">HTML</div>\n             <div index=\"js\">Javascript</div>\n           </div> \n           <div class=\"tab-contents\">\n             <div contents=\"html\">\n               <pre><code>{{code.html[0]}}</code></pre>\n             </div>\n             <div contents=\"js\">\n               <pre><code>{{code.js[0]}}</code></pre>\n             </div>\n           </div>\n        </ng2-tab>\n      </div>\n      <div class=\"spacer x4\"></div>\n      \n      <div class=\"container round-border\">\n        <div class=\"title\">{{code.title[1]}}</div>\n        <p>${code.html[1]}\n        <ng2-tab>\n          <div class=\"tabs\">\n             <div index=\"html\">HTML</div>\n             <div index=\"js\">Javascript</div>\n           </div> \n           <div class=\"tab-contents\">\n             <div contents=\"html\">\n               <pre><code>{{code.html[1]}}</code></pre>\n             </div>\n             <div contents=\"js\">\n               <pre><code>{{code.js[1]}}</code></pre>\n             </div>\n           </div>\n        </ng2-tab>\n      </div>\n      <div class=\"spacer x4\"></div>\n      \n      <div class=\"container round-border\">\n        <div class=\"title\">{{code.title[2]}}</div>\n        <p>${code.html[2]}\n        <ng2-tab>\n          <div class=\"tabs\">\n             <div index=\"html\">HTML</div>\n             <div index=\"js\">Javascript</div>\n           </div> \n           <div class=\"tab-contents\">\n             <div contents=\"html\">\n               <pre><code>{{code.html[2]}}</code></pre>\n             </div>\n             <div contents=\"js\">\n               <pre><code>{{code.js[2]}}</code></pre>\n             </div>\n           </div>\n        </ng2-tab>\n      </div>\n        \n      <h2> Autocomplete From Remote Source </h2>\n      \n      <div class=\"spacer x3\"></div>\n      <div class=\"container round-border\">\n        <div class=\"title\">{{code.title[3]}}</div>\n        <p>${code.html[3]}\n        <ng2-tab>\n          <div class=\"tabs\">\n             <div index=\"html\">HTML</div>\n             <div index=\"js\">Javascript</div>\n           </div> \n           <div class=\"tab-contents\">\n             <div contents=\"html\">\n               <pre><code>{{code.html[3]}}</code></pre>\n             </div>\n             <div contents=\"js\">\n               <pre><code>{{code.js[3]}}</code></pre>\n             </div>\n           </div>\n        </ng2-tab>\n      </div>\n      <div class=\"spacer x4\"></div>\n      <div class=\"spacer x4\"></div>\n      \n    </div>`\n})\nexport class AutoCompleteComponent {\n  code: any = code;\n  arrayOfStrings: string[] =\n    [\"this\", \"is\", \"array\", \"of\", \"text\"];\n\n  arrayOfKeyValues: any[] =\n    [{id:1, value:'One'}, {id:2, value:'Two'}, {id:3, value:'Three'}, {id:4, value:'Four'}];\n\n  arrayOfKeyValues2: any[] =\n    [{key:1, name:'Key One'}, {key:2, name:'Key Two'}, {key:3, name:'Key Three'}, {key:4, name:'Key Four'}];\n\n  googleGeoCode: string = \"https://maps.googleapis.com/maps/api/geocode/json?address=:keyword\";\n\n  model1: any;\n  model2: any;\n  model3: any;\n  model4: any;\n\n  ngAfterViewInit(): void {\n    window.scroll(0,0);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/strip-loader/lib?strip[]=debug,strip[]=console.log!./app/ng2-ui-components/auto-complete.component.ts","import { Component } from '@angular/core';\n\nlet code: any = {title:[], html: [], js: [], css: []};\ncode.title[0] = \"Dropdown Menu\";\ncode.html[0] =`\n  <div>\n    <ul class=\"horizontal-menu\">\n      <li> Item 1\n        <ul ng2-menu=\"bottom\">\n          <li> Menu Item 1-1 </li>\n          <li> Menu Item 1-2 </li>\n          <li> Menu Item 1-3 </li>\n        </ul>\n      </li>\n      \n      <li> Item 2\n        <ul ng2-menu=\"bottom\">\n          <li> Menu Item 2-1 </li>\n          <li> Item 2-2 \n            <ul ng2-menu=\"right\">\n              <li> Menu Item 2-2-1 </li> \n              <li> Menu Item 2-2-2 </li>\n              <li> Menu Item 2-2-3 </li>\n            </ul>\n          </li>\n          <li> Menu Item 2-3 </li>\n        </ul>\n      </li>\n      <li>Menu Item 3</li>\n    </ul>\n  </div>\n`;\ncode.js[0] =`\n  import { Component } from '@angular/core';\n\n  @Component({\n    templateUr: 'app.html',\n    styles: [require('./app.css')]\n  })\n  export class AppComponent{\n  }\n`;\ncode.css[0] = `ul.horizontal-menu,\n  .has-ng2-menu ul[ng2-menu]\n  {\n    background: #3db2e1;\n    background: -moz-linear-gradient(top, #69c4e8, #21a1d4);\n    background: -ms-linear-gradient(top, #69c4e8, #21a1d4);\n    background: -o-linear-gradient(top, #69c4e8, #21a1d4);\n    background: -webkit-linear-gradient(top, #69c4e8, #21a1d4);\n    background: linear-gradient(to bottom, #69c4e8, #21a1d4);\n    border-radius: 2px;\n    box-shadow: inset 0 -3px 0 #1f97c7, inset 0 -3px 3px #1f9acc, inset 0 2px 2px #9ad7ef, inset 1px 0 2px #22a4d9, inset -1px 0 2px #22a4d9, 0 1px 1px rgba(0, 0, 0, 0.1), 0 2px 2px rgba(0, 0, 0, 0.06), 0 3px 3px rgba(0, 0, 0, 0.17), 2px 1px 2px rgba(0, 0, 0, 0.05), -2px 1px 2px rgba(0, 0, 0, 0.05);\n    display: inline-block;\n    font-family: 'Open Sans', Helvetica, sans-serif;\n    width: auto;\n  }\n  ul.horizontal-menu > li {\n    -moz-transition: color .2s ease;\n    -ms-transition: color .2s ease;\n    -o-transition: color .2s ease;\n    -webkit-transition: color .2s ease;\n    color: #ffffff;\n    display: inline-block !important;\n    font-size: 13px;\n    font-weight: 700;\n    letter-spacing: 1px;\n    padding: 20px 25px;\n    text-decoration: none;\n    text-shadow: 0 1px 0 rgba(0, 0, 0, 0.25);\n    text-transform: uppercase;\n    transition: color .2s ease;\n  }\n  ul.horizontal-menu > li:hover,\n  .has-ng2-menu li:hover {\n    color: #ccc;\n  }\n  ul.horizontal-menu > li:hover ul,\n  .has-ng2-menu li:hover ul {\n    color: #fff;\n  }\n  .dropdown-menu, .right-side-menu, .bottom-menu {\n    display: inline-block;\n  }\n  ul.horizontal-menu li, \n  ul.dropdown-menu li,\n  ul.bottom-menu li {\n    z-index: 100;\n  \n  .has-ng2-menu.active {\n    color: #fff;\n  }\n  .has-ng2-menu::after {\n    content: '\\25bc';\n    display: inline-block;\n    padding: 6px 12px;\n    text-align: center;\n    float: right;\n    font-size: 8px;\n    line-height: 13px;\n  }\n  .has-ng2-menu.active::after {\n    color: #333;\n  }\n\n  .has-ng2-menu ul[ng2-menu] {\n    background-color: #fff;\n    display: none;\n    list-style: none;\n    margin: 0;\n    padding: 0\n  }\n  .has-ng2-menu.active > ul[ng2-menu] {\n    display: inline-block;\n  }\n  .has-ng2-menu > ul[ng2-menu] > li {\n    display: block;\n    margin: 0;\n    padding: 10px;\n    white-space: nowrap;\n  }\n`;\n\ncode.title[1] = \"Right-Side Menu\";\ncode.html[1] =`\n  <div class=\"right-side-menu\">\n    Menu\n    <ul ng2-menu=\"right\">\n      <li> Menu Item 1 \n        <ul ng2-menu=\"right\">\n          <li> Menu Item 1-1\n          <li> Menu Item 1-2 \n          <li> Menu Item 1-3\n        </ul>\n      <li> Menu Item 2\n        <ul ng2-menu=\"right\">\n          <li> Menu Item 2-1 &nbsp; &nbsp; &nbsp;\n          <li> Menu Item 2-2 \n            <ul ng2-menu=\"right\">\n              <li> Menu Item 2-2-1 \n              <li> Menu Item 2-2-2 \n              <li> Menu Item 2-2-3 \n            </ul>\n          \n          <li> Menu Item 2-3 \n        </ul>\n      <li>Menu Item 3 &nbsp; &nbsp; &nbsp;\n    </ul>\n  </div>\n`;\ncode.js[1] =`\n  import { Component } from '@angular/core';\n\n  @Component({\n    templateUr: 'app.html',\n    styles: [require('./app.css')]\n  })\n  export class AppComponent{\n  }\n`;\n\ncode.title[2] = \"Bottom-Side Menu\";\ncode.html[2] =`\n  <div class=\"spacer x8\"></div>\n  <div class=\"bottom-menu\">\n    <ul class=\"horizontal-menu\">\n      <li> Menu Item 1\n        <ul ng2-menu=\"top\">\n          <li> Menu Item 1-1\n          <li> Menu Item 1-2 \n          <li> Menu Item 1-3\n        </ul>\n      <li> Menu Item 2\n        <ul ng2-menu=\"top\">\n          <li> Menu Item 2-1 \n          <li> Menu Item 2-2\n          <li> Menu Item 2-3\n        </ul>\n      <li> Menu Item 3\n        <ul ng2-menu=\"top\">\n          <li> Menu Item 3-1\n          <li> Menu Item 3-2\n          <li> Menu Item 3-3\n        </ul>\n    </ul>\n  </div>\n`;\ncode.js[2] =`\n  import { Component } from '@angular/core';\n\n  @Component({\n    templateUr: 'app.html',\n    styles: [require('./app.css')]\n  })\n  export class AppComponent{\n  }\n`;\n@Component({\n  template: `\n    <div class=\"container page-title\">\n      <h1>Menu</h1>\n    </div>\n    <div class=\"container\">\n    \n      <h2> {{code.title[0]}} </h2>\n      <div class=\"spacer x3\"></div>\n      <div class=\"container round-border\">\n        <p>${code.html[0]}\n        <ng2-tab>\n          <div class=\"tabs\">\n             <div index=\"html\">HTML</div>\n             <div index=\"js\">Javascript</div>\n             <div index=\"css\">Css</div>\n           </div> \n           <div class=\"tab-contents\">\n             <div contents=\"html\">\n               <pre><code>{{code.html[0]}}</code></pre>\n             </div>\n             <div contents=\"js\">\n               <pre><code>{{code.js[0]}}</code></pre>\n             </div>\n             <div contents=\"css\">\n               <pre><code>{{code.css[0]}}</code></pre>\n             </div>\n           </div>\n        </ng2-tab>\n      </div>\n      <div class=\"spacer x4\"></div>\n      \n      <h2> {{code.title[1]}} </h2>\n      <div class=\"spacer x3\"></div>\n      <div class=\"container round-border\">\n        <p>${code.html[1]}\n        <ng2-tab>\n          <div class=\"tabs\">\n             <div index=\"html\">HTML</div>\n             <div index=\"js\">Javascript</div>\n             <div index=\"css\">Css</div>\n           </div> \n           <div class=\"tab-contents\">\n             <div contents=\"html\">\n               <pre><code>{{code.html[1]}}</code></pre>\n             </div>\n             <div contents=\"js\">\n               <pre><code>{{code.js[1]}}</code></pre>\n             </div>\n             <div contents=\"css\">\n               <pre><code>{{code.css[0]}}</code></pre>\n             </div>\n           </div>\n        </ng2-tab>\n      </div>\n      <div class=\"spacer x4\"></div>\n      \n      \n      <h2> {{code.title[2]}} </h2>\n      <div class=\"spacer x3\"></div>\n      <div class=\"container round-border\">\n        <p>${code.html[2]}\n        <ng2-tab>\n          <div class=\"tabs\">\n             <div index=\"html\">HTML</div>\n             <div index=\"js\">Javascript</div>\n             <div index=\"css\">Css</div>\n           </div> \n           <div class=\"tab-contents\">\n             <div contents=\"html\">\n               <pre><code>{{code.html[2]}}</code></pre>\n             </div>\n             <div contents=\"js\">\n               <pre><code>{{code.js[2]}}</code></pre>\n             </div>\n             <div contents=\"css\">\n               <pre><code>{{code.css[0]}}</code></pre>\n             </div>\n           </div>\n        </ng2-tab>\n      </div>\n      <div class=\"spacer x4\"></div>\n    </div>`\n})\nexport class MenuComponent {\n  code: any = code;\n  ngAfterViewInit(): void {\n    window.scroll(0,0);\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/strip-loader/lib?strip[]=debug,strip[]=console.log!./app/ng2-ui-components/menu.component.ts","import { Component } from '@angular/core';\n\nlet code: any = {title:[], html: [], js: [], css: []};\ncode.title[0] = \"Drag and Drop Elements To Re-order\";\ncode.html[0] = `\n  <ul ng2-sortable>\n    <li id=\"order\">Order</li>\n    <li id=\"me\">Me</li>\n    <li id=\"right\">Right</li>\n    <li id=\"the\">The</li>\n    <li id=\"into\">Into</li>\n    <li id=\"put\">Put</li>\n  </ul>\n`;\ncode.js[0] = `\n  import { Component } from '@angular/core';\n\n  @Component({\n    templateUr: 'app.html'\n  })\n  export class AppComponent {\n    order: string[] = [];\n  }\n`;\ncode.css[0] = `\n  ul[ng2-sortable] }\n     padding: 10px; \n     border: 1px solid #ccc;\n    list-style: none; \n    display: block\n  }\n  ul[ng2-sortable] li {\n    padding: 10px 5px;\n    background: #4986e7;\n    color: #fff; \n    border: 1px solid #fff;\n    display: block; \n    position: relative\n  }\n  ul[ng2-sortable] li.drag-enter {\n    border-top: 2px solid yellow;\n  }\n`;\n\n@Component({\n  template: `\n    <h1>Sortable</h1>\n    \n    <div class=\"container\">\n    \n      <h2> {{code.title[0]}} </h2>\n      <div class=\"spacer x3\"></div>\n      <div class=\"container round-border\">\n        <p>${code.html[0]}\n        <ng2-tab>\n          <div class=\"tabs\">\n             <div index=\"html\">HTML</div>\n             <div index=\"js\">Javascript</div>\n             <div index=\"css\">CSS</div>\n           </div> \n           <div class=\"tab-contents\">\n             <div contents=\"html\">\n               <pre><code>{{code.html[0]}}</code></pre>\n             </div>\n             <div contents=\"js\">\n               <pre><code>{{code.js[0]}}</code></pre>\n             </div>\n             <div contents=\"css\">\n               <pre><code>{{code.css[0]}}</code></pre>\n             </div>\n           </div>\n        </ng2-tab>\n      </div>\n      <div class=\"spacer x4\"></div>\n    </div>`,\n  styles: [`\n    ul[ng2-sortable] {\n       padding: 10px; \n       border: 1px solid #ccc;\n      list-style: none; \n      display: block\n    }\n    ul[ng2-sortable] li {\n      padding: 10px 5px;\n      background: #4986e7;\n      color: #fff; \n      border: 1px solid #fff;\n      display: block; \n      position: relative\n    }\n    ul[ng2-sortable] li.drag-enter {\n      border-top: 2px solid yellow;\n    }\n  `]\n})\nexport class SortableComponent {\n  code: any = code;\n  ngAfterViewInit(): void {\n    window.scroll(0,0);\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/strip-loader/lib?strip[]=debug,strip[]=console.log!./app/ng2-ui-components/sortable.component.ts","import { Component } from '@angular/core';\n@Component({\n  template: `\n<div class=\"container page-title\">\n  <h1>Getting Started</h1>\n</div>\n<div class=\"container\">\n  <p class=\"page-title-description\">\n    ng2-ui is a collection of quality Angular2 directives.\n    To make ng2-ui available to your project, you need to install a npm package and \n    import NG2_DIRECTIVES.\n  </p>\n  \n  <h2>NPM Install</h2>\n  <pre><code class=\"language-bash\">$ npm install ng2-ui --save</code></pre>\n  \n  <h2>systemjs.config.js</h2>\n  <pre><code class=\"language-javascript\">\nmap: {{ '{' }}\n  app: \"app\",\n  ...\n  'ng2-ui': 'https://npmcdn.com/ng2-ui' // <----- this\n{{ '}' }},\n\npackages: {{ '{' }}\n   app: {{ '{' }}main: './main.js', defaultExtension: 'js'{{ '}' }},\n   ...\n   'ng2-ui': {{ '{' }} main: 'dist/index.js', defaultExtension: 'js' {{ '}' }}  // <----- this\n   {{ '}' }}\n}</code></pre>\n      \n  <h2>Usage</h2>\n  <p><b>Import and include directives for your application</b>\n  <p>app.component.ts\n  <pre><code class=\"language-javascript\">\n//our root app component\nimport {{ '{' }}Component, enableProdMode{{ '}' }} from '@angular/core'\nenableProdMode();\n\n@Component({{ '{' }}\n  selector: 'my-app',\n  template: require('./src/app.tpl.html'),\n{{ '}' }})\nexport class AppComponent {{ '{' }} ... {{ '}' }}\n</code></pre>\n\n<p><b>src/app.tpl.html</b></p>\n<pre><code class=\"language-markup\">\n&lt;input [(ngModel)]=\"date1\" ng2-datetime-picker /> \n\n&lt;ng2-map center=\"Brampton, Canada\">&lt;/ng2-map> \n</code></pre>\n</div>\n  `\n})\nexport class GettingStartedComponent {\n  ngAfterViewInit(): void {\n    window.scroll(0,0);\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/strip-loader/lib?strip[]=debug,strip[]=console.log!./app/getting-started.component.ts","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@angular/core\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"@angular/core\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ng2-utils\"] = factory(require(\"@angular/core\"));\n\telse\n\t\troot[\"ng2-utils\"] = factory(root[\"@angular/core\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_7__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar scroll_to_1 = __webpack_require__(1);\n\texports.scrollTo = scroll_to_1.scrollTo;\n\tvar element_visible_1 = __webpack_require__(2);\n\texports.elementVisible = element_visible_1.elementVisible;\n\tvar computed_style_1 = __webpack_require__(3);\n\texports.computedStyle = computed_style_1.computedStyle;\n\tvar outer_width_1 = __webpack_require__(4);\n\texports.outerWidth = outer_width_1.outerWidth;\n\tvar outer_height_1 = __webpack_require__(5);\n\texports.outerHeight = outer_height_1.outerHeight;\n\tvar html_code_pipe_1 = __webpack_require__(6);\n\texports.HtmlCodePipe = html_code_pipe_1.HtmlCodePipe;\n\tvar javascript_code_pipe_1 = __webpack_require__(8);\n\texports.JavascriptCodePipe = javascript_code_pipe_1.JavascriptCodePipe;\n\tvar ng2_utils_module_1 = __webpack_require__(13);\n\texports.Ng2UtilsModule = ng2_utils_module_1.Ng2UtilsModule;\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t/**\n\t * scroll to the selector within the parent selector by scrolling 10 times within 500ms\n\t * @param selector\n\t * @param parentSelector\n\t */\n\tfunction scrollTo(selector, parentSelector, horizontal, distance) {\n\t    // argument validation\n\t    var parentEl, targetEl;\n\t    parentSelector = parentSelector || 'body';\n\t    targetEl = document.querySelector(selector);\n\t    if (!targetEl) {\n\t        throw \"Invalid selector \" + selector;\n\t    }\n\t    parentEl = document.querySelector(parentSelector);\n\t    if (!parentEl) {\n\t        throw \"Invalid parent selector \" + parentSelector;\n\t    }\n\t    // detect the current environment\n\t    var parentElStyle = window.getComputedStyle(parentEl);\n\t    var scrollContainerEl = parentElStyle.overflow === 'auto' ? parentEl : document.body;\n\t    var currentScrollTop = scrollContainerEl.scrollTop;\n\t    var currentScrollLeft = scrollContainerEl.scrollLeft;\n\t    // determine targetOffsetTop(or Left);\n\t    var targetOffsetTop;\n\t    var targetOffsetLeft;\n\t    if (scrollContainerEl === document.body) {\n\t        var bodyRect = document.body.getBoundingClientRect();\n\t        var targetRect = targetEl.getBoundingClientRect();\n\t        targetOffsetTop = targetRect.top - bodyRect.top;\n\t        targetOffsetLeft = targetRect.left - bodyRect.left;\n\t    }\n\t    else {\n\t        targetOffsetTop = targetEl.offsetTop;\n\t        targetOffsetLeft = targetEl.offsetLeft;\n\t    }\n\t    if (distance) {\n\t        currentScrollTop += distance;\n\t        currentScrollLeft += distance;\n\t    }\n\t    // start scrolling\n\t    var step = horizontal ?\n\t        Math.ceil((targetOffsetLeft - currentScrollLeft) / 10) :\n\t        Math.ceil((targetOffsetTop - currentScrollTop) / 10);\n\t    var scrollProp = horizontal ? 'scrollLeft' : 'scrollTop';\n\t    (function loop(i, prop) {\n\t        setTimeout(function main() {\n\t            scrollContainerEl[prop] += step;\n\t            i > 1 && loop(i - 1, prop);\n\t        }, 50);\n\t    }(10, scrollProp));\n\t}\n\texports.scrollTo = scrollTo;\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t/**\n\t * Returns an element is visible within outer element\n\t * @param innerEl\n\t * @param outerEl\n\t * @param adjustment\n\t * @returns {{top: boolean, bottom: boolean, left: boolean, right: boolean}}\n\t */\n\tfunction elementVisible(innerElement, outerElement, adjustment) {\n\t    var innerEl;\n\t    var outerEl;\n\t    innerEl = (typeof innerElement === 'string') ?\n\t        document.querySelector(innerElement) : innerElement;\n\t    outerEl = (typeof outerElement === 'string') ?\n\t        document.querySelector(outerElement) : outerElement;\n\t    var innerRect = innerEl.getBoundingClientRect();\n\t    var bottomAdjustment = (adjustment && adjustment.bottom || 0);\n\t    if (outerEl === window) {\n\t        return {\n\t            top: innerRect.bottom - bottomAdjustment > window.innerHeight\n\t                && innerRect.top < window.innerHeight,\n\t            bottom: innerRect.bottom - bottomAdjustment > 0\n\t                && innerRect.bottom < window.innerHeight,\n\t            left: innerRect.right > window.innerWidth\n\t                && innerRect.left < window.innerWidth,\n\t            right: innerRect.right > 0\n\t                && innerRect.right < window.innerWidth\n\t        };\n\t    }\n\t    else {\n\t        var outerRect = outerEl.getBoundingClientRect();\n\t        var defaultView = (innerEl.ownerDocument || document).defaultView;\n\t        var computedStyle = defaultView.getComputedStyle(outerEl, null);\n\t        var outerRectBorderTopWidth = parseInt(computedStyle.getPropertyValue('border-top-width'), 10);\n\t        var outerRectBorderLeftWidth = parseInt(computedStyle.getPropertyValue('border-left-width'), 10);\n\t        /* top is visible or bottom is visible */\n\t        var topVisible = (innerRect.top >= outerRect.top\n\t            && innerRect.top < outerRect.bottom);\n\t        var bottomVisible = (innerRect.bottom > (outerRect.top + outerRectBorderTopWidth)\n\t            && innerRect.bottom < outerRect.bottom);\n\t        var leftVisible = (innerRect.left >= outerRect.left\n\t            && innerRect.left < outerRect.right);\n\t        var rightVisible = (innerRect.right > (outerRect.left + outerRectBorderLeftWidth)\n\t            && innerRect.right < outerRect.right);\n\t        return {\n\t            top: topVisible,\n\t            bottom: bottomVisible,\n\t            left: leftVisible,\n\t            right: rightVisible\n\t        };\n\t    }\n\t}\n\texports.elementVisible = elementVisible;\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t/**\n\t * returns coumputed style of given element\n\t * @param el\n\t * @param styleProp\n\t * @returns {any}\n\t */\n\tfunction computedStyle(element, styleProp) {\n\t    var el;\n\t    el = (typeof element === 'string') ? document.querySelector(element) : element;\n\t    var value, defaultView = (el.ownerDocument || document).defaultView;\n\t    // W3C standard way:\n\t    if (defaultView && defaultView.getComputedStyle) {\n\t        // sanitize property name to css notation\n\t        // (hypen separated words eg. font-Size)\n\t        styleProp = styleProp.replace(/([A-Z])/g, \"-$1\").toLowerCase();\n\t        return defaultView.getComputedStyle(el, null).getPropertyValue(styleProp);\n\t    }\n\t    else if (el['currentStyle']) {\n\t        // sanitize property name to camelCase\n\t        styleProp = styleProp.replace(/\\-(\\w)/g, function (str, letter) {\n\t            return letter.toUpperCase();\n\t        });\n\t        value = el['currentStyle'][styleProp];\n\t        // convert other units to pixels on IE\n\t        if (/^\\d+(em|pt|%|ex)?$/i.test(value)) {\n\t            return (function (value) {\n\t                var oldLeft = el.style.left, oldRsLeft = el['runtimeStyle'].left;\n\t                el['runtimeStyle'].left = el['currentStyle'].left;\n\t                el.style.left = value || 0;\n\t                value = el.style['pixelLeft'] + \"px\";\n\t                el.style.left = oldLeft;\n\t                el['runtimeStyle'].left = oldRsLeft;\n\t                return value;\n\t            })(value);\n\t        }\n\t        return value;\n\t    }\n\t}\n\texports.computedStyle = computedStyle;\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tfunction outerWidth(element) {\n\t    var el;\n\t    (typeof element === 'string') ? (el = document.querySelector(element)) : element;\n\t    var style = getComputedStyle(el);\n\t    return el.offsetWidth +\n\t        parseInt(style.getPropertyValue('margin-left')) +\n\t        parseInt(style.getPropertyValue('margin-right'));\n\t}\n\texports.outerWidth = outerWidth;\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tfunction outerHeight(element) {\n\t    var el;\n\t    (typeof element === 'string') ? (el = document.querySelector(element)) : element;\n\t    var style = getComputedStyle(el);\n\t    return el.offsetHeight +\n\t        parseInt(style.getPropertyValue('margin-top')) +\n\t        parseInt(style.getPropertyValue('margin-bottom'));\n\t}\n\texports.outerHeight = outerHeight;\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(7);\n\tvar HtmlCodePipe = (function () {\n\t    function HtmlCodePipe() {\n\t    }\n\t    HtmlCodePipe.prototype.transform = function (html, tagsIncludeExclude) {\n\t        var ret;\n\t        var tagsInclude = [];\n\t        var tagsExclude = [];\n\t        (tagsIncludeExclude || '').split(',').forEach(function (tag) {\n\t            if (tag.match(/^-/)) {\n\t                tag = tag.replace(/^-/, '');\n\t                tagsExclude.push(tag);\n\t            }\n\t            else if (tag !== '') {\n\t                tagsInclude.push(tag);\n\t            }\n\t        });\n\t        ret = tagsInclude.length > 0 ? '' : html;\n\t        if (tagsInclude.length > 0) {\n\t            tagsInclude.forEach(function (tag) {\n\t                var regEx = new RegExp(\"<\" + tag + \">([\\\\s\\\\S]*?)</\" + tag + \">\");\n\t                var matches = html.match(regEx);\n\t                var output = matches[0].replace(/<\\/?ng2-utils-[0-9]+>\\s*/g, ''); //remove <ng2-utils-xxx> and </ng2-utils-xxx>\n\t                ret = ret + output;\n\t            });\n\t        }\n\t        if (tagsExclude.length > 0) {\n\t            tagsExclude.forEach(function (tag) {\n\t                var regEx = new RegExp(\"<\" + tag + \">([\\\\s\\\\S]*?)</\" + tag + \">\");\n\t                ret = ret.replace(regEx, '');\n\t            });\n\t        }\n\t        return ret;\n\t    };\n\t    return HtmlCodePipe;\n\t}());\n\tHtmlCodePipe = __decorate([\n\t    core_1.Pipe({ name: 'htmlCode' }),\n\t    __metadata(\"design:paramtypes\", [])\n\t], HtmlCodePipe);\n\texports.HtmlCodePipe = HtmlCodePipe;\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_7__;\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(7);\n\tvar js_beautify = __webpack_require__(9);\n\tvar JavascriptCodePipe = (function () {\n\t    function JavascriptCodePipe() {\n\t    }\n\t    JavascriptCodePipe.prototype.transform = function (value) {\n\t        value = value.toString();\n\t        var ret = value;\n\t        return js_beautify(value);\n\t    };\n\t    return JavascriptCodePipe;\n\t}());\n\tJavascriptCodePipe = __decorate([\n\t    core_1.Pipe({ name: 'jsCode' }),\n\t    __metadata(\"design:paramtypes\", [])\n\t], JavascriptCodePipe);\n\texports.JavascriptCodePipe = JavascriptCodePipe;\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n\tThe following batches are equivalent:\n\t\n\tvar beautify_js = require('js-beautify');\n\tvar beautify_js = require('js-beautify').js;\n\tvar beautify_js = require('js-beautify').js_beautify;\n\t\n\tvar beautify_css = require('js-beautify').css;\n\tvar beautify_css = require('js-beautify').css_beautify;\n\t\n\tvar beautify_html = require('js-beautify').html;\n\tvar beautify_html = require('js-beautify').html_beautify;\n\t\n\tAll methods returned accept two arguments, the source string and an options object.\n\t**/\n\t\n\tfunction get_beautify(js_beautify, css_beautify, html_beautify) {\n\t    // the default is js\n\t    var beautify = function(src, config) {\n\t        return js_beautify.js_beautify(src, config);\n\t    };\n\t\n\t    // short aliases\n\t    beautify.js = js_beautify.js_beautify;\n\t    beautify.css = css_beautify.css_beautify;\n\t    beautify.html = html_beautify.html_beautify;\n\t\n\t    // legacy aliases\n\t    beautify.js_beautify = js_beautify.js_beautify;\n\t    beautify.css_beautify = css_beautify.css_beautify;\n\t    beautify.html_beautify = html_beautify.html_beautify;\n\t\n\t    return beautify;\n\t}\n\t\n\tif (true) {\n\t    // Add support for AMD ( https://github.com/amdjs/amdjs-api/wiki/AMD#defineamd-property- )\n\t    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t        __webpack_require__(10),\n\t        __webpack_require__(11),\n\t        __webpack_require__(12)\n\t    ], __WEBPACK_AMD_DEFINE_RESULT__ = function(js_beautify, css_beautify, html_beautify) {\n\t        return get_beautify(js_beautify, css_beautify, html_beautify);\n\t    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t} else {\n\t    (function(mod) {\n\t        var js_beautify = require('./lib/beautify');\n\t        var css_beautify = require('./lib/beautify-css');\n\t        var html_beautify = require('./lib/beautify-html');\n\t\n\t        mod.exports = get_beautify(js_beautify, css_beautify, html_beautify);\n\t\n\t    })(module);\n\t}\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*jshint curly:true, eqeqeq:true, laxbreak:true, noempty:false */\n\t/*\n\t\n\t  The MIT License (MIT)\n\t\n\t  Copyright (c) 2007-2013 Einar Lielmanis and contributors.\n\t\n\t  Permission is hereby granted, free of charge, to any person\n\t  obtaining a copy of this software and associated documentation files\n\t  (the \"Software\"), to deal in the Software without restriction,\n\t  including without limitation the rights to use, copy, modify, merge,\n\t  publish, distribute, sublicense, and/or sell copies of the Software,\n\t  and to permit persons to whom the Software is furnished to do so,\n\t  subject to the following conditions:\n\t\n\t  The above copyright notice and this permission notice shall be\n\t  included in all copies or substantial portions of the Software.\n\t\n\t  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n\t  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n\t  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n\t  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n\t  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n\t  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\t  SOFTWARE.\n\t\n\t JS Beautifier\n\t---------------\n\t\n\t\n\t  Written by Einar Lielmanis, <einar@jsbeautifier.org>\n\t      http://jsbeautifier.org/\n\t\n\t  Originally converted to javascript by Vital, <vital76@gmail.com>\n\t  \"End braces on own line\" added by Chris J. Shull, <chrisjshull@gmail.com>\n\t  Parsing improvements for brace-less statements by Liam Newman <bitwiseman@gmail.com>\n\t\n\t\n\t  Usage:\n\t    js_beautify(js_source_text);\n\t    js_beautify(js_source_text, options);\n\t\n\t  The options are:\n\t    indent_size (default 4)          - indentation size,\n\t    indent_char (default space)      - character to indent with,\n\t    preserve_newlines (default true) - whether existing line breaks should be preserved,\n\t    max_preserve_newlines (default unlimited) - maximum number of line breaks to be preserved in one chunk,\n\t\n\t    jslint_happy (default false) - if true, then jslint-stricter mode is enforced.\n\t\n\t            jslint_happy        !jslint_happy\n\t            ---------------------------------\n\t            function ()         function()\n\t\n\t            switch () {         switch() {\n\t            case 1:               case 1:\n\t              break;                break;\n\t            }                   }\n\t\n\t    space_after_anon_function (default false) - should the space before an anonymous function's parens be added, \"function()\" vs \"function ()\",\n\t          NOTE: This option is overriden by jslint_happy (i.e. if jslint_happy is true, space_after_anon_function is true by design)\n\t\n\t    brace_style (default \"collapse\") - \"collapse-preserve-inline\" | \"collapse\" | \"expand\" | \"end-expand\" | \"none\"\n\t            put braces on the same line as control statements (default), or put braces on own line (Allman / ANSI style), or just put end braces on own line, or attempt to keep them where they are.\n\t\n\t    space_before_conditional (default true) - should the space before conditional statement be added, \"if(true)\" vs \"if (true)\",\n\t\n\t    unescape_strings (default false) - should printable characters in strings encoded in \\xNN notation be unescaped, \"example\" vs \"\\x65\\x78\\x61\\x6d\\x70\\x6c\\x65\"\n\t\n\t    wrap_line_length (default unlimited) - lines should wrap at next opportunity after this number of characters.\n\t          NOTE: This is not a hard limit. Lines will continue until a point where a newline would\n\t                be preserved if it were present.\n\t\n\t    end_with_newline (default false)  - end output with a newline\n\t\n\t\n\t    e.g\n\t\n\t    js_beautify(js_source_text, {\n\t      'indent_size': 1,\n\t      'indent_char': '\\t'\n\t    });\n\t\n\t*/\n\t\n\t// Object.values polyfill found here:\n\t// http://tokenposts.blogspot.com.au/2012/04/javascript-objectkeys-browser.html\n\tif (!Object.values) {\n\t    Object.values = function(o) {\n\t        if (o !== Object(o)) {\n\t            throw new TypeError('Object.values called on a non-object');\n\t        }\n\t        var k = [],\n\t            p;\n\t        for (p in o) {\n\t            if (Object.prototype.hasOwnProperty.call(o, p)) {\n\t                k.push(o[p]);\n\t            }\n\t        }\n\t        return k;\n\t    };\n\t}\n\t\n\t(function() {\n\t\n\t    function js_beautify(js_source_text, options) {\n\t\n\t        var acorn = {};\n\t        (function(exports) {\n\t            /* jshint curly: false */\n\t            // This section of code is taken from acorn.\n\t            //\n\t            // Acorn was written by Marijn Haverbeke and released under an MIT\n\t            // license. The Unicode regexps (for identifiers and whitespace) were\n\t            // taken from [Esprima](http://esprima.org) by Ariya Hidayat.\n\t            //\n\t            // Git repositories for Acorn are available at\n\t            //\n\t            //     http://marijnhaverbeke.nl/git/acorn\n\t            //     https://github.com/marijnh/acorn.git\n\t\n\t            // ## Character categories\n\t\n\t            // Big ugly regular expressions that match characters in the\n\t            // whitespace, identifier, and identifier-start categories. These\n\t            // are only applied when a character is found to actually have a\n\t            // code point above 128.\n\t\n\t            var nonASCIIwhitespace = /[\\u1680\\u180e\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/; // jshint ignore:line\n\t            var nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u08a0\\u08a2-\\u08ac\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097f\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d\\u0c58\\u0c59\\u0c60\\u0c61\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d60\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19c1-\\u19c7\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2e2f\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua697\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa80-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\n\t            var nonASCIIidentifierChars = \"\\u0300-\\u036f\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u0620-\\u0649\\u0672-\\u06d3\\u06e7-\\u06e8\\u06fb-\\u06fc\\u0730-\\u074a\\u0800-\\u0814\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0840-\\u0857\\u08e4-\\u08fe\\u0900-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962-\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09d7\\u09df-\\u09e0\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2-\\u0ae3\\u0ae6-\\u0aef\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b5f-\\u0b60\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c01-\\u0c03\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62-\\u0c63\\u0c66-\\u0c6f\\u0c82\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2-\\u0ce3\\u0ce6-\\u0cef\\u0d02\\u0d03\\u0d46-\\u0d48\\u0d57\\u0d62-\\u0d63\\u0d66-\\u0d6f\\u0d82\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0df2\\u0df3\\u0e34-\\u0e3a\\u0e40-\\u0e45\\u0e50-\\u0e59\\u0eb4-\\u0eb9\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f41-\\u0f47\\u0f71-\\u0f84\\u0f86-\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u1000-\\u1029\\u1040-\\u1049\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u170e-\\u1710\\u1720-\\u1730\\u1740-\\u1750\\u1772\\u1773\\u1780-\\u17b2\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u1920-\\u192b\\u1930-\\u193b\\u1951-\\u196d\\u19b0-\\u19c0\\u19c8-\\u19c9\\u19d0-\\u19d9\\u1a00-\\u1a15\\u1a20-\\u1a53\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1b46-\\u1b4b\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c00-\\u1c22\\u1c40-\\u1c49\\u1c5b-\\u1c7d\\u1cd0-\\u1cd2\\u1d00-\\u1dbe\\u1e01-\\u1f15\\u200c\\u200d\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2d81-\\u2d96\\u2de0-\\u2dff\\u3021-\\u3028\\u3099\\u309a\\ua640-\\ua66d\\ua674-\\ua67d\\ua69f\\ua6f0-\\ua6f1\\ua7f8-\\ua800\\ua806\\ua80b\\ua823-\\ua827\\ua880-\\ua881\\ua8b4-\\ua8c4\\ua8d0-\\ua8d9\\ua8f3-\\ua8f7\\ua900-\\ua909\\ua926-\\ua92d\\ua930-\\ua945\\ua980-\\ua983\\ua9b3-\\ua9c0\\uaa00-\\uaa27\\uaa40-\\uaa41\\uaa4c-\\uaa4d\\uaa50-\\uaa59\\uaa7b\\uaae0-\\uaae9\\uaaf2-\\uaaf3\\uabc0-\\uabe1\\uabec\\uabed\\uabf0-\\uabf9\\ufb20-\\ufb28\\ufe00-\\ufe0f\\ufe20-\\ufe26\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\n\t            var nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\n\t            var nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\n\t\n\t            // Whether a single character denotes a newline.\n\t\n\t            exports.newline = /[\\n\\r\\u2028\\u2029]/;\n\t\n\t            // Matches a whole line break (where CRLF is considered a single\n\t            // line break). Used to count lines.\n\t\n\t            // in javascript, these two differ\n\t            // in python they are the same, different methods are called on them\n\t            exports.lineBreak = new RegExp('\\r\\n|' + exports.newline.source);\n\t            exports.allLineBreaks = new RegExp(exports.lineBreak.source, 'g');\n\t\n\t\n\t            // Test whether a given character code starts an identifier.\n\t\n\t            exports.isIdentifierStart = function(code) {\n\t                // permit $ (36) and @ (64). @ is used in ES7 decorators.\n\t                if (code < 65) return code === 36 || code === 64;\n\t                // 65 through 91 are uppercase letters.\n\t                if (code < 91) return true;\n\t                // permit _ (95).\n\t                if (code < 97) return code === 95;\n\t                // 97 through 123 are lowercase letters.\n\t                if (code < 123) return true;\n\t                return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\n\t            };\n\t\n\t            // Test whether a given character is part of an identifier.\n\t\n\t            exports.isIdentifierChar = function(code) {\n\t                if (code < 48) return code === 36;\n\t                if (code < 58) return true;\n\t                if (code < 65) return false;\n\t                if (code < 91) return true;\n\t                if (code < 97) return code === 95;\n\t                if (code < 123) return true;\n\t                return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n\t            };\n\t        })(acorn);\n\t        /* jshint curly: true */\n\t\n\t        function in_array(what, arr) {\n\t            for (var i = 0; i < arr.length; i += 1) {\n\t                if (arr[i] === what) {\n\t                    return true;\n\t                }\n\t            }\n\t            return false;\n\t        }\n\t\n\t        function trim(s) {\n\t            return s.replace(/^\\s+|\\s+$/g, '');\n\t        }\n\t\n\t        function ltrim(s) {\n\t            return s.replace(/^\\s+/g, '');\n\t        }\n\t\n\t        // function rtrim(s) {\n\t        //     return s.replace(/\\s+$/g, '');\n\t        // }\n\t\n\t        function sanitizeOperatorPosition(opPosition) {\n\t            opPosition = opPosition || OPERATOR_POSITION.before_newline;\n\t\n\t            var validPositionValues = Object.values(OPERATOR_POSITION);\n\t\n\t            if (!in_array(opPosition, validPositionValues)) {\n\t                throw new Error(\"Invalid Option Value: The option 'operator_position' must be one of the following values\\n\" +\n\t                    validPositionValues +\n\t                    \"\\nYou passed in: '\" + opPosition + \"'\");\n\t            }\n\t\n\t            return opPosition;\n\t        }\n\t\n\t        var OPERATOR_POSITION = {\n\t            before_newline: 'before-newline',\n\t            after_newline: 'after-newline',\n\t            preserve_newline: 'preserve-newline',\n\t        };\n\t\n\t        var OPERATOR_POSITION_BEFORE_OR_PRESERVE = [OPERATOR_POSITION.before_newline, OPERATOR_POSITION.preserve_newline];\n\t\n\t        var MODE = {\n\t            BlockStatement: 'BlockStatement', // 'BLOCK'\n\t            Statement: 'Statement', // 'STATEMENT'\n\t            ObjectLiteral: 'ObjectLiteral', // 'OBJECT',\n\t            ArrayLiteral: 'ArrayLiteral', //'[EXPRESSION]',\n\t            ForInitializer: 'ForInitializer', //'(FOR-EXPRESSION)',\n\t            Conditional: 'Conditional', //'(COND-EXPRESSION)',\n\t            Expression: 'Expression' //'(EXPRESSION)'\n\t        };\n\t\n\t        function Beautifier(js_source_text, options) {\n\t            \"use strict\";\n\t            var output;\n\t            var tokens = [],\n\t                token_pos;\n\t            var Tokenizer;\n\t            var current_token;\n\t            var last_type, last_last_text, indent_string;\n\t            var flags, previous_flags, flag_store;\n\t            var prefix;\n\t\n\t            var handlers, opt;\n\t            var baseIndentString = '';\n\t\n\t            handlers = {\n\t                'TK_START_EXPR': handle_start_expr,\n\t                'TK_END_EXPR': handle_end_expr,\n\t                'TK_START_BLOCK': handle_start_block,\n\t                'TK_END_BLOCK': handle_end_block,\n\t                'TK_WORD': handle_word,\n\t                'TK_RESERVED': handle_word,\n\t                'TK_SEMICOLON': handle_semicolon,\n\t                'TK_STRING': handle_string,\n\t                'TK_EQUALS': handle_equals,\n\t                'TK_OPERATOR': handle_operator,\n\t                'TK_COMMA': handle_comma,\n\t                'TK_BLOCK_COMMENT': handle_block_comment,\n\t                'TK_COMMENT': handle_comment,\n\t                'TK_DOT': handle_dot,\n\t                'TK_UNKNOWN': handle_unknown,\n\t                'TK_EOF': handle_eof\n\t            };\n\t\n\t            function create_flags(flags_base, mode) {\n\t                var next_indent_level = 0;\n\t                if (flags_base) {\n\t                    next_indent_level = flags_base.indentation_level;\n\t                    if (!output.just_added_newline() &&\n\t                        flags_base.line_indent_level > next_indent_level) {\n\t                        next_indent_level = flags_base.line_indent_level;\n\t                    }\n\t                }\n\t\n\t                var next_flags = {\n\t                    mode: mode,\n\t                    parent: flags_base,\n\t                    last_text: flags_base ? flags_base.last_text : '', // last token text\n\t                    last_word: flags_base ? flags_base.last_word : '', // last 'TK_WORD' passed\n\t                    declaration_statement: false,\n\t                    declaration_assignment: false,\n\t                    multiline_frame: false,\n\t                    inline_frame: false,\n\t                    if_block: false,\n\t                    else_block: false,\n\t                    do_block: false,\n\t                    do_while: false,\n\t                    import_block: false,\n\t                    in_case_statement: false, // switch(..){ INSIDE HERE }\n\t                    in_case: false, // we're on the exact line with \"case 0:\"\n\t                    case_body: false, // the indented case-action block\n\t                    indentation_level: next_indent_level,\n\t                    line_indent_level: flags_base ? flags_base.line_indent_level : next_indent_level,\n\t                    start_line_index: output.get_line_number(),\n\t                    ternary_depth: 0\n\t                };\n\t                return next_flags;\n\t            }\n\t\n\t            // Some interpreters have unexpected results with foo = baz || bar;\n\t            options = options ? options : {};\n\t            opt = {};\n\t\n\t            // compatibility\n\t            if (options.braces_on_own_line !== undefined) { //graceful handling of deprecated option\n\t                opt.brace_style = options.braces_on_own_line ? \"expand\" : \"collapse\";\n\t            }\n\t            opt.brace_style = options.brace_style ? options.brace_style : (opt.brace_style ? opt.brace_style : \"collapse\");\n\t\n\t            // graceful handling of deprecated option\n\t            if (opt.brace_style === \"expand-strict\") {\n\t                opt.brace_style = \"expand\";\n\t            }\n\t\n\t            opt.indent_size = options.indent_size ? parseInt(options.indent_size, 10) : 4;\n\t            opt.indent_char = options.indent_char ? options.indent_char : ' ';\n\t            opt.eol = options.eol ? options.eol : 'auto';\n\t            opt.preserve_newlines = (options.preserve_newlines === undefined) ? true : options.preserve_newlines;\n\t            opt.break_chained_methods = (options.break_chained_methods === undefined) ? false : options.break_chained_methods;\n\t            opt.max_preserve_newlines = (options.max_preserve_newlines === undefined) ? 0 : parseInt(options.max_preserve_newlines, 10);\n\t            opt.space_in_paren = (options.space_in_paren === undefined) ? false : options.space_in_paren;\n\t            opt.space_in_empty_paren = (options.space_in_empty_paren === undefined) ? false : options.space_in_empty_paren;\n\t            opt.jslint_happy = (options.jslint_happy === undefined) ? false : options.jslint_happy;\n\t            opt.space_after_anon_function = (options.space_after_anon_function === undefined) ? false : options.space_after_anon_function;\n\t            opt.keep_array_indentation = (options.keep_array_indentation === undefined) ? false : options.keep_array_indentation;\n\t            opt.space_before_conditional = (options.space_before_conditional === undefined) ? true : options.space_before_conditional;\n\t            opt.unescape_strings = (options.unescape_strings === undefined) ? false : options.unescape_strings;\n\t            opt.wrap_line_length = (options.wrap_line_length === undefined) ? 0 : parseInt(options.wrap_line_length, 10);\n\t            opt.e4x = (options.e4x === undefined) ? false : options.e4x;\n\t            opt.end_with_newline = (options.end_with_newline === undefined) ? false : options.end_with_newline;\n\t            opt.comma_first = (options.comma_first === undefined) ? false : options.comma_first;\n\t            opt.operator_position = sanitizeOperatorPosition(options.operator_position);\n\t\n\t            // For testing of beautify ignore:start directive\n\t            opt.test_output_raw = (options.test_output_raw === undefined) ? false : options.test_output_raw;\n\t\n\t            // force opt.space_after_anon_function to true if opt.jslint_happy\n\t            if (opt.jslint_happy) {\n\t                opt.space_after_anon_function = true;\n\t            }\n\t\n\t            if (options.indent_with_tabs) {\n\t                opt.indent_char = '\\t';\n\t                opt.indent_size = 1;\n\t            }\n\t\n\t            if (opt.eol === 'auto') {\n\t                opt.eol = '\\n';\n\t                if (js_source_text && acorn.lineBreak.test(js_source_text || '')) {\n\t                    opt.eol = js_source_text.match(acorn.lineBreak)[0];\n\t                }\n\t            }\n\t\n\t            opt.eol = opt.eol.replace(/\\\\r/, '\\r').replace(/\\\\n/, '\\n');\n\t\n\t            //----------------------------------\n\t            indent_string = '';\n\t            while (opt.indent_size > 0) {\n\t                indent_string += opt.indent_char;\n\t                opt.indent_size -= 1;\n\t            }\n\t\n\t            var preindent_index = 0;\n\t            if (js_source_text && js_source_text.length) {\n\t                while ((js_source_text.charAt(preindent_index) === ' ' ||\n\t                        js_source_text.charAt(preindent_index) === '\\t')) {\n\t                    baseIndentString += js_source_text.charAt(preindent_index);\n\t                    preindent_index += 1;\n\t                }\n\t                js_source_text = js_source_text.substring(preindent_index);\n\t            }\n\t\n\t            last_type = 'TK_START_BLOCK'; // last token type\n\t            last_last_text = ''; // pre-last token text\n\t            output = new Output(indent_string, baseIndentString);\n\t\n\t            // If testing the ignore directive, start with output disable set to true\n\t            output.raw = opt.test_output_raw;\n\t\n\t\n\t            // Stack of parsing/formatting states, including MODE.\n\t            // We tokenize, parse, and output in an almost purely a forward-only stream of token input\n\t            // and formatted output.  This makes the beautifier less accurate than full parsers\n\t            // but also far more tolerant of syntax errors.\n\t            //\n\t            // For example, the default mode is MODE.BlockStatement. If we see a '{' we push a new frame of type\n\t            // MODE.BlockStatement on the the stack, even though it could be object literal.  If we later\n\t            // encounter a \":\", we'll switch to to MODE.ObjectLiteral.  If we then see a \";\",\n\t            // most full parsers would die, but the beautifier gracefully falls back to\n\t            // MODE.BlockStatement and continues on.\n\t            flag_store = [];\n\t            set_mode(MODE.BlockStatement);\n\t\n\t            this.beautify = function() {\n\t\n\t                /*jshint onevar:true */\n\t                var local_token, sweet_code;\n\t                Tokenizer = new tokenizer(js_source_text, opt, indent_string);\n\t                tokens = Tokenizer.tokenize();\n\t                token_pos = 0;\n\t\n\t                function get_local_token() {\n\t                    local_token = get_token();\n\t                    return local_token;\n\t                }\n\t\n\t                while (get_local_token()) {\n\t                    for (var i = 0; i < local_token.comments_before.length; i++) {\n\t                        // The cleanest handling of inline comments is to treat them as though they aren't there.\n\t                        // Just continue formatting and the behavior should be logical.\n\t                        // Also ignore unknown tokens.  Again, this should result in better behavior.\n\t                        handle_token(local_token.comments_before[i]);\n\t                    }\n\t                    handle_token(local_token);\n\t\n\t                    last_last_text = flags.last_text;\n\t                    last_type = local_token.type;\n\t                    flags.last_text = local_token.text;\n\t\n\t                    token_pos += 1;\n\t                }\n\t\n\t                sweet_code = output.get_code();\n\t                if (opt.end_with_newline) {\n\t                    sweet_code += '\\n';\n\t                }\n\t\n\t                if (opt.eol !== '\\n') {\n\t                    sweet_code = sweet_code.replace(/[\\n]/g, opt.eol);\n\t                }\n\t\n\t                return sweet_code;\n\t            };\n\t\n\t            function handle_token(local_token) {\n\t                var newlines = local_token.newlines;\n\t                var keep_whitespace = opt.keep_array_indentation && is_array(flags.mode);\n\t\n\t                if (keep_whitespace) {\n\t                    for (var i = 0; i < newlines; i += 1) {\n\t                        print_newline(i > 0);\n\t                    }\n\t                } else {\n\t                    if (opt.max_preserve_newlines && newlines > opt.max_preserve_newlines) {\n\t                        newlines = opt.max_preserve_newlines;\n\t                    }\n\t\n\t                    if (opt.preserve_newlines) {\n\t                        if (local_token.newlines > 1) {\n\t                            print_newline();\n\t                            for (var j = 1; j < newlines; j += 1) {\n\t                                print_newline(true);\n\t                            }\n\t                        }\n\t                    }\n\t                }\n\t\n\t                current_token = local_token;\n\t                handlers[current_token.type]();\n\t            }\n\t\n\t            // we could use just string.split, but\n\t            // IE doesn't like returning empty strings\n\t            function split_linebreaks(s) {\n\t                //return s.split(/\\x0d\\x0a|\\x0a/);\n\t\n\t                s = s.replace(acorn.allLineBreaks, '\\n');\n\t                var out = [],\n\t                    idx = s.indexOf(\"\\n\");\n\t                while (idx !== -1) {\n\t                    out.push(s.substring(0, idx));\n\t                    s = s.substring(idx + 1);\n\t                    idx = s.indexOf(\"\\n\");\n\t                }\n\t                if (s.length) {\n\t                    out.push(s);\n\t                }\n\t                return out;\n\t            }\n\t\n\t            var newline_restricted_tokens = ['break', 'continue', 'return', 'throw'];\n\t\n\t            function allow_wrap_or_preserved_newline(force_linewrap) {\n\t                force_linewrap = (force_linewrap === undefined) ? false : force_linewrap;\n\t\n\t                // Never wrap the first token on a line\n\t                if (output.just_added_newline()) {\n\t                    return;\n\t                }\n\t\n\t                var shouldPreserveOrForce = (opt.preserve_newlines && current_token.wanted_newline) || force_linewrap;\n\t                var operatorLogicApplies = in_array(flags.last_text, Tokenizer.positionable_operators) || in_array(current_token.text, Tokenizer.positionable_operators);\n\t\n\t                if (operatorLogicApplies) {\n\t                    var shouldPrintOperatorNewline = (\n\t                            in_array(flags.last_text, Tokenizer.positionable_operators) &&\n\t                            in_array(opt.operator_position, OPERATOR_POSITION_BEFORE_OR_PRESERVE)\n\t                        ) ||\n\t                        in_array(current_token.text, Tokenizer.positionable_operators);\n\t                    shouldPreserveOrForce = shouldPreserveOrForce && shouldPrintOperatorNewline;\n\t                }\n\t\n\t                if (shouldPreserveOrForce) {\n\t                    print_newline(false, true);\n\t                } else if (opt.wrap_line_length) {\n\t                    if (last_type === 'TK_RESERVED' && in_array(flags.last_text, newline_restricted_tokens)) {\n\t                        // These tokens should never have a newline inserted\n\t                        // between them and the following expression.\n\t                        return;\n\t                    }\n\t                    var proposed_line_length = output.current_line.get_character_count() + current_token.text.length +\n\t                        (output.space_before_token ? 1 : 0);\n\t                    if (proposed_line_length >= opt.wrap_line_length) {\n\t                        print_newline(false, true);\n\t                    }\n\t                }\n\t            }\n\t\n\t            function print_newline(force_newline, preserve_statement_flags) {\n\t                if (!preserve_statement_flags) {\n\t                    if (flags.last_text !== ';' && flags.last_text !== ',' && flags.last_text !== '=' && last_type !== 'TK_OPERATOR') {\n\t                        while (flags.mode === MODE.Statement && !flags.if_block && !flags.do_block) {\n\t                            restore_mode();\n\t                        }\n\t                    }\n\t                }\n\t\n\t                if (output.add_new_line(force_newline)) {\n\t                    flags.multiline_frame = true;\n\t                }\n\t            }\n\t\n\t            function print_token_line_indentation() {\n\t                if (output.just_added_newline()) {\n\t                    if (opt.keep_array_indentation && is_array(flags.mode) && current_token.wanted_newline) {\n\t                        output.current_line.push(current_token.whitespace_before);\n\t                        output.space_before_token = false;\n\t                    } else if (output.set_indent(flags.indentation_level)) {\n\t                        flags.line_indent_level = flags.indentation_level;\n\t                    }\n\t                }\n\t            }\n\t\n\t            function print_token(printable_token) {\n\t                if (output.raw) {\n\t                    output.add_raw_token(current_token);\n\t                    return;\n\t                }\n\t\n\t                if (opt.comma_first && last_type === 'TK_COMMA' &&\n\t                    output.just_added_newline()) {\n\t                    if (output.previous_line.last() === ',') {\n\t                        var popped = output.previous_line.pop();\n\t                        // if the comma was already at the start of the line,\n\t                        // pull back onto that line and reprint the indentation\n\t                        if (output.previous_line.is_empty()) {\n\t                            output.previous_line.push(popped);\n\t                            output.trim(true);\n\t                            output.current_line.pop();\n\t                            output.trim();\n\t                        }\n\t\n\t                        // add the comma in front of the next token\n\t                        print_token_line_indentation();\n\t                        output.add_token(',');\n\t                        output.space_before_token = true;\n\t                    }\n\t                }\n\t\n\t                printable_token = printable_token || current_token.text;\n\t                print_token_line_indentation();\n\t                output.add_token(printable_token);\n\t            }\n\t\n\t            function indent() {\n\t                flags.indentation_level += 1;\n\t            }\n\t\n\t            function deindent() {\n\t                if (flags.indentation_level > 0 &&\n\t                    ((!flags.parent) || flags.indentation_level > flags.parent.indentation_level)) {\n\t                    flags.indentation_level -= 1;\n\t\n\t                }\n\t            }\n\t\n\t            function set_mode(mode) {\n\t                if (flags) {\n\t                    flag_store.push(flags);\n\t                    previous_flags = flags;\n\t                } else {\n\t                    previous_flags = create_flags(null, mode);\n\t                }\n\t\n\t                flags = create_flags(previous_flags, mode);\n\t            }\n\t\n\t            function is_array(mode) {\n\t                return mode === MODE.ArrayLiteral;\n\t            }\n\t\n\t            function is_expression(mode) {\n\t                return in_array(mode, [MODE.Expression, MODE.ForInitializer, MODE.Conditional]);\n\t            }\n\t\n\t            function restore_mode() {\n\t                if (flag_store.length > 0) {\n\t                    previous_flags = flags;\n\t                    flags = flag_store.pop();\n\t                    if (previous_flags.mode === MODE.Statement) {\n\t                        output.remove_redundant_indentation(previous_flags);\n\t                    }\n\t                }\n\t            }\n\t\n\t            function start_of_object_property() {\n\t                return flags.parent.mode === MODE.ObjectLiteral && flags.mode === MODE.Statement && (\n\t                    (flags.last_text === ':' && flags.ternary_depth === 0) || (last_type === 'TK_RESERVED' && in_array(flags.last_text, ['get', 'set'])));\n\t            }\n\t\n\t            function start_of_statement() {\n\t                if (\n\t                    (last_type === 'TK_RESERVED' && in_array(flags.last_text, ['var', 'let', 'const']) && current_token.type === 'TK_WORD') ||\n\t                    (last_type === 'TK_RESERVED' && flags.last_text === 'do') ||\n\t                    (last_type === 'TK_RESERVED' && in_array(flags.last_text, ['return', 'throw']) && !current_token.wanted_newline) ||\n\t                    (last_type === 'TK_RESERVED' && flags.last_text === 'else' && !(current_token.type === 'TK_RESERVED' && current_token.text === 'if')) ||\n\t                    (last_type === 'TK_END_EXPR' && (previous_flags.mode === MODE.ForInitializer || previous_flags.mode === MODE.Conditional)) ||\n\t                    (last_type === 'TK_WORD' && flags.mode === MODE.BlockStatement &&\n\t                        !flags.in_case &&\n\t                        !(current_token.text === '--' || current_token.text === '++') &&\n\t                        last_last_text !== 'function' &&\n\t                        current_token.type !== 'TK_WORD' && current_token.type !== 'TK_RESERVED') ||\n\t                    (flags.mode === MODE.ObjectLiteral && (\n\t                        (flags.last_text === ':' && flags.ternary_depth === 0) || (last_type === 'TK_RESERVED' && in_array(flags.last_text, ['get', 'set']))))\n\t                ) {\n\t\n\t                    set_mode(MODE.Statement);\n\t                    indent();\n\t\n\t                    if (last_type === 'TK_RESERVED' && in_array(flags.last_text, ['var', 'let', 'const']) && current_token.type === 'TK_WORD') {\n\t                        flags.declaration_statement = true;\n\t                    }\n\t\n\t                    // Issue #276:\n\t                    // If starting a new statement with [if, for, while, do], push to a new line.\n\t                    // if (a) if (b) if(c) d(); else e(); else f();\n\t                    if (!start_of_object_property()) {\n\t                        allow_wrap_or_preserved_newline(\n\t                            current_token.type === 'TK_RESERVED' && in_array(current_token.text, ['do', 'for', 'if', 'while']));\n\t                    }\n\t\n\t                    return true;\n\t                }\n\t                return false;\n\t            }\n\t\n\t            function all_lines_start_with(lines, c) {\n\t                for (var i = 0; i < lines.length; i++) {\n\t                    var line = trim(lines[i]);\n\t                    if (line.charAt(0) !== c) {\n\t                        return false;\n\t                    }\n\t                }\n\t                return true;\n\t            }\n\t\n\t            function each_line_matches_indent(lines, indent) {\n\t                var i = 0,\n\t                    len = lines.length,\n\t                    line;\n\t                for (; i < len; i++) {\n\t                    line = lines[i];\n\t                    // allow empty lines to pass through\n\t                    if (line && line.indexOf(indent) !== 0) {\n\t                        return false;\n\t                    }\n\t                }\n\t                return true;\n\t            }\n\t\n\t            function is_special_word(word) {\n\t                return in_array(word, ['case', 'return', 'do', 'if', 'throw', 'else']);\n\t            }\n\t\n\t            function get_token(offset) {\n\t                var index = token_pos + (offset || 0);\n\t                return (index < 0 || index >= tokens.length) ? null : tokens[index];\n\t            }\n\t\n\t            function handle_start_expr() {\n\t                if (start_of_statement()) {\n\t                    // The conditional starts the statement if appropriate.\n\t                }\n\t\n\t                var next_mode = MODE.Expression;\n\t                if (current_token.text === '[') {\n\t\n\t                    if (last_type === 'TK_WORD' || flags.last_text === ')') {\n\t                        // this is array index specifier, break immediately\n\t                        // a[x], fn()[x]\n\t                        if (last_type === 'TK_RESERVED' && in_array(flags.last_text, Tokenizer.line_starters)) {\n\t                            output.space_before_token = true;\n\t                        }\n\t                        set_mode(next_mode);\n\t                        print_token();\n\t                        indent();\n\t                        if (opt.space_in_paren) {\n\t                            output.space_before_token = true;\n\t                        }\n\t                        return;\n\t                    }\n\t\n\t                    next_mode = MODE.ArrayLiteral;\n\t                    if (is_array(flags.mode)) {\n\t                        if (flags.last_text === '[' ||\n\t                            (flags.last_text === ',' && (last_last_text === ']' || last_last_text === '}'))) {\n\t                            // ], [ goes to new line\n\t                            // }, [ goes to new line\n\t                            if (!opt.keep_array_indentation) {\n\t                                print_newline();\n\t                            }\n\t                        }\n\t                    }\n\t\n\t                } else {\n\t                    if (last_type === 'TK_RESERVED' && flags.last_text === 'for') {\n\t                        next_mode = MODE.ForInitializer;\n\t                    } else if (last_type === 'TK_RESERVED' && in_array(flags.last_text, ['if', 'while'])) {\n\t                        next_mode = MODE.Conditional;\n\t                    } else {\n\t                        // next_mode = MODE.Expression;\n\t                    }\n\t                }\n\t\n\t                if (flags.last_text === ';' || last_type === 'TK_START_BLOCK') {\n\t                    print_newline();\n\t                } else if (last_type === 'TK_END_EXPR' || last_type === 'TK_START_EXPR' || last_type === 'TK_END_BLOCK' || flags.last_text === '.') {\n\t                    // TODO: Consider whether forcing this is required.  Review failing tests when removed.\n\t                    allow_wrap_or_preserved_newline(current_token.wanted_newline);\n\t                    // do nothing on (( and )( and ][ and ]( and .(\n\t                } else if (!(last_type === 'TK_RESERVED' && current_token.text === '(') && last_type !== 'TK_WORD' && last_type !== 'TK_OPERATOR') {\n\t                    output.space_before_token = true;\n\t                } else if ((last_type === 'TK_RESERVED' && (flags.last_word === 'function' || flags.last_word === 'typeof')) ||\n\t                    (flags.last_text === '*' &&\n\t                        (in_array(last_last_text, ['function', 'yield']) ||\n\t                            (flags.mode === MODE.ObjectLiteral && in_array(last_last_text, ['{', ',']))))) {\n\t                    // function() vs function ()\n\t                    // yield*() vs yield* ()\n\t                    // function*() vs function* ()\n\t                    if (opt.space_after_anon_function) {\n\t                        output.space_before_token = true;\n\t                    }\n\t                } else if (last_type === 'TK_RESERVED' && (in_array(flags.last_text, Tokenizer.line_starters) || flags.last_text === 'catch')) {\n\t                    if (opt.space_before_conditional) {\n\t                        output.space_before_token = true;\n\t                    }\n\t                }\n\t\n\t                // Should be a space between await and an IIFE\n\t                if (current_token.text === '(' && last_type === 'TK_RESERVED' && flags.last_word === 'await') {\n\t                    output.space_before_token = true;\n\t                }\n\t\n\t                // Support of this kind of newline preservation.\n\t                // a = (b &&\n\t                //     (c || d));\n\t                if (current_token.text === '(') {\n\t                    if (last_type === 'TK_EQUALS' || last_type === 'TK_OPERATOR') {\n\t                        if (!start_of_object_property()) {\n\t                            allow_wrap_or_preserved_newline();\n\t                        }\n\t                    }\n\t                }\n\t\n\t                // Support preserving wrapped arrow function expressions\n\t                // a.b('c',\n\t                //     () => d.e\n\t                // )\n\t                if (current_token.text === '(' && last_type !== 'TK_WORD' && last_type !== 'TK_RESERVED') {\n\t                    allow_wrap_or_preserved_newline();\n\t                }\n\t\n\t                set_mode(next_mode);\n\t                print_token();\n\t                if (opt.space_in_paren) {\n\t                    output.space_before_token = true;\n\t                }\n\t\n\t                // In all cases, if we newline while inside an expression it should be indented.\n\t                indent();\n\t            }\n\t\n\t            function handle_end_expr() {\n\t                // statements inside expressions are not valid syntax, but...\n\t                // statements must all be closed when their container closes\n\t                while (flags.mode === MODE.Statement) {\n\t                    restore_mode();\n\t                }\n\t\n\t                if (flags.multiline_frame) {\n\t                    allow_wrap_or_preserved_newline(current_token.text === ']' && is_array(flags.mode) && !opt.keep_array_indentation);\n\t                }\n\t\n\t                if (opt.space_in_paren) {\n\t                    if (last_type === 'TK_START_EXPR' && !opt.space_in_empty_paren) {\n\t                        // () [] no inner space in empty parens like these, ever, ref #320\n\t                        output.trim();\n\t                        output.space_before_token = false;\n\t                    } else {\n\t                        output.space_before_token = true;\n\t                    }\n\t                }\n\t                if (current_token.text === ']' && opt.keep_array_indentation) {\n\t                    print_token();\n\t                    restore_mode();\n\t                } else {\n\t                    restore_mode();\n\t                    print_token();\n\t                }\n\t                output.remove_redundant_indentation(previous_flags);\n\t\n\t                // do {} while () // no statement required after\n\t                if (flags.do_while && previous_flags.mode === MODE.Conditional) {\n\t                    previous_flags.mode = MODE.Expression;\n\t                    flags.do_block = false;\n\t                    flags.do_while = false;\n\t\n\t                }\n\t            }\n\t\n\t            function handle_start_block() {\n\t                // Check if this is should be treated as a ObjectLiteral\n\t                var next_token = get_token(1);\n\t                var second_token = get_token(2);\n\t                if (second_token && (\n\t                        (in_array(second_token.text, [':', ',']) && in_array(next_token.type, ['TK_STRING', 'TK_WORD', 'TK_RESERVED'])) ||\n\t                        (in_array(next_token.text, ['get', 'set']) && in_array(second_token.type, ['TK_WORD', 'TK_RESERVED']))\n\t                    )) {\n\t                    // We don't support TypeScript,but we didn't break it for a very long time.\n\t                    // We'll try to keep not breaking it.\n\t                    if (!in_array(last_last_text, ['class', 'interface'])) {\n\t                        set_mode(MODE.ObjectLiteral);\n\t                    } else {\n\t                        set_mode(MODE.BlockStatement);\n\t                    }\n\t                } else if (last_type === 'TK_OPERATOR' && flags.last_text === '=>') {\n\t                    // arrow function: (param1, paramN) => { statements }\n\t                    set_mode(MODE.BlockStatement);\n\t                } else if (in_array(last_type, ['TK_EQUALS', 'TK_START_EXPR', 'TK_COMMA', 'TK_OPERATOR']) ||\n\t                    (last_type === 'TK_RESERVED' && in_array(flags.last_text, ['return', 'throw', 'import', 'default']))\n\t                ) {\n\t                    // Detecting shorthand function syntax is difficult by scanning forward,\n\t                    //     so check the surrounding context.\n\t                    // If the block is being returned, imported, export default, passed as arg,\n\t                    //     assigned with = or assigned in a nested object, treat as an ObjectLiteral.\n\t                    set_mode(MODE.ObjectLiteral);\n\t                } else {\n\t                    set_mode(MODE.BlockStatement);\n\t                }\n\t\n\t                var empty_braces = !next_token.comments_before.length && next_token.text === '}';\n\t                var empty_anonymous_function = empty_braces && flags.last_word === 'function' &&\n\t                    last_type === 'TK_END_EXPR';\n\t\n\t\n\t                if (opt.brace_style === \"expand\" ||\n\t                    (opt.brace_style === \"none\" && current_token.wanted_newline)) {\n\t                    if (last_type !== 'TK_OPERATOR' &&\n\t                        (empty_anonymous_function ||\n\t                            last_type === 'TK_EQUALS' ||\n\t                            (last_type === 'TK_RESERVED' && is_special_word(flags.last_text) && flags.last_text !== 'else'))) {\n\t                        output.space_before_token = true;\n\t                    } else {\n\t                        print_newline(false, true);\n\t                    }\n\t                } else { // collapse\n\t                    if (opt.brace_style === 'collapse-preserve-inline') {\n\t                        // search forward for a newline wanted inside this block\n\t                        var index = 0;\n\t                        var check_token = null;\n\t                        flags.inline_frame = true;\n\t                        do {\n\t                            index += 1;\n\t                            check_token = get_token(index);\n\t                            if (check_token.wanted_newline) {\n\t                                flags.inline_frame = false;\n\t                                break;\n\t                            }\n\t                        } while (check_token.type !== 'TK_EOF' &&\n\t                            !(check_token.type === 'TK_END_BLOCK' && check_token.opened === current_token));\n\t                    }\n\t\n\t                    if (is_array(previous_flags.mode) && (last_type === 'TK_START_EXPR' || last_type === 'TK_COMMA')) {\n\t                        // if we're preserving inline,\n\t                        // allow newline between comma and next brace.\n\t                        if (last_type === 'TK_COMMA' || opt.space_in_paren) {\n\t                            output.space_before_token = true;\n\t                        }\n\t\n\t                        if (opt.brace_style === 'collapse-preserve-inline' &&\n\t                            (last_type === 'TK_COMMA' || (last_type === 'TK_START_EXPR' && flags.inline_frame))) {\n\t                            allow_wrap_or_preserved_newline();\n\t                            previous_flags.multiline_frame = previous_flags.multiline_frame || flags.multiline_frame;\n\t                            flags.multiline_frame = false;\n\t                        }\n\t                    } else if (last_type !== 'TK_OPERATOR' && last_type !== 'TK_START_EXPR') {\n\t                        if (last_type === 'TK_START_BLOCK') {\n\t                            print_newline();\n\t                        } else {\n\t                            output.space_before_token = true;\n\t                        }\n\t                    }\n\t                }\n\t                print_token();\n\t                indent();\n\t            }\n\t\n\t            function handle_end_block() {\n\t                // statements must all be closed when their container closes\n\t                while (flags.mode === MODE.Statement) {\n\t                    restore_mode();\n\t                }\n\t                var empty_braces = last_type === 'TK_START_BLOCK';\n\t\n\t                if (opt.brace_style === \"expand\") {\n\t                    if (!empty_braces) {\n\t                        print_newline();\n\t                    }\n\t                } else {\n\t                    // skip {}\n\t                    if (!empty_braces) {\n\t                        if (flags.inline_frame) {\n\t                            output.space_before_token = true;\n\t                        } else if (is_array(flags.mode) && opt.keep_array_indentation) {\n\t                            // we REALLY need a newline here, but newliner would skip that\n\t                            opt.keep_array_indentation = false;\n\t                            print_newline();\n\t                            opt.keep_array_indentation = true;\n\t\n\t                        } else {\n\t                            print_newline();\n\t                        }\n\t                    }\n\t                }\n\t                restore_mode();\n\t                print_token();\n\t            }\n\t\n\t            function handle_word() {\n\t                if (current_token.type === 'TK_RESERVED') {\n\t                    if (in_array(current_token.text, ['set', 'get']) && flags.mode !== MODE.ObjectLiteral) {\n\t                        current_token.type = 'TK_WORD';\n\t                    } else if (in_array(current_token.text, ['as', 'from']) && !flags.import_block) {\n\t                        current_token.type = 'TK_WORD';\n\t                    } else if (flags.mode === MODE.ObjectLiteral) {\n\t                        var next_token = get_token(1);\n\t                        if (next_token.text === ':') {\n\t                            current_token.type = 'TK_WORD';\n\t                        }\n\t                    }\n\t                }\n\t\n\t                if (start_of_statement()) {\n\t                    // The conditional starts the statement if appropriate.\n\t                } else if (current_token.wanted_newline && !is_expression(flags.mode) &&\n\t                    (last_type !== 'TK_OPERATOR' || (flags.last_text === '--' || flags.last_text === '++')) &&\n\t                    last_type !== 'TK_EQUALS' &&\n\t                    (opt.preserve_newlines || !(last_type === 'TK_RESERVED' && in_array(flags.last_text, ['var', 'let', 'const', 'set', 'get'])))) {\n\t\n\t                    print_newline();\n\t                }\n\t\n\t                if (flags.do_block && !flags.do_while) {\n\t                    if (current_token.type === 'TK_RESERVED' && current_token.text === 'while') {\n\t                        // do {} ## while ()\n\t                        output.space_before_token = true;\n\t                        print_token();\n\t                        output.space_before_token = true;\n\t                        flags.do_while = true;\n\t                        return;\n\t                    } else {\n\t                        // do {} should always have while as the next word.\n\t                        // if we don't see the expected while, recover\n\t                        print_newline();\n\t                        flags.do_block = false;\n\t                    }\n\t                }\n\t\n\t                // if may be followed by else, or not\n\t                // Bare/inline ifs are tricky\n\t                // Need to unwind the modes correctly: if (a) if (b) c(); else d(); else e();\n\t                if (flags.if_block) {\n\t                    if (!flags.else_block && (current_token.type === 'TK_RESERVED' && current_token.text === 'else')) {\n\t                        flags.else_block = true;\n\t                    } else {\n\t                        while (flags.mode === MODE.Statement) {\n\t                            restore_mode();\n\t                        }\n\t                        flags.if_block = false;\n\t                        flags.else_block = false;\n\t                    }\n\t                }\n\t\n\t                if (current_token.type === 'TK_RESERVED' && (current_token.text === 'case' || (current_token.text === 'default' && flags.in_case_statement))) {\n\t                    print_newline();\n\t                    if (flags.case_body || opt.jslint_happy) {\n\t                        // switch cases following one another\n\t                        deindent();\n\t                        flags.case_body = false;\n\t                    }\n\t                    print_token();\n\t                    flags.in_case = true;\n\t                    flags.in_case_statement = true;\n\t                    return;\n\t                }\n\t\n\t                if (current_token.type === 'TK_RESERVED' && current_token.text === 'function') {\n\t                    if (in_array(flags.last_text, ['}', ';']) || (output.just_added_newline() && !in_array(flags.last_text, ['[', '{', ':', '=', ',']))) {\n\t                        // make sure there is a nice clean space of at least one blank line\n\t                        // before a new function definition\n\t                        if (!output.just_added_blankline() && !current_token.comments_before.length) {\n\t                            print_newline();\n\t                            print_newline(true);\n\t                        }\n\t                    }\n\t                    if (last_type === 'TK_RESERVED' || last_type === 'TK_WORD') {\n\t                        if (last_type === 'TK_RESERVED' && in_array(flags.last_text, ['get', 'set', 'new', 'return', 'export', 'async'])) {\n\t                            output.space_before_token = true;\n\t                        } else if (last_type === 'TK_RESERVED' && flags.last_text === 'default' && last_last_text === 'export') {\n\t                            output.space_before_token = true;\n\t                        } else {\n\t                            print_newline();\n\t                        }\n\t                    } else if (last_type === 'TK_OPERATOR' || flags.last_text === '=') {\n\t                        // foo = function\n\t                        output.space_before_token = true;\n\t                    } else if (!flags.multiline_frame && (is_expression(flags.mode) || is_array(flags.mode))) {\n\t                        // (function\n\t                    } else {\n\t                        print_newline();\n\t                    }\n\t                }\n\t\n\t                if (last_type === 'TK_COMMA' || last_type === 'TK_START_EXPR' || last_type === 'TK_EQUALS' || last_type === 'TK_OPERATOR') {\n\t                    if (!start_of_object_property()) {\n\t                        allow_wrap_or_preserved_newline();\n\t                    }\n\t                }\n\t\n\t                if (current_token.type === 'TK_RESERVED' && in_array(current_token.text, ['function', 'get', 'set'])) {\n\t                    print_token();\n\t                    flags.last_word = current_token.text;\n\t                    return;\n\t                }\n\t\n\t                prefix = 'NONE';\n\t\n\t                if (last_type === 'TK_END_BLOCK') {\n\t\n\t                    if (!(current_token.type === 'TK_RESERVED' && in_array(current_token.text, ['else', 'catch', 'finally', 'from']))) {\n\t                        prefix = 'NEWLINE';\n\t                    } else {\n\t                        if (opt.brace_style === \"expand\" ||\n\t                            opt.brace_style === \"end-expand\" ||\n\t                            (opt.brace_style === \"none\" && current_token.wanted_newline)) {\n\t                            prefix = 'NEWLINE';\n\t                        } else {\n\t                            prefix = 'SPACE';\n\t                            output.space_before_token = true;\n\t                        }\n\t                    }\n\t                } else if (last_type === 'TK_SEMICOLON' && flags.mode === MODE.BlockStatement) {\n\t                    // TODO: Should this be for STATEMENT as well?\n\t                    prefix = 'NEWLINE';\n\t                } else if (last_type === 'TK_SEMICOLON' && is_expression(flags.mode)) {\n\t                    prefix = 'SPACE';\n\t                } else if (last_type === 'TK_STRING') {\n\t                    prefix = 'NEWLINE';\n\t                } else if (last_type === 'TK_RESERVED' || last_type === 'TK_WORD' ||\n\t                    (flags.last_text === '*' &&\n\t                        (in_array(last_last_text, ['function', 'yield']) ||\n\t                            (flags.mode === MODE.ObjectLiteral && in_array(last_last_text, ['{', ',']))))) {\n\t                    prefix = 'SPACE';\n\t                } else if (last_type === 'TK_START_BLOCK') {\n\t                    if (flags.inline_frame) {\n\t                        prefix = 'SPACE';\n\t                    } else {\n\t                        prefix = 'NEWLINE';\n\t                    }\n\t                } else if (last_type === 'TK_END_EXPR') {\n\t                    output.space_before_token = true;\n\t                    prefix = 'NEWLINE';\n\t                }\n\t\n\t                if (current_token.type === 'TK_RESERVED' && in_array(current_token.text, Tokenizer.line_starters) && flags.last_text !== ')') {\n\t                    if (flags.inline_frame || flags.last_text === 'else' || flags.last_text === 'export') {\n\t                        prefix = 'SPACE';\n\t                    } else {\n\t                        prefix = 'NEWLINE';\n\t                    }\n\t\n\t                }\n\t\n\t                if (current_token.type === 'TK_RESERVED' && in_array(current_token.text, ['else', 'catch', 'finally'])) {\n\t                    if (!(last_type === 'TK_END_BLOCK' && previous_flags.mode === MODE.BlockStatement) ||\n\t                        opt.brace_style === \"expand\" ||\n\t                        opt.brace_style === \"end-expand\" ||\n\t                        (opt.brace_style === \"none\" && current_token.wanted_newline)) {\n\t                        print_newline();\n\t                    } else {\n\t                        output.trim(true);\n\t                        var line = output.current_line;\n\t                        // If we trimmed and there's something other than a close block before us\n\t                        // put a newline back in.  Handles '} // comment' scenario.\n\t                        if (line.last() !== '}') {\n\t                            print_newline();\n\t                        }\n\t                        output.space_before_token = true;\n\t                    }\n\t                } else if (prefix === 'NEWLINE') {\n\t                    if (last_type === 'TK_RESERVED' && is_special_word(flags.last_text)) {\n\t                        // no newline between 'return nnn'\n\t                        output.space_before_token = true;\n\t                    } else if (last_type !== 'TK_END_EXPR') {\n\t                        if ((last_type !== 'TK_START_EXPR' || !(current_token.type === 'TK_RESERVED' && in_array(current_token.text, ['var', 'let', 'const']))) && flags.last_text !== ':') {\n\t                            // no need to force newline on 'var': for (var x = 0...)\n\t                            if (current_token.type === 'TK_RESERVED' && current_token.text === 'if' && flags.last_text === 'else') {\n\t                                // no newline for } else if {\n\t                                output.space_before_token = true;\n\t                            } else {\n\t                                print_newline();\n\t                            }\n\t                        }\n\t                    } else if (current_token.type === 'TK_RESERVED' && in_array(current_token.text, Tokenizer.line_starters) && flags.last_text !== ')') {\n\t                        print_newline();\n\t                    }\n\t                } else if (flags.multiline_frame && is_array(flags.mode) && flags.last_text === ',' && last_last_text === '}') {\n\t                    print_newline(); // }, in lists get a newline treatment\n\t                } else if (prefix === 'SPACE') {\n\t                    output.space_before_token = true;\n\t                }\n\t                print_token();\n\t                flags.last_word = current_token.text;\n\t\n\t                if (current_token.type === 'TK_RESERVED') {\n\t                    if (current_token.text === 'do') {\n\t                        flags.do_block = true;\n\t                    } else if (current_token.text === 'if') {\n\t                        flags.if_block = true;\n\t                    } else if (current_token.text === 'import') {\n\t                        flags.import_block = true;\n\t                    } else if (flags.import_block && current_token.type === 'TK_RESERVED' && current_token.text === 'from') {\n\t                        flags.import_block = false;\n\t                    }\n\t                }\n\t            }\n\t\n\t            function handle_semicolon() {\n\t                if (start_of_statement()) {\n\t                    // The conditional starts the statement if appropriate.\n\t                    // Semicolon can be the start (and end) of a statement\n\t                    output.space_before_token = false;\n\t                }\n\t                while (flags.mode === MODE.Statement && !flags.if_block && !flags.do_block) {\n\t                    restore_mode();\n\t                }\n\t\n\t                // hacky but effective for the moment\n\t                if (flags.import_block) {\n\t                    flags.import_block = false;\n\t                }\n\t                print_token();\n\t            }\n\t\n\t            function handle_string() {\n\t                if (start_of_statement()) {\n\t                    // The conditional starts the statement if appropriate.\n\t                    // One difference - strings want at least a space before\n\t                    output.space_before_token = true;\n\t                } else if (last_type === 'TK_RESERVED' || last_type === 'TK_WORD' || flags.inline_frame) {\n\t                    output.space_before_token = true;\n\t                } else if (last_type === 'TK_COMMA' || last_type === 'TK_START_EXPR' || last_type === 'TK_EQUALS' || last_type === 'TK_OPERATOR') {\n\t                    if (!start_of_object_property()) {\n\t                        allow_wrap_or_preserved_newline();\n\t                    }\n\t                } else {\n\t                    print_newline();\n\t                }\n\t                print_token();\n\t            }\n\t\n\t            function handle_equals() {\n\t                if (start_of_statement()) {\n\t                    // The conditional starts the statement if appropriate.\n\t                }\n\t\n\t                if (flags.declaration_statement) {\n\t                    // just got an '=' in a var-line, different formatting/line-breaking, etc will now be done\n\t                    flags.declaration_assignment = true;\n\t                }\n\t                output.space_before_token = true;\n\t                print_token();\n\t                output.space_before_token = true;\n\t            }\n\t\n\t            function handle_comma() {\n\t                print_token();\n\t                output.space_before_token = true;\n\t                if (flags.declaration_statement) {\n\t                    if (is_expression(flags.parent.mode)) {\n\t                        // do not break on comma, for(var a = 1, b = 2)\n\t                        flags.declaration_assignment = false;\n\t                    }\n\t\n\t                    if (flags.declaration_assignment) {\n\t                        flags.declaration_assignment = false;\n\t                        print_newline(false, true);\n\t                    } else if (opt.comma_first) {\n\t                        // for comma-first, we want to allow a newline before the comma\n\t                        // to turn into a newline after the comma, which we will fixup later\n\t                        allow_wrap_or_preserved_newline();\n\t                    }\n\t                } else if (flags.mode === MODE.ObjectLiteral ||\n\t                    (flags.mode === MODE.Statement && flags.parent.mode === MODE.ObjectLiteral)) {\n\t                    if (flags.mode === MODE.Statement) {\n\t                        restore_mode();\n\t                    }\n\t\n\t                    if (!flags.inline_frame) {\n\t                        print_newline();\n\t                    }\n\t                } else if (opt.comma_first) {\n\t                    // EXPR or DO_BLOCK\n\t                    // for comma-first, we want to allow a newline before the comma\n\t                    // to turn into a newline after the comma, which we will fixup later\n\t                    allow_wrap_or_preserved_newline();\n\t                }\n\t            }\n\t\n\t            function handle_operator() {\n\t                if (start_of_statement()) {\n\t                    // The conditional starts the statement if appropriate.\n\t                }\n\t\n\t                if (last_type === 'TK_RESERVED' && is_special_word(flags.last_text)) {\n\t                    // \"return\" had a special handling in TK_WORD. Now we need to return the favor\n\t                    output.space_before_token = true;\n\t                    print_token();\n\t                    return;\n\t                }\n\t\n\t                // hack for actionscript's import .*;\n\t                if (current_token.text === '*' && last_type === 'TK_DOT') {\n\t                    print_token();\n\t                    return;\n\t                }\n\t\n\t                if (current_token.text === '::') {\n\t                    // no spaces around exotic namespacing syntax operator\n\t                    print_token();\n\t                    return;\n\t                }\n\t\n\t                // Allow line wrapping between operators when operator_position is\n\t                //   set to before or preserve\n\t                if (last_type === 'TK_OPERATOR' && in_array(opt.operator_position, OPERATOR_POSITION_BEFORE_OR_PRESERVE)) {\n\t                    allow_wrap_or_preserved_newline();\n\t                }\n\t\n\t                if (current_token.text === ':' && flags.in_case) {\n\t                    flags.case_body = true;\n\t                    indent();\n\t                    print_token();\n\t                    print_newline();\n\t                    flags.in_case = false;\n\t                    return;\n\t                }\n\t\n\t                var space_before = true;\n\t                var space_after = true;\n\t                var in_ternary = false;\n\t                var isGeneratorAsterisk = current_token.text === '*' &&\n\t                    ((last_type === 'TK_RESERVED' && in_array(flags.last_text, ['function', 'yield'])) ||\n\t                        (flags.mode === MODE.ObjectLiteral && in_array(last_type, ['TK_START_BLOCK', 'TK_COMMA'])));\n\t                var isUnary = in_array(current_token.text, ['-', '+']) && (\n\t                    in_array(last_type, ['TK_START_BLOCK', 'TK_START_EXPR', 'TK_EQUALS', 'TK_OPERATOR']) ||\n\t                    in_array(flags.last_text, Tokenizer.line_starters) ||\n\t                    flags.last_text === ','\n\t                );\n\t\n\t                if (current_token.text === ':') {\n\t                    if (flags.ternary_depth === 0) {\n\t                        // Colon is invalid javascript outside of ternary and object, but do our best to guess what was meant.\n\t                        space_before = false;\n\t                    } else {\n\t                        flags.ternary_depth -= 1;\n\t                        in_ternary = true;\n\t                    }\n\t                } else if (current_token.text === '?') {\n\t                    flags.ternary_depth += 1;\n\t                }\n\t\n\t                // let's handle the operator_position option prior to any conflicting logic\n\t                if (!isUnary && !isGeneratorAsterisk && opt.preserve_newlines && in_array(current_token.text, Tokenizer.positionable_operators)) {\n\t                    var isColon = current_token.text === ':';\n\t                    var isTernaryColon = (isColon && in_ternary);\n\t                    var isOtherColon = (isColon && !in_ternary);\n\t\n\t                    switch (opt.operator_position) {\n\t                        case OPERATOR_POSITION.before_newline:\n\t                            // if the current token is : and it's not a ternary statement then we set space_before to false\n\t                            output.space_before_token = !isOtherColon;\n\t\n\t                            print_token();\n\t\n\t                            if (!isColon || isTernaryColon) {\n\t                                allow_wrap_or_preserved_newline();\n\t                            }\n\t\n\t                            output.space_before_token = true;\n\t                            return;\n\t\n\t                        case OPERATOR_POSITION.after_newline:\n\t                            // if the current token is anything but colon, or (via deduction) it's a colon and in a ternary statement,\n\t                            //   then print a newline.\n\t\n\t                            output.space_before_token = true;\n\t\n\t                            if (!isColon || isTernaryColon) {\n\t                                if (get_token(1).wanted_newline) {\n\t                                    print_newline(false, true);\n\t                                } else {\n\t                                    allow_wrap_or_preserved_newline();\n\t                                }\n\t                            } else {\n\t                                output.space_before_token = false;\n\t                            }\n\t\n\t                            print_token();\n\t\n\t                            output.space_before_token = true;\n\t                            return;\n\t\n\t                        case OPERATOR_POSITION.preserve_newline:\n\t                            if (!isOtherColon) {\n\t                                allow_wrap_or_preserved_newline();\n\t                            }\n\t\n\t                            // if we just added a newline, or the current token is : and it's not a ternary statement,\n\t                            //   then we set space_before to false\n\t                            space_before = !(output.just_added_newline() || isOtherColon);\n\t\n\t                            output.space_before_token = space_before;\n\t                            print_token();\n\t                            output.space_before_token = true;\n\t                            return;\n\t                    }\n\t                }\n\t\n\t                if (in_array(current_token.text, ['--', '++', '!', '~']) || isUnary) {\n\t                    // unary operators (and binary +/- pretending to be unary) special cases\n\t\n\t                    space_before = false;\n\t                    space_after = false;\n\t\n\t                    // http://www.ecma-international.org/ecma-262/5.1/#sec-7.9.1\n\t                    // if there is a newline between -- or ++ and anything else we should preserve it.\n\t                    if (current_token.wanted_newline && (current_token.text === '--' || current_token.text === '++')) {\n\t                        print_newline(false, true);\n\t                    }\n\t\n\t                    if (flags.last_text === ';' && is_expression(flags.mode)) {\n\t                        // for (;; ++i)\n\t                        //        ^^^\n\t                        space_before = true;\n\t                    }\n\t\n\t                    if (last_type === 'TK_RESERVED') {\n\t                        space_before = true;\n\t                    } else if (last_type === 'TK_END_EXPR') {\n\t                        space_before = !(flags.last_text === ']' && (current_token.text === '--' || current_token.text === '++'));\n\t                    } else if (last_type === 'TK_OPERATOR') {\n\t                        // a++ + ++b;\n\t                        // a - -b\n\t                        space_before = in_array(current_token.text, ['--', '-', '++', '+']) && in_array(flags.last_text, ['--', '-', '++', '+']);\n\t                        // + and - are not unary when preceeded by -- or ++ operator\n\t                        // a-- + b\n\t                        // a * +b\n\t                        // a - -b\n\t                        if (in_array(current_token.text, ['+', '-']) && in_array(flags.last_text, ['--', '++'])) {\n\t                            space_after = true;\n\t                        }\n\t                    }\n\t\n\t\n\t                    if (((flags.mode === MODE.BlockStatement && !flags.inline_frame) || flags.mode === MODE.Statement) &&\n\t                        (flags.last_text === '{' || flags.last_text === ';')) {\n\t                        // { foo; --i }\n\t                        // foo(); --bar;\n\t                        print_newline();\n\t                    }\n\t                } else if (isGeneratorAsterisk) {\n\t                    allow_wrap_or_preserved_newline();\n\t                    space_before = false;\n\t                    space_after = false;\n\t                }\n\t                output.space_before_token = output.space_before_token || space_before;\n\t                print_token();\n\t                output.space_before_token = space_after;\n\t            }\n\t\n\t            function handle_block_comment() {\n\t                if (output.raw) {\n\t                    output.add_raw_token(current_token);\n\t                    if (current_token.directives && current_token.directives.preserve === 'end') {\n\t                        // If we're testing the raw output behavior, do not allow a directive to turn it off.\n\t                        output.raw = opt.test_output_raw;\n\t                    }\n\t                    return;\n\t                }\n\t\n\t                if (current_token.directives) {\n\t                    print_newline(false, true);\n\t                    print_token();\n\t                    if (current_token.directives.preserve === 'start') {\n\t                        output.raw = true;\n\t                    }\n\t                    print_newline(false, true);\n\t                    return;\n\t                }\n\t\n\t                // inline block\n\t                if (!acorn.newline.test(current_token.text) && !current_token.wanted_newline) {\n\t                    output.space_before_token = true;\n\t                    print_token();\n\t                    output.space_before_token = true;\n\t                    return;\n\t                }\n\t\n\t                var lines = split_linebreaks(current_token.text);\n\t                var j; // iterator for this case\n\t                var javadoc = false;\n\t                var starless = false;\n\t                var lastIndent = current_token.whitespace_before;\n\t                var lastIndentLength = lastIndent.length;\n\t\n\t                // block comment starts with a new line\n\t                print_newline(false, true);\n\t                if (lines.length > 1) {\n\t                    javadoc = all_lines_start_with(lines.slice(1), '*');\n\t                    starless = each_line_matches_indent(lines.slice(1), lastIndent);\n\t                }\n\t\n\t                // first line always indented\n\t                print_token(lines[0]);\n\t                for (j = 1; j < lines.length; j++) {\n\t                    print_newline(false, true);\n\t                    if (javadoc) {\n\t                        // javadoc: reformat and re-indent\n\t                        print_token(' ' + ltrim(lines[j]));\n\t                    } else if (starless && lines[j].length > lastIndentLength) {\n\t                        // starless: re-indent non-empty content, avoiding trim\n\t                        print_token(lines[j].substring(lastIndentLength));\n\t                    } else {\n\t                        // normal comments output raw\n\t                        output.add_token(lines[j]);\n\t                    }\n\t                }\n\t\n\t                // for comments of more than one line, make sure there's a new line after\n\t                print_newline(false, true);\n\t            }\n\t\n\t            function handle_comment() {\n\t                if (current_token.wanted_newline) {\n\t                    print_newline(false, true);\n\t                } else {\n\t                    output.trim(true);\n\t                }\n\t\n\t                output.space_before_token = true;\n\t                print_token();\n\t                print_newline(false, true);\n\t            }\n\t\n\t            function handle_dot() {\n\t                if (start_of_statement()) {\n\t                    // The conditional starts the statement if appropriate.\n\t                }\n\t\n\t                if (last_type === 'TK_RESERVED' && is_special_word(flags.last_text)) {\n\t                    output.space_before_token = true;\n\t                } else {\n\t                    // allow preserved newlines before dots in general\n\t                    // force newlines on dots after close paren when break_chained - for bar().baz()\n\t                    allow_wrap_or_preserved_newline(flags.last_text === ')' && opt.break_chained_methods);\n\t                }\n\t\n\t                print_token();\n\t            }\n\t\n\t            function handle_unknown() {\n\t                print_token();\n\t\n\t                if (current_token.text[current_token.text.length - 1] === '\\n') {\n\t                    print_newline();\n\t                }\n\t            }\n\t\n\t            function handle_eof() {\n\t                // Unwind any open statements\n\t                while (flags.mode === MODE.Statement) {\n\t                    restore_mode();\n\t                }\n\t            }\n\t        }\n\t\n\t\n\t        function OutputLine(parent) {\n\t            var _character_count = 0;\n\t            // use indent_count as a marker for lines that have preserved indentation\n\t            var _indent_count = -1;\n\t\n\t            var _items = [];\n\t            var _empty = true;\n\t\n\t            this.set_indent = function(level) {\n\t                _character_count = parent.baseIndentLength + level * parent.indent_length;\n\t                _indent_count = level;\n\t            };\n\t\n\t            this.get_character_count = function() {\n\t                return _character_count;\n\t            };\n\t\n\t            this.is_empty = function() {\n\t                return _empty;\n\t            };\n\t\n\t            this.last = function() {\n\t                if (!this._empty) {\n\t                    return _items[_items.length - 1];\n\t                } else {\n\t                    return null;\n\t                }\n\t            };\n\t\n\t            this.push = function(input) {\n\t                _items.push(input);\n\t                _character_count += input.length;\n\t                _empty = false;\n\t            };\n\t\n\t            this.pop = function() {\n\t                var item = null;\n\t                if (!_empty) {\n\t                    item = _items.pop();\n\t                    _character_count -= item.length;\n\t                    _empty = _items.length === 0;\n\t                }\n\t                return item;\n\t            };\n\t\n\t            this.remove_indent = function() {\n\t                if (_indent_count > 0) {\n\t                    _indent_count -= 1;\n\t                    _character_count -= parent.indent_length;\n\t                }\n\t            };\n\t\n\t            this.trim = function() {\n\t                while (this.last() === ' ') {\n\t                    _items.pop();\n\t                    _character_count -= 1;\n\t                }\n\t                _empty = _items.length === 0;\n\t            };\n\t\n\t            this.toString = function() {\n\t                var result = '';\n\t                if (!this._empty) {\n\t                    if (_indent_count >= 0) {\n\t                        result = parent.indent_cache[_indent_count];\n\t                    }\n\t                    result += _items.join('');\n\t                }\n\t                return result;\n\t            };\n\t        }\n\t\n\t        function Output(indent_string, baseIndentString) {\n\t            baseIndentString = baseIndentString || '';\n\t            this.indent_cache = [baseIndentString];\n\t            this.baseIndentLength = baseIndentString.length;\n\t            this.indent_length = indent_string.length;\n\t            this.raw = false;\n\t\n\t            var lines = [];\n\t            this.baseIndentString = baseIndentString;\n\t            this.indent_string = indent_string;\n\t            this.previous_line = null;\n\t            this.current_line = null;\n\t            this.space_before_token = false;\n\t\n\t            this.add_outputline = function() {\n\t                this.previous_line = this.current_line;\n\t                this.current_line = new OutputLine(this);\n\t                lines.push(this.current_line);\n\t            };\n\t\n\t            // initialize\n\t            this.add_outputline();\n\t\n\t\n\t            this.get_line_number = function() {\n\t                return lines.length;\n\t            };\n\t\n\t            // Using object instead of string to allow for later expansion of info about each line\n\t            this.add_new_line = function(force_newline) {\n\t                if (this.get_line_number() === 1 && this.just_added_newline()) {\n\t                    return false; // no newline on start of file\n\t                }\n\t\n\t                if (force_newline || !this.just_added_newline()) {\n\t                    if (!this.raw) {\n\t                        this.add_outputline();\n\t                    }\n\t                    return true;\n\t                }\n\t\n\t                return false;\n\t            };\n\t\n\t            this.get_code = function() {\n\t                var sweet_code = lines.join('\\n').replace(/[\\r\\n\\t ]+$/, '');\n\t                return sweet_code;\n\t            };\n\t\n\t            this.set_indent = function(level) {\n\t                // Never indent your first output indent at the start of the file\n\t                if (lines.length > 1) {\n\t                    while (level >= this.indent_cache.length) {\n\t                        this.indent_cache.push(this.indent_cache[this.indent_cache.length - 1] + this.indent_string);\n\t                    }\n\t\n\t                    this.current_line.set_indent(level);\n\t                    return true;\n\t                }\n\t                this.current_line.set_indent(0);\n\t                return false;\n\t            };\n\t\n\t            this.add_raw_token = function(token) {\n\t                for (var x = 0; x < token.newlines; x++) {\n\t                    this.add_outputline();\n\t                }\n\t                this.current_line.push(token.whitespace_before);\n\t                this.current_line.push(token.text);\n\t                this.space_before_token = false;\n\t            };\n\t\n\t            this.add_token = function(printable_token) {\n\t                this.add_space_before_token();\n\t                this.current_line.push(printable_token);\n\t            };\n\t\n\t            this.add_space_before_token = function() {\n\t                if (this.space_before_token && !this.just_added_newline()) {\n\t                    this.current_line.push(' ');\n\t                }\n\t                this.space_before_token = false;\n\t            };\n\t\n\t            this.remove_redundant_indentation = function(frame) {\n\t                // This implementation is effective but has some issues:\n\t                //     - can cause line wrap to happen too soon due to indent removal\n\t                //           after wrap points are calculated\n\t                // These issues are minor compared to ugly indentation.\n\t\n\t                if (frame.multiline_frame ||\n\t                    frame.mode === MODE.ForInitializer ||\n\t                    frame.mode === MODE.Conditional) {\n\t                    return;\n\t                }\n\t\n\t                // remove one indent from each line inside this section\n\t                var index = frame.start_line_index;\n\t\n\t                var output_length = lines.length;\n\t                while (index < output_length) {\n\t                    lines[index].remove_indent();\n\t                    index++;\n\t                }\n\t            };\n\t\n\t            this.trim = function(eat_newlines) {\n\t                eat_newlines = (eat_newlines === undefined) ? false : eat_newlines;\n\t\n\t                this.current_line.trim(indent_string, baseIndentString);\n\t\n\t                while (eat_newlines && lines.length > 1 &&\n\t                    this.current_line.is_empty()) {\n\t                    lines.pop();\n\t                    this.current_line = lines[lines.length - 1];\n\t                    this.current_line.trim();\n\t                }\n\t\n\t                this.previous_line = lines.length > 1 ? lines[lines.length - 2] : null;\n\t            };\n\t\n\t            this.just_added_newline = function() {\n\t                return this.current_line.is_empty();\n\t            };\n\t\n\t            this.just_added_blankline = function() {\n\t                if (this.just_added_newline()) {\n\t                    if (lines.length === 1) {\n\t                        return true; // start of the file and newline = blank\n\t                    }\n\t\n\t                    var line = lines[lines.length - 2];\n\t                    return line.is_empty();\n\t                }\n\t                return false;\n\t            };\n\t        }\n\t\n\t        var InputScanner = function(input) {\n\t            var _input = input;\n\t            var _input_length = _input.length;\n\t            var _position = 0;\n\t\n\t            this.back = function() {\n\t                _position -= 1;\n\t            };\n\t\n\t            this.hasNext = function() {\n\t                return _position < _input_length;\n\t            };\n\t\n\t            this.next = function() {\n\t                var val = null;\n\t                if (this.hasNext()) {\n\t                    val = _input.charAt(_position);\n\t                    _position += 1;\n\t                }\n\t                return val;\n\t            };\n\t\n\t            this.peek = function(index) {\n\t                var val = null;\n\t                index = index || 0;\n\t                index += _position;\n\t                if (index >= 0 && index < _input_length) {\n\t                    val = _input.charAt(index);\n\t                }\n\t                return val;\n\t            };\n\t\n\t            this.peekCharCode = function(index) {\n\t                var val = 0;\n\t                index = index || 0;\n\t                index += _position;\n\t                if (index >= 0 && index < _input_length) {\n\t                    val = _input.charCodeAt(index);\n\t                }\n\t                return val;\n\t            };\n\t\n\t            this.test = function(pattern, index) {\n\t                index = index || 0;\n\t                pattern.lastIndex = _position + index;\n\t                return pattern.test(_input);\n\t            };\n\t\n\t            this.testChar = function(pattern, index) {\n\t                var val = this.peek(index);\n\t                return val !== null && pattern.test(val);\n\t            };\n\t\n\t            this.match = function(pattern) {\n\t                pattern.lastIndex = _position;\n\t                var pattern_match = pattern.exec(_input);\n\t                if (pattern_match && pattern_match.index === _position) {\n\t                    _position += pattern_match[0].length;\n\t                } else {\n\t                    pattern_match = null;\n\t                }\n\t                return pattern_match;\n\t            };\n\t        };\n\t\n\t        var Token = function(type, text, newlines, whitespace_before, parent) {\n\t            this.type = type;\n\t            this.text = text;\n\t            this.comments_before = [];\n\t            this.newlines = newlines || 0;\n\t            this.wanted_newline = newlines > 0;\n\t            this.whitespace_before = whitespace_before || '';\n\t            this.parent = parent || null;\n\t            this.opened = null;\n\t            this.directives = null;\n\t        };\n\t\n\t        function tokenizer(input_string, opts) {\n\t\n\t            var whitespace = \"\\n\\r\\t \".split('');\n\t            var digit = /[0-9]/;\n\t            var digit_bin = /[01]/;\n\t            var digit_oct = /[01234567]/;\n\t            var digit_hex = /[0123456789abcdefABCDEF]/;\n\t\n\t            this.positionable_operators = '!= !== % & && * ** + - / : < << <= == === > >= >> >>> ? ^ | ||'.split(' ');\n\t            var punct = this.positionable_operators.concat(\n\t                // non-positionable operators - these do not follow operator position settings\n\t                '! %= &= *= **= ++ += , -- -= /= :: <<= = => >>= >>>= ^= |= ~'.split(' '));\n\t\n\t            // words which should always start on new line.\n\t            this.line_starters = 'continue,try,throw,return,var,let,const,if,switch,case,default,for,while,break,function,import,export'.split(',');\n\t            var reserved_words = this.line_starters.concat(['do', 'in', 'else', 'get', 'set', 'new', 'catch', 'finally', 'typeof', 'yield', 'async', 'await', 'from', 'as']);\n\t\n\t            //  /* ... */ comment ends with nearest */ or end of file\n\t            var block_comment_pattern = /([\\s\\S]*?)((?:\\*\\/)|$)/g;\n\t\n\t            // comment ends just before nearest linefeed or end of file\n\t            var comment_pattern = /([^\\n\\r\\u2028\\u2029]*)/g;\n\t\n\t            var directives_block_pattern = /\\/\\* beautify( \\w+[:]\\w+)+ \\*\\//g;\n\t            var directive_pattern = / (\\w+)[:](\\w+)/g;\n\t            var directives_end_ignore_pattern = /([\\s\\S]*?)((?:\\/\\*\\sbeautify\\signore:end\\s\\*\\/)|$)/g;\n\t\n\t            var template_pattern = /((<\\?php|<\\?=)[\\s\\S]*?\\?>)|(<%[\\s\\S]*?%>)/g;\n\t\n\t            var n_newlines, whitespace_before_token, in_html_comment, tokens;\n\t            var input;\n\t\n\t            this.tokenize = function() {\n\t                input = new InputScanner(input_string);\n\t                in_html_comment = false;\n\t                tokens = [];\n\t\n\t                var next, last;\n\t                var token_values;\n\t                var open = null;\n\t                var open_stack = [];\n\t                var comments = [];\n\t\n\t                while (!(last && last.type === 'TK_EOF')) {\n\t                    token_values = tokenize_next();\n\t                    next = new Token(token_values[1], token_values[0], n_newlines, whitespace_before_token);\n\t                    while (next.type === 'TK_COMMENT' || next.type === 'TK_BLOCK_COMMENT' || next.type === 'TK_UNKNOWN') {\n\t                        if (next.type === 'TK_BLOCK_COMMENT') {\n\t                            next.directives = token_values[2];\n\t                        }\n\t                        comments.push(next);\n\t                        token_values = tokenize_next();\n\t                        next = new Token(token_values[1], token_values[0], n_newlines, whitespace_before_token);\n\t                    }\n\t\n\t                    if (comments.length) {\n\t                        next.comments_before = comments;\n\t                        comments = [];\n\t                    }\n\t\n\t                    if (next.type === 'TK_START_BLOCK' || next.type === 'TK_START_EXPR') {\n\t                        next.parent = last;\n\t                        open_stack.push(open);\n\t                        open = next;\n\t                    } else if ((next.type === 'TK_END_BLOCK' || next.type === 'TK_END_EXPR') &&\n\t                        (open && (\n\t                            (next.text === ']' && open.text === '[') ||\n\t                            (next.text === ')' && open.text === '(') ||\n\t                            (next.text === '}' && open.text === '{')))) {\n\t                        next.parent = open.parent;\n\t                        next.opened = open;\n\t\n\t                        open = open_stack.pop();\n\t                    }\n\t\n\t                    tokens.push(next);\n\t                    last = next;\n\t                }\n\t\n\t                return tokens;\n\t            };\n\t\n\t            function get_directives(text) {\n\t                if (!text.match(directives_block_pattern)) {\n\t                    return null;\n\t                }\n\t\n\t                var directives = {};\n\t                directive_pattern.lastIndex = 0;\n\t                var directive_match = directive_pattern.exec(text);\n\t\n\t                while (directive_match) {\n\t                    directives[directive_match[1]] = directive_match[2];\n\t                    directive_match = directive_pattern.exec(text);\n\t                }\n\t\n\t                return directives;\n\t            }\n\t\n\t            function tokenize_next() {\n\t                var resulting_string;\n\t                var whitespace_on_this_line = [];\n\t\n\t                n_newlines = 0;\n\t                whitespace_before_token = '';\n\t\n\t                var c = input.next();\n\t\n\t                if (c === null) {\n\t                    return ['', 'TK_EOF'];\n\t                }\n\t\n\t                var last_token;\n\t                if (tokens.length) {\n\t                    last_token = tokens[tokens.length - 1];\n\t                } else {\n\t                    // For the sake of tokenizing we can pretend that there was on open brace to start\n\t                    last_token = new Token('TK_START_BLOCK', '{');\n\t                }\n\t\n\t                while (in_array(c, whitespace)) {\n\t\n\t                    if (acorn.newline.test(c)) {\n\t                        if (!(c === '\\n' && input.peek(-2) === '\\r')) {\n\t                            n_newlines += 1;\n\t                            whitespace_on_this_line = [];\n\t                        }\n\t                    } else {\n\t                        whitespace_on_this_line.push(c);\n\t                    }\n\t\n\t                    c = input.next();\n\t\n\t                    if (c === null) {\n\t                        return ['', 'TK_EOF'];\n\t                    }\n\t                }\n\t\n\t                if (whitespace_on_this_line.length) {\n\t                    whitespace_before_token = whitespace_on_this_line.join('');\n\t                }\n\t\n\t                if (digit.test(c) || (c === '.' && input.testChar(digit))) {\n\t                    var allow_decimal = true;\n\t                    var allow_e = true;\n\t                    var local_digit = digit;\n\t\n\t                    if (c === '0' && input.testChar(/[XxOoBb]/)) {\n\t                        // switch to hex/oct/bin number, no decimal or e, just hex/oct/bin digits\n\t                        allow_decimal = false;\n\t                        allow_e = false;\n\t                        if (input.testChar(/[Bb]/)) {\n\t                            local_digit = digit_bin;\n\t                        } else if (input.testChar(/[Oo]/)) {\n\t                            local_digit = digit_oct;\n\t                        } else {\n\t                            local_digit = digit_hex;\n\t                        }\n\t                        c += input.next();\n\t                    } else if (c === '.') {\n\t                        // Already have a decimal for this literal, don't allow another\n\t                        allow_decimal = false;\n\t                    } else {\n\t                        // we know this first loop will run.  It keeps the logic simpler.\n\t                        c = '';\n\t                        input.back();\n\t                    }\n\t\n\t                    // Add the digits\n\t                    while (input.testChar(local_digit)) {\n\t                        c += input.next();\n\t\n\t                        if (allow_decimal && input.peek() === '.') {\n\t                            c += input.next();\n\t                            allow_decimal = false;\n\t                        } else if (allow_e && input.testChar(/[Ee]/)) {\n\t                            c += input.next();\n\t\n\t                            if (input.testChar(/[+-]/)) {\n\t                                c += input.next();\n\t                            }\n\t\n\t                            allow_e = false;\n\t                            allow_decimal = false;\n\t                        }\n\t                    }\n\t\n\t                    return [c, 'TK_WORD'];\n\t                }\n\t\n\t                if (acorn.isIdentifierStart(input.peekCharCode(-1))) {\n\t                    if (input.hasNext()) {\n\t                        while (acorn.isIdentifierChar(input.peekCharCode())) {\n\t                            c += input.next();\n\t                            if (!input.hasNext()) {\n\t                                break;\n\t                            }\n\t                        }\n\t                    }\n\t\n\t                    if (!(last_token.type === 'TK_DOT' ||\n\t                            (last_token.type === 'TK_RESERVED' && in_array(last_token.text, ['set', 'get']))) &&\n\t                        in_array(c, reserved_words)) {\n\t                        if (c === 'in') { // hack for 'in' operator\n\t                            return [c, 'TK_OPERATOR'];\n\t                        }\n\t                        return [c, 'TK_RESERVED'];\n\t                    }\n\t\n\t                    return [c, 'TK_WORD'];\n\t                }\n\t\n\t                if (c === '(' || c === '[') {\n\t                    return [c, 'TK_START_EXPR'];\n\t                }\n\t\n\t                if (c === ')' || c === ']') {\n\t                    return [c, 'TK_END_EXPR'];\n\t                }\n\t\n\t                if (c === '{') {\n\t                    return [c, 'TK_START_BLOCK'];\n\t                }\n\t\n\t                if (c === '}') {\n\t                    return [c, 'TK_END_BLOCK'];\n\t                }\n\t\n\t                if (c === ';') {\n\t                    return [c, 'TK_SEMICOLON'];\n\t                }\n\t\n\t                if (c === '/') {\n\t                    var comment = '';\n\t                    var comment_match;\n\t                    // peek for comment /* ... */\n\t                    if (input.peek() === '*') {\n\t                        input.next();\n\t                        comment_match = input.match(block_comment_pattern);\n\t                        comment = '/*' + comment_match[0];\n\t                        var directives = get_directives(comment);\n\t                        if (directives && directives.ignore === 'start') {\n\t                            comment_match = input.match(directives_end_ignore_pattern);\n\t                            comment += comment_match[0];\n\t                        }\n\t                        comment = comment.replace(acorn.allLineBreaks, '\\n');\n\t                        return [comment, 'TK_BLOCK_COMMENT', directives];\n\t                    }\n\t                    // peek for comment // ...\n\t                    if (input.peek() === '/') {\n\t                        input.next();\n\t                        comment_match = input.match(comment_pattern);\n\t                        comment = '//' + comment_match[0];\n\t                        return [comment, 'TK_COMMENT'];\n\t                    }\n\t\n\t                }\n\t\n\t                var startXmlRegExp = /<()([-a-zA-Z:0-9_.]+|{[\\s\\S]+?}|!\\[CDATA\\[[\\s\\S]*?\\]\\])(\\s+{[\\s\\S]+?}|\\s+[-a-zA-Z:0-9_.]+|\\s+[-a-zA-Z:0-9_.]+\\s*=\\s*('[^']*'|\"[^\"]*\"|{[\\s\\S]+?}))*\\s*(\\/?)\\s*>/g;\n\t\n\t                if (c === '`' || c === \"'\" || c === '\"' || // string\n\t                    (\n\t                        (c === '/') || // regexp\n\t                        (opts.e4x && c === \"<\" && input.test(startXmlRegExp, -1)) // xml\n\t                    ) && ( // regex and xml can only appear in specific locations during parsing\n\t                        (last_token.type === 'TK_RESERVED' && in_array(last_token.text, ['return', 'case', 'throw', 'else', 'do', 'typeof', 'yield'])) ||\n\t                        (last_token.type === 'TK_END_EXPR' && last_token.text === ')' &&\n\t                            last_token.parent && last_token.parent.type === 'TK_RESERVED' && in_array(last_token.parent.text, ['if', 'while', 'for'])) ||\n\t                        (in_array(last_token.type, ['TK_COMMENT', 'TK_START_EXPR', 'TK_START_BLOCK',\n\t                            'TK_END_BLOCK', 'TK_OPERATOR', 'TK_EQUALS', 'TK_EOF', 'TK_SEMICOLON', 'TK_COMMA'\n\t                        ]))\n\t                    )) {\n\t\n\t                    var sep = c,\n\t                        esc = false,\n\t                        has_char_escapes = false;\n\t\n\t                    resulting_string = c;\n\t\n\t                    if (sep === '/') {\n\t                        //\n\t                        // handle regexp\n\t                        //\n\t                        var in_char_class = false;\n\t                        while (input.hasNext() &&\n\t                            ((esc || in_char_class || input.peek() !== sep) &&\n\t                                !input.testChar(acorn.newline))) {\n\t                            resulting_string += input.peek();\n\t                            if (!esc) {\n\t                                esc = input.peek() === '\\\\';\n\t                                if (input.peek() === '[') {\n\t                                    in_char_class = true;\n\t                                } else if (input.peek() === ']') {\n\t                                    in_char_class = false;\n\t                                }\n\t                            } else {\n\t                                esc = false;\n\t                            }\n\t                            input.next();\n\t                        }\n\t                    } else if (opts.e4x && sep === '<') {\n\t                        //\n\t                        // handle e4x xml literals\n\t                        //\n\t\n\t                        var xmlRegExp = /[\\s\\S]*?<(\\/?)([-a-zA-Z:0-9_.]+|{[\\s\\S]+?}|!\\[CDATA\\[[\\s\\S]*?\\]\\])(\\s+{[\\s\\S]+?}|\\s+[-a-zA-Z:0-9_.]+|\\s+[-a-zA-Z:0-9_.]+\\s*=\\s*('[^']*'|\"[^\"]*\"|{[\\s\\S]+?}))*\\s*(\\/?)\\s*>/g;\n\t                        input.back();\n\t                        var xmlStr = '';\n\t                        var match = input.match(startXmlRegExp);\n\t                        if (match) {\n\t                            // Trim root tag to attempt to\n\t                            var rootTag = match[2].replace(/^{\\s+/, '{').replace(/\\s+}$/, '}');\n\t                            var isCurlyRoot = rootTag.indexOf('{') === 0;\n\t                            var depth = 0;\n\t                            while (match) {\n\t                                var isEndTag = !!match[1];\n\t                                var tagName = match[2];\n\t                                var isSingletonTag = (!!match[match.length - 1]) || (tagName.slice(0, 8) === \"![CDATA[\");\n\t                                if (!isSingletonTag &&\n\t                                    (tagName === rootTag || (isCurlyRoot && tagName.replace(/^{\\s+/, '{').replace(/\\s+}$/, '}')))) {\n\t                                    if (isEndTag) {\n\t                                        --depth;\n\t                                    } else {\n\t                                        ++depth;\n\t                                    }\n\t                                }\n\t                                xmlStr += match[0];\n\t                                if (depth <= 0) {\n\t                                    break;\n\t                                }\n\t                                match = input.match(xmlRegExp);\n\t                            }\n\t                            // if we didn't close correctly, keep unformatted.\n\t                            if (!match) {\n\t                                xmlStr += input.match(/[\\s\\S]*/g)[0];\n\t                            }\n\t                            xmlStr = xmlStr.replace(acorn.allLineBreaks, '\\n');\n\t                            return [xmlStr, \"TK_STRING\"];\n\t                        }\n\t                    } else {\n\t                        //\n\t                        // handle string\n\t                        //\n\t                        var parse_string = function(delimiter, allow_unescaped_newlines, start_sub) {\n\t                            // Template strings can travers lines without escape characters.\n\t                            // Other strings cannot\n\t                            var current_char;\n\t                            while (input.hasNext()) {\n\t                                current_char = input.peek();\n\t                                if (!(esc || (current_char !== delimiter &&\n\t                                        (allow_unescaped_newlines || !acorn.newline.test(current_char))))) {\n\t                                    break;\n\t                                }\n\t\n\t                                // Handle \\r\\n linebreaks after escapes or in template strings\n\t                                if ((esc || allow_unescaped_newlines) && acorn.newline.test(current_char)) {\n\t                                    if (current_char === '\\r' && input.peek(1) === '\\n') {\n\t                                        input.next();\n\t                                        current_char = input.peek();\n\t                                    }\n\t                                    resulting_string += '\\n';\n\t                                } else {\n\t                                    resulting_string += current_char;\n\t                                }\n\t\n\t                                if (esc) {\n\t                                    if (current_char === 'x' || current_char === 'u') {\n\t                                        has_char_escapes = true;\n\t                                    }\n\t                                    esc = false;\n\t                                } else {\n\t                                    esc = current_char === '\\\\';\n\t                                }\n\t\n\t                                input.next();\n\t\n\t                                if (start_sub && resulting_string.indexOf(start_sub, resulting_string.length - start_sub.length) !== -1) {\n\t                                    if (delimiter === '`') {\n\t                                        parse_string('}', allow_unescaped_newlines, '`');\n\t                                    } else {\n\t                                        parse_string('`', allow_unescaped_newlines, '${');\n\t                                    }\n\t                                }\n\t                            }\n\t                        };\n\t\n\t                        if (sep === '`') {\n\t                            parse_string('`', true, '${');\n\t                        } else {\n\t                            parse_string(sep);\n\t                        }\n\t                    }\n\t\n\t                    if (has_char_escapes && opts.unescape_strings) {\n\t                        resulting_string = unescape_string(resulting_string);\n\t                    }\n\t\n\t                    if (input.peek() === sep) {\n\t                        resulting_string += sep;\n\t                        input.next();\n\t\n\t                        if (sep === '/') {\n\t                            // regexps may have modifiers /regexp/MOD , so fetch those, too\n\t                            // Only [gim] are valid, but if the user puts in garbage, do what we can to take it.\n\t                            while (input.hasNext() && acorn.isIdentifierStart(input.peekCharCode())) {\n\t                                resulting_string += input.next();\n\t                            }\n\t                        }\n\t                    }\n\t                    return [resulting_string, 'TK_STRING'];\n\t                }\n\t\n\t                if (c === '#') {\n\t\n\t                    if (tokens.length === 0 && input.peek() === '!') {\n\t                        // shebang\n\t                        resulting_string = c;\n\t                        while (input.hasNext() && c !== '\\n') {\n\t                            c = input.next();\n\t                            resulting_string += c;\n\t                        }\n\t                        return [trim(resulting_string) + '\\n', 'TK_UNKNOWN'];\n\t                    }\n\t\n\t\n\t\n\t                    // Spidermonkey-specific sharp variables for circular references\n\t                    // https://developer.mozilla.org/En/Sharp_variables_in_JavaScript\n\t                    // http://mxr.mozilla.org/mozilla-central/source/js/src/jsscan.cpp around line 1935\n\t                    var sharp = '#';\n\t                    if (input.hasNext() && input.testChar(digit)) {\n\t                        do {\n\t                            c = input.next();\n\t                            sharp += c;\n\t                        } while (input.hasNext() && c !== '#' && c !== '=');\n\t                        if (c === '#') {\n\t                            //\n\t                        } else if (input.peek() === '[' && input.peek(1) === ']') {\n\t                            sharp += '[]';\n\t                            input.next();\n\t                            input.next();\n\t                        } else if (input.peek() === '{' && input.peek(1) === '}') {\n\t                            sharp += '{}';\n\t                            input.next();\n\t                            input.next();\n\t                        }\n\t                        return [sharp, 'TK_WORD'];\n\t                    }\n\t                }\n\t\n\t                if (c === '<' && (input.peek() === '?' || input.peek() === '%')) {\n\t                    input.back();\n\t                    var template_match = input.match(template_pattern);\n\t                    if (template_match) {\n\t                        c = template_match[0];\n\t                        c = c.replace(acorn.allLineBreaks, '\\n');\n\t                        return [c, 'TK_STRING'];\n\t                    }\n\t                }\n\t\n\t                if (c === '<' && input.match(/\\!--/g)) {\n\t                    c = '<!--';\n\t                    while (input.hasNext() && !input.testChar(acorn.newline)) {\n\t                        c += input.next();\n\t                    }\n\t                    in_html_comment = true;\n\t                    return [c, 'TK_COMMENT'];\n\t                }\n\t\n\t                if (c === '-' && in_html_comment && input.match(/->/g)) {\n\t                    in_html_comment = false;\n\t                    return ['-->', 'TK_COMMENT'];\n\t                }\n\t\n\t                if (c === '.') {\n\t                    return [c, 'TK_DOT'];\n\t                }\n\t\n\t                if (in_array(c, punct)) {\n\t                    while (input.hasNext() && in_array(c + input.peek(), punct)) {\n\t                        c += input.next();\n\t                        if (!input.hasNext()) {\n\t                            break;\n\t                        }\n\t                    }\n\t\n\t                    if (c === ',') {\n\t                        return [c, 'TK_COMMA'];\n\t                    } else if (c === '=') {\n\t                        return [c, 'TK_EQUALS'];\n\t                    } else {\n\t                        return [c, 'TK_OPERATOR'];\n\t                    }\n\t                }\n\t\n\t                return [c, 'TK_UNKNOWN'];\n\t            }\n\t\n\t\n\t            function unescape_string(s) {\n\t                // You think that a regex would work for this\n\t                // return s.replace(/\\\\x([0-9a-f]{2})/gi, function(match, val) {\n\t                //         return String.fromCharCode(parseInt(val, 16));\n\t                //     })\n\t                // However, dealing with '\\xff', '\\\\xff', '\\\\\\xff' makes this more fun.\n\t                var out = '',\n\t                    escaped = 0;\n\t\n\t                var input_scan = new InputScanner(s);\n\t                var matched = null;\n\t\n\t                while (input_scan.hasNext()) {\n\t                    // Keep any whitespace, non-slash characters\n\t                    // also keep slash pairs.\n\t                    matched = input_scan.match(/([\\s]|[^\\\\]|\\\\\\\\)+/g);\n\t\n\t                    if (matched) {\n\t                        out += matched[0];\n\t                    }\n\t\n\t                    if (input_scan.peek() === '\\\\') {\n\t                        input_scan.next();\n\t                        if (input_scan.peek() === 'x') {\n\t                            matched = input_scan.match(/x([0-9A-Fa-f]{2})/g);\n\t                        } else if (input_scan.peek() === 'u') {\n\t                            matched = input_scan.match(/u([0-9A-Fa-f]{4})/g);\n\t                        } else {\n\t                            out += '\\\\';\n\t                            if (input_scan.hasNext()) {\n\t                                out += input_scan.next();\n\t                            }\n\t                            continue;\n\t                        }\n\t\n\t                        // If there's some error decoding, return the original string\n\t                        if (!matched) {\n\t                            return s;\n\t                        }\n\t\n\t                        escaped = parseInt(matched[1], 16);\n\t\n\t                        if (escaped > 0x7e && escaped <= 0xff && matched[0].indexOf('x') === 0) {\n\t                            // we bail out on \\x7f..\\xff,\n\t                            // leaving whole string escaped,\n\t                            // as it's probably completely binary\n\t                            return s;\n\t                        } else if (escaped >= 0x00 && escaped < 0x20) {\n\t                            // leave 0x00...0x1f escaped\n\t                            out += '\\\\' + matched[0];\n\t                            continue;\n\t                        } else if (escaped === 0x22 || escaped === 0x27 || escaped === 0x5c) {\n\t                            // single-quote, apostrophe, backslash - escape these\n\t                            out += '\\\\' + String.fromCharCode(escaped);\n\t                        } else {\n\t                            out += String.fromCharCode(escaped);\n\t                        }\n\t                    }\n\t                }\n\t\n\t                return out;\n\t            }\n\t        }\n\t\n\t        var beautifier = new Beautifier(js_source_text, options);\n\t        return beautifier.beautify();\n\t\n\t    }\n\t\n\t    if (true) {\n\t        // Add support for AMD ( https://github.com/amdjs/amdjs-api/wiki/AMD#defineamd-property- )\n\t        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t            return { js_beautify: js_beautify };\n\t        }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t    } else if (typeof exports !== \"undefined\") {\n\t        // Add support for CommonJS. Just put this file somewhere on your require.paths\n\t        // and you will be able to `var js_beautify = require(\"beautify\").js_beautify`.\n\t        exports.js_beautify = js_beautify;\n\t    } else if (typeof window !== \"undefined\") {\n\t        // If we're running a web page and don't have either of the above, add our one global\n\t        window.js_beautify = js_beautify;\n\t    } else if (typeof global !== \"undefined\") {\n\t        // If we don't even have window, try global.\n\t        global.js_beautify = js_beautify;\n\t    }\n\t\n\t}());\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*jshint curly:true, eqeqeq:true, laxbreak:true, noempty:false */\n\t/*\n\t\n\t  The MIT License (MIT)\n\t\n\t  Copyright (c) 2007-2013 Einar Lielmanis and contributors.\n\t\n\t  Permission is hereby granted, free of charge, to any person\n\t  obtaining a copy of this software and associated documentation files\n\t  (the \"Software\"), to deal in the Software without restriction,\n\t  including without limitation the rights to use, copy, modify, merge,\n\t  publish, distribute, sublicense, and/or sell copies of the Software,\n\t  and to permit persons to whom the Software is furnished to do so,\n\t  subject to the following conditions:\n\t\n\t  The above copyright notice and this permission notice shall be\n\t  included in all copies or substantial portions of the Software.\n\t\n\t  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n\t  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n\t  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n\t  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n\t  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n\t  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\t  SOFTWARE.\n\t\n\t\n\t CSS Beautifier\n\t---------------\n\t\n\t    Written by Harutyun Amirjanyan, (amirjanyan@gmail.com)\n\t\n\t    Based on code initially developed by: Einar Lielmanis, <einar@jsbeautifier.org>\n\t        http://jsbeautifier.org/\n\t\n\t    Usage:\n\t        css_beautify(source_text);\n\t        css_beautify(source_text, options);\n\t\n\t    The options are (default in brackets):\n\t        indent_size (4)                         — indentation size,\n\t        indent_char (space)                     — character to indent with,\n\t        selector_separator_newline (true)       - separate selectors with newline or\n\t                                                  not (e.g. \"a,\\nbr\" or \"a, br\")\n\t        end_with_newline (false)                - end with a newline\n\t        newline_between_rules (true)            - add a new line after every css rule\n\t        space_around_selector_separator (false) - ensure space around selector separators:\n\t                                                  '>', '+', '~' (e.g. \"a>b\" -> \"a > b\")\n\t    e.g\n\t\n\t    css_beautify(css_source_text, {\n\t      'indent_size': 1,\n\t      'indent_char': '\\t',\n\t      'selector_separator': ' ',\n\t      'end_with_newline': false,\n\t      'newline_between_rules': true,\n\t      'space_around_selector_separator': true\n\t    });\n\t*/\n\t\n\t// http://www.w3.org/TR/CSS21/syndata.html#tokenization\n\t// http://www.w3.org/TR/css3-syntax/\n\t\n\t(function() {\n\t    function css_beautify(source_text, options) {\n\t        options = options || {};\n\t        source_text = source_text || '';\n\t        // HACK: newline parsing inconsistent. This brute force normalizes the input.\n\t        source_text = source_text.replace(/\\r\\n|[\\r\\u2028\\u2029]/g, '\\n');\n\t\n\t        var indentSize = options.indent_size || 4;\n\t        var indentCharacter = options.indent_char || ' ';\n\t        var selectorSeparatorNewline = (options.selector_separator_newline === undefined) ? true : options.selector_separator_newline;\n\t        var end_with_newline = (options.end_with_newline === undefined) ? false : options.end_with_newline;\n\t        var newline_between_rules = (options.newline_between_rules === undefined) ? true : options.newline_between_rules;\n\t        var space_around_combinator = (options.space_around_combinator === undefined) ? false : options.space_around_combinator;\n\t        space_around_combinator = space_around_combinator || ((options.space_around_selector_separator === undefined) ? false : options.space_around_selector_separator);\n\t        var eol = options.eol ? options.eol : '\\n';\n\t\n\t        // compatibility\n\t        if (typeof indentSize === \"string\") {\n\t            indentSize = parseInt(indentSize, 10);\n\t        }\n\t\n\t        if (options.indent_with_tabs) {\n\t            indentCharacter = '\\t';\n\t            indentSize = 1;\n\t        }\n\t\n\t        eol = eol.replace(/\\\\r/, '\\r').replace(/\\\\n/, '\\n');\n\t\n\t\n\t        // tokenizer\n\t        var whiteRe = /^\\s+$/;\n\t\n\t        var pos = -1,\n\t            ch;\n\t        var parenLevel = 0;\n\t\n\t        function next() {\n\t            ch = source_text.charAt(++pos);\n\t            return ch || '';\n\t        }\n\t\n\t        function peek(skipWhitespace) {\n\t            var result = '';\n\t            var prev_pos = pos;\n\t            if (skipWhitespace) {\n\t                eatWhitespace();\n\t            }\n\t            result = source_text.charAt(pos + 1) || '';\n\t            pos = prev_pos - 1;\n\t            next();\n\t            return result;\n\t        }\n\t\n\t        function eatString(endChars) {\n\t            var start = pos;\n\t            while (next()) {\n\t                if (ch === \"\\\\\") {\n\t                    next();\n\t                } else if (endChars.indexOf(ch) !== -1) {\n\t                    break;\n\t                } else if (ch === \"\\n\") {\n\t                    break;\n\t                }\n\t            }\n\t            return source_text.substring(start, pos + 1);\n\t        }\n\t\n\t        function peekString(endChar) {\n\t            var prev_pos = pos;\n\t            var str = eatString(endChar);\n\t            pos = prev_pos - 1;\n\t            next();\n\t            return str;\n\t        }\n\t\n\t        function eatWhitespace() {\n\t            var result = '';\n\t            while (whiteRe.test(peek())) {\n\t                next();\n\t                result += ch;\n\t            }\n\t            return result;\n\t        }\n\t\n\t        function skipWhitespace() {\n\t            var result = '';\n\t            if (ch && whiteRe.test(ch)) {\n\t                result = ch;\n\t            }\n\t            while (whiteRe.test(next())) {\n\t                result += ch;\n\t            }\n\t            return result;\n\t        }\n\t\n\t        function eatComment(singleLine) {\n\t            var start = pos;\n\t            singleLine = peek() === \"/\";\n\t            next();\n\t            while (next()) {\n\t                if (!singleLine && ch === \"*\" && peek() === \"/\") {\n\t                    next();\n\t                    break;\n\t                } else if (singleLine && ch === \"\\n\") {\n\t                    return source_text.substring(start, pos);\n\t                }\n\t            }\n\t\n\t            return source_text.substring(start, pos) + ch;\n\t        }\n\t\n\t\n\t        function lookBack(str) {\n\t            return source_text.substring(pos - str.length, pos).toLowerCase() ===\n\t                str;\n\t        }\n\t\n\t        // Nested pseudo-class if we are insideRule\n\t        // and the next special character found opens\n\t        // a new block\n\t        function foundNestedPseudoClass() {\n\t            var openParen = 0;\n\t            for (var i = pos + 1; i < source_text.length; i++) {\n\t                var ch = source_text.charAt(i);\n\t                if (ch === \"{\") {\n\t                    return true;\n\t                } else if (ch === '(') {\n\t                    // pseudoclasses can contain ()\n\t                    openParen += 1;\n\t                } else if (ch === ')') {\n\t                    if (openParen === 0) {\n\t                        return false;\n\t                    }\n\t                    openParen -= 1;\n\t                } else if (ch === \";\" || ch === \"}\") {\n\t                    return false;\n\t                }\n\t            }\n\t            return false;\n\t        }\n\t\n\t        // printer\n\t        var basebaseIndentString = source_text.match(/^[\\t ]*/)[0];\n\t        var singleIndent = new Array(indentSize + 1).join(indentCharacter);\n\t        var indentLevel = 0;\n\t        var nestedLevel = 0;\n\t\n\t        function indent() {\n\t            indentLevel++;\n\t            basebaseIndentString += singleIndent;\n\t        }\n\t\n\t        function outdent() {\n\t            indentLevel--;\n\t            basebaseIndentString = basebaseIndentString.slice(0, -indentSize);\n\t        }\n\t\n\t        var print = {};\n\t        print[\"{\"] = function(ch) {\n\t            print.singleSpace();\n\t            output.push(ch);\n\t            print.newLine();\n\t        };\n\t        print[\"}\"] = function(ch) {\n\t            print.newLine();\n\t            output.push(ch);\n\t            print.newLine();\n\t        };\n\t\n\t        print._lastCharWhitespace = function() {\n\t            return whiteRe.test(output[output.length - 1]);\n\t        };\n\t\n\t        print.newLine = function(keepWhitespace) {\n\t            if (output.length) {\n\t                if (!keepWhitespace && output[output.length - 1] !== '\\n') {\n\t                    print.trim();\n\t                }\n\t\n\t                output.push('\\n');\n\t\n\t                if (basebaseIndentString) {\n\t                    output.push(basebaseIndentString);\n\t                }\n\t            }\n\t        };\n\t        print.singleSpace = function() {\n\t            if (output.length && !print._lastCharWhitespace()) {\n\t                output.push(' ');\n\t            }\n\t        };\n\t\n\t        print.preserveSingleSpace = function() {\n\t            if (isAfterSpace) {\n\t                print.singleSpace();\n\t            }\n\t        };\n\t\n\t        print.trim = function() {\n\t            while (print._lastCharWhitespace()) {\n\t                output.pop();\n\t            }\n\t        };\n\t\n\t\n\t        var output = [];\n\t        /*_____________________--------------------_____________________*/\n\t\n\t        var insideRule = false;\n\t        var insidePropertyValue = false;\n\t        var enteringConditionalGroup = false;\n\t        var top_ch = '';\n\t        var last_top_ch = '';\n\t\n\t        while (true) {\n\t            var whitespace = skipWhitespace();\n\t            var isAfterSpace = whitespace !== '';\n\t            var isAfterNewline = whitespace.indexOf('\\n') !== -1;\n\t            last_top_ch = top_ch;\n\t            top_ch = ch;\n\t\n\t            if (!ch) {\n\t                break;\n\t            } else if (ch === '/' && peek() === '*') { /* css comment */\n\t                var header = indentLevel === 0;\n\t\n\t                if (isAfterNewline || header) {\n\t                    print.newLine();\n\t                }\n\t\n\t                output.push(eatComment());\n\t                print.newLine();\n\t                if (header) {\n\t                    print.newLine(true);\n\t                }\n\t            } else if (ch === '/' && peek() === '/') { // single line comment\n\t                if (!isAfterNewline && last_top_ch !== '{') {\n\t                    print.trim();\n\t                }\n\t                print.singleSpace();\n\t                output.push(eatComment());\n\t                print.newLine();\n\t            } else if (ch === '@') {\n\t                print.preserveSingleSpace();\n\t\n\t                // deal with less propery mixins @{...}\n\t                if (peek() === '{') {\n\t                    output.push(eatString('}'));\n\t                } else {\n\t                    output.push(ch);\n\t\n\t                    // strip trailing space, if present, for hash property checks\n\t                    var variableOrRule = peekString(\": ,;{}()[]/='\\\"\");\n\t\n\t                    if (variableOrRule.match(/[ :]$/)) {\n\t                        // we have a variable or pseudo-class, add it and insert one space before continuing\n\t                        next();\n\t                        variableOrRule = eatString(\": \").replace(/\\s$/, '');\n\t                        output.push(variableOrRule);\n\t                        print.singleSpace();\n\t                    }\n\t\n\t                    variableOrRule = variableOrRule.replace(/\\s$/, '');\n\t\n\t                    // might be a nesting at-rule\n\t                    if (variableOrRule in css_beautify.NESTED_AT_RULE) {\n\t                        nestedLevel += 1;\n\t                        if (variableOrRule in css_beautify.CONDITIONAL_GROUP_RULE) {\n\t                            enteringConditionalGroup = true;\n\t                        }\n\t                    }\n\t                }\n\t            } else if (ch === '#' && peek() === '{') {\n\t                print.preserveSingleSpace();\n\t                output.push(eatString('}'));\n\t            } else if (ch === '{') {\n\t                if (peek(true) === '}') {\n\t                    eatWhitespace();\n\t                    next();\n\t                    print.singleSpace();\n\t                    output.push(\"{}\");\n\t                    print.newLine();\n\t                    if (newline_between_rules && indentLevel === 0) {\n\t                        print.newLine(true);\n\t                    }\n\t                } else {\n\t                    indent();\n\t                    print[\"{\"](ch);\n\t                    // when entering conditional groups, only rulesets are allowed\n\t                    if (enteringConditionalGroup) {\n\t                        enteringConditionalGroup = false;\n\t                        insideRule = (indentLevel > nestedLevel);\n\t                    } else {\n\t                        // otherwise, declarations are also allowed\n\t                        insideRule = (indentLevel >= nestedLevel);\n\t                    }\n\t                }\n\t            } else if (ch === '}') {\n\t                outdent();\n\t                print[\"}\"](ch);\n\t                insideRule = false;\n\t                insidePropertyValue = false;\n\t                if (nestedLevel) {\n\t                    nestedLevel--;\n\t                }\n\t                if (newline_between_rules && indentLevel === 0) {\n\t                    print.newLine(true);\n\t                }\n\t            } else if (ch === \":\") {\n\t                eatWhitespace();\n\t                if ((insideRule || enteringConditionalGroup) &&\n\t                    !(lookBack(\"&\") || foundNestedPseudoClass()) &&\n\t                    !lookBack(\"(\")) {\n\t                    // 'property: value' delimiter\n\t                    // which could be in a conditional group query\n\t                    insidePropertyValue = true;\n\t                    output.push(':');\n\t                    print.singleSpace();\n\t                } else {\n\t                    // sass/less parent reference don't use a space\n\t                    // sass nested pseudo-class don't use a space\n\t\n\t                    // preserve space before pseudoclasses/pseudoelements, as it means \"in any child\"\n\t                    if (lookBack(\" \") && output[output.length - 1] !== \" \") {\n\t                        output.push(\" \");\n\t                    }\n\t                    if (peek() === \":\") {\n\t                        // pseudo-element\n\t                        next();\n\t                        output.push(\"::\");\n\t                    } else {\n\t                        // pseudo-class\n\t                        output.push(':');\n\t                    }\n\t                }\n\t            } else if (ch === '\"' || ch === '\\'') {\n\t                print.preserveSingleSpace();\n\t                output.push(eatString(ch));\n\t            } else if (ch === ';') {\n\t                insidePropertyValue = false;\n\t                output.push(ch);\n\t                print.newLine();\n\t            } else if (ch === '(') { // may be a url\n\t                if (lookBack(\"url\")) {\n\t                    output.push(ch);\n\t                    eatWhitespace();\n\t                    if (next()) {\n\t                        if (ch !== ')' && ch !== '\"' && ch !== '\\'') {\n\t                            output.push(eatString(')'));\n\t                        } else {\n\t                            pos--;\n\t                        }\n\t                    }\n\t                } else {\n\t                    parenLevel++;\n\t                    print.preserveSingleSpace();\n\t                    output.push(ch);\n\t                    eatWhitespace();\n\t                }\n\t            } else if (ch === ')') {\n\t                output.push(ch);\n\t                parenLevel--;\n\t            } else if (ch === ',') {\n\t                output.push(ch);\n\t                eatWhitespace();\n\t                if (selectorSeparatorNewline && !insidePropertyValue && parenLevel < 1) {\n\t                    print.newLine();\n\t                } else {\n\t                    print.singleSpace();\n\t                }\n\t            } else if ((ch === '>' || ch === '+' || ch === '~') &&\n\t                !insidePropertyValue && parenLevel < 1) {\n\t                //handle combinator spacing\n\t                if (space_around_combinator) {\n\t                    print.singleSpace();\n\t                    output.push(ch);\n\t                    print.singleSpace();\n\t                } else {\n\t                    output.push(ch);\n\t                    eatWhitespace();\n\t                    // squash extra whitespace\n\t                    if (ch && whiteRe.test(ch)) {\n\t                        ch = '';\n\t                    }\n\t                }\n\t            } else if (ch === ']') {\n\t                output.push(ch);\n\t            } else if (ch === '[') {\n\t                print.preserveSingleSpace();\n\t                output.push(ch);\n\t            } else if (ch === '=') { // no whitespace before or after\n\t                eatWhitespace();\n\t                ch = '=';\n\t                output.push(ch);\n\t            } else {\n\t                print.preserveSingleSpace();\n\t                output.push(ch);\n\t            }\n\t        }\n\t\n\t\n\t        var sweetCode = '';\n\t        if (basebaseIndentString) {\n\t            sweetCode += basebaseIndentString;\n\t        }\n\t\n\t        sweetCode += output.join('').replace(/[\\r\\n\\t ]+$/, '');\n\t\n\t        // establish end_with_newline\n\t        if (end_with_newline) {\n\t            sweetCode += '\\n';\n\t        }\n\t\n\t        if (eol !== '\\n') {\n\t            sweetCode = sweetCode.replace(/[\\n]/g, eol);\n\t        }\n\t\n\t        return sweetCode;\n\t    }\n\t\n\t    // https://developer.mozilla.org/en-US/docs/Web/CSS/At-rule\n\t    css_beautify.NESTED_AT_RULE = {\n\t        \"@page\": true,\n\t        \"@font-face\": true,\n\t        \"@keyframes\": true,\n\t        // also in CONDITIONAL_GROUP_RULE below\n\t        \"@media\": true,\n\t        \"@supports\": true,\n\t        \"@document\": true\n\t    };\n\t    css_beautify.CONDITIONAL_GROUP_RULE = {\n\t        \"@media\": true,\n\t        \"@supports\": true,\n\t        \"@document\": true\n\t    };\n\t\n\t    /*global define */\n\t    if (true) {\n\t        // Add support for AMD ( https://github.com/amdjs/amdjs-api/wiki/AMD#defineamd-property- )\n\t        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t            return {\n\t                css_beautify: css_beautify\n\t            };\n\t        }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t    } else if (typeof exports !== \"undefined\") {\n\t        // Add support for CommonJS. Just put this file somewhere on your require.paths\n\t        // and you will be able to `var html_beautify = require(\"beautify\").html_beautify`.\n\t        exports.css_beautify = css_beautify;\n\t    } else if (typeof window !== \"undefined\") {\n\t        // If we're running a web page and don't have either of the above, add our one global\n\t        window.css_beautify = css_beautify;\n\t    } else if (typeof global !== \"undefined\") {\n\t        // If we don't even have window, try global.\n\t        global.css_beautify = css_beautify;\n\t    }\n\t\n\t}());\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*jshint curly:true, eqeqeq:true, laxbreak:true, noempty:false */\n\t/*\n\t\n\t  The MIT License (MIT)\n\t\n\t  Copyright (c) 2007-2013 Einar Lielmanis and contributors.\n\t\n\t  Permission is hereby granted, free of charge, to any person\n\t  obtaining a copy of this software and associated documentation files\n\t  (the \"Software\"), to deal in the Software without restriction,\n\t  including without limitation the rights to use, copy, modify, merge,\n\t  publish, distribute, sublicense, and/or sell copies of the Software,\n\t  and to permit persons to whom the Software is furnished to do so,\n\t  subject to the following conditions:\n\t\n\t  The above copyright notice and this permission notice shall be\n\t  included in all copies or substantial portions of the Software.\n\t\n\t  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n\t  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n\t  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n\t  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n\t  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n\t  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\t  SOFTWARE.\n\t\n\t\n\t Style HTML\n\t---------------\n\t\n\t  Written by Nochum Sossonko, (nsossonko@hotmail.com)\n\t\n\t  Based on code initially developed by: Einar Lielmanis, <einar@jsbeautifier.org>\n\t    http://jsbeautifier.org/\n\t\n\t  Usage:\n\t    style_html(html_source);\n\t\n\t    style_html(html_source, options);\n\t\n\t  The options are:\n\t    indent_inner_html (default false)  — indent <head> and <body> sections,\n\t    indent_size (default 4)          — indentation size,\n\t    indent_char (default space)      — character to indent with,\n\t    wrap_line_length (default 250)            -  maximum amount of characters per line (0 = disable)\n\t    brace_style (default \"collapse\") - \"collapse\" | \"expand\" | \"end-expand\" | \"none\"\n\t            put braces on the same line as control statements (default), or put braces on own line (Allman / ANSI style), or just put end braces on own line, or attempt to keep them where they are.\n\t    unformatted (defaults to inline tags) - list of tags, that shouldn't be reformatted\n\t    indent_scripts (default normal)  - \"keep\"|\"separate\"|\"normal\"\n\t    preserve_newlines (default true) - whether existing line breaks before elements should be preserved\n\t                                        Only works before elements, not inside tags or for text.\n\t    max_preserve_newlines (default unlimited) - maximum number of line breaks to be preserved in one chunk\n\t    indent_handlebars (default false) - format and indent {{#foo}} and {{/foo}}\n\t    end_with_newline (false)          - end with a newline\n\t    extra_liners (default [head,body,/html]) -List of tags that should have an extra newline before them.\n\t\n\t    e.g.\n\t\n\t    style_html(html_source, {\n\t      'indent_inner_html': false,\n\t      'indent_size': 2,\n\t      'indent_char': ' ',\n\t      'wrap_line_length': 78,\n\t      'brace_style': 'expand',\n\t      'preserve_newlines': true,\n\t      'max_preserve_newlines': 5,\n\t      'indent_handlebars': false,\n\t      'extra_liners': ['/html']\n\t    });\n\t*/\n\t\n\t(function() {\n\t\n\t    // function trim(s) {\n\t    //     return s.replace(/^\\s+|\\s+$/g, '');\n\t    // }\n\t\n\t    function ltrim(s) {\n\t        return s.replace(/^\\s+/g, '');\n\t    }\n\t\n\t    function rtrim(s) {\n\t        return s.replace(/\\s+$/g, '');\n\t    }\n\t\n\t    function style_html(html_source, options, js_beautify, css_beautify) {\n\t        //Wrapper function to invoke all the necessary constructors and deal with the output.\n\t\n\t        var multi_parser,\n\t            indent_inner_html,\n\t            indent_body_inner_html,\n\t            indent_head_inner_html,\n\t            indent_size,\n\t            indent_character,\n\t            wrap_line_length,\n\t            brace_style,\n\t            unformatted,\n\t            preserve_newlines,\n\t            max_preserve_newlines,\n\t            indent_handlebars,\n\t            wrap_attributes,\n\t            wrap_attributes_indent_size,\n\t            end_with_newline,\n\t            extra_liners,\n\t            eol;\n\t\n\t        options = options || {};\n\t\n\t        // backwards compatibility to 1.3.4\n\t        if ((options.wrap_line_length === undefined || parseInt(options.wrap_line_length, 10) === 0) &&\n\t            (options.max_char !== undefined && parseInt(options.max_char, 10) !== 0)) {\n\t            options.wrap_line_length = options.max_char;\n\t        }\n\t\n\t        indent_inner_html = (options.indent_inner_html === undefined) ? false : options.indent_inner_html;\n\t        indent_body_inner_html = (options.indent_body_inner_html === undefined) ? true : options.indent_body_inner_html;\n\t        indent_head_inner_html = (options.indent_head_inner_html === undefined) ? true : options.indent_head_inner_html;\n\t        indent_size = (options.indent_size === undefined) ? 4 : parseInt(options.indent_size, 10);\n\t        indent_character = (options.indent_char === undefined) ? ' ' : options.indent_char;\n\t        brace_style = (options.brace_style === undefined) ? 'collapse' : options.brace_style;\n\t        wrap_line_length = parseInt(options.wrap_line_length, 10) === 0 ? 32786 : parseInt(options.wrap_line_length || 250, 10);\n\t        unformatted = options.unformatted || [\n\t            // https://www.w3.org/TR/html5/dom.html#phrasing-content\n\t            'a', 'abbr', 'area', 'audio', 'b', 'bdi', 'bdo', 'br', 'button', 'canvas', 'cite',\n\t            'code', 'data', 'datalist', 'del', 'dfn', 'em', 'embed', 'i', 'iframe', 'img',\n\t            'input', 'ins', 'kbd', 'keygen', 'label', 'map', 'mark', 'math', 'meter', 'noscript',\n\t            'object', 'output', 'progress', 'q', 'ruby', 's', 'samp', /* 'script', */ 'select', 'small',\n\t            'span', 'strong', 'sub', 'sup', 'svg', 'template', 'textarea', 'time', 'u', 'var',\n\t            'video', 'wbr', 'text',\n\t            // prexisting - not sure of full effect of removing, leaving in\n\t            'acronym', 'address', 'big', 'dt', 'ins', 'small', 'strike', 'tt',\n\t            'pre',\n\t        ];\n\t        preserve_newlines = (options.preserve_newlines === undefined) ? true : options.preserve_newlines;\n\t        max_preserve_newlines = preserve_newlines ?\n\t            (isNaN(parseInt(options.max_preserve_newlines, 10)) ? 32786 : parseInt(options.max_preserve_newlines, 10)) :\n\t            0;\n\t        indent_handlebars = (options.indent_handlebars === undefined) ? false : options.indent_handlebars;\n\t        wrap_attributes = (options.wrap_attributes === undefined) ? 'auto' : options.wrap_attributes;\n\t        wrap_attributes_indent_size = (isNaN(parseInt(options.wrap_attributes_indent_size, 10))) ? indent_size : parseInt(options.wrap_attributes_indent_size, 10);\n\t        end_with_newline = (options.end_with_newline === undefined) ? false : options.end_with_newline;\n\t        extra_liners = (typeof options.extra_liners === 'object') && options.extra_liners ?\n\t            options.extra_liners.concat() : (typeof options.extra_liners === 'string') ?\n\t            options.extra_liners.split(',') : 'head,body,/html'.split(',');\n\t        eol = options.eol ? options.eol : '\\n';\n\t\n\t        if (options.indent_with_tabs) {\n\t            indent_character = '\\t';\n\t            indent_size = 1;\n\t        }\n\t\n\t        eol = eol.replace(/\\\\r/, '\\r').replace(/\\\\n/, '\\n');\n\t\n\t        function Parser() {\n\t\n\t            this.pos = 0; //Parser position\n\t            this.token = '';\n\t            this.current_mode = 'CONTENT'; //reflects the current Parser mode: TAG/CONTENT\n\t            this.tags = { //An object to hold tags, their position, and their parent-tags, initiated with default values\n\t                parent: 'parent1',\n\t                parentcount: 1,\n\t                parent1: ''\n\t            };\n\t            this.tag_type = '';\n\t            this.token_text = this.last_token = this.last_text = this.token_type = '';\n\t            this.newlines = 0;\n\t            this.indent_content = indent_inner_html;\n\t            this.indent_body_inner_html = indent_body_inner_html;\n\t            this.indent_head_inner_html = indent_head_inner_html;\n\t\n\t            this.Utils = { //Uilities made available to the various functions\n\t                whitespace: \"\\n\\r\\t \".split(''),\n\t\n\t                single_token: [\n\t                    // HTLM void elements - aka self-closing tags - aka singletons\n\t                    // https://www.w3.org/html/wg/drafts/html/master/syntax.html#void-elements\n\t                    'area', 'base', 'br', 'col', 'embed', 'hr', 'img', 'input', 'keygen',\n\t                    'link', 'menuitem', 'meta', 'param', 'source', 'track', 'wbr',\n\t                    // NOTE: Optional tags - are not understood.\n\t                    // https://www.w3.org/TR/html5/syntax.html#optional-tags\n\t                    // The rules for optional tags are too complex for a simple list\n\t                    // Also, the content of these tags should still be indented in many cases.\n\t                    // 'li' is a good exmple.\n\t\n\t                    // Doctype and xml elements\n\t                    '!doctype', '?xml',\n\t                    // ?php tag\n\t                    '?php',\n\t                    // other tags that were in this list, keeping just in case\n\t                    'basefont', 'isindex'\n\t                ],\n\t                extra_liners: extra_liners, //for tags that need a line of whitespace before them\n\t                in_array: function(what, arr) {\n\t                    for (var i = 0; i < arr.length; i++) {\n\t                        if (what === arr[i]) {\n\t                            return true;\n\t                        }\n\t                    }\n\t                    return false;\n\t                }\n\t            };\n\t\n\t            // Return true if the given text is composed entirely of whitespace.\n\t            this.is_whitespace = function(text) {\n\t                for (var n = 0; n < text.length; n++) {\n\t                    if (!this.Utils.in_array(text.charAt(n), this.Utils.whitespace)) {\n\t                        return false;\n\t                    }\n\t                }\n\t                return true;\n\t            };\n\t\n\t            this.traverse_whitespace = function() {\n\t                var input_char = '';\n\t\n\t                input_char = this.input.charAt(this.pos);\n\t                if (this.Utils.in_array(input_char, this.Utils.whitespace)) {\n\t                    this.newlines = 0;\n\t                    while (this.Utils.in_array(input_char, this.Utils.whitespace)) {\n\t                        if (preserve_newlines && input_char === '\\n' && this.newlines <= max_preserve_newlines) {\n\t                            this.newlines += 1;\n\t                        }\n\t\n\t                        this.pos++;\n\t                        input_char = this.input.charAt(this.pos);\n\t                    }\n\t                    return true;\n\t                }\n\t                return false;\n\t            };\n\t\n\t            // Append a space to the given content (string array) or, if we are\n\t            // at the wrap_line_length, append a newline/indentation.\n\t            // return true if a newline was added, false if a space was added\n\t            this.space_or_wrap = function(content) {\n\t                if (this.line_char_count >= this.wrap_line_length) { //insert a line when the wrap_line_length is reached\n\t                    this.print_newline(false, content);\n\t                    this.print_indentation(content);\n\t                    return true;\n\t                } else {\n\t                    this.line_char_count++;\n\t                    content.push(' ');\n\t                    return false;\n\t                }\n\t            };\n\t\n\t            this.get_content = function() { //function to capture regular content between tags\n\t                var input_char = '',\n\t                    content = [];\n\t\n\t                while (this.input.charAt(this.pos) !== '<') {\n\t                    if (this.pos >= this.input.length) {\n\t                        return content.length ? content.join('') : ['', 'TK_EOF'];\n\t                    }\n\t\n\t                    if (this.traverse_whitespace()) {\n\t                        this.space_or_wrap(content);\n\t                        continue;\n\t                    }\n\t\n\t                    if (indent_handlebars) {\n\t                        // Handlebars parsing is complicated.\n\t                        // {{#foo}} and {{/foo}} are formatted tags.\n\t                        // {{something}} should get treated as content, except:\n\t                        // {{else}} specifically behaves like {{#if}} and {{/if}}\n\t                        var peek3 = this.input.substr(this.pos, 3);\n\t                        if (peek3 === '{{#' || peek3 === '{{/') {\n\t                            // These are tags and not content.\n\t                            break;\n\t                        } else if (peek3 === '{{!') {\n\t                            return [this.get_tag(), 'TK_TAG_HANDLEBARS_COMMENT'];\n\t                        } else if (this.input.substr(this.pos, 2) === '{{') {\n\t                            if (this.get_tag(true) === '{{else}}') {\n\t                                break;\n\t                            }\n\t                        }\n\t                    }\n\t\n\t                    input_char = this.input.charAt(this.pos);\n\t                    this.pos++;\n\t                    this.line_char_count++;\n\t                    content.push(input_char); //letter at-a-time (or string) inserted to an array\n\t                }\n\t                return content.length ? content.join('') : '';\n\t            };\n\t\n\t            this.get_contents_to = function(name) { //get the full content of a script or style to pass to js_beautify\n\t                if (this.pos === this.input.length) {\n\t                    return ['', 'TK_EOF'];\n\t                }\n\t                var content = '';\n\t                var reg_match = new RegExp('</' + name + '\\\\s*>', 'igm');\n\t                reg_match.lastIndex = this.pos;\n\t                var reg_array = reg_match.exec(this.input);\n\t                var end_script = reg_array ? reg_array.index : this.input.length; //absolute end of script\n\t                if (this.pos < end_script) { //get everything in between the script tags\n\t                    content = this.input.substring(this.pos, end_script);\n\t                    this.pos = end_script;\n\t                }\n\t                return content;\n\t            };\n\t\n\t            this.record_tag = function(tag) { //function to record a tag and its parent in this.tags Object\n\t                if (this.tags[tag + 'count']) { //check for the existence of this tag type\n\t                    this.tags[tag + 'count']++;\n\t                    this.tags[tag + this.tags[tag + 'count']] = this.indent_level; //and record the present indent level\n\t                } else { //otherwise initialize this tag type\n\t                    this.tags[tag + 'count'] = 1;\n\t                    this.tags[tag + this.tags[tag + 'count']] = this.indent_level; //and record the present indent level\n\t                }\n\t                this.tags[tag + this.tags[tag + 'count'] + 'parent'] = this.tags.parent; //set the parent (i.e. in the case of a div this.tags.div1parent)\n\t                this.tags.parent = tag + this.tags[tag + 'count']; //and make this the current parent (i.e. in the case of a div 'div1')\n\t            };\n\t\n\t            this.retrieve_tag = function(tag) { //function to retrieve the opening tag to the corresponding closer\n\t                if (this.tags[tag + 'count']) { //if the openener is not in the Object we ignore it\n\t                    var temp_parent = this.tags.parent; //check to see if it's a closable tag.\n\t                    while (temp_parent) { //till we reach '' (the initial value);\n\t                        if (tag + this.tags[tag + 'count'] === temp_parent) { //if this is it use it\n\t                            break;\n\t                        }\n\t                        temp_parent = this.tags[temp_parent + 'parent']; //otherwise keep on climbing up the DOM Tree\n\t                    }\n\t                    if (temp_parent) { //if we caught something\n\t                        this.indent_level = this.tags[tag + this.tags[tag + 'count']]; //set the indent_level accordingly\n\t                        this.tags.parent = this.tags[temp_parent + 'parent']; //and set the current parent\n\t                    }\n\t                    delete this.tags[tag + this.tags[tag + 'count'] + 'parent']; //delete the closed tags parent reference...\n\t                    delete this.tags[tag + this.tags[tag + 'count']]; //...and the tag itself\n\t                    if (this.tags[tag + 'count'] === 1) {\n\t                        delete this.tags[tag + 'count'];\n\t                    } else {\n\t                        this.tags[tag + 'count']--;\n\t                    }\n\t                }\n\t            };\n\t\n\t            this.indent_to_tag = function(tag) {\n\t                // Match the indentation level to the last use of this tag, but don't remove it.\n\t                if (!this.tags[tag + 'count']) {\n\t                    return;\n\t                }\n\t                var temp_parent = this.tags.parent;\n\t                while (temp_parent) {\n\t                    if (tag + this.tags[tag + 'count'] === temp_parent) {\n\t                        break;\n\t                    }\n\t                    temp_parent = this.tags[temp_parent + 'parent'];\n\t                }\n\t                if (temp_parent) {\n\t                    this.indent_level = this.tags[tag + this.tags[tag + 'count']];\n\t                }\n\t            };\n\t\n\t            this.get_tag = function(peek) { //function to get a full tag and parse its type\n\t                var input_char = '',\n\t                    content = [],\n\t                    comment = '',\n\t                    space = false,\n\t                    first_attr = true,\n\t                    tag_start, tag_end,\n\t                    tag_start_char,\n\t                    orig_pos = this.pos,\n\t                    orig_line_char_count = this.line_char_count;\n\t\n\t                peek = peek !== undefined ? peek : false;\n\t\n\t                do {\n\t                    if (this.pos >= this.input.length) {\n\t                        if (peek) {\n\t                            this.pos = orig_pos;\n\t                            this.line_char_count = orig_line_char_count;\n\t                        }\n\t                        return content.length ? content.join('') : ['', 'TK_EOF'];\n\t                    }\n\t\n\t                    input_char = this.input.charAt(this.pos);\n\t                    this.pos++;\n\t\n\t                    if (this.Utils.in_array(input_char, this.Utils.whitespace)) { //don't want to insert unnecessary space\n\t                        space = true;\n\t                        continue;\n\t                    }\n\t\n\t                    if (input_char === \"'\" || input_char === '\"') {\n\t                        input_char += this.get_unformatted(input_char);\n\t                        space = true;\n\t\n\t                    }\n\t\n\t                    if (input_char === '=') { //no space before =\n\t                        space = false;\n\t                    }\n\t\n\t                    if (content.length && content[content.length - 1] !== '=' && input_char !== '>' && space) {\n\t                        //no space after = or before >\n\t                        var wrapped = this.space_or_wrap(content);\n\t                        var indentAttrs = wrapped && input_char !== '/' && wrap_attributes !== 'force';\n\t                        space = false;\n\t                        if (!first_attr && wrap_attributes === 'force' && input_char !== '/') {\n\t                            this.print_newline(false, content);\n\t                            this.print_indentation(content);\n\t                            indentAttrs = true;\n\t                        }\n\t                        if (indentAttrs) {\n\t                            //indent attributes an auto or forced line-wrap\n\t                            for (var count = 0; count < wrap_attributes_indent_size; count++) {\n\t                                content.push(indent_character);\n\t                            }\n\t                        }\n\t                        for (var i = 0; i < content.length; i++) {\n\t                            if (content[i] === ' ') {\n\t                                first_attr = false;\n\t                                break;\n\t                            }\n\t                        }\n\t                    }\n\t\n\t                    if (indent_handlebars && tag_start_char === '<') {\n\t                        // When inside an angle-bracket tag, put spaces around\n\t                        // handlebars not inside of strings.\n\t                        if ((input_char + this.input.charAt(this.pos)) === '{{') {\n\t                            input_char += this.get_unformatted('}}');\n\t                            if (content.length && content[content.length - 1] !== ' ' && content[content.length - 1] !== '<') {\n\t                                input_char = ' ' + input_char;\n\t                            }\n\t                            space = true;\n\t                        }\n\t                    }\n\t\n\t                    if (input_char === '<' && !tag_start_char) {\n\t                        tag_start = this.pos - 1;\n\t                        tag_start_char = '<';\n\t                    }\n\t\n\t                    if (indent_handlebars && !tag_start_char) {\n\t                        if (content.length >= 2 && content[content.length - 1] === '{' && content[content.length - 2] === '{') {\n\t                            if (input_char === '#' || input_char === '/' || input_char === '!') {\n\t                                tag_start = this.pos - 3;\n\t                            } else {\n\t                                tag_start = this.pos - 2;\n\t                            }\n\t                            tag_start_char = '{';\n\t                        }\n\t                    }\n\t\n\t                    this.line_char_count++;\n\t                    content.push(input_char); //inserts character at-a-time (or string)\n\t\n\t                    if (content[1] && (content[1] === '!' || content[1] === '?' || content[1] === '%')) { //if we're in a comment, do something special\n\t                        // We treat all comments as literals, even more than preformatted tags\n\t                        // we just look for the appropriate close tag\n\t                        content = [this.get_comment(tag_start)];\n\t                        break;\n\t                    }\n\t\n\t                    if (indent_handlebars && content[1] && content[1] === '{' && content[2] && content[2] === '!') { //if we're in a comment, do something special\n\t                        // We treat all comments as literals, even more than preformatted tags\n\t                        // we just look for the appropriate close tag\n\t                        content = [this.get_comment(tag_start)];\n\t                        break;\n\t                    }\n\t\n\t                    if (indent_handlebars && tag_start_char === '{' && content.length > 2 && content[content.length - 2] === '}' && content[content.length - 1] === '}') {\n\t                        break;\n\t                    }\n\t                } while (input_char !== '>');\n\t\n\t                var tag_complete = content.join('');\n\t                var tag_index;\n\t                var tag_offset;\n\t\n\t                if (tag_complete.indexOf(' ') !== -1) { //if there's whitespace, thats where the tag name ends\n\t                    tag_index = tag_complete.indexOf(' ');\n\t                } else if (tag_complete.charAt(0) === '{') {\n\t                    tag_index = tag_complete.indexOf('}');\n\t                } else { //otherwise go with the tag ending\n\t                    tag_index = tag_complete.indexOf('>');\n\t                }\n\t                if (tag_complete.charAt(0) === '<' || !indent_handlebars) {\n\t                    tag_offset = 1;\n\t                } else {\n\t                    tag_offset = tag_complete.charAt(2) === '#' ? 3 : 2;\n\t                }\n\t                var tag_check = tag_complete.substring(tag_offset, tag_index).toLowerCase();\n\t                if (tag_complete.charAt(tag_complete.length - 2) === '/' ||\n\t                    this.Utils.in_array(tag_check, this.Utils.single_token)) { //if this tag name is a single tag type (either in the list or has a closing /)\n\t                    if (!peek) {\n\t                        this.tag_type = 'SINGLE';\n\t                    }\n\t                } else if (indent_handlebars && tag_complete.charAt(0) === '{' && tag_check === 'else') {\n\t                    if (!peek) {\n\t                        this.indent_to_tag('if');\n\t                        this.tag_type = 'HANDLEBARS_ELSE';\n\t                        this.indent_content = true;\n\t                        this.traverse_whitespace();\n\t                    }\n\t                } else if (this.is_unformatted(tag_check, unformatted)) { // do not reformat the \"unformatted\" tags\n\t                    comment = this.get_unformatted('</' + tag_check + '>', tag_complete); //...delegate to get_unformatted function\n\t                    content.push(comment);\n\t                    tag_end = this.pos - 1;\n\t                    this.tag_type = 'SINGLE';\n\t                } else if (tag_check === 'script' &&\n\t                    (tag_complete.search('type') === -1 ||\n\t                        (tag_complete.search('type') > -1 &&\n\t                            tag_complete.search(/\\b(text|application|dojo)\\/(x-)?(javascript|ecmascript|jscript|livescript|(ld\\+)?json|method|aspect)/) > -1))) {\n\t                    if (!peek) {\n\t                        this.record_tag(tag_check);\n\t                        this.tag_type = 'SCRIPT';\n\t                    }\n\t                } else if (tag_check === 'style' &&\n\t                    (tag_complete.search('type') === -1 ||\n\t                        (tag_complete.search('type') > -1 && tag_complete.search('text/css') > -1))) {\n\t                    if (!peek) {\n\t                        this.record_tag(tag_check);\n\t                        this.tag_type = 'STYLE';\n\t                    }\n\t                } else if (tag_check.charAt(0) === '!') { //peek for <! comment\n\t                    // for comments content is already correct.\n\t                    if (!peek) {\n\t                        this.tag_type = 'SINGLE';\n\t                        this.traverse_whitespace();\n\t                    }\n\t                } else if (!peek) {\n\t                    if (tag_check.charAt(0) === '/') { //this tag is a double tag so check for tag-ending\n\t                        this.retrieve_tag(tag_check.substring(1)); //remove it and all ancestors\n\t                        this.tag_type = 'END';\n\t                    } else { //otherwise it's a start-tag\n\t                        this.record_tag(tag_check); //push it on the tag stack\n\t                        if (tag_check.toLowerCase() !== 'html') {\n\t                            this.indent_content = true;\n\t                        }\n\t                        this.tag_type = 'START';\n\t                    }\n\t\n\t                    // Allow preserving of newlines after a start or end tag\n\t                    if (this.traverse_whitespace()) {\n\t                        this.space_or_wrap(content);\n\t                    }\n\t\n\t                    if (this.Utils.in_array(tag_check, this.Utils.extra_liners)) { //check if this double needs an extra line\n\t                        this.print_newline(false, this.output);\n\t                        if (this.output.length && this.output[this.output.length - 2] !== '\\n') {\n\t                            this.print_newline(true, this.output);\n\t                        }\n\t                    }\n\t                }\n\t\n\t                if (peek) {\n\t                    this.pos = orig_pos;\n\t                    this.line_char_count = orig_line_char_count;\n\t                }\n\t\n\t                return content.join(''); //returns fully formatted tag\n\t            };\n\t\n\t            this.get_comment = function(start_pos) { //function to return comment content in its entirety\n\t                // this is will have very poor perf, but will work for now.\n\t                var comment = '',\n\t                    delimiter = '>',\n\t                    matched = false;\n\t\n\t                this.pos = start_pos;\n\t                var input_char = this.input.charAt(this.pos);\n\t                this.pos++;\n\t\n\t                while (this.pos <= this.input.length) {\n\t                    comment += input_char;\n\t\n\t                    // only need to check for the delimiter if the last chars match\n\t                    if (comment.charAt(comment.length - 1) === delimiter.charAt(delimiter.length - 1) &&\n\t                        comment.indexOf(delimiter) !== -1) {\n\t                        break;\n\t                    }\n\t\n\t                    // only need to search for custom delimiter for the first few characters\n\t                    if (!matched && comment.length < 10) {\n\t                        if (comment.indexOf('<![if') === 0) { //peek for <![if conditional comment\n\t                            delimiter = '<![endif]>';\n\t                            matched = true;\n\t                        } else if (comment.indexOf('<![cdata[') === 0) { //if it's a <[cdata[ comment...\n\t                            delimiter = ']]>';\n\t                            matched = true;\n\t                        } else if (comment.indexOf('<![') === 0) { // some other ![ comment? ...\n\t                            delimiter = ']>';\n\t                            matched = true;\n\t                        } else if (comment.indexOf('<!--') === 0) { // <!-- comment ...\n\t                            delimiter = '-->';\n\t                            matched = true;\n\t                        } else if (comment.indexOf('{{!') === 0) { // {{! handlebars comment\n\t                            delimiter = '}}';\n\t                            matched = true;\n\t                        } else if (comment.indexOf('<?') === 0) { // {{! handlebars comment\n\t                            delimiter = '?>';\n\t                            matched = true;\n\t                        } else if (comment.indexOf('<%') === 0) { // {{! handlebars comment\n\t                            delimiter = '%>';\n\t                            matched = true;\n\t                        }\n\t                    }\n\t\n\t                    input_char = this.input.charAt(this.pos);\n\t                    this.pos++;\n\t                }\n\t\n\t                return comment;\n\t            };\n\t\n\t            function tokenMatcher(delimiter) {\n\t                var token = '';\n\t\n\t                var add = function(str) {\n\t                    var newToken = token + str.toLowerCase();\n\t                    token = newToken.length <= delimiter.length ? newToken : newToken.substr(newToken.length - delimiter.length, delimiter.length);\n\t                };\n\t\n\t                var doesNotMatch = function() {\n\t                    return token.indexOf(delimiter) === -1;\n\t                };\n\t\n\t                return {\n\t                    add: add,\n\t                    doesNotMatch: doesNotMatch\n\t                };\n\t            }\n\t\n\t            this.get_unformatted = function(delimiter, orig_tag) { //function to return unformatted content in its entirety\n\t                if (orig_tag && orig_tag.toLowerCase().indexOf(delimiter) !== -1) {\n\t                    return '';\n\t                }\n\t                var input_char = '';\n\t                var content = '';\n\t                var space = true;\n\t\n\t                var delimiterMatcher = tokenMatcher(delimiter);\n\t\n\t                do {\n\t\n\t                    if (this.pos >= this.input.length) {\n\t                        return content;\n\t                    }\n\t\n\t                    input_char = this.input.charAt(this.pos);\n\t                    this.pos++;\n\t\n\t                    if (this.Utils.in_array(input_char, this.Utils.whitespace)) {\n\t                        if (!space) {\n\t                            this.line_char_count--;\n\t                            continue;\n\t                        }\n\t                        if (input_char === '\\n' || input_char === '\\r') {\n\t                            content += '\\n';\n\t                            /*  Don't change tab indention for unformatted blocks.  If using code for html editing, this will greatly affect <pre> tags if they are specified in the 'unformatted array'\n\t                for (var i=0; i<this.indent_level; i++) {\n\t                  content += this.indent_string;\n\t                }\n\t                space = false; //...and make sure other indentation is erased\n\t                */\n\t                            this.line_char_count = 0;\n\t                            continue;\n\t                        }\n\t                    }\n\t                    content += input_char;\n\t                    delimiterMatcher.add(input_char);\n\t                    this.line_char_count++;\n\t                    space = true;\n\t\n\t                    if (indent_handlebars && input_char === '{' && content.length && content.charAt(content.length - 2) === '{') {\n\t                        // Handlebars expressions in strings should also be unformatted.\n\t                        content += this.get_unformatted('}}');\n\t                        // Don't consider when stopping for delimiters.\n\t                    }\n\t                } while (delimiterMatcher.doesNotMatch());\n\t\n\t                return content;\n\t            };\n\t\n\t            this.get_token = function() { //initial handler for token-retrieval\n\t                var token;\n\t\n\t                if (this.last_token === 'TK_TAG_SCRIPT' || this.last_token === 'TK_TAG_STYLE') { //check if we need to format javascript\n\t                    var type = this.last_token.substr(7);\n\t                    token = this.get_contents_to(type);\n\t                    if (typeof token !== 'string') {\n\t                        return token;\n\t                    }\n\t                    return [token, 'TK_' + type];\n\t                }\n\t                if (this.current_mode === 'CONTENT') {\n\t                    token = this.get_content();\n\t                    if (typeof token !== 'string') {\n\t                        return token;\n\t                    } else {\n\t                        return [token, 'TK_CONTENT'];\n\t                    }\n\t                }\n\t\n\t                if (this.current_mode === 'TAG') {\n\t                    token = this.get_tag();\n\t                    if (typeof token !== 'string') {\n\t                        return token;\n\t                    } else {\n\t                        var tag_name_type = 'TK_TAG_' + this.tag_type;\n\t                        return [token, tag_name_type];\n\t                    }\n\t                }\n\t            };\n\t\n\t            this.get_full_indent = function(level) {\n\t                level = this.indent_level + level || 0;\n\t                if (level < 1) {\n\t                    return '';\n\t                }\n\t\n\t                return Array(level + 1).join(this.indent_string);\n\t            };\n\t\n\t            this.is_unformatted = function(tag_check, unformatted) {\n\t                //is this an HTML5 block-level link?\n\t                if (!this.Utils.in_array(tag_check, unformatted)) {\n\t                    return false;\n\t                }\n\t\n\t                if (tag_check.toLowerCase() !== 'a' || !this.Utils.in_array('a', unformatted)) {\n\t                    return true;\n\t                }\n\t\n\t                //at this point we have an  tag; is its first child something we want to remain\n\t                //unformatted?\n\t                var next_tag = this.get_tag(true /* peek. */ );\n\t\n\t                // test next_tag to see if it is just html tag (no external content)\n\t                var tag = (next_tag || \"\").match(/^\\s*<\\s*\\/?([a-z]*)\\s*[^>]*>\\s*$/);\n\t\n\t                // if next_tag comes back but is not an isolated tag, then\n\t                // let's treat the 'a' tag as having content\n\t                // and respect the unformatted option\n\t                if (!tag || this.Utils.in_array(tag, unformatted)) {\n\t                    return true;\n\t                } else {\n\t                    return false;\n\t                }\n\t            };\n\t\n\t            this.printer = function(js_source, indent_character, indent_size, wrap_line_length, brace_style) { //handles input/output and some other printing functions\n\t\n\t                this.input = js_source || ''; //gets the input for the Parser\n\t\n\t                // HACK: newline parsing inconsistent. This brute force normalizes the input.\n\t                this.input = this.input.replace(/\\r\\n|[\\r\\u2028\\u2029]/g, '\\n');\n\t\n\t                this.output = [];\n\t                this.indent_character = indent_character;\n\t                this.indent_string = '';\n\t                this.indent_size = indent_size;\n\t                this.brace_style = brace_style;\n\t                this.indent_level = 0;\n\t                this.wrap_line_length = wrap_line_length;\n\t                this.line_char_count = 0; //count to see if wrap_line_length was exceeded\n\t\n\t                for (var i = 0; i < this.indent_size; i++) {\n\t                    this.indent_string += this.indent_character;\n\t                }\n\t\n\t                this.print_newline = function(force, arr) {\n\t                    this.line_char_count = 0;\n\t                    if (!arr || !arr.length) {\n\t                        return;\n\t                    }\n\t                    if (force || (arr[arr.length - 1] !== '\\n')) { //we might want the extra line\n\t                        if ((arr[arr.length - 1] !== '\\n')) {\n\t                            arr[arr.length - 1] = rtrim(arr[arr.length - 1]);\n\t                        }\n\t                        arr.push('\\n');\n\t                    }\n\t                };\n\t\n\t                this.print_indentation = function(arr) {\n\t                    for (var i = 0; i < this.indent_level; i++) {\n\t                        arr.push(this.indent_string);\n\t                        this.line_char_count += this.indent_string.length;\n\t                    }\n\t                };\n\t\n\t                this.print_token = function(text) {\n\t                    // Avoid printing initial whitespace.\n\t                    if (this.is_whitespace(text) && !this.output.length) {\n\t                        return;\n\t                    }\n\t                    if (text || text !== '') {\n\t                        if (this.output.length && this.output[this.output.length - 1] === '\\n') {\n\t                            this.print_indentation(this.output);\n\t                            text = ltrim(text);\n\t                        }\n\t                    }\n\t                    this.print_token_raw(text);\n\t                };\n\t\n\t                this.print_token_raw = function(text) {\n\t                    // If we are going to print newlines, truncate trailing\n\t                    // whitespace, as the newlines will represent the space.\n\t                    if (this.newlines > 0) {\n\t                        text = rtrim(text);\n\t                    }\n\t\n\t                    if (text && text !== '') {\n\t                        if (text.length > 1 && text.charAt(text.length - 1) === '\\n') {\n\t                            // unformatted tags can grab newlines as their last character\n\t                            this.output.push(text.slice(0, -1));\n\t                            this.print_newline(false, this.output);\n\t                        } else {\n\t                            this.output.push(text);\n\t                        }\n\t                    }\n\t\n\t                    for (var n = 0; n < this.newlines; n++) {\n\t                        this.print_newline(n > 0, this.output);\n\t                    }\n\t                    this.newlines = 0;\n\t                };\n\t\n\t                this.indent = function() {\n\t                    this.indent_level++;\n\t                };\n\t\n\t                this.unindent = function() {\n\t                    if (this.indent_level > 0) {\n\t                        this.indent_level--;\n\t                    }\n\t                };\n\t            };\n\t            return this;\n\t        }\n\t\n\t        /*_____________________--------------------_____________________*/\n\t\n\t        multi_parser = new Parser(); //wrapping functions Parser\n\t        multi_parser.printer(html_source, indent_character, indent_size, wrap_line_length, brace_style); //initialize starting values\n\t\n\t        while (true) {\n\t            var t = multi_parser.get_token();\n\t            multi_parser.token_text = t[0];\n\t            multi_parser.token_type = t[1];\n\t\n\t            if (multi_parser.token_type === 'TK_EOF') {\n\t                break;\n\t            }\n\t\n\t            switch (multi_parser.token_type) {\n\t                case 'TK_TAG_START':\n\t                    multi_parser.print_newline(false, multi_parser.output);\n\t                    multi_parser.print_token(multi_parser.token_text);\n\t                    if (multi_parser.indent_content) {\n\t                        if ((multi_parser.indent_body_inner_html || !multi_parser.token_text.match(/<body(?:.*)>/)) &&\n\t                            (multi_parser.indent_head_inner_html || !multi_parser.token_text.match(/<head(?:.*)>/))) {\n\t\n\t                            multi_parser.indent();\n\t                        }\n\t\n\t                        multi_parser.indent_content = false;\n\t                    }\n\t                    multi_parser.current_mode = 'CONTENT';\n\t                    break;\n\t                case 'TK_TAG_STYLE':\n\t                case 'TK_TAG_SCRIPT':\n\t                    multi_parser.print_newline(false, multi_parser.output);\n\t                    multi_parser.print_token(multi_parser.token_text);\n\t                    multi_parser.current_mode = 'CONTENT';\n\t                    break;\n\t                case 'TK_TAG_END':\n\t                    //Print new line only if the tag has no content and has child\n\t                    if (multi_parser.last_token === 'TK_CONTENT' && multi_parser.last_text === '') {\n\t                        var tag_name = (multi_parser.token_text.match(/\\w+/) || [])[0];\n\t                        var tag_extracted_from_last_output = null;\n\t                        if (multi_parser.output.length) {\n\t                            tag_extracted_from_last_output = multi_parser.output[multi_parser.output.length - 1].match(/(?:<|{{#)\\s*(\\w+)/);\n\t                        }\n\t                        if (tag_extracted_from_last_output === null ||\n\t                            (tag_extracted_from_last_output[1] !== tag_name && !multi_parser.Utils.in_array(tag_extracted_from_last_output[1], unformatted))) {\n\t                            multi_parser.print_newline(false, multi_parser.output);\n\t                        }\n\t                    }\n\t                    multi_parser.print_token(multi_parser.token_text);\n\t                    multi_parser.current_mode = 'CONTENT';\n\t                    break;\n\t                case 'TK_TAG_SINGLE':\n\t                    // Don't add a newline before elements that should remain unformatted.\n\t                    var tag_check = multi_parser.token_text.match(/^\\s*<([a-z-]+)/i);\n\t                    if (!tag_check || !multi_parser.Utils.in_array(tag_check[1], unformatted)) {\n\t                        multi_parser.print_newline(false, multi_parser.output);\n\t                    }\n\t                    multi_parser.print_token(multi_parser.token_text);\n\t                    multi_parser.current_mode = 'CONTENT';\n\t                    break;\n\t                case 'TK_TAG_HANDLEBARS_ELSE':\n\t                    // Don't add a newline if opening {{#if}} tag is on the current line\n\t                    var foundIfOnCurrentLine = false;\n\t                    for (var lastCheckedOutput = multi_parser.output.length - 1; lastCheckedOutput >= 0; lastCheckedOutput--) {\n\t                        if (multi_parser.output[lastCheckedOutput] === '\\n') {\n\t                            break;\n\t                        } else {\n\t                            if (multi_parser.output[lastCheckedOutput].match(/{{#if/)) {\n\t                                foundIfOnCurrentLine = true;\n\t                                break;\n\t                            }\n\t                        }\n\t                    }\n\t                    if (!foundIfOnCurrentLine) {\n\t                        multi_parser.print_newline(false, multi_parser.output);\n\t                    }\n\t                    multi_parser.print_token(multi_parser.token_text);\n\t                    if (multi_parser.indent_content) {\n\t                        multi_parser.indent();\n\t                        multi_parser.indent_content = false;\n\t                    }\n\t                    multi_parser.current_mode = 'CONTENT';\n\t                    break;\n\t                case 'TK_TAG_HANDLEBARS_COMMENT':\n\t                    multi_parser.print_token(multi_parser.token_text);\n\t                    multi_parser.current_mode = 'TAG';\n\t                    break;\n\t                case 'TK_CONTENT':\n\t                    multi_parser.print_token(multi_parser.token_text);\n\t                    multi_parser.current_mode = 'TAG';\n\t                    break;\n\t                case 'TK_STYLE':\n\t                case 'TK_SCRIPT':\n\t                    if (multi_parser.token_text !== '') {\n\t                        multi_parser.print_newline(false, multi_parser.output);\n\t                        var text = multi_parser.token_text,\n\t                            _beautifier,\n\t                            script_indent_level = 1;\n\t                        if (multi_parser.token_type === 'TK_SCRIPT') {\n\t                            _beautifier = typeof js_beautify === 'function' && js_beautify;\n\t                        } else if (multi_parser.token_type === 'TK_STYLE') {\n\t                            _beautifier = typeof css_beautify === 'function' && css_beautify;\n\t                        }\n\t\n\t                        if (options.indent_scripts === \"keep\") {\n\t                            script_indent_level = 0;\n\t                        } else if (options.indent_scripts === \"separate\") {\n\t                            script_indent_level = -multi_parser.indent_level;\n\t                        }\n\t\n\t                        var indentation = multi_parser.get_full_indent(script_indent_level);\n\t                        if (_beautifier) {\n\t\n\t                            // call the Beautifier if avaliable\n\t                            var Child_options = function() {\n\t                                this.eol = '\\n';\n\t                            };\n\t                            Child_options.prototype = options;\n\t                            var child_options = new Child_options();\n\t                            text = _beautifier(text.replace(/^\\s*/, indentation), child_options);\n\t                        } else {\n\t                            // simply indent the string otherwise\n\t                            var white = text.match(/^\\s*/)[0];\n\t                            var _level = white.match(/[^\\n\\r]*$/)[0].split(multi_parser.indent_string).length - 1;\n\t                            var reindent = multi_parser.get_full_indent(script_indent_level - _level);\n\t                            text = text.replace(/^\\s*/, indentation)\n\t                                .replace(/\\r\\n|\\r|\\n/g, '\\n' + reindent)\n\t                                .replace(/\\s+$/, '');\n\t                        }\n\t                        if (text) {\n\t                            multi_parser.print_token_raw(text);\n\t                            multi_parser.print_newline(true, multi_parser.output);\n\t                        }\n\t                    }\n\t                    multi_parser.current_mode = 'TAG';\n\t                    break;\n\t                default:\n\t                    // We should not be getting here but we don't want to drop input on the floor\n\t                    // Just output the text and move on\n\t                    if (multi_parser.token_text !== '') {\n\t                        multi_parser.print_token(multi_parser.token_text);\n\t                    }\n\t                    break;\n\t            }\n\t            multi_parser.last_token = multi_parser.token_type;\n\t            multi_parser.last_text = multi_parser.token_text;\n\t        }\n\t        var sweet_code = multi_parser.output.join('').replace(/[\\r\\n\\t ]+$/, '');\n\t\n\t        // establish end_with_newline\n\t        if (end_with_newline) {\n\t            sweet_code += '\\n';\n\t        }\n\t\n\t        if (eol !== '\\n') {\n\t            sweet_code = sweet_code.replace(/[\\n]/g, eol);\n\t        }\n\t\n\t        return sweet_code;\n\t    }\n\t\n\t    if (true) {\n\t        // Add support for AMD ( https://github.com/amdjs/amdjs-api/wiki/AMD#defineamd-property- )\n\t        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, __webpack_require__(10), __webpack_require__(11)], __WEBPACK_AMD_DEFINE_RESULT__ = function(requireamd) {\n\t            var js_beautify = __webpack_require__(10);\n\t            var css_beautify = __webpack_require__(11);\n\t\n\t            return {\n\t                html_beautify: function(html_source, options) {\n\t                    return style_html(html_source, options, js_beautify.js_beautify, css_beautify.css_beautify);\n\t                }\n\t            };\n\t        }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t    } else if (typeof exports !== \"undefined\") {\n\t        // Add support for CommonJS. Just put this file somewhere on your require.paths\n\t        // and you will be able to `var html_beautify = require(\"beautify\").html_beautify`.\n\t        var js_beautify = require('./beautify.js');\n\t        var css_beautify = require('./beautify-css.js');\n\t\n\t        exports.html_beautify = function(html_source, options) {\n\t            return style_html(html_source, options, js_beautify.js_beautify, css_beautify.css_beautify);\n\t        };\n\t    } else if (typeof window !== \"undefined\") {\n\t        // If we're running a web page and don't have either of the above, add our one global\n\t        window.html_beautify = function(html_source, options) {\n\t            return style_html(html_source, options, window.js_beautify, window.css_beautify);\n\t        };\n\t    } else if (typeof global !== \"undefined\") {\n\t        // If we don't even have window, try global.\n\t        global.html_beautify = function(html_source, options) {\n\t            return style_html(html_source, options, global.js_beautify, global.css_beautify);\n\t        };\n\t    }\n\t\n\t}());\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(7);\n\tvar html_code_pipe_1 = __webpack_require__(6);\n\tvar javascript_code_pipe_1 = __webpack_require__(8);\n\tvar ng2_utils_directive_1 = __webpack_require__(14);\n\tvar Ng2UtilsModule = (function () {\n\t    function Ng2UtilsModule() {\n\t    }\n\t    return Ng2UtilsModule;\n\t}());\n\tNg2UtilsModule = __decorate([\n\t    core_1.NgModule({\n\t        declarations: [\n\t            html_code_pipe_1.HtmlCodePipe,\n\t            javascript_code_pipe_1.JavascriptCodePipe,\n\t            ng2_utils_directive_1.Ng2UtilsDirective\n\t        ],\n\t        exports: [\n\t            html_code_pipe_1.HtmlCodePipe,\n\t            javascript_code_pipe_1.JavascriptCodePipe,\n\t            ng2_utils_directive_1.Ng2UtilsDirective\n\t        ]\n\t    }),\n\t    __metadata(\"design:paramtypes\", [])\n\t], Ng2UtilsModule);\n\texports.Ng2UtilsModule = Ng2UtilsModule;\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(7);\n\tvar Ng2UtilsDirective = (function () {\n\t    function Ng2UtilsDirective() {\n\t    }\n\t    return Ng2UtilsDirective;\n\t}()); // dummy directive to allow non-standard tags\n\tNg2UtilsDirective = __decorate([\n\t    core_1.Directive({\n\t        selector: 'ng2-utils-1, ng2-utils-2, ng2-utils-3, ng2-utils-4, ng2-utils-5,' +\n\t            'ng2-utils-6, ng2-utils-7, ng2-utils-8, ng2-utils-9, ng2-utils-10,' +\n\t            'ng2-utils-11, ng2-utils-12, ng2-utils-13, ng2-utils-14, ng2-utils-15,' +\n\t            'ng2-utils-16, ng2-utils-17, ng2-utils-18, ng2-utils-19, ng2-utils-20'\n\t    }),\n\t    __metadata(\"design:paramtypes\", [])\n\t], Ng2UtilsDirective);\n\texports.Ng2UtilsDirective = Ng2UtilsDirective;\n\n\n/***/ }\n/******/ ])\n});\n;\n//# sourceMappingURL=ng2-utils.umd.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-utils/dist/ng2-utils.umd.js\n// module id = 377\n// module chunks = 0"],"sourceRoot":""}