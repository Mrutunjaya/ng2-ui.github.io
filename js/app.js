webpackJsonp([0],{

/***/ 0:
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\nvar core_1 = __webpack_require__(1);\nvar platform_browser_dynamic_1 = __webpack_require__(19);\nvar app_module_1 = __webpack_require__(23);\n// depending on the env mode, enable prod mode or add debugging modules\nif (false) {\n    core_1.enableProdMode();\n}\nfunction main() {\n    return platform_browser_dynamic_1.platformBrowserDynamic().bootstrapModule(app_module_1.AppModule);\n}\nexports.main = main;\nif (document.readyState === 'complete') {\n    main();\n}\nelse {\n    document.addEventListener('DOMContentLoaded', main);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvbWFpbi50cz85NTg0Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxpQ0FBK0IsQ0FBZSxDQUFDO0FBQy9DLHFEQUF1QyxFQUFtQyxDQUFDO0FBQzNFLHVDQUEwQixFQUFjLENBQUM7QUFFekMsdUVBQXVFO0FBQ3ZFLEVBQUUsQ0FBQyxDQUFDLEtBQTJCLENBQUMsQ0FBQyxDQUFDO0lBQ2hDLHFCQUFjLEVBQUUsQ0FBQztBQUNuQixDQUFDO0FBRUQ7SUFDRSxNQUFNLENBQUMsaURBQXNCLEVBQUUsQ0FBQyxlQUFlLENBQUMsc0JBQVMsQ0FBQyxDQUFDO0FBQzdELENBQUM7QUFGZSxZQUFJLE9BRW5CO0FBRUQsRUFBRSxDQUFDLENBQUMsUUFBUSxDQUFDLFVBQVUsS0FBSyxVQUFVLENBQUMsQ0FBQyxDQUFDO0lBQ3ZDLElBQUksRUFBRSxDQUFDO0FBQ1QsQ0FBQztBQUFDLElBQUksQ0FBQyxDQUFDO0lBQ04sUUFBUSxDQUFDLGdCQUFnQixDQUFDLGtCQUFrQixFQUFFLElBQUksQ0FBQyxDQUFDO0FBQ3RELENBQUMiLCJmaWxlIjoiMC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGVuYWJsZVByb2RNb2RlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBwbGF0Zm9ybUJyb3dzZXJEeW5hbWljIH0gZnJvbSAnQGFuZ3VsYXIvcGxhdGZvcm0tYnJvd3Nlci1keW5hbWljJztcbmltcG9ydCB7IEFwcE1vZHVsZSB9IGZyb20gJy4vYXBwLm1vZHVsZSc7XG5cbi8vIGRlcGVuZGluZyBvbiB0aGUgZW52IG1vZGUsIGVuYWJsZSBwcm9kIG1vZGUgb3IgYWRkIGRlYnVnZ2luZyBtb2R1bGVzXG5pZiAocHJvY2Vzcy5lbnYuRU5WID09PSAnYnVpbGQnKSB7XG4gIGVuYWJsZVByb2RNb2RlKCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBtYWluKCk6IGFueSB7XG4gIHJldHVybiBwbGF0Zm9ybUJyb3dzZXJEeW5hbWljKCkuYm9vdHN0cmFwTW9kdWxlKEFwcE1vZHVsZSk7XG59XG5cbmlmIChkb2N1bWVudC5yZWFkeVN0YXRlID09PSAnY29tcGxldGUnKSB7XG4gIG1haW4oKTtcbn0gZWxzZSB7XG4gIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ0RPTUNvbnRlbnRMb2FkZWQnLCBtYWluKTtcbn1cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL34vYW5ndWxhcjItdGVtcGxhdGUtbG9hZGVyIS4vYXBwL21haW4udHNcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9");

/***/ },

/***/ 23:
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = __webpack_require__(1);\nvar platform_browser_1 = __webpack_require__(21);\nvar forms_1 = __webpack_require__(24);\nvar http_1 = __webpack_require__(28);\nvar common_1 = __webpack_require__(22);\nvar app_component_1 = __webpack_require__(29);\nvar drawer_component_1 = __webpack_require__(358);\nvar repo_info_component_1 = __webpack_require__(359);\nvar http_cache_1 = __webpack_require__(360);\nvar ng2_storage_1 = __webpack_require__(361);\nvar app_routes_1 = __webpack_require__(362);\nvar getting_started_component_1 = __webpack_require__(378);\nvar accordion_component_1 = __webpack_require__(364);\nvar datetime_picker_component_1 = __webpack_require__(365);\nvar google_map_component_1 = __webpack_require__(366);\nvar infinite_list_component_1 = __webpack_require__(367);\nvar menu_component_1 = __webpack_require__(376);\nvar overlay_component_1 = __webpack_require__(368);\nvar parallax_scroll_component_1 = __webpack_require__(369);\nvar popup_component_1 = __webpack_require__(370);\nvar scrollable_component_1 = __webpack_require__(371);\nvar sticky_component_1 = __webpack_require__(372);\nvar tab_component_1 = __webpack_require__(373);\nvar tooltip_component_1 = __webpack_require__(374);\nvar auto_complete_component_1 = __webpack_require__(375);\nvar sortable_component_1 = __webpack_require__(377);\nvar ng2_ui_1 = __webpack_require__(58);\nvar AppModule = (function () {\n    function AppModule() {\n    }\n    AppModule = __decorate([\n        core_1.NgModule({\n            imports: [\n                platform_browser_1.BrowserModule,\n                forms_1.FormsModule,\n                http_1.HttpModule,\n                ng2_ui_1.Ng2UIModule,\n                app_routes_1.APP_ROUTER_PROVIDERS\n            ],\n            declarations: [\n                app_component_1.AppComponent,\n                drawer_component_1.DrawerComponent,\n                repo_info_component_1.RepoInfoComponent,\n                getting_started_component_1.GettingStartedComponent,\n                accordion_component_1.AccordionComponent,\n                auto_complete_component_1.AutoCompleteComponent,\n                datetime_picker_component_1.DatetimePickerComponent,\n                google_map_component_1.GoogleMapComponent,\n                infinite_list_component_1.InfiniteListComponent,\n                menu_component_1.MenuComponent,\n                overlay_component_1.OverlayComponent,\n                parallax_scroll_component_1.ParallaxScrollComponent,\n                popup_component_1.PopupComponent,\n                scrollable_component_1.ScrollableComponent,\n                sticky_component_1.StickyComponent,\n                tab_component_1.TabComponent,\n                tooltip_component_1.TooltipComponent,\n                sortable_component_1.SortableComponent\n            ],\n            providers: [\n                http_cache_1.HttpCache,\n                ng2_storage_1.Ng2Storage,\n                { provide: common_1.LocationStrategy, useClass: common_1.HashLocationStrategy }\n            ],\n            bootstrap: [app_component_1.AppComponent]\n        }), \n        __metadata('design:paramtypes', [])\n    ], AppModule);\n    return AppModule;\n}());\nexports.AppModule = AppModule;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvYXBwLm1vZHVsZS50cz9lZGMzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQSxpQ0FBK0IsQ0FBZSxDQUFDO0FBQy9DLDZDQUErQixFQUEyQixDQUFDO0FBQzNELGtDQUErQixFQUFnQixDQUFDO0FBQ2hELGlDQUEyQixFQUFlLENBQUM7QUFDM0MsbUNBQXVELEVBQWlCLENBQUM7QUFFekUsMENBQStCLEVBQWlCLENBQUM7QUFDakQsNkNBQWdDLEdBQW9CLENBQUM7QUFDckQsZ0RBQWtDLEdBQXVCLENBQUM7QUFDMUQsdUNBQTBCLEdBQWMsQ0FBQztBQUN6Qyx3Q0FBMkIsR0FBZSxDQUFDO0FBQzNDLHVDQUFxQyxHQUFjLENBQUM7QUFDcEQsc0RBQXNDLEdBQTZCLENBQUM7QUFDcEUsZ0RBQWlDLEdBQXlDLENBQUM7QUFDM0Usc0RBQXNDLEdBQStDLENBQUM7QUFDdEYsaURBQWlDLEdBQTBDLENBQUM7QUFDNUUsb0RBQW9DLEdBQTZDLENBQUM7QUFDbEYsMkNBQTRCLEdBQW9DLENBQUM7QUFDakUsOENBQStCLEdBQXVDLENBQUM7QUFDdkUsc0RBQXNDLEdBQStDLENBQUM7QUFDdEYsNENBQTZCLEdBQXFDLENBQUM7QUFDbkUsaURBQWtDLEdBQTBDLENBQUM7QUFDN0UsNkNBQThCLEdBQXNDLENBQUM7QUFDckUsMENBQTJCLEdBQW1DLENBQUM7QUFDL0QsOENBQStCLEdBQXVDLENBQUM7QUFDdkUsb0RBQW9DLEdBQTZDLENBQUM7QUFDbEYsK0NBQWdDLEdBQXdDLENBQUM7QUFDekUsbUNBQTBCLEVBQVEsQ0FBQztBQXNDbkM7SUFBQTtJQUF5QixDQUFDO0lBbkMxQjtRQUFDLGVBQVEsQ0FBQztZQUNSLE9BQU8sRUFBRTtnQkFDUCxnQ0FBYTtnQkFDYixtQkFBVztnQkFDWCxpQkFBVTtnQkFDVixvQkFBVztnQkFDWCxpQ0FBb0I7YUFDckI7WUFDRCxZQUFZLEVBQUU7Z0JBQ1osNEJBQVk7Z0JBQ1osa0NBQWU7Z0JBQ2YsdUNBQWlCO2dCQUNqQixtREFBdUI7Z0JBQ3ZCLHdDQUFrQjtnQkFDbEIsK0NBQXFCO2dCQUNyQixtREFBdUI7Z0JBQ3ZCLHlDQUFrQjtnQkFDbEIsK0NBQXFCO2dCQUNyQiw4QkFBYTtnQkFDYixvQ0FBZ0I7Z0JBQ2hCLG1EQUF1QjtnQkFDdkIsZ0NBQWM7Z0JBQ2QsMENBQW1CO2dCQUNuQixrQ0FBZTtnQkFDZiw0QkFBWTtnQkFDWixvQ0FBZ0I7Z0JBQ2hCLHNDQUFpQjthQUNsQjtZQUNELFNBQVMsRUFBRTtnQkFDVCxzQkFBUztnQkFDVCx3QkFBVTtnQkFDVixFQUFDLE9BQU8sRUFBRSx5QkFBZ0IsRUFBRSxRQUFRLEVBQUUsNkJBQW9CLEVBQUM7YUFDNUQ7WUFDRCxTQUFTLEVBQUUsQ0FBRSw0QkFBWSxDQUFFO1NBQzVCLENBQUM7O2lCQUFBO0lBQ3VCLGdCQUFDO0FBQUQsQ0FBQztBQUFiLGlCQUFTLFlBQUkiLCJmaWxlIjoiMjMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9ICAgICAgIGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQnJvd3Nlck1vZHVsZSB9ICBmcm9tICdAYW5ndWxhci9wbGF0Zm9ybS1icm93c2VyJztcbmltcG9ydCB7IEZvcm1zTW9kdWxlIH0gICAgZnJvbSBcIkBhbmd1bGFyL2Zvcm1zXCI7XG5pbXBvcnQgeyBIdHRwTW9kdWxlIH0gZnJvbSBcIkBhbmd1bGFyL2h0dHBcIjtcbmltcG9ydCB7IExvY2F0aW9uU3RyYXRlZ3ksIEhhc2hMb2NhdGlvblN0cmF0ZWd5IH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcblxuaW1wb3J0IHsgQXBwQ29tcG9uZW50IH0gICBmcm9tICcuL2FwcC5jb21wb25lbnQnO1xuaW1wb3J0IHsgRHJhd2VyQ29tcG9uZW50IH0gZnJvbSBcIi4vZHJhd2VyLmNvbXBvbmVudFwiO1xuaW1wb3J0IHsgUmVwb0luZm9Db21wb25lbnQgfSBmcm9tIFwiLi9yZXBvLWluZm8uY29tcG9uZW50XCI7XG5pbXBvcnQgeyBIdHRwQ2FjaGUgfSBmcm9tIFwiLi9odHRwLWNhY2hlXCI7XG5pbXBvcnQgeyBOZzJTdG9yYWdlIH0gZnJvbSBcIi4vbmcyLXN0b3JhZ2VcIjtcbmltcG9ydCB7IEFQUF9ST1VURVJfUFJPVklERVJTIH0gZnJvbSAnLi9hcHAucm91dGVzJztcbmltcG9ydCB7R2V0dGluZ1N0YXJ0ZWRDb21wb25lbnR9IGZyb20gXCIuL2dldHRpbmctc3RhcnRlZC5jb21wb25lbnRcIjtcbmltcG9ydCB7QWNjb3JkaW9uQ29tcG9uZW50fSBmcm9tIFwiLi9uZzItdWktY29tcG9uZW50cy9hY2NvcmRpb24uY29tcG9uZW50XCI7XG5pbXBvcnQge0RhdGV0aW1lUGlja2VyQ29tcG9uZW50fSBmcm9tIFwiLi9uZzItdWktY29tcG9uZW50cy9kYXRldGltZS1waWNrZXIuY29tcG9uZW50XCI7XG5pbXBvcnQge0dvb2dsZU1hcENvbXBvbmVudH0gZnJvbSBcIi4vbmcyLXVpLWNvbXBvbmVudHMvZ29vZ2xlLW1hcC5jb21wb25lbnRcIjtcbmltcG9ydCB7SW5maW5pdGVMaXN0Q29tcG9uZW50fSBmcm9tIFwiLi9uZzItdWktY29tcG9uZW50cy9pbmZpbml0ZS1saXN0LmNvbXBvbmVudFwiO1xuaW1wb3J0IHtNZW51Q29tcG9uZW50fSBmcm9tIFwiLi9uZzItdWktY29tcG9uZW50cy9tZW51LmNvbXBvbmVudFwiO1xuaW1wb3J0IHtPdmVybGF5Q29tcG9uZW50fSBmcm9tIFwiLi9uZzItdWktY29tcG9uZW50cy9vdmVybGF5LmNvbXBvbmVudFwiO1xuaW1wb3J0IHtQYXJhbGxheFNjcm9sbENvbXBvbmVudH0gZnJvbSBcIi4vbmcyLXVpLWNvbXBvbmVudHMvcGFyYWxsYXgtc2Nyb2xsLmNvbXBvbmVudFwiO1xuaW1wb3J0IHtQb3B1cENvbXBvbmVudH0gZnJvbSBcIi4vbmcyLXVpLWNvbXBvbmVudHMvcG9wdXAuY29tcG9uZW50XCI7XG5pbXBvcnQge1Njcm9sbGFibGVDb21wb25lbnR9IGZyb20gXCIuL25nMi11aS1jb21wb25lbnRzL3Njcm9sbGFibGUuY29tcG9uZW50XCI7XG5pbXBvcnQge1N0aWNreUNvbXBvbmVudH0gZnJvbSBcIi4vbmcyLXVpLWNvbXBvbmVudHMvc3RpY2t5LmNvbXBvbmVudFwiO1xuaW1wb3J0IHtUYWJDb21wb25lbnR9IGZyb20gXCIuL25nMi11aS1jb21wb25lbnRzL3RhYi5jb21wb25lbnRcIjtcbmltcG9ydCB7VG9vbHRpcENvbXBvbmVudH0gZnJvbSBcIi4vbmcyLXVpLWNvbXBvbmVudHMvdG9vbHRpcC5jb21wb25lbnRcIjtcbmltcG9ydCB7QXV0b0NvbXBsZXRlQ29tcG9uZW50fSBmcm9tIFwiLi9uZzItdWktY29tcG9uZW50cy9hdXRvLWNvbXBsZXRlLmNvbXBvbmVudFwiO1xuaW1wb3J0IHtTb3J0YWJsZUNvbXBvbmVudH0gZnJvbSBcIi4vbmcyLXVpLWNvbXBvbmVudHMvc29ydGFibGUuY29tcG9uZW50XCI7XG5pbXBvcnQge05nMlVJTW9kdWxlfSBmcm9tICduZzItdWknO1xuXG5cbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6IFtcbiAgICBCcm93c2VyTW9kdWxlLFxuICAgIEZvcm1zTW9kdWxlLFxuICAgIEh0dHBNb2R1bGUsXG4gICAgTmcyVUlNb2R1bGUsXG4gICAgQVBQX1JPVVRFUl9QUk9WSURFUlNcbiAgXSxcbiAgZGVjbGFyYXRpb25zOiBbXG4gICAgQXBwQ29tcG9uZW50LFxuICAgIERyYXdlckNvbXBvbmVudCxcbiAgICBSZXBvSW5mb0NvbXBvbmVudCxcbiAgICBHZXR0aW5nU3RhcnRlZENvbXBvbmVudCxcbiAgICBBY2NvcmRpb25Db21wb25lbnQsXG4gICAgQXV0b0NvbXBsZXRlQ29tcG9uZW50LFxuICAgIERhdGV0aW1lUGlja2VyQ29tcG9uZW50LFxuICAgIEdvb2dsZU1hcENvbXBvbmVudCxcbiAgICBJbmZpbml0ZUxpc3RDb21wb25lbnQsXG4gICAgTWVudUNvbXBvbmVudCxcbiAgICBPdmVybGF5Q29tcG9uZW50LFxuICAgIFBhcmFsbGF4U2Nyb2xsQ29tcG9uZW50LFxuICAgIFBvcHVwQ29tcG9uZW50LFxuICAgIFNjcm9sbGFibGVDb21wb25lbnQsXG4gICAgU3RpY2t5Q29tcG9uZW50LFxuICAgIFRhYkNvbXBvbmVudCxcbiAgICBUb29sdGlwQ29tcG9uZW50LFxuICAgIFNvcnRhYmxlQ29tcG9uZW50XG4gIF0sXG4gIHByb3ZpZGVyczogW1xuICAgIEh0dHBDYWNoZSxcbiAgICBOZzJTdG9yYWdlLFxuICAgIHtwcm92aWRlOiBMb2NhdGlvblN0cmF0ZWd5LCB1c2VDbGFzczogSGFzaExvY2F0aW9uU3RyYXRlZ3l9XG4gIF0sXG4gIGJvb3RzdHJhcDogWyBBcHBDb21wb25lbnQgXVxufSlcbmV4cG9ydCBjbGFzcyBBcHBNb2R1bGUgeyB9XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL34vYW5ndWxhcjItdGVtcGxhdGUtbG9hZGVyIS4vYXBwL2FwcC5tb2R1bGUudHNcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9");

/***/ },

/***/ 24:
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(global) {/**\n * @license Angular v2.0.0\n * (c) 2010-2016 Google, Inc. https://angular.io/\n * License: MIT\n */\n(function (global, factory) {\n     true ? factory(exports, __webpack_require__(1), __webpack_require__(25), __webpack_require__(2), __webpack_require__(3), __webpack_require__(26)) :\n    typeof define === 'function' && define.amd ? define(['exports', '@angular/core', 'rxjs/operator/toPromise', 'rxjs/Subject', 'rxjs/Observable', 'rxjs/observable/fromPromise'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.forms = global.ng.forms || {}),global.ng.core,global.Rx.Observable.prototype,global.Rx,global.Rx,global.Rx.Observable));\n}(this, function (exports,_angular_core,rxjs_operator_toPromise,rxjs_Subject,rxjs_Observable,rxjs_observable_fromPromise) { 'use strict';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var globalScope;\n    if (typeof window === 'undefined') {\n        if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) {\n            // TODO: Replace any with WorkerGlobalScope from lib.webworker.d.ts #3492\n            globalScope = self;\n        }\n        else {\n            globalScope = global;\n        }\n    }\n    else {\n        globalScope = window;\n    }\n    // Need to declare a new variable for global here since TypeScript\n    // exports the original value of the symbol.\n    var global$1 = globalScope;\n    // TODO: remove calls to assert in production environment\n    // Note: Can't just export this and import in in other files\n    // as `assert` is a reserved keyword in Dart\n    global$1.assert = function assert(condition) {\n        // TODO: to be fixed properly via #2830, noop for now\n    };\n    function isPresent(obj) {\n        return obj !== undefined && obj !== null;\n    }\n    function isBlank(obj) {\n        return obj === undefined || obj === null;\n    }\n    function isString(obj) {\n        return typeof obj === 'string';\n    }\n    function isFunction(obj) {\n        return typeof obj === 'function';\n    }\n    function isStringMap(obj) {\n        return typeof obj === 'object' && obj !== null;\n    }\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return isPresent(obj) && isFunction(obj.then);\n    }\n    function isArray(obj) {\n        return Array.isArray(obj);\n    }\n    var StringWrapper = (function () {\n        function StringWrapper() {\n        }\n        StringWrapper.fromCharCode = function (code) { return String.fromCharCode(code); };\n        StringWrapper.charCodeAt = function (s, index) { return s.charCodeAt(index); };\n        StringWrapper.split = function (s, regExp) { return s.split(regExp); };\n        StringWrapper.equals = function (s, s2) { return s === s2; };\n        StringWrapper.stripLeft = function (s, charVal) {\n            if (s && s.length) {\n                var pos = 0;\n                for (var i = 0; i < s.length; i++) {\n                    if (s[i] != charVal)\n                        break;\n                    pos++;\n                }\n                s = s.substring(pos);\n            }\n            return s;\n        };\n        StringWrapper.stripRight = function (s, charVal) {\n            if (s && s.length) {\n                var pos = s.length;\n                for (var i = s.length - 1; i >= 0; i--) {\n                    if (s[i] != charVal)\n                        break;\n                    pos--;\n                }\n                s = s.substring(0, pos);\n            }\n            return s;\n        };\n        StringWrapper.replace = function (s, from, replace) {\n            return s.replace(from, replace);\n        };\n        StringWrapper.replaceAll = function (s, from, replace) {\n            return s.replace(from, replace);\n        };\n        StringWrapper.slice = function (s, from, to) {\n            if (from === void 0) { from = 0; }\n            if (to === void 0) { to = null; }\n            return s.slice(from, to === null ? undefined : to);\n        };\n        StringWrapper.replaceAllMapped = function (s, from, cb) {\n            return s.replace(from, function () {\n                var matches = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    matches[_i - 0] = arguments[_i];\n                }\n                // Remove offset & string from the result array\n                matches.splice(-2, 2);\n                // The callback receives match, p1, ..., pn\n                return cb(matches);\n            });\n        };\n        StringWrapper.contains = function (s, substr) { return s.indexOf(substr) != -1; };\n        StringWrapper.compare = function (a, b) {\n            if (a < b) {\n                return -1;\n            }\n            else if (a > b) {\n                return 1;\n            }\n            else {\n                return 0;\n            }\n        };\n        return StringWrapper;\n    }());\n    var NumberWrapper = (function () {\n        function NumberWrapper() {\n        }\n        NumberWrapper.toFixed = function (n, fractionDigits) { return n.toFixed(fractionDigits); };\n        NumberWrapper.equal = function (a, b) { return a === b; };\n        NumberWrapper.parseIntAutoRadix = function (text) {\n            var result = parseInt(text);\n            if (isNaN(result)) {\n                throw new Error('Invalid integer literal when parsing ' + text);\n            }\n            return result;\n        };\n        NumberWrapper.parseInt = function (text, radix) {\n            if (radix == 10) {\n                if (/^(\\-|\\+)?[0-9]+$/.test(text)) {\n                    return parseInt(text, radix);\n                }\n            }\n            else if (radix == 16) {\n                if (/^(\\-|\\+)?[0-9ABCDEFabcdef]+$/.test(text)) {\n                    return parseInt(text, radix);\n                }\n            }\n            else {\n                var result = parseInt(text, radix);\n                if (!isNaN(result)) {\n                    return result;\n                }\n            }\n            throw new Error('Invalid integer literal when parsing ' + text + ' in base ' + radix);\n        };\n        Object.defineProperty(NumberWrapper, \"NaN\", {\n            get: function () { return NaN; },\n            enumerable: true,\n            configurable: true\n        });\n        NumberWrapper.isNumeric = function (value) { return !isNaN(value - parseFloat(value)); };\n        NumberWrapper.isNaN = function (value) { return isNaN(value); };\n        NumberWrapper.isInteger = function (value) { return Number.isInteger(value); };\n        return NumberWrapper;\n    }());\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function normalizeBool(obj) {\n        return isBlank(obj) ? false : obj;\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n    function isPrimitive(obj) {\n        return !isJsObject(obj);\n    }\n    function hasConstructor(value, type) {\n        return value.constructor === type;\n    }\n\n    /**\n     * Base class for control directives.\n     *\n     * Only used internally in the forms module.\n     *\n     * @stable\n     */\n    var AbstractControlDirective = (function () {\n        function AbstractControlDirective() {\n        }\n        Object.defineProperty(AbstractControlDirective.prototype, \"control\", {\n            get: function () { throw new Error('unimplemented'); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"value\", {\n            get: function () { return isPresent(this.control) ? this.control.value : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"valid\", {\n            get: function () { return isPresent(this.control) ? this.control.valid : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"invalid\", {\n            get: function () { return isPresent(this.control) ? this.control.invalid : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"pending\", {\n            get: function () { return isPresent(this.control) ? this.control.pending : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"errors\", {\n            get: function () {\n                return isPresent(this.control) ? this.control.errors : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"pristine\", {\n            get: function () { return isPresent(this.control) ? this.control.pristine : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"dirty\", {\n            get: function () { return isPresent(this.control) ? this.control.dirty : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"touched\", {\n            get: function () { return isPresent(this.control) ? this.control.touched : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"untouched\", {\n            get: function () { return isPresent(this.control) ? this.control.untouched : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"disabled\", {\n            get: function () { return isPresent(this.control) ? this.control.disabled : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"enabled\", {\n            get: function () { return isPresent(this.control) ? this.control.enabled : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"statusChanges\", {\n            get: function () {\n                return isPresent(this.control) ? this.control.statusChanges : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"valueChanges\", {\n            get: function () {\n                return isPresent(this.control) ? this.control.valueChanges : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"path\", {\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        AbstractControlDirective.prototype.reset = function (value) {\n            if (value === void 0) { value = undefined; }\n            if (isPresent(this.control))\n                this.control.reset(value);\n        };\n        return AbstractControlDirective;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$1 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * A directive that contains multiple {@link NgControl}s.\n     *\n     * Only used by the forms module.\n     *\n     * @stable\n     */\n    var ControlContainer = (function (_super) {\n        __extends$1(ControlContainer, _super);\n        function ControlContainer() {\n            _super.apply(this, arguments);\n        }\n        Object.defineProperty(ControlContainer.prototype, \"formDirective\", {\n            /**\n             * Get the form to which this container belongs.\n             */\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ControlContainer.prototype, \"path\", {\n            /**\n             * Get the path to this container.\n             */\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        return ControlContainer;\n    }(AbstractControlDirective));\n\n    var Map$1 = global$1.Map;\n    var Set = global$1.Set;\n    // Safari and Internet Explorer do not support the iterable parameter to the\n    // Map constructor.  We work around that by manually adding the items.\n    var createMapFromPairs = (function () {\n        try {\n            if (new Map$1([[1, 2]]).size === 1) {\n                return function createMapFromPairs(pairs) { return new Map$1(pairs); };\n            }\n        }\n        catch (e) {\n        }\n        return function createMapAndPopulateFromPairs(pairs) {\n            var map = new Map$1();\n            for (var i = 0; i < pairs.length; i++) {\n                var pair = pairs[i];\n                map.set(pair[0], pair[1]);\n            }\n            return map;\n        };\n    })();\n    var createMapFromMap = (function () {\n        try {\n            if (new Map$1(new Map$1())) {\n                return function createMapFromMap(m) { return new Map$1(m); };\n            }\n        }\n        catch (e) {\n        }\n        return function createMapAndPopulateFromMap(m) {\n            var map = new Map$1();\n            m.forEach(function (v, k) { map.set(k, v); });\n            return map;\n        };\n    })();\n    var _clearValues = (function () {\n        if ((new Map$1()).keys().next) {\n            return function _clearValues(m) {\n                var keyIterator = m.keys();\n                var k;\n                while (!((k = keyIterator.next()).done)) {\n                    m.set(k.value, null);\n                }\n            };\n        }\n        else {\n            return function _clearValuesWithForeEach(m) {\n                m.forEach(function (v, k) { m.set(k, null); });\n            };\n        }\n    })();\n    // Safari doesn't implement MapIterator.next(), which is used is Traceur's polyfill of Array.from\n    // TODO(mlaval): remove the work around once we have a working polyfill of Array.from\n    var _arrayFromMap = (function () {\n        try {\n            if ((new Map$1()).values().next) {\n                return function createArrayFromMap(m, getValues) {\n                    return getValues ? Array.from(m.values()) : Array.from(m.keys());\n                };\n            }\n        }\n        catch (e) {\n        }\n        return function createArrayFromMapWithForeach(m, getValues) {\n            var res = ListWrapper.createFixedSize(m.size), i = 0;\n            m.forEach(function (v, k) {\n                res[i] = getValues ? v : k;\n                i++;\n            });\n            return res;\n        };\n    })();\n    var MapWrapper = (function () {\n        function MapWrapper() {\n        }\n        MapWrapper.clone = function (m) { return createMapFromMap(m); };\n        MapWrapper.createFromStringMap = function (stringMap) {\n            var result = new Map$1();\n            for (var prop in stringMap) {\n                result.set(prop, stringMap[prop]);\n            }\n            return result;\n        };\n        MapWrapper.toStringMap = function (m) {\n            var r = {};\n            m.forEach(function (v, k) { return r[k] = v; });\n            return r;\n        };\n        MapWrapper.createFromPairs = function (pairs) { return createMapFromPairs(pairs); };\n        MapWrapper.clearValues = function (m) { _clearValues(m); };\n        MapWrapper.iterable = function (m) { return m; };\n        MapWrapper.keys = function (m) { return _arrayFromMap(m, false); };\n        MapWrapper.values = function (m) { return _arrayFromMap(m, true); };\n        return MapWrapper;\n    }());\n    /**\n     * Wraps Javascript Objects\n     */\n    var StringMapWrapper = (function () {\n        function StringMapWrapper() {\n        }\n        StringMapWrapper.create = function () {\n            // Note: We are not using Object.create(null) here due to\n            // performance!\n            // http://jsperf.com/ng2-object-create-null\n            return {};\n        };\n        StringMapWrapper.contains = function (map, key) {\n            return map.hasOwnProperty(key);\n        };\n        StringMapWrapper.get = function (map, key) {\n            return map.hasOwnProperty(key) ? map[key] : undefined;\n        };\n        StringMapWrapper.set = function (map, key, value) { map[key] = value; };\n        StringMapWrapper.keys = function (map) { return Object.keys(map); };\n        StringMapWrapper.values = function (map) {\n            return Object.keys(map).map(function (k) { return map[k]; });\n        };\n        StringMapWrapper.isEmpty = function (map) {\n            for (var prop in map) {\n                return false;\n            }\n            return true;\n        };\n        StringMapWrapper.delete = function (map, key) { delete map[key]; };\n        StringMapWrapper.forEach = function (map, callback) {\n            for (var _i = 0, _a = Object.keys(map); _i < _a.length; _i++) {\n                var k = _a[_i];\n                callback(map[k], k);\n            }\n        };\n        StringMapWrapper.merge = function (m1, m2) {\n            var m = {};\n            for (var _i = 0, _a = Object.keys(m1); _i < _a.length; _i++) {\n                var k = _a[_i];\n                m[k] = m1[k];\n            }\n            for (var _b = 0, _c = Object.keys(m2); _b < _c.length; _b++) {\n                var k = _c[_b];\n                m[k] = m2[k];\n            }\n            return m;\n        };\n        StringMapWrapper.equals = function (m1, m2) {\n            var k1 = Object.keys(m1);\n            var k2 = Object.keys(m2);\n            if (k1.length != k2.length) {\n                return false;\n            }\n            for (var i = 0; i < k1.length; i++) {\n                var key = k1[i];\n                if (m1[key] !== m2[key]) {\n                    return false;\n                }\n            }\n            return true;\n        };\n        return StringMapWrapper;\n    }());\n    var ListWrapper = (function () {\n        function ListWrapper() {\n        }\n        // JS has no way to express a statically fixed size list, but dart does so we\n        // keep both methods.\n        ListWrapper.createFixedSize = function (size) { return new Array(size); };\n        ListWrapper.createGrowableSize = function (size) { return new Array(size); };\n        ListWrapper.clone = function (array) { return array.slice(0); };\n        ListWrapper.forEachWithIndex = function (array, fn) {\n            for (var i = 0; i < array.length; i++) {\n                fn(array[i], i);\n            }\n        };\n        ListWrapper.first = function (array) {\n            if (!array)\n                return null;\n            return array[0];\n        };\n        ListWrapper.last = function (array) {\n            if (!array || array.length == 0)\n                return null;\n            return array[array.length - 1];\n        };\n        ListWrapper.indexOf = function (array, value, startIndex) {\n            if (startIndex === void 0) { startIndex = 0; }\n            return array.indexOf(value, startIndex);\n        };\n        ListWrapper.contains = function (list, el) { return list.indexOf(el) !== -1; };\n        ListWrapper.reversed = function (array) {\n            var a = ListWrapper.clone(array);\n            return a.reverse();\n        };\n        ListWrapper.concat = function (a, b) { return a.concat(b); };\n        ListWrapper.insert = function (list, index, value) { list.splice(index, 0, value); };\n        ListWrapper.removeAt = function (list, index) {\n            var res = list[index];\n            list.splice(index, 1);\n            return res;\n        };\n        ListWrapper.removeAll = function (list, items) {\n            for (var i = 0; i < items.length; ++i) {\n                var index = list.indexOf(items[i]);\n                list.splice(index, 1);\n            }\n        };\n        ListWrapper.remove = function (list, el) {\n            var index = list.indexOf(el);\n            if (index > -1) {\n                list.splice(index, 1);\n                return true;\n            }\n            return false;\n        };\n        ListWrapper.clear = function (list) { list.length = 0; };\n        ListWrapper.isEmpty = function (list) { return list.length == 0; };\n        ListWrapper.fill = function (list, value, start, end) {\n            if (start === void 0) { start = 0; }\n            if (end === void 0) { end = null; }\n            list.fill(value, start, end === null ? list.length : end);\n        };\n        ListWrapper.equals = function (a, b) {\n            if (a.length != b.length)\n                return false;\n            for (var i = 0; i < a.length; ++i) {\n                if (a[i] !== b[i])\n                    return false;\n            }\n            return true;\n        };\n        ListWrapper.slice = function (l, from, to) {\n            if (from === void 0) { from = 0; }\n            if (to === void 0) { to = null; }\n            return l.slice(from, to === null ? undefined : to);\n        };\n        ListWrapper.splice = function (l, from, length) { return l.splice(from, length); };\n        ListWrapper.sort = function (l, compareFn) {\n            if (isPresent(compareFn)) {\n                l.sort(compareFn);\n            }\n            else {\n                l.sort();\n            }\n        };\n        ListWrapper.toString = function (l) { return l.toString(); };\n        ListWrapper.toJSON = function (l) { return JSON.stringify(l); };\n        ListWrapper.maximum = function (list, predicate) {\n            if (list.length == 0) {\n                return null;\n            }\n            var solution = null;\n            var maxValue = -Infinity;\n            for (var index = 0; index < list.length; index++) {\n                var candidate = list[index];\n                if (isBlank(candidate)) {\n                    continue;\n                }\n                var candidateValue = predicate(candidate);\n                if (candidateValue > maxValue) {\n                    solution = candidate;\n                    maxValue = candidateValue;\n                }\n            }\n            return solution;\n        };\n        ListWrapper.flatten = function (list) {\n            var target = [];\n            _flattenArray(list, target);\n            return target;\n        };\n        ListWrapper.addAll = function (list, source) {\n            for (var i = 0; i < source.length; i++) {\n                list.push(source[i]);\n            }\n        };\n        return ListWrapper;\n    }());\n    function _flattenArray(source, target) {\n        if (isPresent(source)) {\n            for (var i = 0; i < source.length; i++) {\n                var item = source[i];\n                if (isArray(item)) {\n                    _flattenArray(item, target);\n                }\n                else {\n                    target.push(item);\n                }\n            }\n        }\n        return target;\n    }\n    // Safari and Internet Explorer do not support the iterable parameter to the\n    // Set constructor.  We work around that by manually adding the items.\n    var createSetFromList = (function () {\n        var test = new Set([1, 2, 3]);\n        if (test.size === 3) {\n            return function createSetFromList(lst) { return new Set(lst); };\n        }\n        else {\n            return function createSetAndPopulateFromList(lst) {\n                var res = new Set(lst);\n                if (res.size !== lst.length) {\n                    for (var i = 0; i < lst.length; i++) {\n                        res.add(lst[i]);\n                    }\n                }\n                return res;\n            };\n        }\n    })();\n\n    /**\n     * Providers for validators to be used for {@link FormControl}s in a form.\n     *\n     * Provide this using `multi: true` to add validators.\n     *\n     * ### Example\n     *\n     * {@example core/forms/ts/ng_validators/ng_validators.ts region='ng_validators'}\n     * @stable\n     */\n    var NG_VALIDATORS = new _angular_core.OpaqueToken('NgValidators');\n    /**\n     * Providers for asynchronous validators to be used for {@link FormControl}s\n     * in a form.\n     *\n     * Provide this using `multi: true` to add validators.\n     *\n     * See {@link NG_VALIDATORS} for more details.\n     *\n     * @stable\n     */\n    var NG_ASYNC_VALIDATORS = new _angular_core.OpaqueToken('NgAsyncValidators');\n    /**\n     * Provides a set of validators used by form controls.\n     *\n     * A validator is a function that processes a {@link FormControl} or collection of\n     * controls and returns a map of errors. A null map means that validation has passed.\n     *\n     * ### Example\n     *\n     * ```typescript\n     * var loginControl = new FormControl(\"\", Validators.required)\n     * ```\n     *\n     * @stable\n     */\n    var Validators = (function () {\n        function Validators() {\n        }\n        /**\n         * Validator that requires controls to have a non-empty value.\n         */\n        Validators.required = function (control) {\n            return isBlank(control.value) || (isString(control.value) && control.value == '') ?\n                { 'required': true } :\n                null;\n        };\n        /**\n         * Validator that requires controls to have a value of a minimum length.\n         */\n        Validators.minLength = function (minLength) {\n            return function (control) {\n                if (isPresent(Validators.required(control)))\n                    return null;\n                var v = control.value;\n                return v.length < minLength ?\n                    { 'minlength': { 'requiredLength': minLength, 'actualLength': v.length } } :\n                    null;\n            };\n        };\n        /**\n         * Validator that requires controls to have a value of a maximum length.\n         */\n        Validators.maxLength = function (maxLength) {\n            return function (control) {\n                if (isPresent(Validators.required(control)))\n                    return null;\n                var v = control.value;\n                return v.length > maxLength ?\n                    { 'maxlength': { 'requiredLength': maxLength, 'actualLength': v.length } } :\n                    null;\n            };\n        };\n        /**\n         * Validator that requires a control to match a regex to its value.\n         */\n        Validators.pattern = function (pattern) {\n            return function (control) {\n                if (isPresent(Validators.required(control)))\n                    return null;\n                var regex = new RegExp(\"^\" + pattern + \"$\");\n                var v = control.value;\n                return regex.test(v) ? null :\n                    { 'pattern': { 'requiredPattern': \"^\" + pattern + \"$\", 'actualValue': v } };\n            };\n        };\n        /**\n         * No-op validator.\n         */\n        Validators.nullValidator = function (c) { return null; };\n        /**\n         * Compose multiple validators into a single function that returns the union\n         * of the individual error maps.\n         */\n        Validators.compose = function (validators) {\n            if (isBlank(validators))\n                return null;\n            var presentValidators = validators.filter(isPresent);\n            if (presentValidators.length == 0)\n                return null;\n            return function (control) {\n                return _mergeErrors(_executeValidators(control, presentValidators));\n            };\n        };\n        Validators.composeAsync = function (validators) {\n            if (isBlank(validators))\n                return null;\n            var presentValidators = validators.filter(isPresent);\n            if (presentValidators.length == 0)\n                return null;\n            return function (control) {\n                var promises = _executeAsyncValidators(control, presentValidators).map(_convertToPromise);\n                return Promise.all(promises).then(_mergeErrors);\n            };\n        };\n        return Validators;\n    }());\n    function _convertToPromise(obj) {\n        return isPromise(obj) ? obj : rxjs_operator_toPromise.toPromise.call(obj);\n    }\n    function _executeValidators(control, validators) {\n        return validators.map(function (v) { return v(control); });\n    }\n    function _executeAsyncValidators(control, validators) {\n        return validators.map(function (v) { return v(control); });\n    }\n    function _mergeErrors(arrayOfErrors) {\n        var res = arrayOfErrors.reduce(function (res, errors) {\n            return isPresent(errors) ? StringMapWrapper.merge(res, errors) : res;\n        }, {});\n        return StringMapWrapper.isEmpty(res) ? null : res;\n    }\n\n    /**\n     * Used to provide a {@link ControlValueAccessor} for form controls.\n     *\n     * See {@link DefaultValueAccessor} for how to implement one.\n     * @stable\n     */\n    var NG_VALUE_ACCESSOR = new _angular_core.OpaqueToken('NgValueAccessor');\n\n    var CHECKBOX_VALUE_ACCESSOR = {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: _angular_core.forwardRef(function () { return CheckboxControlValueAccessor; }),\n        multi: true\n    };\n    /**\n     * The accessor for writing a value and listening to changes on a checkbox input element.\n     *\n     *  ### Example\n     *  ```\n     *  <input type=\"checkbox\" name=\"rememberLogin\" ngModel>\n     *  ```\n     *\n     *  @stable\n     */\n    var CheckboxControlValueAccessor = (function () {\n        function CheckboxControlValueAccessor(_renderer, _elementRef) {\n            this._renderer = _renderer;\n            this._elementRef = _elementRef;\n            this.onChange = function (_) { };\n            this.onTouched = function () { };\n        }\n        CheckboxControlValueAccessor.prototype.writeValue = function (value) {\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'checked', value);\n        };\n        CheckboxControlValueAccessor.prototype.registerOnChange = function (fn) { this.onChange = fn; };\n        CheckboxControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n        CheckboxControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n        };\n        CheckboxControlValueAccessor.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: 'input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]',\n                        host: { '(change)': 'onChange($event.target.checked)', '(blur)': 'onTouched()' },\n                        providers: [CHECKBOX_VALUE_ACCESSOR]\n                    },] },\n        ];\n        /** @nocollapse */\n        CheckboxControlValueAccessor.ctorParameters = [\n            { type: _angular_core.Renderer, },\n            { type: _angular_core.ElementRef, },\n        ];\n        return CheckboxControlValueAccessor;\n    }());\n\n    var DEFAULT_VALUE_ACCESSOR = {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: _angular_core.forwardRef(function () { return DefaultValueAccessor; }),\n        multi: true\n    };\n    /**\n     * The default accessor for writing a value and listening to changes that is used by the\n     * {@link NgModel}, {@link FormControlDirective}, and {@link FormControlName} directives.\n     *\n     *  ### Example\n     *  ```\n     *  <input type=\"text\" name=\"searchQuery\" ngModel>\n     *  ```\n     *\n     *  @stable\n     */\n    var DefaultValueAccessor = (function () {\n        function DefaultValueAccessor(_renderer, _elementRef) {\n            this._renderer = _renderer;\n            this._elementRef = _elementRef;\n            this.onChange = function (_) { };\n            this.onTouched = function () { };\n        }\n        DefaultValueAccessor.prototype.writeValue = function (value) {\n            var normalizedValue = isBlank(value) ? '' : value;\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'value', normalizedValue);\n        };\n        DefaultValueAccessor.prototype.registerOnChange = function (fn) { this.onChange = fn; };\n        DefaultValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n        DefaultValueAccessor.prototype.setDisabledState = function (isDisabled) {\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n        };\n        DefaultValueAccessor.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: 'input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]',\n                        // TODO: vsavkin replace the above selector with the one below it once\n                        // https://github.com/angular/angular/issues/3011 is implemented\n                        // selector: '[ngControl],[ngModel],[ngFormControl]',\n                        host: { '(input)': 'onChange($event.target.value)', '(blur)': 'onTouched()' },\n                        providers: [DEFAULT_VALUE_ACCESSOR]\n                    },] },\n        ];\n        /** @nocollapse */\n        DefaultValueAccessor.ctorParameters = [\n            { type: _angular_core.Renderer, },\n            { type: _angular_core.ElementRef, },\n        ];\n        return DefaultValueAccessor;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function normalizeValidator(validator) {\n        if (validator.validate !== undefined) {\n            return function (c) { return validator.validate(c); };\n        }\n        else {\n            return validator;\n        }\n    }\n    function normalizeAsyncValidator(validator) {\n        if (validator.validate !== undefined) {\n            return function (c) { return validator.validate(c); };\n        }\n        else {\n            return validator;\n        }\n    }\n\n    var NUMBER_VALUE_ACCESSOR = {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: _angular_core.forwardRef(function () { return NumberValueAccessor; }),\n        multi: true\n    };\n    /**\n     * The accessor for writing a number value and listening to changes that is used by the\n     * {@link NgModel}, {@link FormControlDirective}, and {@link FormControlName} directives.\n     *\n     *  ### Example\n     *  ```\n     *  <input type=\"number\" [(ngModel)]=\"age\">\n     *  ```\n     */\n    var NumberValueAccessor = (function () {\n        function NumberValueAccessor(_renderer, _elementRef) {\n            this._renderer = _renderer;\n            this._elementRef = _elementRef;\n            this.onChange = function (_) { };\n            this.onTouched = function () { };\n        }\n        NumberValueAccessor.prototype.writeValue = function (value) {\n            // The value needs to be normalized for IE9, otherwise it is set to 'null' when null\n            var normalizedValue = isBlank(value) ? '' : value;\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'value', normalizedValue);\n        };\n        NumberValueAccessor.prototype.registerOnChange = function (fn) {\n            this.onChange = function (value) { fn(value == '' ? null : parseFloat(value)); };\n        };\n        NumberValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n        NumberValueAccessor.prototype.setDisabledState = function (isDisabled) {\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n        };\n        NumberValueAccessor.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: 'input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]',\n                        host: {\n                            '(change)': 'onChange($event.target.value)',\n                            '(input)': 'onChange($event.target.value)',\n                            '(blur)': 'onTouched()'\n                        },\n                        providers: [NUMBER_VALUE_ACCESSOR]\n                    },] },\n        ];\n        /** @nocollapse */\n        NumberValueAccessor.ctorParameters = [\n            { type: _angular_core.Renderer, },\n            { type: _angular_core.ElementRef, },\n        ];\n        return NumberValueAccessor;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$2 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    function unimplemented() {\n        throw new Error('unimplemented');\n    }\n    /**\n     * A base class that all control directive extend.\n     * It binds a {@link FormControl} object to a DOM element.\n     *\n     * Used internally by Angular forms.\n     *\n     * @stable\n     */\n    var NgControl = (function (_super) {\n        __extends$2(NgControl, _super);\n        function NgControl() {\n            _super.apply(this, arguments);\n            /** @internal */\n            this._parent = null;\n            this.name = null;\n            this.valueAccessor = null;\n            /** @internal */\n            this._rawValidators = [];\n            /** @internal */\n            this._rawAsyncValidators = [];\n        }\n        Object.defineProperty(NgControl.prototype, \"validator\", {\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgControl.prototype, \"asyncValidator\", {\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        return NgControl;\n    }(AbstractControlDirective));\n\n    var RADIO_VALUE_ACCESSOR = {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: _angular_core.forwardRef(function () { return RadioControlValueAccessor; }),\n        multi: true\n    };\n    /**\n     * Internal class used by Angular to uncheck radio buttons with the matching name.\n     */\n    var RadioControlRegistry = (function () {\n        function RadioControlRegistry() {\n            this._accessors = [];\n        }\n        RadioControlRegistry.prototype.add = function (control, accessor) {\n            this._accessors.push([control, accessor]);\n        };\n        RadioControlRegistry.prototype.remove = function (accessor) {\n            var indexToRemove = -1;\n            for (var i = 0; i < this._accessors.length; ++i) {\n                if (this._accessors[i][1] === accessor) {\n                    indexToRemove = i;\n                }\n            }\n            ListWrapper.removeAt(this._accessors, indexToRemove);\n        };\n        RadioControlRegistry.prototype.select = function (accessor) {\n            var _this = this;\n            this._accessors.forEach(function (c) {\n                if (_this._isSameGroup(c, accessor) && c[1] !== accessor) {\n                    c[1].fireUncheck(accessor.value);\n                }\n            });\n        };\n        RadioControlRegistry.prototype._isSameGroup = function (controlPair, accessor) {\n            if (!controlPair[0].control)\n                return false;\n            return controlPair[0]._parent === accessor._control._parent &&\n                controlPair[1].name === accessor.name;\n        };\n        RadioControlRegistry.decorators = [\n            { type: _angular_core.Injectable },\n        ];\n        /** @nocollapse */\n        RadioControlRegistry.ctorParameters = [];\n        return RadioControlRegistry;\n    }());\n    /**\n     * The accessor for writing a radio control value and listening to changes that is used by the\n     * {@link NgModel}, {@link FormControlDirective}, and {@link FormControlName} directives.\n     *\n     *  ### Example\n     *  ```\n     *  @Component({\n     *    template: `\n     *      <input type=\"radio\" name=\"food\" [(ngModel)]=\"food\" value=\"chicken\">\n     *      <input type=\"radio\" name=\"food\" [(ngModel)]=\"food\" value=\"fish\">\n     *    `\n     *  })\n     *  class FoodCmp {\n     *    food = 'chicken';\n     *  }\n     *  ```\n     */\n    var RadioControlValueAccessor = (function () {\n        function RadioControlValueAccessor(_renderer, _elementRef, _registry, _injector) {\n            this._renderer = _renderer;\n            this._elementRef = _elementRef;\n            this._registry = _registry;\n            this._injector = _injector;\n            this.onChange = function () { };\n            this.onTouched = function () { };\n        }\n        RadioControlValueAccessor.prototype.ngOnInit = function () {\n            this._control = this._injector.get(NgControl);\n            this._checkName();\n            this._registry.add(this._control, this);\n        };\n        RadioControlValueAccessor.prototype.ngOnDestroy = function () { this._registry.remove(this); };\n        RadioControlValueAccessor.prototype.writeValue = function (value) {\n            this._state = value === this.value;\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'checked', this._state);\n        };\n        RadioControlValueAccessor.prototype.registerOnChange = function (fn) {\n            var _this = this;\n            this._fn = fn;\n            this.onChange = function () {\n                fn(_this.value);\n                _this._registry.select(_this);\n            };\n        };\n        RadioControlValueAccessor.prototype.fireUncheck = function (value) { this.writeValue(value); };\n        RadioControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n        RadioControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n        };\n        RadioControlValueAccessor.prototype._checkName = function () {\n            if (this.name && this.formControlName && this.name !== this.formControlName) {\n                this._throwNameError();\n            }\n            if (!this.name && this.formControlName)\n                this.name = this.formControlName;\n        };\n        RadioControlValueAccessor.prototype._throwNameError = function () {\n            throw new Error(\"\\n      If you define both a name and a formControlName attribute on your radio button, their values\\n      must match. Ex: <input type=\\\"radio\\\" formControlName=\\\"food\\\" name=\\\"food\\\">\\n    \");\n        };\n        RadioControlValueAccessor.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: 'input[type=radio][formControlName],input[type=radio][formControl],input[type=radio][ngModel]',\n                        host: { '(change)': 'onChange()', '(blur)': 'onTouched()' },\n                        providers: [RADIO_VALUE_ACCESSOR]\n                    },] },\n        ];\n        /** @nocollapse */\n        RadioControlValueAccessor.ctorParameters = [\n            { type: _angular_core.Renderer, },\n            { type: _angular_core.ElementRef, },\n            { type: RadioControlRegistry, },\n            { type: _angular_core.Injector, },\n        ];\n        RadioControlValueAccessor.propDecorators = {\n            'name': [{ type: _angular_core.Input },],\n            'formControlName': [{ type: _angular_core.Input },],\n            'value': [{ type: _angular_core.Input },],\n        };\n        return RadioControlValueAccessor;\n    }());\n\n    var SELECT_VALUE_ACCESSOR = {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: _angular_core.forwardRef(function () { return SelectControlValueAccessor; }),\n        multi: true\n    };\n    function _buildValueString(id, value) {\n        if (isBlank(id))\n            return \"\" + value;\n        if (!isPrimitive(value))\n            value = 'Object';\n        return StringWrapper.slice(id + \": \" + value, 0, 50);\n    }\n    function _extractId(valueString) {\n        return valueString.split(':')[0];\n    }\n    /**\n     * The accessor for writing a value and listening to changes on a select element.\n     *\n     * Note: We have to listen to the 'change' event because 'input' events aren't fired\n     * for selects in Firefox and IE:\n     * https://bugzilla.mozilla.org/show_bug.cgi?id=1024350\n     * https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/4660045/\n     *\n     * @stable\n     */\n    var SelectControlValueAccessor = (function () {\n        function SelectControlValueAccessor(_renderer, _elementRef) {\n            this._renderer = _renderer;\n            this._elementRef = _elementRef;\n            /** @internal */\n            this._optionMap = new Map();\n            /** @internal */\n            this._idCounter = 0;\n            this.onChange = function (_) { };\n            this.onTouched = function () { };\n        }\n        SelectControlValueAccessor.prototype.writeValue = function (value) {\n            this.value = value;\n            var valueString = _buildValueString(this._getOptionId(value), value);\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'value', valueString);\n        };\n        SelectControlValueAccessor.prototype.registerOnChange = function (fn) {\n            var _this = this;\n            this.onChange = function (valueString) {\n                _this.value = valueString;\n                fn(_this._getOptionValue(valueString));\n            };\n        };\n        SelectControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n        SelectControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n        };\n        /** @internal */\n        SelectControlValueAccessor.prototype._registerOption = function () { return (this._idCounter++).toString(); };\n        /** @internal */\n        SelectControlValueAccessor.prototype._getOptionId = function (value) {\n            for (var _i = 0, _a = MapWrapper.keys(this._optionMap); _i < _a.length; _i++) {\n                var id = _a[_i];\n                if (looseIdentical(this._optionMap.get(id), value))\n                    return id;\n            }\n            return null;\n        };\n        /** @internal */\n        SelectControlValueAccessor.prototype._getOptionValue = function (valueString) {\n            var value = this._optionMap.get(_extractId(valueString));\n            return isPresent(value) ? value : valueString;\n        };\n        SelectControlValueAccessor.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: 'select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]',\n                        host: { '(change)': 'onChange($event.target.value)', '(blur)': 'onTouched()' },\n                        providers: [SELECT_VALUE_ACCESSOR]\n                    },] },\n        ];\n        /** @nocollapse */\n        SelectControlValueAccessor.ctorParameters = [\n            { type: _angular_core.Renderer, },\n            { type: _angular_core.ElementRef, },\n        ];\n        return SelectControlValueAccessor;\n    }());\n    /**\n     * Marks `<option>` as dynamic, so Angular can be notified when options change.\n     *\n     * ### Example\n     *\n     * ```\n     * <select name=\"city\" ngModel>\n     *   <option *ngFor=\"let c of cities\" [value]=\"c\"></option>\n     * </select>\n     * ```\n     *\n     * @stable\n     */\n    var NgSelectOption = (function () {\n        function NgSelectOption(_element, _renderer, _select) {\n            this._element = _element;\n            this._renderer = _renderer;\n            this._select = _select;\n            if (isPresent(this._select))\n                this.id = this._select._registerOption();\n        }\n        Object.defineProperty(NgSelectOption.prototype, \"ngValue\", {\n            set: function (value) {\n                if (this._select == null)\n                    return;\n                this._select._optionMap.set(this.id, value);\n                this._setElementValue(_buildValueString(this.id, value));\n                this._select.writeValue(this._select.value);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgSelectOption.prototype, \"value\", {\n            set: function (value) {\n                this._setElementValue(value);\n                if (isPresent(this._select))\n                    this._select.writeValue(this._select.value);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        NgSelectOption.prototype._setElementValue = function (value) {\n            this._renderer.setElementProperty(this._element.nativeElement, 'value', value);\n        };\n        NgSelectOption.prototype.ngOnDestroy = function () {\n            if (isPresent(this._select)) {\n                this._select._optionMap.delete(this.id);\n                this._select.writeValue(this._select.value);\n            }\n        };\n        NgSelectOption.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: 'option' },] },\n        ];\n        /** @nocollapse */\n        NgSelectOption.ctorParameters = [\n            { type: _angular_core.ElementRef, },\n            { type: _angular_core.Renderer, },\n            { type: SelectControlValueAccessor, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Host },] },\n        ];\n        NgSelectOption.propDecorators = {\n            'ngValue': [{ type: _angular_core.Input, args: ['ngValue',] },],\n            'value': [{ type: _angular_core.Input, args: ['value',] },],\n        };\n        return NgSelectOption;\n    }());\n\n    var SELECT_MULTIPLE_VALUE_ACCESSOR = {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: _angular_core.forwardRef(function () { return SelectMultipleControlValueAccessor; }),\n        multi: true\n    };\n    function _buildValueString$1(id, value) {\n        if (isBlank(id))\n            return \"\" + value;\n        if (isString(value))\n            value = \"'\" + value + \"'\";\n        if (!isPrimitive(value))\n            value = 'Object';\n        return StringWrapper.slice(id + \": \" + value, 0, 50);\n    }\n    function _extractId$1(valueString) {\n        return valueString.split(':')[0];\n    }\n    /**\n     * The accessor for writing a value and listening to changes on a select element.\n     *\n     * @stable\n     */\n    var SelectMultipleControlValueAccessor = (function () {\n        function SelectMultipleControlValueAccessor(_renderer, _elementRef) {\n            this._renderer = _renderer;\n            this._elementRef = _elementRef;\n            /** @internal */\n            this._optionMap = new Map();\n            /** @internal */\n            this._idCounter = 0;\n            this.onChange = function (_) { };\n            this.onTouched = function () { };\n        }\n        SelectMultipleControlValueAccessor.prototype.writeValue = function (value) {\n            var _this = this;\n            this.value = value;\n            if (value == null)\n                return;\n            var values = value;\n            // convert values to ids\n            var ids = values.map(function (v) { return _this._getOptionId(v); });\n            this._optionMap.forEach(function (opt, o) { opt._setSelected(ids.indexOf(o.toString()) > -1); });\n        };\n        SelectMultipleControlValueAccessor.prototype.registerOnChange = function (fn) {\n            var _this = this;\n            this.onChange = function (_) {\n                var selected = [];\n                if (_.hasOwnProperty('selectedOptions')) {\n                    var options = _.selectedOptions;\n                    for (var i = 0; i < options.length; i++) {\n                        var opt = options.item(i);\n                        var val = _this._getOptionValue(opt.value);\n                        selected.push(val);\n                    }\n                }\n                else {\n                    var options = _.options;\n                    for (var i = 0; i < options.length; i++) {\n                        var opt = options.item(i);\n                        if (opt.selected) {\n                            var val = _this._getOptionValue(opt.value);\n                            selected.push(val);\n                        }\n                    }\n                }\n                fn(selected);\n            };\n        };\n        SelectMultipleControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n        SelectMultipleControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n        };\n        /** @internal */\n        SelectMultipleControlValueAccessor.prototype._registerOption = function (value) {\n            var id = (this._idCounter++).toString();\n            this._optionMap.set(id, value);\n            return id;\n        };\n        /** @internal */\n        SelectMultipleControlValueAccessor.prototype._getOptionId = function (value) {\n            for (var _i = 0, _a = MapWrapper.keys(this._optionMap); _i < _a.length; _i++) {\n                var id = _a[_i];\n                if (looseIdentical(this._optionMap.get(id)._value, value))\n                    return id;\n            }\n            return null;\n        };\n        /** @internal */\n        SelectMultipleControlValueAccessor.prototype._getOptionValue = function (valueString) {\n            var opt = this._optionMap.get(_extractId$1(valueString));\n            return isPresent(opt) ? opt._value : valueString;\n        };\n        SelectMultipleControlValueAccessor.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: 'select[multiple][formControlName],select[multiple][formControl],select[multiple][ngModel]',\n                        host: { '(change)': 'onChange($event.target)', '(blur)': 'onTouched()' },\n                        providers: [SELECT_MULTIPLE_VALUE_ACCESSOR]\n                    },] },\n        ];\n        /** @nocollapse */\n        SelectMultipleControlValueAccessor.ctorParameters = [\n            { type: _angular_core.Renderer, },\n            { type: _angular_core.ElementRef, },\n        ];\n        return SelectMultipleControlValueAccessor;\n    }());\n    /**\n     * Marks `<option>` as dynamic, so Angular can be notified when options change.\n     *\n     * ### Example\n     *\n     * ```\n     * <select multiple name=\"city\" ngModel>\n     *   <option *ngFor=\"let c of cities\" [value]=\"c\"></option>\n     * </select>\n     * ```\n     */\n    var NgSelectMultipleOption = (function () {\n        function NgSelectMultipleOption(_element, _renderer, _select) {\n            this._element = _element;\n            this._renderer = _renderer;\n            this._select = _select;\n            if (isPresent(this._select)) {\n                this.id = this._select._registerOption(this);\n            }\n        }\n        Object.defineProperty(NgSelectMultipleOption.prototype, \"ngValue\", {\n            set: function (value) {\n                if (this._select == null)\n                    return;\n                this._value = value;\n                this._setElementValue(_buildValueString$1(this.id, value));\n                this._select.writeValue(this._select.value);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgSelectMultipleOption.prototype, \"value\", {\n            set: function (value) {\n                if (isPresent(this._select)) {\n                    this._value = value;\n                    this._setElementValue(_buildValueString$1(this.id, value));\n                    this._select.writeValue(this._select.value);\n                }\n                else {\n                    this._setElementValue(value);\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        NgSelectMultipleOption.prototype._setElementValue = function (value) {\n            this._renderer.setElementProperty(this._element.nativeElement, 'value', value);\n        };\n        /** @internal */\n        NgSelectMultipleOption.prototype._setSelected = function (selected) {\n            this._renderer.setElementProperty(this._element.nativeElement, 'selected', selected);\n        };\n        NgSelectMultipleOption.prototype.ngOnDestroy = function () {\n            if (isPresent(this._select)) {\n                this._select._optionMap.delete(this.id);\n                this._select.writeValue(this._select.value);\n            }\n        };\n        NgSelectMultipleOption.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: 'option' },] },\n        ];\n        /** @nocollapse */\n        NgSelectMultipleOption.ctorParameters = [\n            { type: _angular_core.ElementRef, },\n            { type: _angular_core.Renderer, },\n            { type: SelectMultipleControlValueAccessor, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Host },] },\n        ];\n        NgSelectMultipleOption.propDecorators = {\n            'ngValue': [{ type: _angular_core.Input, args: ['ngValue',] },],\n            'value': [{ type: _angular_core.Input, args: ['value',] },],\n        };\n        return NgSelectMultipleOption;\n    }());\n\n    function controlPath(name, parent) {\n        var p = ListWrapper.clone(parent.path);\n        p.push(name);\n        return p;\n    }\n    function setUpControl(control, dir) {\n        if (isBlank(control))\n            _throwError(dir, 'Cannot find control with');\n        if (isBlank(dir.valueAccessor))\n            _throwError(dir, 'No value accessor for form control with');\n        control.validator = Validators.compose([control.validator, dir.validator]);\n        control.asyncValidator = Validators.composeAsync([control.asyncValidator, dir.asyncValidator]);\n        dir.valueAccessor.writeValue(control.value);\n        // view -> model\n        dir.valueAccessor.registerOnChange(function (newValue) {\n            dir.viewToModelUpdate(newValue);\n            control.markAsDirty();\n            control.setValue(newValue, { emitModelToViewChange: false });\n        });\n        // touched\n        dir.valueAccessor.registerOnTouched(function () { return control.markAsTouched(); });\n        control.registerOnChange(function (newValue, emitModelEvent) {\n            // control -> view\n            dir.valueAccessor.writeValue(newValue);\n            // control -> ngModel\n            if (emitModelEvent)\n                dir.viewToModelUpdate(newValue);\n        });\n        if (dir.valueAccessor.setDisabledState) {\n            control.registerOnDisabledChange(function (isDisabled) { dir.valueAccessor.setDisabledState(isDisabled); });\n        }\n        // re-run validation when validator binding changes, e.g. minlength=3 -> minlength=4\n        dir._rawValidators.forEach(function (validator) {\n            if (validator.registerOnValidatorChange)\n                validator.registerOnValidatorChange(function () { return control.updateValueAndValidity(); });\n        });\n        dir._rawAsyncValidators.forEach(function (validator) {\n            if (validator.registerOnValidatorChange)\n                validator.registerOnValidatorChange(function () { return control.updateValueAndValidity(); });\n        });\n    }\n    function cleanUpControl(control, dir) {\n        dir.valueAccessor.registerOnChange(function () { return _noControlError(dir); });\n        dir.valueAccessor.registerOnTouched(function () { return _noControlError(dir); });\n        dir._rawValidators.forEach(function (validator) { return validator.registerOnValidatorChange(null); });\n        dir._rawAsyncValidators.forEach(function (validator) { return validator.registerOnValidatorChange(null); });\n        if (control)\n            control._clearChangeFns();\n    }\n    function setUpFormContainer(control, dir) {\n        if (isBlank(control))\n            _throwError(dir, 'Cannot find control with');\n        control.validator = Validators.compose([control.validator, dir.validator]);\n        control.asyncValidator = Validators.composeAsync([control.asyncValidator, dir.asyncValidator]);\n    }\n    function _noControlError(dir) {\n        return _throwError(dir, 'There is no FormControl instance attached to form control element with');\n    }\n    function _throwError(dir, message) {\n        var messageEnd;\n        if (dir.path.length > 1) {\n            messageEnd = \"path: '\" + dir.path.join(' -> ') + \"'\";\n        }\n        else if (dir.path[0]) {\n            messageEnd = \"name: '\" + dir.path + \"'\";\n        }\n        else {\n            messageEnd = 'unspecified name attribute';\n        }\n        throw new Error(message + \" \" + messageEnd);\n    }\n    function composeValidators(validators) {\n        return isPresent(validators) ? Validators.compose(validators.map(normalizeValidator)) : null;\n    }\n    function composeAsyncValidators(validators) {\n        return isPresent(validators) ? Validators.composeAsync(validators.map(normalizeAsyncValidator)) :\n            null;\n    }\n    function isPropertyUpdated(changes, viewModel) {\n        if (!StringMapWrapper.contains(changes, 'model'))\n            return false;\n        var change = changes['model'];\n        if (change.isFirstChange())\n            return true;\n        return !looseIdentical(viewModel, change.currentValue);\n    }\n    function isBuiltInAccessor(valueAccessor) {\n        return (hasConstructor(valueAccessor, CheckboxControlValueAccessor) ||\n            hasConstructor(valueAccessor, NumberValueAccessor) ||\n            hasConstructor(valueAccessor, SelectControlValueAccessor) ||\n            hasConstructor(valueAccessor, SelectMultipleControlValueAccessor) ||\n            hasConstructor(valueAccessor, RadioControlValueAccessor));\n    }\n    // TODO: vsavkin remove it once https://github.com/angular/angular/issues/3011 is implemented\n    function selectValueAccessor(dir, valueAccessors) {\n        if (isBlank(valueAccessors))\n            return null;\n        var defaultAccessor;\n        var builtinAccessor;\n        var customAccessor;\n        valueAccessors.forEach(function (v) {\n            if (hasConstructor(v, DefaultValueAccessor)) {\n                defaultAccessor = v;\n            }\n            else if (isBuiltInAccessor(v)) {\n                if (isPresent(builtinAccessor))\n                    _throwError(dir, 'More than one built-in value accessor matches form control with');\n                builtinAccessor = v;\n            }\n            else {\n                if (isPresent(customAccessor))\n                    _throwError(dir, 'More than one custom value accessor matches form control with');\n                customAccessor = v;\n            }\n        });\n        if (isPresent(customAccessor))\n            return customAccessor;\n        if (isPresent(builtinAccessor))\n            return builtinAccessor;\n        if (isPresent(defaultAccessor))\n            return defaultAccessor;\n        _throwError(dir, 'No valid value accessor for form control with');\n        return null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * This is a base class for code shared between {@link NgModelGroup} and {@link FormGroupName}.\n     *\n     * @stable\n     */\n    var AbstractFormGroupDirective = (function (_super) {\n        __extends(AbstractFormGroupDirective, _super);\n        function AbstractFormGroupDirective() {\n            _super.apply(this, arguments);\n        }\n        AbstractFormGroupDirective.prototype.ngOnInit = function () {\n            this._checkParentType();\n            this.formDirective.addFormGroup(this);\n        };\n        AbstractFormGroupDirective.prototype.ngOnDestroy = function () {\n            if (this.formDirective) {\n                this.formDirective.removeFormGroup(this);\n            }\n        };\n        Object.defineProperty(AbstractFormGroupDirective.prototype, \"control\", {\n            /**\n             * Get the {@link FormGroup} backing this binding.\n             */\n            get: function () { return this.formDirective.getFormGroup(this); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractFormGroupDirective.prototype, \"path\", {\n            /**\n             * Get the path to this control group.\n             */\n            get: function () { return controlPath(this.name, this._parent); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractFormGroupDirective.prototype, \"formDirective\", {\n            /**\n             * Get the {@link Form} to which this group belongs.\n             */\n            get: function () { return this._parent ? this._parent.formDirective : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractFormGroupDirective.prototype, \"validator\", {\n            get: function () { return composeValidators(this._validators); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractFormGroupDirective.prototype, \"asyncValidator\", {\n            get: function () { return composeAsyncValidators(this._asyncValidators); },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        AbstractFormGroupDirective.prototype._checkParentType = function () { };\n        return AbstractFormGroupDirective;\n    }(ControlContainer));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$3 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var AbstractControlStatus = (function () {\n        function AbstractControlStatus(cd) {\n            this._cd = cd;\n        }\n        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassUntouched\", {\n            get: function () {\n                return isPresent(this._cd.control) ? this._cd.control.untouched : false;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassTouched\", {\n            get: function () {\n                return isPresent(this._cd.control) ? this._cd.control.touched : false;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassPristine\", {\n            get: function () {\n                return isPresent(this._cd.control) ? this._cd.control.pristine : false;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassDirty\", {\n            get: function () {\n                return isPresent(this._cd.control) ? this._cd.control.dirty : false;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassValid\", {\n            get: function () {\n                return isPresent(this._cd.control) ? this._cd.control.valid : false;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassInvalid\", {\n            get: function () {\n                return isPresent(this._cd.control) ? this._cd.control.invalid : false;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return AbstractControlStatus;\n    }());\n    var ngControlStatusHost = {\n        '[class.ng-untouched]': 'ngClassUntouched',\n        '[class.ng-touched]': 'ngClassTouched',\n        '[class.ng-pristine]': 'ngClassPristine',\n        '[class.ng-dirty]': 'ngClassDirty',\n        '[class.ng-valid]': 'ngClassValid',\n        '[class.ng-invalid]': 'ngClassInvalid'\n    };\n    /**\n     * Directive automatically applied to Angular form controls that sets CSS classes\n     * based on control status (valid/invalid/dirty/etc).\n     *\n     * @stable\n     */\n    var NgControlStatus = (function (_super) {\n        __extends$3(NgControlStatus, _super);\n        function NgControlStatus(cd) {\n            _super.call(this, cd);\n        }\n        NgControlStatus.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[formControlName],[ngModel],[formControl]', host: ngControlStatusHost },] },\n        ];\n        /** @nocollapse */\n        NgControlStatus.ctorParameters = [\n            { type: NgControl, decorators: [{ type: _angular_core.Self },] },\n        ];\n        return NgControlStatus;\n    }(AbstractControlStatus));\n    /**\n     * Directive automatically applied to Angular form groups that sets CSS classes\n     * based on control status (valid/invalid/dirty/etc).\n     *\n     * @stable\n     */\n    var NgControlStatusGroup = (function (_super) {\n        __extends$3(NgControlStatusGroup, _super);\n        function NgControlStatusGroup(cd) {\n            _super.call(this, cd);\n        }\n        NgControlStatusGroup.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: '[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]',\n                        host: ngControlStatusHost\n                    },] },\n        ];\n        /** @nocollapse */\n        NgControlStatusGroup.ctorParameters = [\n            { type: ControlContainer, decorators: [{ type: _angular_core.Self },] },\n        ];\n        return NgControlStatusGroup;\n    }(AbstractControlStatus));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$5 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * Use by directives and components to emit custom Events.\n     *\n     * ### Examples\n     *\n     * In the following example, `Zippy` alternatively emits `open` and `close` events when its\n     * title gets clicked:\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * The events payload can be accessed by the parameter `$event` on the components output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     * @stable\n     */\n    var EventEmitter = (function (_super) {\n        __extends$5(EventEmitter, _super);\n        /**\n         * Creates an instance of [EventEmitter], which depending on [isAsync],\n         * delivers events synchronously or asynchronously.\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            _super.call(this);\n            this.__isAsync = isAsync;\n        }\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value /** TODO #9100 */) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value /** TODO #9100 */) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value /** TODO #9100 */) {\n                    setTimeout(function () { return generatorOrNext(value); });\n                } : function (value /** TODO #9100 */) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            return _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n        };\n        return EventEmitter;\n    }(rxjs_Subject.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$6 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * Indicates that a FormControl is valid, i.e. that no errors exist in the input value.\n     */\n    var VALID = 'VALID';\n    /**\n     * Indicates that a FormControl is invalid, i.e. that an error exists in the input value.\n     */\n    var INVALID = 'INVALID';\n    /**\n     * Indicates that a FormControl is pending, i.e. that async validation is occurring and\n     * errors are not yet available for the input value.\n     */\n    var PENDING = 'PENDING';\n    /**\n     * Indicates that a FormControl is disabled, i.e. that the control is exempt from ancestor\n     * calculations of validity or value.\n     */\n    var DISABLED = 'DISABLED';\n    function _find(control, path, delimiter) {\n        if (isBlank(path))\n            return null;\n        if (!(path instanceof Array)) {\n            path = path.split(delimiter);\n        }\n        if (path instanceof Array && ListWrapper.isEmpty(path))\n            return null;\n        return path.reduce(function (v, name) {\n            if (v instanceof FormGroup) {\n                return isPresent(v.controls[name]) ? v.controls[name] : null;\n            }\n            else if (v instanceof FormArray) {\n                var index = name;\n                return isPresent(v.at(index)) ? v.at(index) : null;\n            }\n            else {\n                return null;\n            }\n        }, control);\n    }\n    function toObservable(r) {\n        return isPromise(r) ? rxjs_observable_fromPromise.fromPromise(r) : r;\n    }\n    function coerceToValidator(validator) {\n        return Array.isArray(validator) ? composeValidators(validator) : validator;\n    }\n    function coerceToAsyncValidator(asyncValidator) {\n        return Array.isArray(asyncValidator) ? composeAsyncValidators(asyncValidator) : asyncValidator;\n    }\n    /**\n     * @whatItDoes This is the base class for {@link FormControl}, {@link FormGroup}, and\n     * {@link FormArray}.\n     *\n     * It provides some of the shared behavior that all controls and groups of controls have, like\n     * running validators, calculating status, and resetting state. It also defines the properties\n     * that are shared between all sub-classes, like `value`, `valid`, and `dirty`. It shouldn't be\n     * instantiated directly.\n     *\n     * @stable\n     */\n    var AbstractControl = (function () {\n        function AbstractControl(validator, asyncValidator) {\n            this.validator = validator;\n            this.asyncValidator = asyncValidator;\n            /** @internal */\n            this._onCollectionChange = function () { };\n            this._pristine = true;\n            this._touched = false;\n        }\n        Object.defineProperty(AbstractControl.prototype, \"value\", {\n            /**\n             * The value of the control.\n             */\n            get: function () { return this._value; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"status\", {\n            /**\n             * The validation status of the control. There are four possible\n             * validation statuses:\n             *\n             * * **VALID**:  control has passed all validation checks\n             * * **INVALID**: control has failed at least one validation check\n             * * **PENDING**: control is in the midst of conducting a validation check\n             * * **DISABLED**: control is exempt from validation checks\n             *\n             * These statuses are mutually exclusive, so a control cannot be\n             * both valid AND invalid or invalid AND disabled.\n             */\n            get: function () { return this._status; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"valid\", {\n            /**\n             * A control is `valid` when its `status === VALID`.\n             *\n             * In order to have this status, the control must have passed all its\n             * validation checks.\n             */\n            get: function () { return this._status === VALID; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"invalid\", {\n            /**\n             * A control is `invalid` when its `status === INVALID`.\n             *\n             * In order to have this status, the control must have failed\n             * at least one of its validation checks.\n             */\n            get: function () { return this._status === INVALID; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"pending\", {\n            /**\n             * A control is `pending` when its `status === PENDING`.\n             *\n             * In order to have this status, the control must be in the\n             * middle of conducting a validation check.\n             */\n            get: function () { return this._status == PENDING; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"disabled\", {\n            /**\n             * A control is `disabled` when its `status === DISABLED`.\n             *\n             * Disabled controls are exempt from validation checks and\n             * are not included in the aggregate value of their ancestor\n             * controls.\n             */\n            get: function () { return this._status === DISABLED; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"enabled\", {\n            /**\n             * A control is `enabled` as long as its `status !== DISABLED`.\n             *\n             * In other words, it has a status of `VALID`, `INVALID`, or\n             * `PENDING`.\n             */\n            get: function () { return this._status !== DISABLED; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"errors\", {\n            /**\n             * Returns any errors generated by failing validation. If there\n             * are no errors, it will return null.\n             */\n            get: function () { return this._errors; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"pristine\", {\n            /**\n             * A control is `pristine` if the user has not yet changed\n             * the value in the UI.\n             *\n             * Note that programmatic changes to a control's value will\n             * *not* mark it dirty.\n             */\n            get: function () { return this._pristine; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"dirty\", {\n            /**\n             * A control is `dirty` if the user has changed the value\n             * in the UI.\n             *\n             * Note that programmatic changes to a control's value will\n             * *not* mark it dirty.\n             */\n            get: function () { return !this.pristine; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"touched\", {\n            /**\n            * A control is marked `touched` once the user has triggered\n            * a `blur` event on it.\n            */\n            get: function () { return this._touched; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"untouched\", {\n            /**\n             * A control is `untouched` if the user has not yet triggered\n             * a `blur` event on it.\n             */\n            get: function () { return !this._touched; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"valueChanges\", {\n            /**\n             * Emits an event every time the value of the control changes, in\n             * the UI or programmatically.\n             */\n            get: function () { return this._valueChanges; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"statusChanges\", {\n            /**\n             * Emits an event every time the validation status of the control\n             * is re-calculated.\n             */\n            get: function () { return this._statusChanges; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Sets the synchronous validators that are active on this control.  Calling\n         * this will overwrite any existing sync validators.\n         */\n        AbstractControl.prototype.setValidators = function (newValidator) {\n            this.validator = coerceToValidator(newValidator);\n        };\n        /**\n         * Sets the async validators that are active on this control. Calling this\n         * will overwrite any existing async validators.\n         */\n        AbstractControl.prototype.setAsyncValidators = function (newValidator) {\n            this.asyncValidator = coerceToAsyncValidator(newValidator);\n        };\n        /**\n         * Empties out the sync validator list.\n         */\n        AbstractControl.prototype.clearValidators = function () { this.validator = null; };\n        /**\n         * Empties out the async validator list.\n         */\n        AbstractControl.prototype.clearAsyncValidators = function () { this.asyncValidator = null; };\n        /**\n         * Marks the control as `touched`.\n         *\n         * This will also mark all direct ancestors as `touched` to maintain\n         * the model.\n         */\n        AbstractControl.prototype.markAsTouched = function (_a) {\n            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n            onlySelf = normalizeBool(onlySelf);\n            this._touched = true;\n            if (isPresent(this._parent) && !onlySelf) {\n                this._parent.markAsTouched({ onlySelf: onlySelf });\n            }\n        };\n        /**\n         * Marks the control as `untouched`.\n         *\n         * If the control has any children, it will also mark all children as `untouched`\n         * to maintain the model, and re-calculate the `touched` status of all parent\n         * controls.\n         */\n        AbstractControl.prototype.markAsUntouched = function (_a) {\n            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n            this._touched = false;\n            this._forEachChild(function (control) { control.markAsUntouched({ onlySelf: true }); });\n            if (isPresent(this._parent) && !onlySelf) {\n                this._parent._updateTouched({ onlySelf: onlySelf });\n            }\n        };\n        /**\n         * Marks the control as `dirty`.\n         *\n         * This will also mark all direct ancestors as `dirty` to maintain\n         * the model.\n         */\n        AbstractControl.prototype.markAsDirty = function (_a) {\n            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n            onlySelf = normalizeBool(onlySelf);\n            this._pristine = false;\n            if (isPresent(this._parent) && !onlySelf) {\n                this._parent.markAsDirty({ onlySelf: onlySelf });\n            }\n        };\n        /**\n         * Marks the control as `pristine`.\n         *\n         * If the control has any children, it will also mark all children as `pristine`\n         * to maintain the model, and re-calculate the `pristine` status of all parent\n         * controls.\n         */\n        AbstractControl.prototype.markAsPristine = function (_a) {\n            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n            this._pristine = true;\n            this._forEachChild(function (control) { control.markAsPristine({ onlySelf: true }); });\n            if (isPresent(this._parent) && !onlySelf) {\n                this._parent._updatePristine({ onlySelf: onlySelf });\n            }\n        };\n        /**\n         * Marks the control as `pending`.\n         */\n        AbstractControl.prototype.markAsPending = function (_a) {\n            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n            onlySelf = normalizeBool(onlySelf);\n            this._status = PENDING;\n            if (isPresent(this._parent) && !onlySelf) {\n                this._parent.markAsPending({ onlySelf: onlySelf });\n            }\n        };\n        /**\n         * Disables the control. This means the control will be exempt from validation checks and\n         * excluded from the aggregate value of any parent. Its status is `DISABLED`.\n         *\n         * If the control has children, all children will be disabled to maintain the model.\n         */\n        AbstractControl.prototype.disable = function (_a) {\n            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n            emitEvent = isPresent(emitEvent) ? emitEvent : true;\n            this._status = DISABLED;\n            this._errors = null;\n            this._forEachChild(function (control) { control.disable({ onlySelf: true }); });\n            this._updateValue();\n            if (emitEvent) {\n                this._valueChanges.emit(this._value);\n                this._statusChanges.emit(this._status);\n            }\n            this._updateAncestors(onlySelf);\n            this._onDisabledChange(true);\n        };\n        /**\n         * Enables the control. This means the control will be included in validation checks and\n         * the aggregate value of its parent. Its status is re-calculated based on its value and\n         * its validators.\n         *\n         * If the control has children, all children will be enabled.\n         */\n        AbstractControl.prototype.enable = function (_a) {\n            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n            this._status = VALID;\n            this._forEachChild(function (control) { control.enable({ onlySelf: true }); });\n            this.updateValueAndValidity({ onlySelf: true, emitEvent: emitEvent });\n            this._updateAncestors(onlySelf);\n            this._onDisabledChange(false);\n        };\n        AbstractControl.prototype._updateAncestors = function (onlySelf) {\n            if (isPresent(this._parent) && !onlySelf) {\n                this._parent.updateValueAndValidity();\n                this._parent._updatePristine();\n                this._parent._updateTouched();\n            }\n        };\n        AbstractControl.prototype.setParent = function (parent) { this._parent = parent; };\n        /**\n         * Re-calculates the value and validation status of the control.\n         *\n         * By default, it will also update the value and validity of its ancestors.\n         */\n        AbstractControl.prototype.updateValueAndValidity = function (_a) {\n            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n            onlySelf = normalizeBool(onlySelf);\n            emitEvent = isPresent(emitEvent) ? emitEvent : true;\n            this._setInitialStatus();\n            this._updateValue();\n            if (this.enabled) {\n                this._errors = this._runValidator();\n                this._status = this._calculateStatus();\n                if (this._status === VALID || this._status === PENDING) {\n                    this._runAsyncValidator(emitEvent);\n                }\n            }\n            if (emitEvent) {\n                this._valueChanges.emit(this._value);\n                this._statusChanges.emit(this._status);\n            }\n            if (isPresent(this._parent) && !onlySelf) {\n                this._parent.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n            }\n        };\n        /** @internal */\n        AbstractControl.prototype._updateTreeValidity = function (_a) {\n            var emitEvent = (_a === void 0 ? { emitEvent: true } : _a).emitEvent;\n            this._forEachChild(function (ctrl) { return ctrl._updateTreeValidity({ emitEvent: emitEvent }); });\n            this.updateValueAndValidity({ onlySelf: true, emitEvent: emitEvent });\n        };\n        AbstractControl.prototype._setInitialStatus = function () { this._status = this._allControlsDisabled() ? DISABLED : VALID; };\n        AbstractControl.prototype._runValidator = function () {\n            return isPresent(this.validator) ? this.validator(this) : null;\n        };\n        AbstractControl.prototype._runAsyncValidator = function (emitEvent) {\n            var _this = this;\n            if (isPresent(this.asyncValidator)) {\n                this._status = PENDING;\n                this._cancelExistingSubscription();\n                var obs = toObservable(this.asyncValidator(this));\n                this._asyncValidationSubscription = obs.subscribe({ next: function (res) { return _this.setErrors(res, { emitEvent: emitEvent }); } });\n            }\n        };\n        AbstractControl.prototype._cancelExistingSubscription = function () {\n            if (isPresent(this._asyncValidationSubscription)) {\n                this._asyncValidationSubscription.unsubscribe();\n            }\n        };\n        /**\n         * Sets errors on a form control.\n         *\n         * This is used when validations are run manually by the user, rather than automatically.\n         *\n         * Calling `setErrors` will also update the validity of the parent control.\n         *\n         * ### Example\n         *\n         * ```\n         * const login = new FormControl(\"someLogin\");\n         * login.setErrors({\n         *   \"notUnique\": true\n         * });\n         *\n         * expect(login.valid).toEqual(false);\n         * expect(login.errors).toEqual({\"notUnique\": true});\n         *\n         * login.setValue(\"someOtherLogin\");\n         *\n         * expect(login.valid).toEqual(true);\n         * ```\n         */\n        AbstractControl.prototype.setErrors = function (errors, _a) {\n            var emitEvent = (_a === void 0 ? {} : _a).emitEvent;\n            emitEvent = isPresent(emitEvent) ? emitEvent : true;\n            this._errors = errors;\n            this._updateControlsErrors(emitEvent);\n        };\n        /**\n         * Retrieves a child control given the control's name or path.\n         *\n         * Paths can be passed in as an array or a string delimited by a dot.\n         *\n         * To get a control nested within a `person` sub-group:\n         *\n         * * `this.form.get('person.name');`\n         *\n         * -OR-\n         *\n         * * `this.form.get(['person', 'name']);`\n         */\n        AbstractControl.prototype.get = function (path) { return _find(this, path, '.'); };\n        /**\n         * Returns true if the control with the given path has the error specified. Otherwise\n         * returns null or undefined.\n         *\n         * If no path is given, it checks for the error on the present control.\n         */\n        AbstractControl.prototype.getError = function (errorCode, path) {\n            if (path === void 0) { path = null; }\n            var control = isPresent(path) && !ListWrapper.isEmpty(path) ? this.get(path) : this;\n            if (isPresent(control) && isPresent(control._errors)) {\n                return StringMapWrapper.get(control._errors, errorCode);\n            }\n            else {\n                return null;\n            }\n        };\n        /**\n         * Returns true if the control with the given path has the error specified. Otherwise\n         * returns false.\n         *\n         * If no path is given, it checks for the error on the present control.\n         */\n        AbstractControl.prototype.hasError = function (errorCode, path) {\n            if (path === void 0) { path = null; }\n            return isPresent(this.getError(errorCode, path));\n        };\n        Object.defineProperty(AbstractControl.prototype, \"root\", {\n            /**\n             * Retrieves the top-level ancestor of this control.\n             */\n            get: function () {\n                var x = this;\n                while (isPresent(x._parent)) {\n                    x = x._parent;\n                }\n                return x;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        AbstractControl.prototype._updateControlsErrors = function (emitEvent) {\n            this._status = this._calculateStatus();\n            if (emitEvent) {\n                this._statusChanges.emit(this._status);\n            }\n            if (isPresent(this._parent)) {\n                this._parent._updateControlsErrors(emitEvent);\n            }\n        };\n        /** @internal */\n        AbstractControl.prototype._initObservables = function () {\n            this._valueChanges = new EventEmitter();\n            this._statusChanges = new EventEmitter();\n        };\n        AbstractControl.prototype._calculateStatus = function () {\n            if (this._allControlsDisabled())\n                return DISABLED;\n            if (isPresent(this._errors))\n                return INVALID;\n            if (this._anyControlsHaveStatus(PENDING))\n                return PENDING;\n            if (this._anyControlsHaveStatus(INVALID))\n                return INVALID;\n            return VALID;\n        };\n        /** @internal */\n        AbstractControl.prototype._anyControlsHaveStatus = function (status) {\n            return this._anyControls(function (control) { return control.status == status; });\n        };\n        /** @internal */\n        AbstractControl.prototype._anyControlsDirty = function () {\n            return this._anyControls(function (control) { return control.dirty; });\n        };\n        /** @internal */\n        AbstractControl.prototype._anyControlsTouched = function () {\n            return this._anyControls(function (control) { return control.touched; });\n        };\n        /** @internal */\n        AbstractControl.prototype._updatePristine = function (_a) {\n            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n            this._pristine = !this._anyControlsDirty();\n            if (isPresent(this._parent) && !onlySelf) {\n                this._parent._updatePristine({ onlySelf: onlySelf });\n            }\n        };\n        /** @internal */\n        AbstractControl.prototype._updateTouched = function (_a) {\n            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n            this._touched = this._anyControlsTouched();\n            if (isPresent(this._parent) && !onlySelf) {\n                this._parent._updateTouched({ onlySelf: onlySelf });\n            }\n        };\n        /** @internal */\n        AbstractControl.prototype._onDisabledChange = function (isDisabled) { };\n        /** @internal */\n        AbstractControl.prototype._isBoxedValue = function (formState) {\n            return isStringMap(formState) && Object.keys(formState).length === 2 && 'value' in formState &&\n                'disabled' in formState;\n        };\n        /** @internal */\n        AbstractControl.prototype._registerOnCollectionChange = function (fn) { this._onCollectionChange = fn; };\n        return AbstractControl;\n    }());\n    /**\n     * @whatItDoes Tracks the value and validation status of an individual form control.\n     *\n     * It is one of the three fundamental building blocks of Angular forms, along with\n     * {@link FormGroup} and {@link FormArray}.\n     *\n     * @howToUse\n     *\n     * When instantiating a {@link FormControl}, you can pass in an initial value as the\n     * first argument. Example:\n     *\n     * ```ts\n     * const ctrl = new FormControl('some value');\n     * console.log(ctrl.value);     // 'some value'\n     *```\n     *\n     * You can also initialize the control with a form state object on instantiation,\n     * which includes both the value and whether or not the control is disabled.\n     *\n     * ```ts\n     * const ctrl = new FormControl({value: 'n/a', disabled: true});\n     * console.log(ctrl.value);     // 'n/a'\n     * console.log(ctrl.status);   // 'DISABLED'\n     * ```\n     *\n     * To include a sync validator (or an array of sync validators) with the control,\n     * pass it in as the second argument. Async validators are also supported, but\n     * have to be passed in separately as the third arg.\n     *\n     * ```ts\n     * const ctrl = new FormControl('', Validators.required);\n     * console.log(ctrl.value);     // ''\n     * console.log(ctrl.status);   // 'INVALID'\n     * ```\n     *\n     * See its superclass, {@link AbstractControl}, for more properties and methods.\n     *\n     * * **npm package**: `@angular/forms`\n     *\n     * @stable\n     */\n    var FormControl = (function (_super) {\n        __extends$6(FormControl, _super);\n        function FormControl(formState, validator, asyncValidator) {\n            if (formState === void 0) { formState = null; }\n            if (validator === void 0) { validator = null; }\n            if (asyncValidator === void 0) { asyncValidator = null; }\n            _super.call(this, coerceToValidator(validator), coerceToAsyncValidator(asyncValidator));\n            /** @internal */\n            this._onChange = [];\n            this._applyFormState(formState);\n            this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n            this._initObservables();\n        }\n        /**\n         * Set the value of the form control to `value`.\n         *\n         * If `onlySelf` is `true`, this change will only affect the validation of this `FormControl`\n         * and not its parent component. This defaults to false.\n         *\n         * If `emitEvent` is `true`, this\n         * change will cause a `valueChanges` event on the `FormControl` to be emitted. This defaults\n         * to true (as it falls through to `updateValueAndValidity`).\n         *\n         * If `emitModelToViewChange` is `true`, the view will be notified about the new value\n         * via an `onChange` event. This is the default behavior if `emitModelToViewChange` is not\n         * specified.\n         *\n         * If `emitViewToModelChange` is `true`, an ngModelChange event will be fired to update the\n         * model.  This is the default behavior if `emitViewToModelChange` is not specified.\n         */\n        FormControl.prototype.setValue = function (value, _a) {\n            var _this = this;\n            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent, emitModelToViewChange = _b.emitModelToViewChange, emitViewToModelChange = _b.emitViewToModelChange;\n            emitModelToViewChange = isPresent(emitModelToViewChange) ? emitModelToViewChange : true;\n            emitViewToModelChange = isPresent(emitViewToModelChange) ? emitViewToModelChange : true;\n            this._value = value;\n            if (this._onChange.length && emitModelToViewChange) {\n                this._onChange.forEach(function (changeFn) { return changeFn(_this._value, emitViewToModelChange); });\n            }\n            this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n        };\n        /**\n         * Patches the value of a control.\n         *\n         * This function is functionally the same as {@link FormControl.setValue} at this level.\n         * It exists for symmetry with {@link FormGroup.patchValue} on `FormGroups` and `FormArrays`,\n         * where it does behave differently.\n         */\n        FormControl.prototype.patchValue = function (value, options) {\n            if (options === void 0) { options = {}; }\n            this.setValue(value, options);\n        };\n        /**\n         * Resets the form control. This means by default:\n         *\n         * * it is marked as `pristine`\n         * * it is marked as `untouched`\n         * * value is set to null\n         *\n         * You can also reset to a specific form state by passing through a standalone\n         * value or a form state object that contains both a value and a disabled state\n         * (these are the only two properties that cannot be calculated).\n         *\n         * Ex:\n         *\n         * ```ts\n         * this.control.reset('Nancy');\n         *\n         * console.log(this.control.value);  // 'Nancy'\n         * ```\n         *\n         * OR\n         *\n         * ```\n         * this.control.reset({value: 'Nancy', disabled: true});\n         *\n         * console.log(this.control.value);  // 'Nancy'\n         * console.log(this.control.status);  // 'DISABLED'\n         * ```\n         */\n        FormControl.prototype.reset = function (formState, _a) {\n            if (formState === void 0) { formState = null; }\n            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n            this._applyFormState(formState);\n            this.markAsPristine({ onlySelf: onlySelf });\n            this.markAsUntouched({ onlySelf: onlySelf });\n            this.setValue(this._value, { onlySelf: onlySelf });\n        };\n        /**\n         * @internal\n         */\n        FormControl.prototype._updateValue = function () { };\n        /**\n         * @internal\n         */\n        FormControl.prototype._anyControls = function (condition) { return false; };\n        /**\n         * @internal\n         */\n        FormControl.prototype._allControlsDisabled = function () { return this.disabled; };\n        /**\n         * Register a listener for change events.\n         */\n        FormControl.prototype.registerOnChange = function (fn) { this._onChange.push(fn); };\n        /**\n         * @internal\n         */\n        FormControl.prototype._clearChangeFns = function () {\n            this._onChange = [];\n            this._onDisabledChange = null;\n            this._onCollectionChange = function () { };\n        };\n        /**\n         * Register a listener for disabled events.\n         */\n        FormControl.prototype.registerOnDisabledChange = function (fn) { this._onDisabledChange = fn; };\n        /**\n         * @internal\n         */\n        FormControl.prototype._forEachChild = function (cb) { };\n        FormControl.prototype._applyFormState = function (formState) {\n            if (this._isBoxedValue(formState)) {\n                this._value = formState.value;\n                formState.disabled ? this.disable({ onlySelf: true, emitEvent: false }) :\n                    this.enable({ onlySelf: true, emitEvent: false });\n            }\n            else {\n                this._value = formState;\n            }\n        };\n        return FormControl;\n    }(AbstractControl));\n    /**\n     * @whatItDoes Tracks the value and validity state of a group of {@link FormControl}\n     * instances.\n     *\n     * A `FormGroup` aggregates the values of each child {@link FormControl} into one object,\n     * with each control name as the key.  It calculates its status by reducing the statuses\n     * of its children. For example, if one of the controls in a group is invalid, the entire\n     * group becomes invalid.\n     *\n     * `FormGroup` is one of the three fundamental building blocks used to define forms in Angular,\n     * along with {@link FormControl} and {@link FormArray}.\n     *\n     * @howToUse\n     *\n     * When instantiating a {@link FormGroup}, pass in a collection of child controls as the first\n     * argument. The key for each child will be the name under which it is registered.\n     *\n     * ### Example\n     *\n     * ```\n     * const form = new FormGroup({\n     *   first: new FormControl('Nancy', Validators.minLength(2)),\n     *   last: new FormControl('Drew'),\n     * });\n     *\n     * console.log(form.value);   // {first: 'Nancy', last; 'Drew'}\n     * console.log(form.status);  // 'VALID'\n     * ```\n     *\n     * You can also include group-level validators as the second arg, or group-level async\n     * validators as the third arg. These come in handy when you want to perform validation\n     * that considers the value of more than one child control.\n     *\n     * ### Example\n     *\n     * ```\n     * const form = new FormGroup({\n     *   password: new FormControl('', Validators.minLength(2)),\n     *   passwordConfirm: new FormControl('', Validators.minLength(2)),\n     * }, passwordMatchValidator);\n     *\n     *\n     * function passwordMatchValidator(g: FormGroup) {\n     *    return g.get('password').value === g.get('passwordConfirm').value\n     *       ? null : {'mismatch': true};\n     * }\n     * ```\n     *\n     * * **npm package**: `@angular/forms`\n     *\n     * @stable\n     */\n    var FormGroup = (function (_super) {\n        __extends$6(FormGroup, _super);\n        function FormGroup(controls, validator, asyncValidator) {\n            if (validator === void 0) { validator = null; }\n            if (asyncValidator === void 0) { asyncValidator = null; }\n            _super.call(this, validator, asyncValidator);\n            this.controls = controls;\n            this._initObservables();\n            this._setUpControls();\n            this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n        }\n        /**\n         * Registers a control with the group's list of controls.\n         *\n         * This method does not update value or validity of the control, so for\n         * most cases you'll want to use {@link FormGroup.addControl} instead.\n         */\n        FormGroup.prototype.registerControl = function (name, control) {\n            if (this.controls[name])\n                return this.controls[name];\n            this.controls[name] = control;\n            control.setParent(this);\n            control._registerOnCollectionChange(this._onCollectionChange);\n            return control;\n        };\n        /**\n         * Add a control to this group.\n         */\n        FormGroup.prototype.addControl = function (name, control) {\n            this.registerControl(name, control);\n            this.updateValueAndValidity();\n            this._onCollectionChange();\n        };\n        /**\n         * Remove a control from this group.\n         */\n        FormGroup.prototype.removeControl = function (name) {\n            if (this.controls[name])\n                this.controls[name]._registerOnCollectionChange(function () { });\n            StringMapWrapper.delete(this.controls, name);\n            this.updateValueAndValidity();\n            this._onCollectionChange();\n        };\n        /**\n         * Replace an existing control.\n         */\n        FormGroup.prototype.setControl = function (name, control) {\n            if (this.controls[name])\n                this.controls[name]._registerOnCollectionChange(function () { });\n            StringMapWrapper.delete(this.controls, name);\n            if (control)\n                this.registerControl(name, control);\n            this.updateValueAndValidity();\n            this._onCollectionChange();\n        };\n        /**\n         * Check whether there is an enabled control with the given name in the group.\n         *\n         * It will return false for disabled controls. If you'd like to check for\n         * existence in the group only, use {@link AbstractControl.get} instead.\n         */\n        FormGroup.prototype.contains = function (controlName) {\n            return this.controls.hasOwnProperty(controlName) && this.controls[controlName].enabled;\n        };\n        /**\n         *  Sets the value of the {@link FormGroup}. It accepts an object that matches\n         *  the structure of the group, with control names as keys.\n         *\n         * This method performs strict checks, so it will throw an error if you try\n         * to set the value of a control that doesn't exist or if you exclude the\n         * value of a control.\n         *\n         *  ### Example\n         *\n         *  ```\n         *  const form = new FormGroup({\n         *     first: new FormControl(),\n         *     last: new FormControl()\n         *  });\n         *  console.log(form.value);   // {first: null, last: null}\n         *\n         *  form.setValue({first: 'Nancy', last: 'Drew'});\n         *  console.log(form.value);   // {first: 'Nancy', last: 'Drew'}\n         *\n         *  ```\n         */\n        FormGroup.prototype.setValue = function (value, _a) {\n            var _this = this;\n            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n            this._checkAllValuesPresent(value);\n            StringMapWrapper.forEach(value, function (newValue, name) {\n                _this._throwIfControlMissing(name);\n                _this.controls[name].setValue(newValue, { onlySelf: true });\n            });\n            this.updateValueAndValidity({ onlySelf: onlySelf });\n        };\n        /**\n         *  Patches the value of the {@link FormGroup}. It accepts an object with control\n         *  names as keys, and will do its best to match the values to the correct controls\n         *  in the group.\n         *\n         *  It accepts both super-sets and sub-sets of the group without throwing an error.\n         *\n         *  ### Example\n         *\n         *  ```\n         *  const form = new FormGroup({\n         *     first: new FormControl(),\n         *     last: new FormControl()\n         *  });\n         *  console.log(form.value);   // {first: null, last: null}\n         *\n         *  form.patchValue({first: 'Nancy'});\n         *  console.log(form.value);   // {first: 'Nancy', last: null}\n         *\n         *  ```\n         */\n        FormGroup.prototype.patchValue = function (value, _a) {\n            var _this = this;\n            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n            StringMapWrapper.forEach(value, function (newValue, name) {\n                if (_this.controls[name]) {\n                    _this.controls[name].patchValue(newValue, { onlySelf: true });\n                }\n            });\n            this.updateValueAndValidity({ onlySelf: onlySelf });\n        };\n        /**\n         * Resets the {@link FormGroup}. This means by default:\n         *\n         * * The group and all descendants are marked `pristine`\n         * * The group and all descendants are marked `untouched`\n         * * The value of all descendants will be null or null maps\n         *\n         * You can also reset to a specific form state by passing in a map of states\n         * that matches the structure of your form, with control names as keys. The state\n         * can be a standalone value or a form state object with both a value and a disabled\n         * status.\n         *\n         * ### Example\n         *\n         * ```ts\n         * this.form.reset({first: 'name', last; 'last name'});\n         *\n         * console.log(this.form.value);  // {first: 'name', last: 'last name'}\n         * ```\n         *\n         * - OR -\n         *\n         * ```\n         * this.form.reset({\n         *   first: {value: 'name', disabled: true},\n         *   last: 'last'\n         * });\n         *\n         * console.log(this.form.value);  // {first: 'name', last: 'last name'}\n         * console.log(this.form.get('first').status);  // 'DISABLED'\n         * ```\n         */\n        FormGroup.prototype.reset = function (value, _a) {\n            if (value === void 0) { value = {}; }\n            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n            this._forEachChild(function (control, name) {\n                control.reset(value[name], { onlySelf: true });\n            });\n            this.updateValueAndValidity({ onlySelf: onlySelf });\n            this._updatePristine({ onlySelf: onlySelf });\n            this._updateTouched({ onlySelf: onlySelf });\n        };\n        /**\n         * The aggregate value of the {@link FormGroup}, including any disabled controls.\n         *\n         * If you'd like to include all values regardless of disabled status, use this method.\n         * Otherwise, the `value` property is the best way to get the value of the group.\n         */\n        FormGroup.prototype.getRawValue = function () {\n            return this._reduceChildren({}, function (acc, control, name) {\n                acc[name] = control.value;\n                return acc;\n            });\n        };\n        /** @internal */\n        FormGroup.prototype._throwIfControlMissing = function (name) {\n            if (!Object.keys(this.controls).length) {\n                throw new Error(\"\\n        There are no form controls registered with this group yet.  If you're using ngModel,\\n        you may want to check next tick (e.g. use setTimeout).\\n      \");\n            }\n            if (!this.controls[name]) {\n                throw new Error(\"Cannot find form control with name: \" + name + \".\");\n            }\n        };\n        /** @internal */\n        FormGroup.prototype._forEachChild = function (cb) {\n            StringMapWrapper.forEach(this.controls, cb);\n        };\n        /** @internal */\n        FormGroup.prototype._setUpControls = function () {\n            var _this = this;\n            this._forEachChild(function (control) {\n                control.setParent(_this);\n                control._registerOnCollectionChange(_this._onCollectionChange);\n            });\n        };\n        /** @internal */\n        FormGroup.prototype._updateValue = function () { this._value = this._reduceValue(); };\n        /** @internal */\n        FormGroup.prototype._anyControls = function (condition) {\n            var _this = this;\n            var res = false;\n            this._forEachChild(function (control, name) {\n                res = res || (_this.contains(name) && condition(control));\n            });\n            return res;\n        };\n        /** @internal */\n        FormGroup.prototype._reduceValue = function () {\n            var _this = this;\n            return this._reduceChildren({}, function (acc, control, name) {\n                if (control.enabled || _this.disabled) {\n                    acc[name] = control.value;\n                }\n                return acc;\n            });\n        };\n        /** @internal */\n        FormGroup.prototype._reduceChildren = function (initValue, fn) {\n            var res = initValue;\n            this._forEachChild(function (control, name) { res = fn(res, control, name); });\n            return res;\n        };\n        /** @internal */\n        FormGroup.prototype._allControlsDisabled = function () {\n            for (var _i = 0, _a = Object.keys(this.controls); _i < _a.length; _i++) {\n                var controlName = _a[_i];\n                if (this.controls[controlName].enabled) {\n                    return false;\n                }\n            }\n            return Object.keys(this.controls).length > 0 || this.disabled;\n        };\n        /** @internal */\n        FormGroup.prototype._checkAllValuesPresent = function (value) {\n            this._forEachChild(function (control, name) {\n                if (value[name] === undefined) {\n                    throw new Error(\"Must supply a value for form control with name: '\" + name + \"'.\");\n                }\n            });\n        };\n        return FormGroup;\n    }(AbstractControl));\n    /**\n     * @whatItDoes Tracks the value and validity state of an array of {@link FormControl}\n     * instances.\n     *\n     * A `FormArray` aggregates the values of each child {@link FormControl} into an array.\n     * It calculates its status by reducing the statuses of its children. For example, if one of\n     * the controls in a `FormArray` is invalid, the entire array becomes invalid.\n     *\n     * `FormArray` is one of the three fundamental building blocks used to define forms in Angular,\n     * along with {@link FormControl} and {@link FormGroup}.\n     *\n     * @howToUse\n     *\n     * When instantiating a {@link FormArray}, pass in an array of child controls as the first\n     * argument.\n     *\n     * ### Example\n     *\n     * ```\n     * const arr = new FormArray([\n     *   new FormControl('Nancy', Validators.minLength(2)),\n     *   new FormControl('Drew'),\n     * ]);\n     *\n     * console.log(arr.value);   // ['Nancy', 'Drew']\n     * console.log(arr.status);  // 'VALID'\n     * ```\n     *\n     * You can also include array-level validators as the second arg, or array-level async\n     * validators as the third arg. These come in handy when you want to perform validation\n     * that considers the value of more than one child control.\n     *\n     * ### Adding or removing controls\n     *\n     * To change the controls in the array, use the `push`, `insert`, or `removeAt` methods\n     * in `FormArray` itself. These methods ensure the controls are properly tracked in the\n     * form's hierarchy. Do not modify the array of `AbstractControl`s used to instantiate\n     * the `FormArray` directly, as that will result in strange and unexpected behavior such\n     * as broken change detection.\n     *\n     * * **npm package**: `@angular/forms`\n     *\n     * @stable\n     */\n    var FormArray = (function (_super) {\n        __extends$6(FormArray, _super);\n        function FormArray(controls, validator, asyncValidator) {\n            if (validator === void 0) { validator = null; }\n            if (asyncValidator === void 0) { asyncValidator = null; }\n            _super.call(this, validator, asyncValidator);\n            this.controls = controls;\n            this._initObservables();\n            this._setUpControls();\n            this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n        }\n        /**\n         * Get the {@link AbstractControl} at the given `index` in the array.\n         */\n        FormArray.prototype.at = function (index) { return this.controls[index]; };\n        /**\n         * Insert a new {@link AbstractControl} at the end of the array.\n         */\n        FormArray.prototype.push = function (control) {\n            this.controls.push(control);\n            this._registerControl(control);\n            this.updateValueAndValidity();\n            this._onCollectionChange();\n        };\n        /**\n         * Insert a new {@link AbstractControl} at the given `index` in the array.\n         */\n        FormArray.prototype.insert = function (index, control) {\n            ListWrapper.insert(this.controls, index, control);\n            this._registerControl(control);\n            this.updateValueAndValidity();\n            this._onCollectionChange();\n        };\n        /**\n         * Remove the control at the given `index` in the array.\n         */\n        FormArray.prototype.removeAt = function (index) {\n            if (this.controls[index])\n                this.controls[index]._registerOnCollectionChange(function () { });\n            ListWrapper.removeAt(this.controls, index);\n            this.updateValueAndValidity();\n            this._onCollectionChange();\n        };\n        /**\n         * Replace an existing control.\n         */\n        FormArray.prototype.setControl = function (index, control) {\n            if (this.controls[index])\n                this.controls[index]._registerOnCollectionChange(function () { });\n            ListWrapper.removeAt(this.controls, index);\n            if (control) {\n                ListWrapper.insert(this.controls, index, control);\n                this._registerControl(control);\n            }\n            this.updateValueAndValidity();\n            this._onCollectionChange();\n        };\n        Object.defineProperty(FormArray.prototype, \"length\", {\n            /**\n             * Length of the control array.\n             */\n            get: function () { return this.controls.length; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         *  Sets the value of the {@link FormArray}. It accepts an array that matches\n         *  the structure of the control.\n         *\n         * This method performs strict checks, so it will throw an error if you try\n         * to set the value of a control that doesn't exist or if you exclude the\n         * value of a control.\n         *\n         *  ### Example\n         *\n         *  ```\n         *  const arr = new FormArray([\n         *     new FormControl(),\n         *     new FormControl()\n         *  ]);\n         *  console.log(arr.value);   // [null, null]\n         *\n         *  arr.setValue(['Nancy', 'Drew']);\n         *  console.log(arr.value);   // ['Nancy', 'Drew']\n         *  ```\n         */\n        FormArray.prototype.setValue = function (value, _a) {\n            var _this = this;\n            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n            this._checkAllValuesPresent(value);\n            value.forEach(function (newValue, index) {\n                _this._throwIfControlMissing(index);\n                _this.at(index).setValue(newValue, { onlySelf: true });\n            });\n            this.updateValueAndValidity({ onlySelf: onlySelf });\n        };\n        /**\n         *  Patches the value of the {@link FormArray}. It accepts an array that matches the\n         *  structure of the control, and will do its best to match the values to the correct\n         *  controls in the group.\n         *\n         *  It accepts both super-sets and sub-sets of the array without throwing an error.\n         *\n         *  ### Example\n         *\n         *  ```\n         *  const arr = new FormArray([\n         *     new FormControl(),\n         *     new FormControl()\n         *  ]);\n         *  console.log(arr.value);   // [null, null]\n         *\n         *  arr.patchValue(['Nancy']);\n         *  console.log(arr.value);   // ['Nancy', null]\n         *  ```\n         */\n        FormArray.prototype.patchValue = function (value, _a) {\n            var _this = this;\n            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n            value.forEach(function (newValue, index) {\n                if (_this.at(index)) {\n                    _this.at(index).patchValue(newValue, { onlySelf: true });\n                }\n            });\n            this.updateValueAndValidity({ onlySelf: onlySelf });\n        };\n        /**\n         * Resets the {@link FormArray}. This means by default:\n         *\n         * * The array and all descendants are marked `pristine`\n         * * The array and all descendants are marked `untouched`\n         * * The value of all descendants will be null or null maps\n         *\n         * You can also reset to a specific form state by passing in an array of states\n         * that matches the structure of the control. The state can be a standalone value\n         * or a form state object with both a value and a disabled status.\n         *\n         * ### Example\n         *\n         * ```ts\n         * this.arr.reset(['name', 'last name']);\n         *\n         * console.log(this.arr.value);  // ['name', 'last name']\n         * ```\n         *\n         * - OR -\n         *\n         * ```\n         * this.arr.reset([\n         *   {value: 'name', disabled: true},\n         *   'last'\n         * ]);\n         *\n         * console.log(this.arr.value);  // ['name', 'last name']\n         * console.log(this.arr.get(0).status);  // 'DISABLED'\n         * ```\n         */\n        FormArray.prototype.reset = function (value, _a) {\n            if (value === void 0) { value = []; }\n            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n            this._forEachChild(function (control, index) {\n                control.reset(value[index], { onlySelf: true });\n            });\n            this.updateValueAndValidity({ onlySelf: onlySelf });\n            this._updatePristine({ onlySelf: onlySelf });\n            this._updateTouched({ onlySelf: onlySelf });\n        };\n        /**\n         * The aggregate value of the array, including any disabled controls.\n         *\n         * If you'd like to include all values regardless of disabled status, use this method.\n         * Otherwise, the `value` property is the best way to get the value of the array.\n         */\n        FormArray.prototype.getRawValue = function () { return this.controls.map(function (control) { return control.value; }); };\n        /** @internal */\n        FormArray.prototype._throwIfControlMissing = function (index) {\n            if (!this.controls.length) {\n                throw new Error(\"\\n        There are no form controls registered with this array yet.  If you're using ngModel,\\n        you may want to check next tick (e.g. use setTimeout).\\n      \");\n            }\n            if (!this.at(index)) {\n                throw new Error(\"Cannot find form control at index \" + index);\n            }\n        };\n        /** @internal */\n        FormArray.prototype._forEachChild = function (cb) {\n            this.controls.forEach(function (control, index) { cb(control, index); });\n        };\n        /** @internal */\n        FormArray.prototype._updateValue = function () {\n            var _this = this;\n            this._value = this.controls.filter(function (control) { return control.enabled || _this.disabled; })\n                .map(function (control) { return control.value; });\n        };\n        /** @internal */\n        FormArray.prototype._anyControls = function (condition) {\n            return this.controls.some(function (control) { return control.enabled && condition(control); });\n        };\n        /** @internal */\n        FormArray.prototype._setUpControls = function () {\n            var _this = this;\n            this._forEachChild(function (control) { return _this._registerControl(control); });\n        };\n        /** @internal */\n        FormArray.prototype._checkAllValuesPresent = function (value) {\n            this._forEachChild(function (control, i) {\n                if (value[i] === undefined) {\n                    throw new Error(\"Must supply a value for form control at index: \" + i + \".\");\n                }\n            });\n        };\n        /** @internal */\n        FormArray.prototype._allControlsDisabled = function () {\n            for (var _i = 0, _a = this.controls; _i < _a.length; _i++) {\n                var control = _a[_i];\n                if (control.enabled)\n                    return false;\n            }\n            return this.controls.length > 0 || this.disabled;\n        };\n        FormArray.prototype._registerControl = function (control) {\n            control.setParent(this);\n            control._registerOnCollectionChange(this._onCollectionChange);\n        };\n        return FormArray;\n    }(AbstractControl));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$4 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var formDirectiveProvider = {\n        provide: ControlContainer,\n        useExisting: _angular_core.forwardRef(function () { return NgForm; })\n    };\n    var resolvedPromise = Promise.resolve(null);\n    /**\n     * @whatItDoes Creates a top-level {@link FormGroup} instance and binds it to a form\n     * to track aggregate form value and validation status.\n     *\n     * @howToUse\n     *\n     * As soon as you import the `FormsModule`, this directive becomes active by default on\n     * all `<form>` tags.  You don't need to add a special selector.\n     *\n     * You can export the directive into a local template variable using `ngForm` as the key\n     * (ex: `#myForm=\"ngForm\"`). This is optional, but useful.  Many properties from the underlying\n     * {@link FormGroup} instance are duplicated on the directive itself, so a reference to it\n     * will give you access to the aggregate value and validity status of the form, as well as\n     * user interaction properties like `dirty` and `touched`.\n     *\n     * To register child controls with the form, you'll want to use {@link NgModel} with a\n     * `name` attribute.  You can also use {@link NgModelGroup} if you'd like to create\n     * sub-groups within the form.\n     *\n     * You can listen to the directive's `ngSubmit` event to be notified when the user has\n     * triggered a form submission.\n     *\n     * {@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n     *\n     * * **npm package**: `@angular/forms`\n     *\n     * * **NgModule**: `FormsModule`\n     *\n     *  @stable\n     */\n    var NgForm = (function (_super) {\n        __extends$4(NgForm, _super);\n        function NgForm(validators, asyncValidators) {\n            _super.call(this);\n            this._submitted = false;\n            this.ngSubmit = new EventEmitter();\n            this.form =\n                new FormGroup({}, composeValidators(validators), composeAsyncValidators(asyncValidators));\n        }\n        Object.defineProperty(NgForm.prototype, \"submitted\", {\n            get: function () { return this._submitted; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgForm.prototype, \"formDirective\", {\n            get: function () { return this; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgForm.prototype, \"control\", {\n            get: function () { return this.form; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgForm.prototype, \"path\", {\n            get: function () { return []; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgForm.prototype, \"controls\", {\n            get: function () { return this.form.controls; },\n            enumerable: true,\n            configurable: true\n        });\n        NgForm.prototype.addControl = function (dir) {\n            var _this = this;\n            resolvedPromise.then(function () {\n                var container = _this._findContainer(dir.path);\n                dir._control = container.registerControl(dir.name, dir.control);\n                setUpControl(dir.control, dir);\n                dir.control.updateValueAndValidity({ emitEvent: false });\n            });\n        };\n        NgForm.prototype.getControl = function (dir) { return this.form.get(dir.path); };\n        NgForm.prototype.removeControl = function (dir) {\n            var _this = this;\n            resolvedPromise.then(function () {\n                var container = _this._findContainer(dir.path);\n                if (isPresent(container)) {\n                    container.removeControl(dir.name);\n                }\n            });\n        };\n        NgForm.prototype.addFormGroup = function (dir) {\n            var _this = this;\n            resolvedPromise.then(function () {\n                var container = _this._findContainer(dir.path);\n                var group = new FormGroup({});\n                setUpFormContainer(group, dir);\n                container.registerControl(dir.name, group);\n                group.updateValueAndValidity({ emitEvent: false });\n            });\n        };\n        NgForm.prototype.removeFormGroup = function (dir) {\n            var _this = this;\n            resolvedPromise.then(function () {\n                var container = _this._findContainer(dir.path);\n                if (isPresent(container)) {\n                    container.removeControl(dir.name);\n                }\n            });\n        };\n        NgForm.prototype.getFormGroup = function (dir) { return this.form.get(dir.path); };\n        NgForm.prototype.updateModel = function (dir, value) {\n            var _this = this;\n            resolvedPromise.then(function () {\n                var ctrl = _this.form.get(dir.path);\n                ctrl.setValue(value);\n            });\n        };\n        NgForm.prototype.setValue = function (value) { this.control.setValue(value); };\n        NgForm.prototype.onSubmit = function () {\n            this._submitted = true;\n            this.ngSubmit.emit(null);\n            return false;\n        };\n        NgForm.prototype.onReset = function () { this.resetForm(); };\n        NgForm.prototype.resetForm = function (value) {\n            if (value === void 0) { value = undefined; }\n            this.form.reset(value);\n            this._submitted = false;\n        };\n        /** @internal */\n        NgForm.prototype._findContainer = function (path) {\n            path.pop();\n            return ListWrapper.isEmpty(path) ? this.form : this.form.get(path);\n        };\n        NgForm.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: 'form:not([ngNoForm]):not([formGroup]),ngForm,[ngForm]',\n                        providers: [formDirectiveProvider],\n                        host: { '(submit)': 'onSubmit()', '(reset)': 'onReset()' },\n                        outputs: ['ngSubmit'],\n                        exportAs: 'ngForm'\n                    },] },\n        ];\n        /** @nocollapse */\n        NgForm.ctorParameters = [\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n        ];\n        return NgForm;\n    }(ControlContainer));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Examples = {\n        formControlName: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n      <input formControlName=\\\"firstName\\\">\\n    </div>\\n\\n    In your class:\\n\\n    this.myGroup = new FormGroup({\\n       firstName: new FormControl()\\n    });\",\n        formGroupName: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n       <div formGroupName=\\\"person\\\">\\n          <input formControlName=\\\"firstName\\\">\\n       </div>\\n    </div>\\n\\n    In your class:\\n\\n    this.myGroup = new FormGroup({\\n       person: new FormGroup({ firstName: new FormControl() })\\n    });\",\n        formArrayName: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n      <div formArrayName=\\\"cities\\\">\\n        <div *ngFor=\\\"let city of cityArray.controls; let i=index\\\">\\n          <input [formControlName]=\\\"i\\\">\\n        </div>\\n      </div>\\n    </div>\\n\\n    In your class:\\n\\n    this.cityArray = new FormArray([new FormControl('SF')]);\\n    this.myGroup = new FormGroup({\\n      cities: this.cityArray\\n    });\",\n        ngModelGroup: \"\\n    <form>\\n       <div ngModelGroup=\\\"person\\\">\\n          <input [(ngModel)]=\\\"person.name\\\" name=\\\"firstName\\\">\\n       </div>\\n    </form>\",\n        ngModelWithFormGroup: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n       <input formControlName=\\\"firstName\\\">\\n       <input [(ngModel)]=\\\"showMoreControls\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n    </div>\\n  \"\n    };\n\n    var TemplateDrivenErrors = (function () {\n        function TemplateDrivenErrors() {\n        }\n        TemplateDrivenErrors.modelParentException = function () {\n            throw new Error(\"\\n      ngModel cannot be used to register form controls with a parent formGroup directive.  Try using\\n      formGroup's partner directive \\\"formControlName\\\" instead.  Example:\\n\\n      \" + Examples.formControlName + \"\\n\\n      Or, if you'd like to avoid registering this form control, indicate that it's standalone in ngModelOptions:\\n\\n      Example:\\n\\n      \" + Examples.ngModelWithFormGroup);\n        };\n        TemplateDrivenErrors.formGroupNameException = function () {\n            throw new Error(\"\\n      ngModel cannot be used to register form controls with a parent formGroupName or formArrayName directive.\\n\\n      Option 1: Use formControlName instead of ngModel (reactive strategy):\\n\\n      \" + Examples.formGroupName + \"\\n\\n      Option 2:  Update ngModel's parent be ngModelGroup (template-driven strategy):\\n\\n      \" + Examples.ngModelGroup);\n        };\n        TemplateDrivenErrors.missingNameException = function () {\n            throw new Error(\"If ngModel is used within a form tag, either the name attribute must be set or the form\\n      control must be defined as 'standalone' in ngModelOptions.\\n\\n      Example 1: <input [(ngModel)]=\\\"person.firstName\\\" name=\\\"first\\\">\\n      Example 2: <input [(ngModel)]=\\\"person.firstName\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\");\n        };\n        TemplateDrivenErrors.modelGroupParentException = function () {\n            throw new Error(\"\\n      ngModelGroup cannot be used with a parent formGroup directive.\\n\\n      Option 1: Use formGroupName instead of ngModelGroup (reactive strategy):\\n\\n      \" + Examples.formGroupName + \"\\n\\n      Option 2:  Use a regular form tag instead of the formGroup directive (template-driven strategy):\\n\\n      \" + Examples.ngModelGroup);\n        };\n        return TemplateDrivenErrors;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$8 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var modelGroupProvider = {\n        provide: ControlContainer,\n        useExisting: _angular_core.forwardRef(function () { return NgModelGroup; })\n    };\n    /**\n     * @whatItDoes Creates and binds a {@link FormGroup} instance to a DOM element.\n     *\n     * @howToUse\n     *\n     * This directive can only be used as a child of {@link NgForm} (or in other words,\n     * within `<form>` tags).\n     *\n     * Use this directive if you'd like to create a sub-group within a form. This can\n     * come in handy if you want to validate a sub-group of your form separately from\n     * the rest of your form, or if some values in your domain model make more sense to\n     * consume together in a nested object.\n     *\n     * Pass in the name you'd like this sub-group to have and it will become the key\n     * for the sub-group in the form's full value. You can also export the directive into\n     * a local template variable using `ngModelGroup` (ex: `#myGroup=\"ngModelGroup\"`).\n     *\n     * {@example forms/ts/ngModelGroup/ng_model_group_example.ts region='Component'}\n     *\n     * * **npm package**: `@angular/forms`\n     *\n     * * **NgModule**: `FormsModule`\n     *\n     * @stable\n     */\n    var NgModelGroup = (function (_super) {\n        __extends$8(NgModelGroup, _super);\n        function NgModelGroup(parent, validators, asyncValidators) {\n            _super.call(this);\n            this._parent = parent;\n            this._validators = validators;\n            this._asyncValidators = asyncValidators;\n        }\n        /** @internal */\n        NgModelGroup.prototype._checkParentType = function () {\n            if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm)) {\n                TemplateDrivenErrors.modelGroupParentException();\n            }\n        };\n        NgModelGroup.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[ngModelGroup]', providers: [modelGroupProvider], exportAs: 'ngModelGroup' },] },\n        ];\n        /** @nocollapse */\n        NgModelGroup.ctorParameters = [\n            { type: ControlContainer, decorators: [{ type: _angular_core.Host }, { type: _angular_core.SkipSelf },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n        ];\n        NgModelGroup.propDecorators = {\n            'name': [{ type: _angular_core.Input, args: ['ngModelGroup',] },],\n        };\n        return NgModelGroup;\n    }(AbstractFormGroupDirective));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$7 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var formControlBinding = {\n        provide: NgControl,\n        useExisting: _angular_core.forwardRef(function () { return NgModel; })\n    };\n    var resolvedPromise$1 = Promise.resolve(null);\n    /**\n     * @whatItDoes Creates a {@link FormControl} instance from a domain model and binds it\n     * to a form control element.\n     *\n     * The {@link FormControl} instance will track the value, user interaction, and\n     * validation status of the control and keep the view synced with the model. If used\n     * within a parent form, the directive will also register itself with the form as a child\n     * control.\n     *\n     * @howToUse\n     *\n     * This directive can be used by itself or as part of a larger form. All you need is the\n     * `ngModel` selector to activate it.\n     *\n     * It accepts a domain model as an optional {@link @Input}. If you have a one-way binding\n     * to `ngModel` with `[]` syntax, changing the value of the domain model in the component\n     * class will set the value in the view. If you have a two-way binding with `[()]` syntax\n     * (also known as 'banana-box syntax'), the value in the UI will always be synced back to\n     * the domain model in your class as well.\n     *\n     * If you wish to inspect the properties of the associated {@link FormControl} (like\n     * validity state), you can also export the directive into a local template variable using\n     * `ngModel` as the key (ex: `#myVar=\"ngModel\"`). You can then access the control using the\n     * directive's `control` property, but most properties you'll need (like `valid` and `dirty`)\n     * will fall through to the control anyway, so you can access them directly. You can see a\n     * full list of properties directly available in {@link AbstractControlDirective}.\n     *\n     * The following is an example of a simple standalone control using `ngModel`:\n     *\n     * {@example forms/ts/simpleNgModel/simple_ng_model_example.ts region='Component'}\n     *\n     * When using the `ngModel` within `<form>` tags, you'll also need to supply a `name` attribute\n     * so that the control can be registered with the parent form under that name.\n     *\n     * It's worth noting that in the context of a parent form, you often can skip one-way or\n     * two-way binding because the parent form will sync the value for you. You can access\n     * its properties by exporting it into a local template variable using `ngForm` (ex:\n     * `#f=\"ngForm\"`). Then you can pass it where it needs to go on submit.\n     *\n     * If you do need to populate initial values into your form, using a one-way binding for\n     * `ngModel` tends to be sufficient as long as you use the exported form's value rather\n     * than the domain model's value on submit.\n     *\n     * Take a look at an example of using `ngModel` within a form:\n     *\n     * {@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n     *\n     * **npm package**: `@angular/forms`\n     *\n     * **NgModule**: `FormsModule`\n     *\n     *  @stable\n     */\n    var NgModel = (function (_super) {\n        __extends$7(NgModel, _super);\n        function NgModel(parent, validators, asyncValidators, valueAccessors) {\n            _super.call(this);\n            /** @internal */\n            this._control = new FormControl();\n            /** @internal */\n            this._registered = false;\n            this.update = new EventEmitter();\n            this._parent = parent;\n            this._rawValidators = validators || [];\n            this._rawAsyncValidators = asyncValidators || [];\n            this.valueAccessor = selectValueAccessor(this, valueAccessors);\n        }\n        NgModel.prototype.ngOnChanges = function (changes) {\n            this._checkForErrors();\n            if (!this._registered)\n                this._setUpControl();\n            if ('isDisabled' in changes) {\n                this._updateDisabled(changes);\n            }\n            if (isPropertyUpdated(changes, this.viewModel)) {\n                this._updateValue(this.model);\n                this.viewModel = this.model;\n            }\n        };\n        NgModel.prototype.ngOnDestroy = function () { this.formDirective && this.formDirective.removeControl(this); };\n        Object.defineProperty(NgModel.prototype, \"control\", {\n            get: function () { return this._control; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModel.prototype, \"path\", {\n            get: function () {\n                return this._parent ? controlPath(this.name, this._parent) : [this.name];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModel.prototype, \"formDirective\", {\n            get: function () { return this._parent ? this._parent.formDirective : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModel.prototype, \"validator\", {\n            get: function () { return composeValidators(this._rawValidators); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModel.prototype, \"asyncValidator\", {\n            get: function () {\n                return composeAsyncValidators(this._rawAsyncValidators);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgModel.prototype.viewToModelUpdate = function (newValue) {\n            this.viewModel = newValue;\n            this.update.emit(newValue);\n        };\n        NgModel.prototype._setUpControl = function () {\n            this._isStandalone() ? this._setUpStandalone() :\n                this.formDirective.addControl(this);\n            this._registered = true;\n        };\n        NgModel.prototype._isStandalone = function () {\n            return !this._parent || (this.options && this.options.standalone);\n        };\n        NgModel.prototype._setUpStandalone = function () {\n            setUpControl(this._control, this);\n            this._control.updateValueAndValidity({ emitEvent: false });\n        };\n        NgModel.prototype._checkForErrors = function () {\n            if (!this._isStandalone()) {\n                this._checkParentType();\n            }\n            this._checkName();\n        };\n        NgModel.prototype._checkParentType = function () {\n            if (!(this._parent instanceof NgModelGroup) &&\n                this._parent instanceof AbstractFormGroupDirective) {\n                TemplateDrivenErrors.formGroupNameException();\n            }\n            else if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm)) {\n                TemplateDrivenErrors.modelParentException();\n            }\n        };\n        NgModel.prototype._checkName = function () {\n            if (this.options && this.options.name)\n                this.name = this.options.name;\n            if (!this._isStandalone() && !this.name) {\n                TemplateDrivenErrors.missingNameException();\n            }\n        };\n        NgModel.prototype._updateValue = function (value) {\n            var _this = this;\n            resolvedPromise$1.then(function () { _this.control.setValue(value, { emitViewToModelChange: false }); });\n        };\n        NgModel.prototype._updateDisabled = function (changes) {\n            var _this = this;\n            var disabledValue = changes['isDisabled'].currentValue;\n            var isDisabled = disabledValue != null && disabledValue != false;\n            resolvedPromise$1.then(function () {\n                if (isDisabled && !_this.control.disabled) {\n                    _this.control.disable();\n                }\n                else if (!isDisabled && _this.control.disabled) {\n                    _this.control.enable();\n                }\n            });\n        };\n        NgModel.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: '[ngModel]:not([formControlName]):not([formControl])',\n                        providers: [formControlBinding],\n                        exportAs: 'ngModel'\n                    },] },\n        ];\n        /** @nocollapse */\n        NgModel.ctorParameters = [\n            { type: ControlContainer, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Host },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALUE_ACCESSOR,] },] },\n        ];\n        NgModel.propDecorators = {\n            'name': [{ type: _angular_core.Input },],\n            'isDisabled': [{ type: _angular_core.Input, args: ['disabled',] },],\n            'model': [{ type: _angular_core.Input, args: ['ngModel',] },],\n            'options': [{ type: _angular_core.Input, args: ['ngModelOptions',] },],\n            'update': [{ type: _angular_core.Output, args: ['ngModelChange',] },],\n        };\n        return NgModel;\n    }(NgControl));\n\n    var ReactiveErrors = (function () {\n        function ReactiveErrors() {\n        }\n        ReactiveErrors.controlParentException = function () {\n            throw new Error(\"formControlName must be used with a parent formGroup directive.  You'll want to add a formGroup\\n       directive and pass it an existing FormGroup instance (you can create one in your class).\\n\\n      Example:\\n\\n      \" + Examples.formControlName);\n        };\n        ReactiveErrors.ngModelGroupException = function () {\n            throw new Error(\"formControlName cannot be used with an ngModelGroup parent. It is only compatible with parents\\n       that also have a \\\"form\\\" prefix: formGroupName, formArrayName, or formGroup.\\n\\n       Option 1:  Update the parent to be formGroupName (reactive form strategy)\\n\\n        \" + Examples.formGroupName + \"\\n\\n        Option 2: Use ngModel instead of formControlName (template-driven strategy)\\n\\n        \" + Examples.ngModelGroup);\n        };\n        ReactiveErrors.missingFormException = function () {\n            throw new Error(\"formGroup expects a FormGroup instance. Please pass one in.\\n\\n       Example:\\n\\n       \" + Examples.formControlName);\n        };\n        ReactiveErrors.groupParentException = function () {\n            throw new Error(\"formGroupName must be used with a parent formGroup directive.  You'll want to add a formGroup\\n      directive and pass it an existing FormGroup instance (you can create one in your class).\\n\\n      Example:\\n\\n      \" + Examples.formGroupName);\n        };\n        ReactiveErrors.arrayParentException = function () {\n            throw new Error(\"formArrayName must be used with a parent formGroup directive.  You'll want to add a formGroup\\n       directive and pass it an existing FormGroup instance (you can create one in your class).\\n\\n        Example:\\n\\n        \" + Examples.formArrayName);\n        };\n        ReactiveErrors.disabledAttrWarning = function () {\n            console.warn(\"\\n      It looks like you're using the disabled attribute with a reactive form directive. If you set disabled to true\\n      when you set up this control in your component class, the disabled attribute will actually be set in the DOM for\\n      you. We recommend using this approach to avoid 'changed after checked' errors.\\n       \\n      Example: \\n      form = new FormGroup({\\n        first: new FormControl({value: 'Nancy', disabled: true}, Validators.required),\\n        last: new FormControl('Drew', Validators.required)\\n      });\\n    \");\n        };\n        return ReactiveErrors;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$9 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var formControlBinding$1 = {\n        provide: NgControl,\n        useExisting: _angular_core.forwardRef(function () { return FormControlDirective; })\n    };\n    /**\n     * @whatItDoes Syncs a standalone {@link FormControl} instance to a form control element.\n     *\n     * In other words, this directive ensures that any values written to the {@link FormControl}\n     * instance programmatically will be written to the DOM element (model -> view). Conversely,\n     * any values written to the DOM element through user input will be reflected in the\n     * {@link FormControl} instance (view -> model).\n     *\n     * @howToUse\n     *\n     * Use this directive if you'd like to create and manage a {@link FormControl} instance directly.\n     * Simply create a {@link FormControl}, save it to your component class, and pass it into the\n     * {@link FormControlDirective}.\n     *\n     * This directive is designed to be used as a standalone control.  Unlike {@link FormControlName},\n     * it does not require that your {@link FormControl} instance be part of any parent\n     * {@link FormGroup}, and it won't be registered to any {@link FormGroupDirective} that\n     * exists above it.\n     *\n     * **Get the value**: the `value` property is always synced and available on the\n     * {@link FormControl} instance. See a full list of available properties in\n     * {@link AbstractControl}.\n     *\n     * **Set the value**: You can pass in an initial value when instantiating the {@link FormControl},\n     * or you can set it programmatically later using {@link AbstractControl.setValue} or\n     * {@link AbstractControl.patchValue}.\n     *\n     * **Listen to value**: If you want to listen to changes in the value of the control, you can\n     * subscribe to the {@link AbstractControl.valueChanges} event.  You can also listen to\n     * {@link AbstractControl.statusChanges} to be notified when the validation status is\n     * re-calculated.\n     *\n     * ### Example\n     *\n     * {@example forms/ts/simpleFormControl/simple_form_control_example.ts region='Component'}\n     *\n     * * **npm package**: `@angular/forms`\n     *\n     * * **NgModule**: `ReactiveFormsModule`\n     *\n     *  @stable\n     */\n    var FormControlDirective = (function (_super) {\n        __extends$9(FormControlDirective, _super);\n        function FormControlDirective(validators, asyncValidators, valueAccessors) {\n            _super.call(this);\n            this.update = new EventEmitter();\n            this._rawValidators = validators || [];\n            this._rawAsyncValidators = asyncValidators || [];\n            this.valueAccessor = selectValueAccessor(this, valueAccessors);\n        }\n        Object.defineProperty(FormControlDirective.prototype, \"isDisabled\", {\n            set: function (isDisabled) { ReactiveErrors.disabledAttrWarning(); },\n            enumerable: true,\n            configurable: true\n        });\n        FormControlDirective.prototype.ngOnChanges = function (changes) {\n            if (this._isControlChanged(changes)) {\n                setUpControl(this.form, this);\n                if (this.control.disabled)\n                    this.valueAccessor.setDisabledState(true);\n                this.form.updateValueAndValidity({ emitEvent: false });\n            }\n            if (isPropertyUpdated(changes, this.viewModel)) {\n                this.form.setValue(this.model);\n                this.viewModel = this.model;\n            }\n        };\n        Object.defineProperty(FormControlDirective.prototype, \"path\", {\n            get: function () { return []; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormControlDirective.prototype, \"validator\", {\n            get: function () { return composeValidators(this._rawValidators); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormControlDirective.prototype, \"asyncValidator\", {\n            get: function () {\n                return composeAsyncValidators(this._rawAsyncValidators);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormControlDirective.prototype, \"control\", {\n            get: function () { return this.form; },\n            enumerable: true,\n            configurable: true\n        });\n        FormControlDirective.prototype.viewToModelUpdate = function (newValue) {\n            this.viewModel = newValue;\n            this.update.emit(newValue);\n        };\n        FormControlDirective.prototype._isControlChanged = function (changes) {\n            return StringMapWrapper.contains(changes, 'form');\n        };\n        FormControlDirective.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[formControl]', providers: [formControlBinding$1], exportAs: 'ngForm' },] },\n        ];\n        /** @nocollapse */\n        FormControlDirective.ctorParameters = [\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALUE_ACCESSOR,] },] },\n        ];\n        FormControlDirective.propDecorators = {\n            'form': [{ type: _angular_core.Input, args: ['formControl',] },],\n            'model': [{ type: _angular_core.Input, args: ['ngModel',] },],\n            'update': [{ type: _angular_core.Output, args: ['ngModelChange',] },],\n            'isDisabled': [{ type: _angular_core.Input, args: ['disabled',] },],\n        };\n        return FormControlDirective;\n    }(NgControl));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$11 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var formDirectiveProvider$1 = {\n        provide: ControlContainer,\n        useExisting: _angular_core.forwardRef(function () { return FormGroupDirective; })\n    };\n    /**\n     * @whatItDoes Binds an existing {@link FormGroup} to a DOM element.\n     *\n     * @howToUse\n     *\n     * This directive accepts an existing {@link FormGroup} instance. It will then use this\n     * {@link FormGroup} instance to match any child {@link FormControl}, {@link FormGroup},\n     * and {@link FormArray} instances to child {@link FormControlName}, {@link FormGroupName},\n     * and {@link FormArrayName} directives.\n     *\n     * **Set value**: You can set the form's initial value when instantiating the\n     * {@link FormGroup}, or you can set it programmatically later using the {@link FormGroup}'s\n     * {@link AbstractControl.setValue} or {@link AbstractControl.patchValue} methods.\n     *\n     * **Listen to value**: If you want to listen to changes in the value of the form, you can subscribe\n     * to the {@link FormGroup}'s {@link AbstractControl.valueChanges} event.  You can also listen to\n     * its {@link AbstractControl.statusChanges} event to be notified when the validation status is\n     * re-calculated.\n     *\n     * ### Example\n     *\n     * In this example, we create form controls for first name and last name.\n     *\n     * {@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n     *\n     * **npm package**: `@angular/forms`\n     *\n     * **NgModule**: {@link ReactiveFormsModule}\n     *\n     *  @stable\n     */\n    var FormGroupDirective = (function (_super) {\n        __extends$11(FormGroupDirective, _super);\n        function FormGroupDirective(_validators, _asyncValidators) {\n            _super.call(this);\n            this._validators = _validators;\n            this._asyncValidators = _asyncValidators;\n            this._submitted = false;\n            this.directives = [];\n            this.form = null;\n            this.ngSubmit = new EventEmitter();\n        }\n        FormGroupDirective.prototype.ngOnChanges = function (changes) {\n            this._checkFormPresent();\n            if (StringMapWrapper.contains(changes, 'form')) {\n                this._updateValidators();\n                this._updateDomValue();\n                this._updateRegistrations();\n            }\n        };\n        Object.defineProperty(FormGroupDirective.prototype, \"submitted\", {\n            get: function () { return this._submitted; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormGroupDirective.prototype, \"formDirective\", {\n            get: function () { return this; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormGroupDirective.prototype, \"control\", {\n            get: function () { return this.form; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormGroupDirective.prototype, \"path\", {\n            get: function () { return []; },\n            enumerable: true,\n            configurable: true\n        });\n        FormGroupDirective.prototype.addControl = function (dir) {\n            var ctrl = this.form.get(dir.path);\n            setUpControl(ctrl, dir);\n            ctrl.updateValueAndValidity({ emitEvent: false });\n            this.directives.push(dir);\n            return ctrl;\n        };\n        FormGroupDirective.prototype.getControl = function (dir) { return this.form.get(dir.path); };\n        FormGroupDirective.prototype.removeControl = function (dir) { ListWrapper.remove(this.directives, dir); };\n        FormGroupDirective.prototype.addFormGroup = function (dir) {\n            var ctrl = this.form.get(dir.path);\n            setUpFormContainer(ctrl, dir);\n            ctrl.updateValueAndValidity({ emitEvent: false });\n        };\n        FormGroupDirective.prototype.removeFormGroup = function (dir) { };\n        FormGroupDirective.prototype.getFormGroup = function (dir) { return this.form.get(dir.path); };\n        FormGroupDirective.prototype.addFormArray = function (dir) {\n            var ctrl = this.form.get(dir.path);\n            setUpFormContainer(ctrl, dir);\n            ctrl.updateValueAndValidity({ emitEvent: false });\n        };\n        FormGroupDirective.prototype.removeFormArray = function (dir) { };\n        FormGroupDirective.prototype.getFormArray = function (dir) { return this.form.get(dir.path); };\n        FormGroupDirective.prototype.updateModel = function (dir, value) {\n            var ctrl = this.form.get(dir.path);\n            ctrl.setValue(value);\n        };\n        FormGroupDirective.prototype.onSubmit = function () {\n            this._submitted = true;\n            this.ngSubmit.emit(null);\n            return false;\n        };\n        FormGroupDirective.prototype.onReset = function () { this.resetForm(); };\n        FormGroupDirective.prototype.resetForm = function (value) {\n            if (value === void 0) { value = undefined; }\n            this.form.reset(value);\n            this._submitted = false;\n        };\n        /** @internal */\n        FormGroupDirective.prototype._updateDomValue = function () {\n            var _this = this;\n            this.directives.forEach(function (dir) {\n                var newCtrl = _this.form.get(dir.path);\n                if (dir._control !== newCtrl) {\n                    cleanUpControl(dir._control, dir);\n                    if (newCtrl)\n                        setUpControl(newCtrl, dir);\n                    dir._control = newCtrl;\n                }\n            });\n            this.form._updateTreeValidity({ emitEvent: false });\n        };\n        FormGroupDirective.prototype._updateRegistrations = function () {\n            var _this = this;\n            this.form._registerOnCollectionChange(function () { return _this._updateDomValue(); });\n            if (this._oldForm)\n                this._oldForm._registerOnCollectionChange(function () { });\n            this._oldForm = this.form;\n        };\n        FormGroupDirective.prototype._updateValidators = function () {\n            var sync = composeValidators(this._validators);\n            this.form.validator = Validators.compose([this.form.validator, sync]);\n            var async = composeAsyncValidators(this._asyncValidators);\n            this.form.asyncValidator = Validators.composeAsync([this.form.asyncValidator, async]);\n        };\n        FormGroupDirective.prototype._checkFormPresent = function () {\n            if (isBlank(this.form)) {\n                ReactiveErrors.missingFormException();\n            }\n        };\n        FormGroupDirective.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: '[formGroup]',\n                        providers: [formDirectiveProvider$1],\n                        host: { '(submit)': 'onSubmit()', '(reset)': 'onReset()' },\n                        exportAs: 'ngForm'\n                    },] },\n        ];\n        /** @nocollapse */\n        FormGroupDirective.ctorParameters = [\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n        ];\n        FormGroupDirective.propDecorators = {\n            'form': [{ type: _angular_core.Input, args: ['formGroup',] },],\n            'ngSubmit': [{ type: _angular_core.Output },],\n        };\n        return FormGroupDirective;\n    }(ControlContainer));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$12 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var formGroupNameProvider = {\n        provide: ControlContainer,\n        useExisting: _angular_core.forwardRef(function () { return FormGroupName; })\n    };\n    /**\n     * @whatItDoes Syncs a nested {@link FormGroup} to a DOM element.\n     *\n     * @howToUse\n     *\n     * This directive can only be used with a parent {@link FormGroupDirective} (selector:\n     * `[formGroup]`).\n     *\n     * It accepts the string name of the nested {@link FormGroup} you want to link, and\n     * will look for a {@link FormGroup} registered with that name in the parent\n     * {@link FormGroup} instance you passed into {@link FormGroupDirective}.\n     *\n     * Nested form groups can come in handy when you want to validate a sub-group of a\n     * form separately from the rest or when you'd like to group the values of certain\n     * controls into their own nested object.\n     *\n     * **Access the group**: You can access the associated {@link FormGroup} using the\n     * {@link AbstractControl.get} method. Ex: `this.form.get('name')`.\n     *\n     * You can also access individual controls within the group using dot syntax.\n     * Ex: `this.form.get('name.first')`\n     *\n     * **Get the value**: the `value` property is always synced and available on the\n     * {@link FormGroup}. See a full list of available properties in {@link AbstractControl}.\n     *\n     * **Set the value**: You can set an initial value for each child control when instantiating\n     * the {@link FormGroup}, or you can set it programmatically later using\n     * {@link AbstractControl.setValue} or {@link AbstractControl.patchValue}.\n     *\n     * **Listen to value**: If you want to listen to changes in the value of the group, you can\n     * subscribe to the {@link AbstractControl.valueChanges} event.  You can also listen to\n     * {@link AbstractControl.statusChanges} to be notified when the validation status is\n     * re-calculated.\n     *\n     * ### Example\n     *\n     * {@example forms/ts/nestedFormGroup/nested_form_group_example.ts region='Component'}\n     *\n     * * **npm package**: `@angular/forms`\n     *\n     * * **NgModule**: `ReactiveFormsModule`\n     *\n     * @stable\n     */\n    var FormGroupName = (function (_super) {\n        __extends$12(FormGroupName, _super);\n        function FormGroupName(parent, validators, asyncValidators) {\n            _super.call(this);\n            this._parent = parent;\n            this._validators = validators;\n            this._asyncValidators = asyncValidators;\n        }\n        /** @internal */\n        FormGroupName.prototype._checkParentType = function () {\n            if (_hasInvalidParent(this._parent)) {\n                ReactiveErrors.groupParentException();\n            }\n        };\n        FormGroupName.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[formGroupName]', providers: [formGroupNameProvider] },] },\n        ];\n        /** @nocollapse */\n        FormGroupName.ctorParameters = [\n            { type: ControlContainer, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Host }, { type: _angular_core.SkipSelf },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n        ];\n        FormGroupName.propDecorators = {\n            'name': [{ type: _angular_core.Input, args: ['formGroupName',] },],\n        };\n        return FormGroupName;\n    }(AbstractFormGroupDirective));\n    var formArrayNameProvider = {\n        provide: ControlContainer,\n        useExisting: _angular_core.forwardRef(function () { return FormArrayName; })\n    };\n    /**\n     * @whatItDoes Syncs a nested {@link FormArray} to a DOM element.\n     *\n     * @howToUse\n     *\n     * This directive is designed to be used with a parent {@link FormGroupDirective} (selector:\n     * `[formGroup]`).\n     *\n     * It accepts the string name of the nested {@link FormArray} you want to link, and\n     * will look for a {@link FormArray} registered with that name in the parent\n     * {@link FormGroup} instance you passed into {@link FormGroupDirective}.\n     *\n     * Nested form arrays can come in handy when you have a group of form controls but\n     * you're not sure how many there will be. Form arrays allow you to create new\n     * form controls dynamically.\n     *\n     * **Access the array**: You can access the associated {@link FormArray} using the\n     * {@link AbstractControl.get} method on the parent {@link FormGroup}.\n     * Ex: `this.form.get('cities')`.\n     *\n     * **Get the value**: the `value` property is always synced and available on the\n     * {@link FormArray}. See a full list of available properties in {@link AbstractControl}.\n     *\n     * **Set the value**: You can set an initial value for each child control when instantiating\n     * the {@link FormArray}, or you can set the value programmatically later using the\n     * {@link FormArray}'s {@link AbstractControl.setValue} or {@link AbstractControl.patchValue}\n     * methods.\n     *\n     * **Listen to value**: If you want to listen to changes in the value of the array, you can\n     * subscribe to the {@link FormArray}'s {@link AbstractControl.valueChanges} event.  You can also\n     * listen to its {@link AbstractControl.statusChanges} event to be notified when the validation\n     * status is re-calculated.\n     *\n     * **Add new controls**: You can add new controls to the {@link FormArray} dynamically by\n     * calling its {@link FormArray.push} method.\n     *  Ex: `this.form.get('cities').push(new FormControl());`\n     *\n     * ### Example\n     *\n     * {@example forms/ts/nestedFormArray/nested_form_array_example.ts region='Component'}\n     *\n     * * **npm package**: `@angular/forms`\n     *\n     * * **NgModule**: `ReactiveFormsModule`\n     *\n     * @stable\n     */\n    var FormArrayName = (function (_super) {\n        __extends$12(FormArrayName, _super);\n        function FormArrayName(parent, validators, asyncValidators) {\n            _super.call(this);\n            this._parent = parent;\n            this._validators = validators;\n            this._asyncValidators = asyncValidators;\n        }\n        FormArrayName.prototype.ngOnInit = function () {\n            this._checkParentType();\n            this.formDirective.addFormArray(this);\n        };\n        FormArrayName.prototype.ngOnDestroy = function () {\n            if (this.formDirective) {\n                this.formDirective.removeFormArray(this);\n            }\n        };\n        Object.defineProperty(FormArrayName.prototype, \"control\", {\n            get: function () { return this.formDirective.getFormArray(this); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormArrayName.prototype, \"formDirective\", {\n            get: function () {\n                return this._parent ? this._parent.formDirective : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormArrayName.prototype, \"path\", {\n            get: function () { return controlPath(this.name, this._parent); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormArrayName.prototype, \"validator\", {\n            get: function () { return composeValidators(this._validators); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormArrayName.prototype, \"asyncValidator\", {\n            get: function () { return composeAsyncValidators(this._asyncValidators); },\n            enumerable: true,\n            configurable: true\n        });\n        FormArrayName.prototype._checkParentType = function () {\n            if (_hasInvalidParent(this._parent)) {\n                ReactiveErrors.arrayParentException();\n            }\n        };\n        FormArrayName.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[formArrayName]', providers: [formArrayNameProvider] },] },\n        ];\n        /** @nocollapse */\n        FormArrayName.ctorParameters = [\n            { type: ControlContainer, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Host }, { type: _angular_core.SkipSelf },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n        ];\n        FormArrayName.propDecorators = {\n            'name': [{ type: _angular_core.Input, args: ['formArrayName',] },],\n        };\n        return FormArrayName;\n    }(ControlContainer));\n    function _hasInvalidParent(parent) {\n        return !(parent instanceof FormGroupName) && !(parent instanceof FormGroupDirective) &&\n            !(parent instanceof FormArrayName);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$10 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var controlNameBinding = {\n        provide: NgControl,\n        useExisting: _angular_core.forwardRef(function () { return FormControlName; })\n    };\n    /**\n     * @whatItDoes  Syncs a {@link FormControl} in an existing {@link FormGroup} to a form control\n     * element by name.\n     *\n     * In other words, this directive ensures that any values written to the {@link FormControl}\n     * instance programmatically will be written to the DOM element (model -> view). Conversely,\n     * any values written to the DOM element through user input will be reflected in the\n     * {@link FormControl} instance (view -> model).\n     *\n     * @howToUse\n     *\n     * This directive is designed to be used with a parent {@link FormGroupDirective} (selector:\n     * `[formGroup]`).\n     *\n     * It accepts the string name of the {@link FormControl} instance you want to\n     * link, and will look for a {@link FormControl} registered with that name in the\n     * closest {@link FormGroup} or {@link FormArray} above it.\n     *\n     * **Access the control**: You can access the {@link FormControl} associated with\n     * this directive by using the {@link AbstractControl.get} method.\n     * Ex: `this.form.get('first');`\n     *\n     * **Get value**: the `value` property is always synced and available on the {@link FormControl}.\n     * See a full list of available properties in {@link AbstractControl}.\n     *\n     *  **Set value**: You can set an initial value for the control when instantiating the\n     *  {@link FormControl}, or you can set it programmatically later using\n     *  {@link AbstractControl.setValue} or {@link AbstractControl.patchValue}.\n     *\n     * **Listen to value**: If you want to listen to changes in the value of the control, you can\n     * subscribe to the {@link AbstractControl.valueChanges} event.  You can also listen to\n     * {@link AbstractControl.statusChanges} to be notified when the validation status is\n     * re-calculated.\n     *\n     * ### Example\n     *\n     * In this example, we create form controls for first name and last name.\n     *\n     * {@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n     *\n     *  * **npm package**: `@angular/forms`\n     *\n     *  * **NgModule**: {@link ReactiveFormsModule}\n     *\n     *  @stable\n     */\n    var FormControlName = (function (_super) {\n        __extends$10(FormControlName, _super);\n        function FormControlName(parent, validators, asyncValidators, valueAccessors) {\n            _super.call(this);\n            this._added = false;\n            this.update = new EventEmitter();\n            this._parent = parent;\n            this._rawValidators = validators || [];\n            this._rawAsyncValidators = asyncValidators || [];\n            this.valueAccessor = selectValueAccessor(this, valueAccessors);\n        }\n        Object.defineProperty(FormControlName.prototype, \"isDisabled\", {\n            set: function (isDisabled) { ReactiveErrors.disabledAttrWarning(); },\n            enumerable: true,\n            configurable: true\n        });\n        FormControlName.prototype.ngOnChanges = function (changes) {\n            if (!this._added)\n                this._setUpControl();\n            if (isPropertyUpdated(changes, this.viewModel)) {\n                this.viewModel = this.model;\n                this.formDirective.updateModel(this, this.model);\n            }\n        };\n        FormControlName.prototype.ngOnDestroy = function () {\n            if (this.formDirective) {\n                this.formDirective.removeControl(this);\n            }\n        };\n        FormControlName.prototype.viewToModelUpdate = function (newValue) {\n            this.viewModel = newValue;\n            this.update.emit(newValue);\n        };\n        Object.defineProperty(FormControlName.prototype, \"path\", {\n            get: function () { return controlPath(this.name, this._parent); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormControlName.prototype, \"formDirective\", {\n            get: function () { return this._parent ? this._parent.formDirective : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormControlName.prototype, \"validator\", {\n            get: function () { return composeValidators(this._rawValidators); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormControlName.prototype, \"asyncValidator\", {\n            get: function () {\n                return composeAsyncValidators(this._rawAsyncValidators);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormControlName.prototype, \"control\", {\n            get: function () { return this._control; },\n            enumerable: true,\n            configurable: true\n        });\n        FormControlName.prototype._checkParentType = function () {\n            if (!(this._parent instanceof FormGroupName) &&\n                this._parent instanceof AbstractFormGroupDirective) {\n                ReactiveErrors.ngModelGroupException();\n            }\n            else if (!(this._parent instanceof FormGroupName) && !(this._parent instanceof FormGroupDirective) &&\n                !(this._parent instanceof FormArrayName)) {\n                ReactiveErrors.controlParentException();\n            }\n        };\n        FormControlName.prototype._setUpControl = function () {\n            this._checkParentType();\n            this._control = this.formDirective.addControl(this);\n            if (this.control.disabled)\n                this.valueAccessor.setDisabledState(true);\n            this._added = true;\n        };\n        FormControlName.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[formControlName]', providers: [controlNameBinding] },] },\n        ];\n        /** @nocollapse */\n        FormControlName.ctorParameters = [\n            { type: ControlContainer, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Host }, { type: _angular_core.SkipSelf },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALUE_ACCESSOR,] },] },\n        ];\n        FormControlName.propDecorators = {\n            'name': [{ type: _angular_core.Input, args: ['formControlName',] },],\n            'model': [{ type: _angular_core.Input, args: ['ngModel',] },],\n            'update': [{ type: _angular_core.Output, args: ['ngModelChange',] },],\n            'isDisabled': [{ type: _angular_core.Input, args: ['disabled',] },],\n        };\n        return FormControlName;\n    }(NgControl));\n\n    var REQUIRED_VALIDATOR = {\n        provide: NG_VALIDATORS,\n        useExisting: _angular_core.forwardRef(function () { return RequiredValidator; }),\n        multi: true\n    };\n    /**\n     * A Directive that adds the `required` validator to any controls marked with the\n     * `required` attribute, via the {@link NG_VALIDATORS} binding.\n     *\n     * ### Example\n     *\n     * ```\n     * <input name=\"fullName\" ngModel required>\n     * ```\n     *\n     * @stable\n     */\n    var RequiredValidator = (function () {\n        function RequiredValidator() {\n        }\n        Object.defineProperty(RequiredValidator.prototype, \"required\", {\n            get: function () { return this._required; },\n            set: function (value) {\n                this._required = isPresent(value) && \"\" + value !== 'false';\n                if (this._onChange)\n                    this._onChange();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        RequiredValidator.prototype.validate = function (c) {\n            return this.required ? Validators.required(c) : null;\n        };\n        RequiredValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n        RequiredValidator.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: '[required][formControlName],[required][formControl],[required][ngModel]',\n                        providers: [REQUIRED_VALIDATOR],\n                        host: { '[attr.required]': 'required? \"\" : null' }\n                    },] },\n        ];\n        /** @nocollapse */\n        RequiredValidator.ctorParameters = [];\n        RequiredValidator.propDecorators = {\n            'required': [{ type: _angular_core.Input },],\n        };\n        return RequiredValidator;\n    }());\n    /**\n     * Provider which adds {@link MinLengthValidator} to {@link NG_VALIDATORS}.\n     *\n     * ## Example:\n     *\n     * {@example common/forms/ts/validators/validators.ts region='min'}\n     */\n    var MIN_LENGTH_VALIDATOR = {\n        provide: NG_VALIDATORS,\n        useExisting: _angular_core.forwardRef(function () { return MinLengthValidator; }),\n        multi: true\n    };\n    /**\n     * A directive which installs the {@link MinLengthValidator} for any `formControlName`,\n     * `formControl`, or control with `ngModel` that also has a `minlength` attribute.\n     *\n     * @stable\n     */\n    var MinLengthValidator = (function () {\n        function MinLengthValidator() {\n        }\n        MinLengthValidator.prototype._createValidator = function () {\n            this._validator = Validators.minLength(parseInt(this.minlength, 10));\n        };\n        MinLengthValidator.prototype.ngOnChanges = function (changes) {\n            if (changes['minlength']) {\n                this._createValidator();\n                if (this._onChange)\n                    this._onChange();\n            }\n        };\n        MinLengthValidator.prototype.validate = function (c) {\n            return isPresent(this.minlength) ? this._validator(c) : null;\n        };\n        MinLengthValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n        MinLengthValidator.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: '[minlength][formControlName],[minlength][formControl],[minlength][ngModel]',\n                        providers: [MIN_LENGTH_VALIDATOR],\n                        host: { '[attr.minlength]': 'minlength? minlength : null' }\n                    },] },\n        ];\n        /** @nocollapse */\n        MinLengthValidator.ctorParameters = [];\n        MinLengthValidator.propDecorators = {\n            'minlength': [{ type: _angular_core.Input },],\n        };\n        return MinLengthValidator;\n    }());\n    /**\n     * Provider which adds {@link MaxLengthValidator} to {@link NG_VALIDATORS}.\n     *\n     * ## Example:\n     *\n     * {@example common/forms/ts/validators/validators.ts region='max'}\n     */\n    var MAX_LENGTH_VALIDATOR = {\n        provide: NG_VALIDATORS,\n        useExisting: _angular_core.forwardRef(function () { return MaxLengthValidator; }),\n        multi: true\n    };\n    /**\n     * A directive which installs the {@link MaxLengthValidator} for any `formControlName,\n     * `formControl`,\n     * or control with `ngModel` that also has a `maxlength` attribute.\n     *\n     * @stable\n     */\n    var MaxLengthValidator = (function () {\n        function MaxLengthValidator() {\n        }\n        MaxLengthValidator.prototype._createValidator = function () {\n            this._validator = Validators.maxLength(parseInt(this.maxlength, 10));\n        };\n        MaxLengthValidator.prototype.ngOnChanges = function (changes) {\n            if (changes['maxlength']) {\n                this._createValidator();\n                if (this._onChange)\n                    this._onChange();\n            }\n        };\n        MaxLengthValidator.prototype.validate = function (c) {\n            return isPresent(this.maxlength) ? this._validator(c) : null;\n        };\n        MaxLengthValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n        MaxLengthValidator.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: '[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]',\n                        providers: [MAX_LENGTH_VALIDATOR],\n                        host: { '[attr.maxlength]': 'maxlength? maxlength : null' }\n                    },] },\n        ];\n        /** @nocollapse */\n        MaxLengthValidator.ctorParameters = [];\n        MaxLengthValidator.propDecorators = {\n            'maxlength': [{ type: _angular_core.Input },],\n        };\n        return MaxLengthValidator;\n    }());\n    var PATTERN_VALIDATOR = {\n        provide: NG_VALIDATORS,\n        useExisting: _angular_core.forwardRef(function () { return PatternValidator; }),\n        multi: true\n    };\n    /**\n     * A Directive that adds the `pattern` validator to any controls marked with the\n     * `pattern` attribute, via the {@link NG_VALIDATORS} binding. Uses attribute value\n     * as the regex to validate Control value against.  Follows pattern attribute\n     * semantics; i.e. regex must match entire Control value.\n     *\n     * ### Example\n     *\n     * ```\n     * <input [name]=\"fullName\" pattern=\"[a-zA-Z ]*\" ngModel>\n     * ```\n     * @stable\n     */\n    var PatternValidator = (function () {\n        function PatternValidator() {\n        }\n        PatternValidator.prototype._createValidator = function () { this._validator = Validators.pattern(this.pattern); };\n        PatternValidator.prototype.ngOnChanges = function (changes) {\n            if (changes['pattern']) {\n                this._createValidator();\n                if (this._onChange)\n                    this._onChange();\n            }\n        };\n        PatternValidator.prototype.validate = function (c) {\n            return isPresent(this.pattern) ? this._validator(c) : null;\n        };\n        PatternValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n        PatternValidator.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: '[pattern][formControlName],[pattern][formControl],[pattern][ngModel]',\n                        providers: [PATTERN_VALIDATOR],\n                        host: { '[attr.pattern]': 'pattern? pattern : null' }\n                    },] },\n        ];\n        /** @nocollapse */\n        PatternValidator.ctorParameters = [];\n        PatternValidator.propDecorators = {\n            'pattern': [{ type: _angular_core.Input },],\n        };\n        return PatternValidator;\n    }());\n\n    /**\n     * @whatItDoes Creates an {@link AbstractControl} from a user-specified configuration.\n     *\n     * It is essentially syntactic sugar that shortens the `new FormGroup()`,\n     * `new FormControl()`, and `new FormArray()` boilerplate that can build up in larger\n     * forms.\n     *\n     * @howToUse\n     *\n     * To use, inject `FormBuilder` into your component class. You can then call its methods\n     * directly.\n     *\n     * {@example forms/ts/formBuilder/form_builder_example.ts region='Component'}\n     *\n     *  * **npm package**: `@angular/forms`\n     *\n     *  * **NgModule**: {@link ReactiveFormsModule}\n     *\n     * @stable\n     */\n    var FormBuilder = (function () {\n        function FormBuilder() {\n        }\n        /**\n         * Construct a new {@link FormGroup} with the given map of configuration.\n         * Valid keys for the `extra` parameter map are `validator` and `asyncValidator`.\n         *\n         * See the {@link FormGroup} constructor for more details.\n         */\n        FormBuilder.prototype.group = function (controlsConfig, extra) {\n            if (extra === void 0) { extra = null; }\n            var controls = this._reduceControls(controlsConfig);\n            var validator = isPresent(extra) ? StringMapWrapper.get(extra, 'validator') : null;\n            var asyncValidator = isPresent(extra) ? StringMapWrapper.get(extra, 'asyncValidator') : null;\n            return new FormGroup(controls, validator, asyncValidator);\n        };\n        /**\n         * Construct a new {@link FormControl} with the given `formState`,`validator`, and\n         * `asyncValidator`.\n         *\n         * `formState` can either be a standalone value for the form control or an object\n         * that contains both a value and a disabled status.\n         *\n         */\n        FormBuilder.prototype.control = function (formState, validator, asyncValidator) {\n            if (validator === void 0) { validator = null; }\n            if (asyncValidator === void 0) { asyncValidator = null; }\n            return new FormControl(formState, validator, asyncValidator);\n        };\n        /**\n         * Construct a {@link FormArray} from the given `controlsConfig` array of\n         * configuration, with the given optional `validator` and `asyncValidator`.\n         */\n        FormBuilder.prototype.array = function (controlsConfig, validator, asyncValidator) {\n            var _this = this;\n            if (validator === void 0) { validator = null; }\n            if (asyncValidator === void 0) { asyncValidator = null; }\n            var controls = controlsConfig.map(function (c) { return _this._createControl(c); });\n            return new FormArray(controls, validator, asyncValidator);\n        };\n        /** @internal */\n        FormBuilder.prototype._reduceControls = function (controlsConfig) {\n            var _this = this;\n            var controls = {};\n            StringMapWrapper.forEach(controlsConfig, function (controlConfig, controlName) {\n                controls[controlName] = _this._createControl(controlConfig);\n            });\n            return controls;\n        };\n        /** @internal */\n        FormBuilder.prototype._createControl = function (controlConfig) {\n            if (controlConfig instanceof FormControl || controlConfig instanceof FormGroup ||\n                controlConfig instanceof FormArray) {\n                return controlConfig;\n            }\n            else if (isArray(controlConfig)) {\n                var value = controlConfig[0];\n                var validator = controlConfig.length > 1 ? controlConfig[1] : null;\n                var asyncValidator = controlConfig.length > 2 ? controlConfig[2] : null;\n                return this.control(value, validator, asyncValidator);\n            }\n            else {\n                return this.control(controlConfig);\n            }\n        };\n        FormBuilder.decorators = [\n            { type: _angular_core.Injectable },\n        ];\n        /** @nocollapse */\n        FormBuilder.ctorParameters = [];\n        return FormBuilder;\n    }());\n\n    var SHARED_FORM_DIRECTIVES = [\n        NgSelectOption, NgSelectMultipleOption, DefaultValueAccessor, NumberValueAccessor,\n        CheckboxControlValueAccessor, SelectControlValueAccessor, SelectMultipleControlValueAccessor,\n        RadioControlValueAccessor, NgControlStatus, NgControlStatusGroup, RequiredValidator,\n        MinLengthValidator, MaxLengthValidator, PatternValidator\n    ];\n    var TEMPLATE_DRIVEN_DIRECTIVES = [NgModel, NgModelGroup, NgForm];\n    var REACTIVE_DRIVEN_DIRECTIVES = [FormControlDirective, FormGroupDirective, FormControlName, FormGroupName, FormArrayName];\n    /**\n     * Internal module used for sharing directives between FormsModule and ReactiveFormsModule\n     */\n    var InternalFormsSharedModule = (function () {\n        function InternalFormsSharedModule() {\n        }\n        InternalFormsSharedModule.decorators = [\n            { type: _angular_core.NgModule, args: [{ declarations: SHARED_FORM_DIRECTIVES, exports: SHARED_FORM_DIRECTIVES },] },\n        ];\n        /** @nocollapse */\n        InternalFormsSharedModule.ctorParameters = [];\n        return InternalFormsSharedModule;\n    }());\n\n    /**\n     * The ng module for forms.\n     * @stable\n     */\n    var FormsModule = (function () {\n        function FormsModule() {\n        }\n        FormsModule.decorators = [\n            { type: _angular_core.NgModule, args: [{\n                        declarations: TEMPLATE_DRIVEN_DIRECTIVES,\n                        providers: [RadioControlRegistry],\n                        exports: [InternalFormsSharedModule, TEMPLATE_DRIVEN_DIRECTIVES]\n                    },] },\n        ];\n        /** @nocollapse */\n        FormsModule.ctorParameters = [];\n        return FormsModule;\n    }());\n    /**\n     * The ng module for reactive forms.\n     * @stable\n     */\n    var ReactiveFormsModule = (function () {\n        function ReactiveFormsModule() {\n        }\n        ReactiveFormsModule.decorators = [\n            { type: _angular_core.NgModule, args: [{\n                        declarations: [REACTIVE_DRIVEN_DIRECTIVES],\n                        providers: [FormBuilder, RadioControlRegistry],\n                        exports: [InternalFormsSharedModule, REACTIVE_DRIVEN_DIRECTIVES]\n                    },] },\n        ];\n        /** @nocollapse */\n        ReactiveFormsModule.ctorParameters = [];\n        return ReactiveFormsModule;\n    }());\n\n    exports.AbstractControlDirective = AbstractControlDirective;\n    exports.AbstractFormGroupDirective = AbstractFormGroupDirective;\n    exports.CheckboxControlValueAccessor = CheckboxControlValueAccessor;\n    exports.ControlContainer = ControlContainer;\n    exports.NG_VALUE_ACCESSOR = NG_VALUE_ACCESSOR;\n    exports.DefaultValueAccessor = DefaultValueAccessor;\n    exports.NgControl = NgControl;\n    exports.NgControlStatus = NgControlStatus;\n    exports.NgControlStatusGroup = NgControlStatusGroup;\n    exports.NgForm = NgForm;\n    exports.NgModel = NgModel;\n    exports.NgModelGroup = NgModelGroup;\n    exports.FormControlDirective = FormControlDirective;\n    exports.FormControlName = FormControlName;\n    exports.FormGroupDirective = FormGroupDirective;\n    exports.FormArrayName = FormArrayName;\n    exports.FormGroupName = FormGroupName;\n    exports.NgSelectOption = NgSelectOption;\n    exports.SelectControlValueAccessor = SelectControlValueAccessor;\n    exports.SelectMultipleControlValueAccessor = SelectMultipleControlValueAccessor;\n    exports.MaxLengthValidator = MaxLengthValidator;\n    exports.MinLengthValidator = MinLengthValidator;\n    exports.PatternValidator = PatternValidator;\n    exports.RequiredValidator = RequiredValidator;\n    exports.FormBuilder = FormBuilder;\n    exports.AbstractControl = AbstractControl;\n    exports.FormArray = FormArray;\n    exports.FormControl = FormControl;\n    exports.FormGroup = FormGroup;\n    exports.NG_ASYNC_VALIDATORS = NG_ASYNC_VALIDATORS;\n    exports.NG_VALIDATORS = NG_VALIDATORS;\n    exports.Validators = Validators;\n    exports.FormsModule = FormsModule;\n    exports.ReactiveFormsModule = ReactiveFormsModule;\n\n}));\n\n/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ },

/***/ 29:
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = __webpack_require__(1);\nvar common_1 = __webpack_require__(22);\nvar router_1 = __webpack_require__(30);\nvar ng2_ui_1 = __webpack_require__(58);\nvar AppComponent = (function () {\n    function AppComponent(router, location) {\n        var _this = this;\n        this.router = router;\n        this.location = location;\n        ng2_ui_1.Ng2MapComponent['apiUrl'] = \"https://maps.google.com/maps/api/js?key=AIzaSyCbMGRUwcqKjlYX4h4-P6t-xcDryRYLmCM\";\n        router.events.subscribe(function (event) {\n            _this.sendToGoogleAnalytics(event);\n        });\n    }\n    AppComponent.prototype.sendToGoogleAnalytics = function (event) {\n        if (event instanceof router_1.NavigationEnd) {\n            // When the route is '/', location.path actually returns ''.\n            var newRoute = this.location.path() || '/';\n            if (this.currentRoute != newRoute) {\n                //console.log('>>>>>>>>>>>>>>>>>>>> sending google analytics', 'send', 'pageview', newRoute);\n                window['ga']('send', 'pageview', newRoute);\n                this.currentRoute = newRoute;\n            }\n        }\n    };\n    AppComponent = __decorate([\n        core_1.Component({\n            selector: 'my-app',\n            template: __webpack_require__(357)\n        }), \n        __metadata('design:paramtypes', [router_1.Router, common_1.Location])\n    ], AppComponent);\n    return AppComponent;\n}());\nexports.AppComponent = AppComponent;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvYXBwLmNvbXBvbmVudC50cz8yMmJlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQSxpQ0FBMEIsQ0FBZSxDQUFDO0FBQzFDLG1DQUF5QixFQUFpQixDQUFDO0FBQzNDLG1DQUF1QyxFQUFpQixDQUFDO0FBQ3pELG1DQUFnQyxFQUFRLENBQUM7QUFNekM7SUFHRSxzQkFDVSxNQUFjLEVBQ2QsUUFBa0I7UUFMOUIsaUJBd0JDO1FBcEJXLFdBQU0sR0FBTixNQUFNLENBQVE7UUFDZCxhQUFRLEdBQVIsUUFBUSxDQUFVO1FBRTFCLHdCQUFlLENBQUMsUUFBUSxDQUFDLEdBQUcsaUZBQWlGLENBQUM7UUFDOUcsTUFBTSxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUUsZUFBSztZQUM1QixLQUFJLENBQUMscUJBQXFCLENBQUMsS0FBSyxDQUFDO1FBQ25DLENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVELDRDQUFxQixHQUFyQixVQUFzQixLQUFVO1FBQzlCLEVBQUUsQ0FBQyxDQUFDLEtBQUssWUFBWSxzQkFBYSxDQUFDLENBQUMsQ0FBQztZQUNuQyw0REFBNEQ7WUFDNUQsSUFBSSxRQUFRLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLEVBQUUsSUFBSSxHQUFHLENBQUM7WUFDM0MsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFlBQVksSUFBSSxRQUFRLENBQUMsQ0FBQyxDQUFDO2dCQUNsQyw2RkFBNkY7Z0JBQzdGLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxNQUFNLEVBQUUsVUFBVSxFQUFFLFFBQVEsQ0FBQyxDQUFDO2dCQUMzQyxJQUFJLENBQUMsWUFBWSxHQUFHLFFBQVEsQ0FBQztZQUMvQixDQUFDO1FBQ0gsQ0FBQztJQUNILENBQUM7SUEzQkg7UUFBQyxnQkFBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLFFBQVE7WUFDbEIsUUFBUSxFQUFFLG1CQUFPLENBQUMsR0FBWSxDQUFDO1NBQ2hDLENBQUM7O29CQUFBO0lBeUJGLG1CQUFDO0FBQUQsQ0FBQztBQXhCWSxvQkFBWSxlQXdCeEIiLCJmaWxlIjoiMjkuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IExvY2F0aW9uIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IFJvdXRlciwgTmF2aWdhdGlvbkVuZCB9ICBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xuaW1wb3J0IHsgTmcyTWFwQ29tcG9uZW50IH0gZnJvbSBcIm5nMi11aVwiO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdteS1hcHAnLFxuICB0ZW1wbGF0ZTogcmVxdWlyZSgnLi9hcHAuaHRtbCcpXG59KVxuZXhwb3J0IGNsYXNzIEFwcENvbXBvbmVudCB7XG4gIHByaXZhdGUgY3VycmVudFJvdXRlOnN0cmluZztcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIHJvdXRlcjogUm91dGVyLFxuICAgIHByaXZhdGUgbG9jYXRpb246IExvY2F0aW9uXG4gICkge1xuICAgIE5nMk1hcENvbXBvbmVudFsnYXBpVXJsJ10gPSBcImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvYXBpL2pzP2tleT1BSXphU3lDYk1HUlV3Y3FLamxZWDRoNC1QNnQteGNEcnlSWUxtQ01cIjtcbiAgICByb3V0ZXIuZXZlbnRzLnN1YnNjcmliZSggZXZlbnQgPT4ge1xuICAgICAgdGhpcy5zZW5kVG9Hb29nbGVBbmFseXRpY3MoZXZlbnQpXG4gICAgfSk7XG4gIH1cblxuICBzZW5kVG9Hb29nbGVBbmFseXRpY3MoZXZlbnQ6IGFueSk6IGFueSB7XG4gICAgaWYgKGV2ZW50IGluc3RhbmNlb2YgTmF2aWdhdGlvbkVuZCkge1xuICAgICAgLy8gV2hlbiB0aGUgcm91dGUgaXMgJy8nLCBsb2NhdGlvbi5wYXRoIGFjdHVhbGx5IHJldHVybnMgJycuXG4gICAgICBsZXQgbmV3Um91dGUgPSB0aGlzLmxvY2F0aW9uLnBhdGgoKSB8fCAnLyc7XG4gICAgICBpZiAodGhpcy5jdXJyZW50Um91dGUgIT0gbmV3Um91dGUpIHtcbiAgICAgICAgLy9jb25zb2xlLmxvZygnPj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4gc2VuZGluZyBnb29nbGUgYW5hbHl0aWNzJywgJ3NlbmQnLCAncGFnZXZpZXcnLCBuZXdSb3V0ZSk7XG4gICAgICAgIHdpbmRvd1snZ2EnXSgnc2VuZCcsICdwYWdldmlldycsIG5ld1JvdXRlKTtcbiAgICAgICAgdGhpcy5jdXJyZW50Um91dGUgPSBuZXdSb3V0ZTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vfi9hbmd1bGFyMi10ZW1wbGF0ZS1sb2FkZXIhLi9hcHAvYXBwLmNvbXBvbmVudC50c1xuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=");

/***/ },

/***/ 58:
/***/ function(module, exports, __webpack_require__) {

	eval("(function webpackUniversalModuleDefinition(root, factory) {\n\tif(true)\n\t\tmodule.exports = factory(__webpack_require__(1), __webpack_require__(24), __webpack_require__(21), __webpack_require__(22), __webpack_require__(28), __webpack_require__(59), __webpack_require__(2));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"@angular/core\", \"@angular/forms\", \"@angular/platform-browser\", \"@angular/common\", \"@angular/http\", \"rxjs/Rx\", \"rxjs/Subject\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ng2-ui\"] = factory(require(\"@angular/core\"), require(\"@angular/forms\"), require(\"@angular/platform-browser\"), require(\"@angular/common\"), require(\"@angular/http\"), require(\"rxjs/Rx\"), require(\"rxjs/Subject\"));\n\telse\n\t\troot[\"ng2-ui\"] = factory(root[\"@angular/core\"], root[\"@angular/forms\"], root[\"@angular/platform-browser\"], root[\"@angular/common\"], root[\"@angular/http\"], root[\"rxjs/Rx\"], root[\"rxjs/Subject\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_6__, __WEBPACK_EXTERNAL_MODULE_7__, __WEBPACK_EXTERNAL_MODULE_8__, __WEBPACK_EXTERNAL_MODULE_9__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(1);\n\tvar forms_1 = __webpack_require__(2);\n\tvar platform_browser_1 = __webpack_require__(3);\n\tvar ng2_overlay_1 = __webpack_require__(4);\n\texports.OverlayManager = ng2_overlay_1.OverlayManager;\n\tvar ng2_auto_complete_1 = __webpack_require__(5);\n\tvar ng2_datetime_picker_1 = __webpack_require__(10);\n\tvar ng2_collapsable_1 = __webpack_require__(11);\n\tvar ng2_infinite_list_1 = __webpack_require__(12);\n\tvar ng2_map_1 = __webpack_require__(13);\n\texports.Ng2MapComponent = ng2_map_1.Ng2MapComponent;\n\tvar ng2_menu_1 = __webpack_require__(14);\n\tvar ng2_parallax_scroll_1 = __webpack_require__(15);\n\tvar ng2_popup_1 = __webpack_require__(16);\n\texports.Ng2MessagePopupComponent = ng2_popup_1.Ng2MessagePopupComponent;\n\texports.Ng2PopupComponent = ng2_popup_1.Ng2PopupComponent;\n\tvar ng2_sticky_1 = __webpack_require__(17);\n\tvar ng2_tab_1 = __webpack_require__(18);\n\tvar ng2_tooltip_overlay_1 = __webpack_require__(19);\n\tvar ng2_scrollable_1 = __webpack_require__(20);\n\texports.Ng2ScrollableDirective = ng2_scrollable_1.Ng2ScrollableDirective;\n\tvar ng2_ui_sortable_1 = __webpack_require__(21);\n\tvar Ng2UIModule = (function () {\n\t    function Ng2UIModule() {\n\t    }\n\t    Ng2UIModule = __decorate([\n\t        core_1.NgModule({\n\t            imports: [platform_browser_1.BrowserModule, forms_1.FormsModule],\n\t            exports: [\n\t                ng2_auto_complete_1.Ng2AutoCompleteModule,\n\t                ng2_datetime_picker_1.Ng2DatetimePickerModule,\n\t                ng2_collapsable_1.Ng2CollapsableModule,\n\t                ng2_infinite_list_1.Ng2InfiniteListModule,\n\t                ng2_map_1.Ng2MapModule,\n\t                ng2_menu_1.Ng2MenuModule,\n\t                ng2_parallax_scroll_1.Ng2ParallaxScrollModule,\n\t                ng2_popup_1.Ng2PopupModule,\n\t                ng2_sticky_1.Ng2StickyModule,\n\t                ng2_tab_1.Ng2TabModule,\n\t                ng2_scrollable_1.Ng2ScrollableModule,\n\t                ng2_tooltip_overlay_1.Ng2TooltipOverlayModule,\n\t                ng2_overlay_1.Ng2OverlayModule,\n\t                ng2_ui_sortable_1.Ng2SortableModule\n\t            ],\n\t            providers: [ng2_overlay_1.OverlayManager]\n\t        }), \n\t        __metadata('design:paramtypes', [])\n\t    ], Ng2UIModule);\n\t    return Ng2UIModule;\n\t}());\n\texports.Ng2UIModule = Ng2UIModule;\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function webpackUniversalModuleDefinition(root, factory) {\n\t\tif(true)\n\t\t\tmodule.exports = factory(__webpack_require__(1), __webpack_require__(2), __webpack_require__(3));\n\t\telse if(typeof define === 'function' && define.amd)\n\t\t\tdefine([\"@angular/core\", \"@angular/forms\", \"@angular/platform-browser\"], factory);\n\t\telse if(typeof exports === 'object')\n\t\t\texports[\"ng2-overlay\"] = factory(require(\"@angular/core\"), require(\"@angular/forms\"), require(\"@angular/platform-browser\"));\n\t\telse\n\t\t\troot[\"ng2-overlay\"] = factory(root[\"@angular/core\"], root[\"@angular/forms\"], root[\"@angular/platform-browser\"]);\n\t})(this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__) {\n\treturn /******/ (function(modules) { // webpackBootstrap\n\t/******/ \t// The module cache\n\t/******/ \tvar installedModules = {};\n\t/******/\n\t/******/ \t// The require function\n\t/******/ \tfunction __webpack_require__(moduleId) {\n\t/******/\n\t/******/ \t\t// Check if module is in cache\n\t/******/ \t\tif(installedModules[moduleId])\n\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\t/******/\n\t/******/ \t\t// Create a new module (and put it into the cache)\n\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t/******/ \t\t\texports: {},\n\t/******/ \t\t\tid: moduleId,\n\t/******/ \t\t\tloaded: false\n\t/******/ \t\t};\n\t/******/\n\t/******/ \t\t// Execute the module function\n\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t/******/\n\t/******/ \t\t// Flag the module as loaded\n\t/******/ \t\tmodule.loaded = true;\n\t/******/\n\t/******/ \t\t// Return the exports of the module\n\t/******/ \t\treturn module.exports;\n\t/******/ \t}\n\t/******/\n\t/******/\n\t/******/ \t// expose the modules object (__webpack_modules__)\n\t/******/ \t__webpack_require__.m = modules;\n\t/******/\n\t/******/ \t// expose the module cache\n\t/******/ \t__webpack_require__.c = installedModules;\n\t/******/\n\t/******/ \t// __webpack_public_path__\n\t/******/ \t__webpack_require__.p = \"\";\n\t/******/\n\t/******/ \t// Load entry module and return exports\n\t/******/ \treturn __webpack_require__(0);\n\t/******/ })\n\t/************************************************************************/\n\t/******/ ([\n\t/* 0 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(1);\n\t\tvar forms_1 = __webpack_require__(2);\n\t\tvar platform_browser_1 = __webpack_require__(3);\n\t\tvar overlay_1 = __webpack_require__(4);\n\t\texports.Overlay = overlay_1.Overlay;\n\t\tvar overlay_manager_1 = __webpack_require__(6);\n\t\texports.OverlayManager = overlay_manager_1.OverlayManager;\n\t\tvar overlay_directive_1 = __webpack_require__(7);\n\t\texports.OverlayDirective = overlay_directive_1.OverlayDirective;\n\t\tvar Ng2OverlayModule = (function () {\n\t\t    function Ng2OverlayModule() {\n\t\t    }\n\t\t    Ng2OverlayModule = __decorate([\n\t\t        core_1.NgModule({\n\t\t            imports: [platform_browser_1.BrowserModule, forms_1.FormsModule],\n\t\t            declarations: [overlay_directive_1.OverlayDirective],\n\t\t            providers: [overlay_manager_1.OverlayManager],\n\t\t            exports: [overlay_directive_1.OverlayDirective]\n\t\t        }), \n\t\t        __metadata('design:paramtypes', [])\n\t\t    ], Ng2OverlayModule);\n\t\t    return Ng2OverlayModule;\n\t\t}());\n\t\texports.Ng2OverlayModule = Ng2OverlayModule;\n\t\t;\n\t\n\t\n\t/***/ },\n\t/* 1 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\t\n\t/***/ },\n\t/* 2 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\t\n\t/***/ },\n\t/* 3 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\t\n\t/***/ },\n\t/* 4 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar util_1 = __webpack_require__(5);\n\t\tvar Overlay = (function () {\n\t\t    function Overlay(el, options) {\n\t\t        options = options || {};\n\t\t        this.id = options.id;\n\t\t        this.type = options.type;\n\t\t        if (!this.id) {\n\t\t            throw \"Invalid overlay id\";\n\t\t        }\n\t\t        this.element = el; // overlay wrapper element with table dsplay\n\t\t        this.windowOverlay = options.windowOverlay;\n\t\t        this.position = this.getPositionProperty(options.position || 'center center');\n\t\t    }\n\t\t    Overlay.prototype.positionIt = function (event) {\n\t\t        if (this.position.inside) {\n\t\t            this.positionItInside(this.position);\n\t\t        }\n\t\t        else {\n\t\t            this.positionItOutside(this.position, event);\n\t\t        }\n\t\t    };\n\t\t    Overlay.prototype.getPositionProperty = function (positionStr) {\n\t\t        var position = {}, inside;\n\t\t        var _a = positionStr.split(' '), vertical = _a[0], horizontal = _a[1], insideStr = _a[2];\n\t\t        horizontal = horizontal || 'center';\n\t\t        vertical = vertical || 'center';\n\t\t        inside = (insideStr !== 'outside' || this.windowOverlay);\n\t\t        position.horizontal = Overlay[horizontal.toUpperCase()];\n\t\t        position.vertical = Overlay[vertical.toUpperCase()];\n\t\t        position.inside = inside;\n\t\t        return position;\n\t\t    };\n\t\t    Overlay.prototype.positionItInside = function (position) {\n\t\t        this.element.style.display = 'flex';\n\t\t        //top / left positioning\n\t\t        if (this.windowOverlay) {\n\t\t            this.element.style.position = 'fixed';\n\t\t            //works as blocker\n\t\t            Object.assign(this.element.style, {\n\t\t                backgroundColor: 'rgba(0,0,0,0.2)',\n\t\t                top: '0', left: '0', bottom: '0', right: '0',\n\t\t                width: '100%', height: '100%'\n\t\t            });\n\t\t        }\n\t\t        else {\n\t\t            //adjust top/left to match to parentElement\n\t\t            var parentEl = this.element.parentElement;\n\t\t            //works as a blocker\n\t\t            Object.assign(this.element.style, {\n\t\t                position: 'absolute',\n\t\t                // backgroundColor: 'transparent',\n\t\t                backgroundColor: 'rgba(0,0,0,0.2)',\n\t\t                top: parentEl.offsetTop + 'px',\n\t\t                left: parentEl.offsetLeft + 'px',\n\t\t                width: parentEl.offsetWidth + 'px',\n\t\t                height: parentEl.offsetHeight + 'px'\n\t\t            });\n\t\t        }\n\t\t        ;\n\t\t        //horizontal position\n\t\t        switch (position.horizontal) {\n\t\t            case Overlay.LEFT:\n\t\t                this.element.style.justifyContent = 'flex-start';\n\t\t                break;\n\t\t            case Overlay.CENTER:\n\t\t                this.element.style.justifyContent = 'center';\n\t\t                break;\n\t\t            case Overlay.RIGHT:\n\t\t                this.element.style.justifyContent = 'flex-end';\n\t\t                break;\n\t\t        }\n\t\t        //vertical position\n\t\t        switch (position.vertical) {\n\t\t            case Overlay.LEFT:\n\t\t                this.element.style.alignItems = 'flex-start';\n\t\t                break;\n\t\t            case Overlay.CENTER:\n\t\t            case Overlay.MIDDLE:\n\t\t                this.element.style.alignItems = 'center';\n\t\t                break;\n\t\t            case Overlay.RIGHT:\n\t\t                this.element.style.alignItems = 'flex-end';\n\t\t                break;\n\t\t        }\n\t\t    };\n\t\t    Overlay.prototype.positionItOutside = function (position, event) {\n\t\t        //adjust top/left to match to parentElement\n\t\t        var parentEl = this.element.parentElement;\n\t\t        //works as guide line?\n\t\t        Object.assign(this.element.style, {\n\t\t            position: 'absolute',\n\t\t            pointerEvents: 'none',\n\t\t            top: parentEl.offsetTop + 'px',\n\t\t            left: parentEl.offsetLeft + 'px',\n\t\t            width: parentEl.offsetWidth + 'px',\n\t\t            height: parentEl.offsetHeight + 'px'\n\t\t        });\n\t\t        this.element.style.display = 'block';\n\t\t        var elToPosition = (this.element.children[0]);\n\t\t        elToPosition.style.position = 'absolute';\n\t\t        elToPosition.style.pointerEvents = 'auto';\n\t\t        switch (position.vertical) {\n\t\t            case Overlay.TOP:\n\t\t                elToPosition.style.bottom = this.element.offsetHeight + 'px';\n\t\t                break;\n\t\t            case Overlay.BOTTOM:\n\t\t                elToPosition.style.top = this.element.offsetHeight + 'px';\n\t\t                break;\n\t\t            case Overlay.LEFT:\n\t\t                elToPosition.style.right = this.element.offsetWidth + 'px';\n\t\t                break;\n\t\t            case Overlay.RIGHT:\n\t\t                elToPosition.style.left = this.element.offsetWidth + 'px';\n\t\t                break;\n\t\t        }\n\t\t        switch (position.horizontal) {\n\t\t            case Overlay.CENTER:\n\t\t                elToPosition.style.left = (this.element.offsetWidth - elToPosition.offsetWidth) / 2 + 'px';\n\t\t                break;\n\t\t            case Overlay.LEFT:\n\t\t                elToPosition.style.left = '0';\n\t\t                break;\n\t\t            case Overlay.RIGHT:\n\t\t                elToPosition.style.right = '0';\n\t\t                break;\n\t\t            case Overlay.TOP:\n\t\t                elToPosition.style.top = '0';\n\t\t                break;\n\t\t            case Overlay.BOTTOM:\n\t\t                elToPosition.style.bottom = '0';\n\t\t                break;\n\t\t            case Overlay.CURSOR:\n\t\t                var mousePos = util_1.Util.getMousePositionInElement(event, this.element);\n\t\t                if ((mousePos.x + elToPosition.offsetWidth) > this.element.offsetWidth) {\n\t\t                    elToPosition.style.left = (this.element.offsetWidth - elToPosition.offsetWidth - 5) + 'px';\n\t\t                }\n\t\t                else if (mousePos.x < elToPosition.offsetWidth / 2) {\n\t\t                    elToPosition.style.left = '0px';\n\t\t                }\n\t\t                else {\n\t\t                    elToPosition.style.left = mousePos.x - elToPosition.offsetWidth / 2 + 'px';\n\t\t                }\n\t\t                break;\n\t\t        }\n\t\t    };\n\t\t    Overlay.TOP = 11;\n\t\t    Overlay.MIDDLE = 12;\n\t\t    Overlay.BOTTOM = 13;\n\t\t    Overlay.LEFT = 21;\n\t\t    Overlay.CENTER = 22;\n\t\t    Overlay.RIGHT = 23;\n\t\t    Overlay.CURSOR = 31;\n\t\t    return Overlay;\n\t\t}());\n\t\texports.Overlay = Overlay;\n\t\n\t\n\t/***/ },\n\t/* 5 */\n\t/***/ function(module, exports) {\n\t\n\t\t\"use strict\";\n\t\tvar Util = (function () {\n\t\t    function Util() {\n\t\t    }\n\t\t    Util.getDocumentPosition = function (oElement) {\n\t\t        var posX = 0, posY = 0;\n\t\t        if (oElement.offsetParent) {\n\t\t            for (; oElement; oElement = oElement.offsetParent) {\n\t\t                posX += oElement.offsetLeft;\n\t\t                posY += oElement.offsetTop;\n\t\t            }\n\t\t            return { x: posX, y: posY };\n\t\t        }\n\t\t        else {\n\t\t            return { x: oElement['x'], y: oElement['y'] };\n\t\t        }\n\t\t    };\n\t\t    Util.getMousePositionInElement = function (evt, element) {\n\t\t        evt = evt || window.event;\n\t\t        var posX = 0, posY = 0;\n\t\t        var elPos = this.getDocumentPosition(element);\n\t\t        if (evt.pageX || evt.pageY) {\n\t\t            posX = evt.pageX;\n\t\t            posY = evt.pageY;\n\t\t        }\n\t\t        else if (evt.clientX || evt.clientY) {\n\t\t            posX = evt.clientX +\n\t\t                document.body.scrollLeft +\n\t\t                document.documentElement.scrollLeft;\n\t\t            posY = evt.clientY +\n\t\t                document.body.scrollTop +\n\t\t                document.documentElement.scrollTop;\n\t\t        }\n\t\t        return {\n\t\t            x: posX - elPos.x,\n\t\t            y: posY - elPos.y\n\t\t        };\n\t\t    };\n\t\t    return Util;\n\t\t}());\n\t\texports.Util = Util;\n\t\n\t\n\t/***/ },\n\t/* 6 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(1);\n\t\tvar OverlayManager = (function () {\n\t\t    function OverlayManager() {\n\t\t    }\n\t\t    OverlayManager.prototype.register = function (overlay) {\n\t\t        OverlayManager.overlays[overlay.id] = overlay;\n\t\t        // console.log('overlay.register, OverlayManager.overlays', OverlayManager.overlays);\n\t\t    };\n\t\t    OverlayManager.prototype.open = function (arg, event) {\n\t\t        var overlay = typeof arg === 'string' ? OverlayManager.overlays[arg] : arg;\n\t\t        if (!overlay.opened) {\n\t\t            overlay.positionIt(event);\n\t\t            overlay.opened = true;\n\t\t        }\n\t\t    };\n\t\t    OverlayManager.prototype.close = function (arg) {\n\t\t        var overlay = typeof arg === 'string' ? OverlayManager.overlays[arg] : arg;\n\t\t        overlay.element.style.display = 'none';\n\t\t        overlay.opened = false;\n\t\t    };\n\t\t    //list of overlay objects\n\t\t    OverlayManager.overlays = {};\n\t\t    OverlayManager = __decorate([\n\t\t        core_1.Injectable(), \n\t\t        __metadata('design:paramtypes', [])\n\t\t    ], OverlayManager);\n\t\t    return OverlayManager;\n\t\t}());\n\t\texports.OverlayManager = OverlayManager;\n\t\n\t\n\t/***/ },\n\t/* 7 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(1);\n\t\tvar overlay_manager_1 = __webpack_require__(6);\n\t\tvar overlay_1 = __webpack_require__(4);\n\t\tvar OverlayDirective = (function () {\n\t\t    function OverlayDirective(viewContainerRef, overlayManager) {\n\t\t        this.viewContainerRef = viewContainerRef;\n\t\t        this.overlayManager = overlayManager;\n\t\t        this.el = this.viewContainerRef.element.nativeElement;\n\t\t    }\n\t\t    OverlayDirective.prototype.ngAfterViewInit = function () {\n\t\t        this.wrapItWithOverlayTag();\n\t\t        this.registerToOverlayManager();\n\t\t    };\n\t\t    OverlayDirective.prototype.wrapItWithOverlayTag = function () {\n\t\t        //console.log('wrapped overlay directive element with <ng2-overlay>');\n\t\t        this.overlayEl = document.createElement('ng2-overlay');\n\t\t        this.overlayEl.style.display = 'none';\n\t\t        this.el.parentElement.insertBefore(this.overlayEl, this.el.nextSibling);\n\t\t        this.overlayEl.appendChild(this.el);\n\t\t    };\n\t\t    //create Overlay object,  then register this element to overlayManager\n\t\t    OverlayDirective.prototype.registerToOverlayManager = function () {\n\t\t        var positionStr = this.overlayPosition;\n\t\t        var overlay = new overlay_1.Overlay(this.overlayEl, {\n\t\t            id: this.el.id,\n\t\t            windowOverlay: this.overlayOf == \"window\",\n\t\t            position: positionStr\n\t\t        });\n\t\t        //console.log('registering overlay', overlay);\n\t\t        this.overlayManager.register(overlay);\n\t\t    };\n\t\t    __decorate([\n\t\t        core_1.Input('ng2-overlay-of'), \n\t\t        __metadata('design:type', String)\n\t\t    ], OverlayDirective.prototype, \"overlayOf\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input('ng2-overlay-position'), \n\t\t        __metadata('design:type', String)\n\t\t    ], OverlayDirective.prototype, \"overlayPosition\", void 0);\n\t\t    OverlayDirective = __decorate([\n\t\t        core_1.Directive({\n\t\t            selector: '[ng2-overlay], [ng2-overlay-of], [ng2-overlay-position]',\n\t\t        }), \n\t\t        __metadata('design:paramtypes', [core_1.ViewContainerRef, overlay_manager_1.OverlayManager])\n\t\t    ], OverlayDirective);\n\t\t    return OverlayDirective;\n\t\t}());\n\t\texports.OverlayDirective = OverlayDirective;\n\t\n\t\n\t/***/ }\n\t/******/ ])\n\t});\n\t;\n\t//# sourceMappingURL=ng2-overlay.umd.js.map\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function webpackUniversalModuleDefinition(root, factory) {\n\t\tif(true)\n\t\t\tmodule.exports = factory(__webpack_require__(1), __webpack_require__(2), __webpack_require__(6), __webpack_require__(7), __webpack_require__(8), __webpack_require__(9));\n\t\telse if(typeof define === 'function' && define.amd)\n\t\t\tdefine([\"@angular/core\", \"@angular/forms\", \"@angular/common\", \"@angular/http\", \"rxjs/Rx\", \"rxjs/Subject\"], factory);\n\t\telse if(typeof exports === 'object')\n\t\t\texports[\"ng2-auto-complete\"] = factory(require(\"@angular/core\"), require(\"@angular/forms\"), require(\"@angular/common\"), require(\"@angular/http\"), require(\"rxjs/Rx\"), require(\"rxjs/Subject\"));\n\t\telse\n\t\t\troot[\"ng2-auto-complete\"] = factory(root[\"@angular/core\"], root[\"@angular/forms\"], root[\"@angular/common\"], root[\"@angular/http\"], root[\"rxjs/Rx\"], root[\"rxjs/Subject\"]);\n\t})(this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_6__, __WEBPACK_EXTERNAL_MODULE_8__) {\n\treturn /******/ (function(modules) { // webpackBootstrap\n\t/******/ \t// The module cache\n\t/******/ \tvar installedModules = {};\n\t/******/\n\t/******/ \t// The require function\n\t/******/ \tfunction __webpack_require__(moduleId) {\n\t/******/\n\t/******/ \t\t// Check if module is in cache\n\t/******/ \t\tif(installedModules[moduleId])\n\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\t/******/\n\t/******/ \t\t// Create a new module (and put it into the cache)\n\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t/******/ \t\t\texports: {},\n\t/******/ \t\t\tid: moduleId,\n\t/******/ \t\t\tloaded: false\n\t/******/ \t\t};\n\t/******/\n\t/******/ \t\t// Execute the module function\n\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t/******/\n\t/******/ \t\t// Flag the module as loaded\n\t/******/ \t\tmodule.loaded = true;\n\t/******/\n\t/******/ \t\t// Return the exports of the module\n\t/******/ \t\treturn module.exports;\n\t/******/ \t}\n\t/******/\n\t/******/\n\t/******/ \t// expose the modules object (__webpack_modules__)\n\t/******/ \t__webpack_require__.m = modules;\n\t/******/\n\t/******/ \t// expose the module cache\n\t/******/ \t__webpack_require__.c = installedModules;\n\t/******/\n\t/******/ \t// __webpack_public_path__\n\t/******/ \t__webpack_require__.p = \"\";\n\t/******/\n\t/******/ \t// Load entry module and return exports\n\t/******/ \treturn __webpack_require__(0);\n\t/******/ })\n\t/************************************************************************/\n\t/******/ ([\n\t/* 0 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(1);\n\t\tvar forms_1 = __webpack_require__(2);\n\t\tvar common_1 = __webpack_require__(3);\n\t\tvar auto_complete_1 = __webpack_require__(4);\n\t\texports.AutoComplete = auto_complete_1.AutoComplete;\n\t\tvar auto_complete_component_1 = __webpack_require__(7);\n\t\texports.AutoCompleteComponent = auto_complete_component_1.AutoCompleteComponent;\n\t\tvar auto_complete_directive_1 = __webpack_require__(9);\n\t\texports.AutoCompleteDirective = auto_complete_directive_1.AutoCompleteDirective;\n\t\tvar Ng2AutoCompleteModule = (function () {\n\t\t    function Ng2AutoCompleteModule() {\n\t\t    }\n\t\t    Ng2AutoCompleteModule = __decorate([\n\t\t        core_1.NgModule({\n\t\t            imports: [common_1.CommonModule, forms_1.FormsModule],\n\t\t            declarations: [auto_complete_component_1.AutoCompleteComponent, auto_complete_directive_1.AutoCompleteDirective],\n\t\t            exports: [auto_complete_component_1.AutoCompleteComponent, auto_complete_directive_1.AutoCompleteDirective],\n\t\t            entryComponents: [auto_complete_component_1.AutoCompleteComponent],\n\t\t            providers: [auto_complete_1.AutoComplete]\n\t\t        }), \n\t\t        __metadata('design:paramtypes', [])\n\t\t    ], Ng2AutoCompleteModule);\n\t\t    return Ng2AutoCompleteModule;\n\t\t}());\n\t\texports.Ng2AutoCompleteModule = Ng2AutoCompleteModule;\n\t\n\t\n\t/***/ },\n\t/* 1 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\t\n\t/***/ },\n\t/* 2 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\t\n\t/***/ },\n\t/* 3 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\t\n\t/***/ },\n\t/* 4 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(1);\n\t\tvar http_1 = __webpack_require__(5);\n\t\t__webpack_require__(6);\n\t\t/**\n\t\t * provides auto-complete related utility functions\n\t\t */\n\t\tvar AutoComplete = (function () {\n\t\t    function AutoComplete(http) {\n\t\t        this.http = http;\n\t\t        // ...\n\t\t    }\n\t\t    AutoComplete.prototype.filter = function (list, keyword) {\n\t\t        return list.filter(function (el) {\n\t\t            return !!JSON.stringify(el).match(new RegExp(keyword, \"i\"));\n\t\t        });\n\t\t    };\n\t\t    /**\n\t\t     * return remote data from the given source and options, and data path\n\t\t     *\n\t\t     * @param {*} options is an object containing the query paramters for the GET call\n\t\t     * @returns {Observable<Response>}\n\t\t     *\n\t\t     * @memberOf AutoComplete\n\t\t     */\n\t\t    AutoComplete.prototype.getRemoteData = function (options) {\n\t\t        var _this = this;\n\t\t        var keyValues = [];\n\t\t        var url = \"\";\n\t\t        for (var key in options) {\n\t\t            if (options.hasOwnProperty(key)) {\n\t\t                // replace all keyword to value\n\t\t                var regexp = new RegExp(\":\" + key, \"g\");\n\t\t                url = this.source;\n\t\t                if (url.match(regexp)) {\n\t\t                    url = url.replace(regexp, options[key]);\n\t\t                }\n\t\t                else {\n\t\t                    keyValues.push(key + \"=\" + options[key]);\n\t\t                }\n\t\t            }\n\t\t        }\n\t\t        if (keyValues.length) {\n\t\t            var qs = keyValues.join(\"&\");\n\t\t            url += url.match(/\\?[a-z]/i) ? qs : (\"?\" + qs);\n\t\t        }\n\t\t        return this.http.get(url)\n\t\t            .map(function (resp) { return resp.json(); })\n\t\t            .map(function (resp) {\n\t\t            var list = resp.data || resp;\n\t\t            if (_this.pathToData) {\n\t\t                var paths = _this.pathToData.split(\".\");\n\t\t                paths.forEach(function (prop) { return list = list[prop]; });\n\t\t            }\n\t\t            return list;\n\t\t        });\n\t\t    };\n\t\t    ;\n\t\t    AutoComplete = __decorate([\n\t\t        core_1.Injectable(), \n\t\t        __metadata('design:paramtypes', [http_1.Http])\n\t\t    ], AutoComplete);\n\t\t    return AutoComplete;\n\t\t}());\n\t\texports.AutoComplete = AutoComplete;\n\t\n\t\n\t/***/ },\n\t/* 5 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\t\n\t/***/ },\n\t/* 6 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_6__;\n\t\n\t/***/ },\n\t/* 7 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(1);\n\t\tvar Subject_1 = __webpack_require__(8);\n\t\tvar auto_complete_1 = __webpack_require__(4);\n\t\t/**\n\t\t * show a selected date in monthly calendar\n\t\t * Each filteredList item has the following property in addition to data itself\n\t\t *   1. displayValue as string e.g. Allen Kim\n\t\t *   2. dataValue as any e.g.\n\t\t */\n\t\tvar AutoCompleteComponent = (function () {\n\t\t    /**\n\t\t     * constructor\n\t\t     */\n\t\t    function AutoCompleteComponent(elementRef, autoComplete) {\n\t\t        this.autoComplete = autoComplete;\n\t\t        this.minChars = 0;\n\t\t        this.valuePropertyName = \"id\";\n\t\t        this.displayPropertyName = \"value\";\n\t\t        this.dropdownVisible = false;\n\t\t        this.isLoading = false;\n\t\t        this.filteredList = [];\n\t\t        this.itemIndex = 0;\n\t\t        this.valueSelected = new Subject_1.Subject();\n\t\t        this.delay = (function () {\n\t\t            var timer = 0;\n\t\t            return function (callback, ms) {\n\t\t                clearTimeout(timer);\n\t\t                timer = setTimeout(callback, ms);\n\t\t            };\n\t\t        })();\n\t\t        this.el = elementRef.nativeElement;\n\t\t    }\n\t\t    AutoCompleteComponent.prototype.isSrcArr = function () {\n\t\t        return (this.source.constructor.name === \"Array\");\n\t\t    };\n\t\t    /**\n\t\t     * user enters into input el, shows list to select, then select one\n\t\t     */\n\t\t    AutoCompleteComponent.prototype.ngOnInit = function () {\n\t\t        this.inputEl = (this.el.querySelector(\"input\"));\n\t\t        this.autoComplete.source = this.source;\n\t\t        this.autoComplete.pathToData = this.pathToData;\n\t\t    };\n\t\t    AutoCompleteComponent.prototype.reloadListInDelay = function () {\n\t\t        var _this = this;\n\t\t        var delayMs = this.isSrcArr() ? 10 : 500;\n\t\t        // executing after user stopped typing\n\t\t        this.delay(function () { return _this.reloadList(); }, delayMs);\n\t\t    };\n\t\t    AutoCompleteComponent.prototype.showDropdownList = function () {\n\t\t        this.keyword = \"\";\n\t\t        this.inputEl.focus();\n\t\t        this.reloadList();\n\t\t    };\n\t\t    AutoCompleteComponent.prototype.hideDropdownList = function () {\n\t\t        this.dropdownVisible = false;\n\t\t    };\n\t\t    AutoCompleteComponent.prototype.reloadList = function () {\n\t\t        var _this = this;\n\t\t        var keyword = this.inputEl.value;\n\t\t        this.hideDropdownList();\n\t\t        this.dropdownVisible = true;\n\t\t        if (this.isSrcArr()) {\n\t\t            // local source \n\t\t            this.filteredList = this.autoComplete.filter(this.source, this.keyword);\n\t\t        }\n\t\t        else {\n\t\t            this.isLoading = true;\n\t\t            if (keyword.length >= this.minChars) {\n\t\t                if (typeof this.source === \"function\") {\n\t\t                    // custom function that returns observable \n\t\t                    this.source(keyword).subscribe(function (resp) {\n\t\t                        if (_this.pathToData) {\n\t\t                            var paths = _this.pathToData.split(\".\");\n\t\t                            paths.forEach(function (prop) { return resp = resp[prop]; });\n\t\t                        }\n\t\t                        _this.filteredList = resp;\n\t\t                    }, function (error) { return null; }, function () { return _this.isLoading = false; } // complete\n\t\t                    );\n\t\t                }\n\t\t                else {\n\t\t                    // remote source  \n\t\t                    var query = { keyword: keyword };\n\t\t                    this.autoComplete.getRemoteData(query)\n\t\t                        .subscribe(function (resp) {\n\t\t                        _this.filteredList = resp;\n\t\t                    }, function (error) { return null; }, function () { return _this.isLoading = false; } // complete\n\t\t                    );\n\t\t                }\n\t\t            }\n\t\t        }\n\t\t    };\n\t\t    AutoCompleteComponent.prototype.selectOne = function (data) {\n\t\t        this.hideDropdownList();\n\t\t        this.valueSelected.next(data);\n\t\t    };\n\t\t    ;\n\t\t    AutoCompleteComponent.prototype.inputElKeyHandler = function (evt) {\n\t\t        var totalNumItem = this.filteredList.length;\n\t\t        switch (evt.keyCode) {\n\t\t            case 27:\n\t\t                this.hideDropdownList();\n\t\t                break;\n\t\t            case 38:\n\t\t                this.itemIndex = (totalNumItem + this.itemIndex - 1) % totalNumItem;\n\t\t                break;\n\t\t            case 40:\n\t\t                this.dropdownVisible = true;\n\t\t                this.itemIndex = (totalNumItem + this.itemIndex + 1) % totalNumItem;\n\t\t                break;\n\t\t            case 13:\n\t\t                if (this.filteredList.length > 0) {\n\t\t                    this.selectOne(this.filteredList[this.itemIndex]);\n\t\t                }\n\t\t                evt.preventDefault();\n\t\t                break;\n\t\t        }\n\t\t    };\n\t\t    ;\n\t\t    AutoCompleteComponent.prototype.getFormattedList = function (data) {\n\t\t        var formatter = this.listFormatter || this.defaultListFormatter;\n\t\t        return formatter.apply(this, [data]);\n\t\t    };\n\t\t    AutoCompleteComponent.prototype.defaultListFormatter = function (data) {\n\t\t        var html = \"\";\n\t\t        html += data[this.valuePropertyName] ? \"<b>(\" + data[this.valuePropertyName] + \")</b>\" : \"\";\n\t\t        html += data[this.displayPropertyName] ? \"<span>\" + data[this.displayPropertyName] + \"</span>\" : data;\n\t\t        return html;\n\t\t    };\n\t\t    __decorate([\n\t\t        core_1.Input(\"list-formatter\"), \n\t\t        __metadata('design:type', Function)\n\t\t    ], AutoCompleteComponent.prototype, \"listFormatter\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input(\"source\"), \n\t\t        __metadata('design:type', Object)\n\t\t    ], AutoCompleteComponent.prototype, \"source\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input(\"path-to-data\"), \n\t\t        __metadata('design:type', String)\n\t\t    ], AutoCompleteComponent.prototype, \"pathToData\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input(\"min-chars\"), \n\t\t        __metadata('design:type', Number)\n\t\t    ], AutoCompleteComponent.prototype, \"minChars\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input(\"value-property-name\"), \n\t\t        __metadata('design:type', String)\n\t\t    ], AutoCompleteComponent.prototype, \"valuePropertyName\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input(\"display-property-name\"), \n\t\t        __metadata('design:type', String)\n\t\t    ], AutoCompleteComponent.prototype, \"displayPropertyName\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input(\"placeholder\"), \n\t\t        __metadata('design:type', String)\n\t\t    ], AutoCompleteComponent.prototype, \"placeholder\", void 0);\n\t\t    AutoCompleteComponent = __decorate([\n\t\t        core_1.Component({\n\t\t            selector: \"auto-complete\",\n\t\t            template: \"\\n  <div class=\\\"auto-complete\\\">\\n\\n    <!-- keyword input -->\\n    <input class=\\\"keyword\\\"\\n           placeholder=\\\"{{placeholder}}\\\"\\n           (focus)=\\\"showDropdownList()\\\"\\n           (blur)=\\\"dropdownVisible=false\\\"\\n           (keydown)=\\\"inputElKeyHandler($event)\\\"\\n           (input)=\\\"reloadListInDelay()\\\"\\n           [(ngModel)]=\\\"keyword\\\" />\\n\\n    <!-- dropdown that user can select -->\\n    <ul *ngIf=\\\"dropdownVisible\\\">\\n      <li *ngIf=\\\"isLoading\\\" class=\\\"loading\\\">Loading</li>\\n      <li class=\\\"item\\\"\\n          *ngFor=\\\"let item of filteredList; let i=index\\\"\\n          (mousedown)=\\\"selectOne(item)\\\"\\n          [ngClass]=\\\"{selected: i === itemIndex}\\\"\\n          [innerHtml]=\\\"getFormattedList(item)\\\">\\n      </li>\\n    </ul>\\n\\n  </div>\",\n\t\t            providers: [auto_complete_1.AutoComplete],\n\t\t            styles: [\"\\n  @keyframes slideDown {\\n    0% {\\n      transform:  translateY(-10px);\\n    }\\n    100% {\\n      transform: translateY(0px);\\n    }\\n  }\\n  .auto-complete input {\\n    outline: none;\\n    border: 2px solid transparent;\\n    border-width: 3px 2px;\\n    margin: 0;\\n    box-sizing: border-box;\\n    background-clip: content-box;\\n  }\\n\\n  .auto-complete ul {\\n    background-color: #fff;\\n    margin: 0;\\n    width : 100%;\\n    overflow-y: auto;\\n    list-style-type: none;\\n    padding: 0;\\n    border: 1px solid #ccc;\\n    box-sizing: border-box;\\n    animation: slideDown 0.1s;\\n  }\\n\\n  .auto-complete ul li {\\n    padding: 2px 5px;\\n    border-bottom: 1px solid #eee;\\n  }\\n\\n  .auto-complete ul li.selected {\\n    background-color: #ccc;\\n  }\\n\\n  .auto-complete ul li:last-child {\\n    border-bottom: none;\\n  }\\n\\n  .auto-complete ul li:hover {\\n    background-color: #ccc;\\n  }\"\n\t\t            ],\n\t\t            encapsulation: core_1.ViewEncapsulation.None\n\t\t        }), \n\t\t        __metadata('design:paramtypes', [core_1.ElementRef, auto_complete_1.AutoComplete])\n\t\t    ], AutoCompleteComponent);\n\t\t    return AutoCompleteComponent;\n\t\t}());\n\t\texports.AutoCompleteComponent = AutoCompleteComponent;\n\t\n\t\n\t/***/ },\n\t/* 8 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_8__;\n\t\n\t/***/ },\n\t/* 9 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(1);\n\t\t__webpack_require__(6);\n\t\tvar auto_complete_component_1 = __webpack_require__(7);\n\t\t/**\n\t\t * display auto-complete section with input and dropdown list when it is clicked\n\t\t */\n\t\tvar AutoCompleteDirective = (function () {\n\t\t    function AutoCompleteDirective(resolver, viewContainerRef) {\n\t\t        var _this = this;\n\t\t        this.resolver = resolver;\n\t\t        this.viewContainerRef = viewContainerRef;\n\t\t        this.ngModelChange = new core_1.EventEmitter();\n\t\t        this.valueChanged = new core_1.EventEmitter();\n\t\t        this.hideAutoCompleteDropdown = function (event) {\n\t\t            if (_this.componentRef) {\n\t\t                if (event && event.type === \"click\" &&\n\t\t                    event.target.tagName !== \"INPUT\" &&\n\t\t                    !_this.elementIn(event.target, _this.acDropdownEl)) {\n\t\t                    _this.componentRef.destroy();\n\t\t                    _this.componentRef = undefined;\n\t\t                }\n\t\t                else if (!event) {\n\t\t                    _this.componentRef.destroy();\n\t\t                    _this.componentRef = undefined;\n\t\t                }\n\t\t            }\n\t\t        };\n\t\t        this.styleAutoCompleteDropdown = function () {\n\t\t            var component = _this.componentRef.instance;\n\t\t            /* setting width/height auto complete */\n\t\t            var thisElBCR = _this.el.getBoundingClientRect();\n\t\t            _this.acDropdownEl.style.width = thisElBCR.width + \"px\";\n\t\t            _this.acDropdownEl.style.position = \"absolute\";\n\t\t            _this.acDropdownEl.style.zIndex = \"1\";\n\t\t            _this.acDropdownEl.style.top = \"0\";\n\t\t            _this.acDropdownEl.style.left = \"0\";\n\t\t            _this.acDropdownEl.style.display = \"inline-block\";\n\t\t            var thisInputElBCR = _this.inputEl.getBoundingClientRect();\n\t\t            component.inputEl.style.width = (thisInputElBCR.width - 30) + \"px\";\n\t\t            component.inputEl.style.height = thisInputElBCR.height + \"px\";\n\t\t            component.inputEl.focus();\n\t\t        };\n\t\t        this.selectNewValue = function (val) {\n\t\t            /* modify toString function of value if value is an object */\n\t\t            if (val && typeof val === \"object\") {\n\t\t                var displayVal_1 = val[_this.displayPropertyName || \"value\"];\n\t\t                val.toString = function () { return displayVal_1; };\n\t\t            }\n\t\t            /* emit ngModelChange and valueChanged */\n\t\t            if (val !== _this.ngModel) {\n\t\t                _this.ngModelChange.emit(val);\n\t\t            }\n\t\t            if (val) {\n\t\t                _this.valueChanged.emit(val);\n\t\t            }\n\t\t            /* hide dropdown */\n\t\t            _this.hideAutoCompleteDropdown();\n\t\t        };\n\t\t        this.el = this.viewContainerRef.element.nativeElement;\n\t\t    }\n\t\t    AutoCompleteDirective.prototype.ngOnInit = function () {\n\t\t        // wrap this element with <div class=\"ng2-auto-complete\">\n\t\t        var divEl = document.createElement(\"div\");\n\t\t        divEl.className = \"ng2-auto-complete\";\n\t\t        divEl.style.display = \"inline-block\";\n\t\t        divEl.style.position = \"relative\";\n\t\t        this.el.parentElement.insertBefore(divEl, this.el.nextSibling);\n\t\t        divEl.appendChild(this.el);\n\t\t        // apply toString() method for the object\n\t\t        this.selectNewValue(this.ngModel);\n\t\t        // when somewhere else clicked, hide this autocomplete\n\t\t        document.addEventListener(\"click\", this.hideAutoCompleteDropdown);\n\t\t    };\n\t\t    AutoCompleteDirective.prototype.ngOnDestroy = function () {\n\t\t        if (this.componentRef) {\n\t\t            this.componentRef.instance.valueSelected.unsubscribe();\n\t\t        }\n\t\t        document.removeEventListener(\"click\", this.hideAutoCompleteDropdown);\n\t\t    };\n\t\t    //show auto-complete list below the current element\n\t\t    AutoCompleteDirective.prototype.showAutoCompleteDropdown = function () {\n\t\t        this.hideAutoCompleteDropdown();\n\t\t        var factory = this.resolver.resolveComponentFactory(auto_complete_component_1.AutoCompleteComponent);\n\t\t        this.componentRef = this.viewContainerRef.createComponent(factory);\n\t\t        var component = this.componentRef.instance;\n\t\t        component.listFormatter = this.listFormatter;\n\t\t        //component.prefillFunc = this.prefillFunc;\n\t\t        component.pathToData = this.pathToData;\n\t\t        component.minChars = this.minChars;\n\t\t        component.valuePropertyName = this.valuePropertyName || \"id\";\n\t\t        component.displayPropertyName = this.displayPropertyName || \"value\";\n\t\t        component.source = this.source;\n\t\t        component.placeholder = this.autoCompletePlaceholder;\n\t\t        component.valueSelected.subscribe(this.selectNewValue);\n\t\t        this.acDropdownEl = this.componentRef.location.nativeElement;\n\t\t        this.acDropdownEl.style.display = \"none\";\n\t\t        // if this element is not an input tag, move dropdown after input tag\n\t\t        // so that it displays correctly\n\t\t        this.moveAutocompleteDropDownAfterInputEl();\n\t\t        setTimeout(this.styleAutoCompleteDropdown);\n\t\t    };\n\t\t    AutoCompleteDirective.prototype.moveAutocompleteDropDownAfterInputEl = function () {\n\t\t        this.inputEl = this.el;\n\t\t        if (this.el.tagName !== \"INPUT\" && this.acDropdownEl) {\n\t\t            this.inputEl = this.el.querySelector(\"input\");\n\t\t            this.inputEl.parentElement.insertBefore(this.acDropdownEl, this.inputEl.nextSibling);\n\t\t        }\n\t\t    };\n\t\t    AutoCompleteDirective.prototype.elementIn = function (el, containerEl) {\n\t\t        while (el = el.parentNode) {\n\t\t            if (el === containerEl) {\n\t\t                return true;\n\t\t            }\n\t\t            ;\n\t\t        }\n\t\t        return false;\n\t\t    };\n\t\t    __decorate([\n\t\t        core_1.Input(\"auto-complete-placeholder\"), \n\t\t        __metadata('design:type', String)\n\t\t    ], AutoCompleteDirective.prototype, \"autoCompletePlaceholder\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input(\"list-formatter\"), \n\t\t        __metadata('design:type', Function)\n\t\t    ], AutoCompleteDirective.prototype, \"listFormatter\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input(\"source\"), \n\t\t        __metadata('design:type', Object)\n\t\t    ], AutoCompleteDirective.prototype, \"source\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input(\"path-to-data\"), \n\t\t        __metadata('design:type', String)\n\t\t    ], AutoCompleteDirective.prototype, \"pathToData\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input(\"min-chars\"), \n\t\t        __metadata('design:type', Number)\n\t\t    ], AutoCompleteDirective.prototype, \"minChars\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input(\"value-property-name\"), \n\t\t        __metadata('design:type', String)\n\t\t    ], AutoCompleteDirective.prototype, \"valuePropertyName\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input(\"display-property-name\"), \n\t\t        __metadata('design:type', String)\n\t\t    ], AutoCompleteDirective.prototype, \"displayPropertyName\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input(), \n\t\t        __metadata('design:type', String)\n\t\t    ], AutoCompleteDirective.prototype, \"ngModel\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Output(), \n\t\t        __metadata('design:type', Object)\n\t\t    ], AutoCompleteDirective.prototype, \"ngModelChange\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Output(\"value-changed\"), \n\t\t        __metadata('design:type', Object)\n\t\t    ], AutoCompleteDirective.prototype, \"valueChanged\", void 0);\n\t\t    AutoCompleteDirective = __decorate([\n\t\t        core_1.Directive({\n\t\t            selector: \"[auto-complete], [ng2-auto-complete]\",\n\t\t            host: {\n\t\t                \"(click)\": \"showAutoCompleteDropdown()\"\n\t\t            }\n\t\t        }), \n\t\t        __metadata('design:paramtypes', [core_1.ComponentFactoryResolver, core_1.ViewContainerRef])\n\t\t    ], AutoCompleteDirective);\n\t\t    return AutoCompleteDirective;\n\t\t}());\n\t\texports.AutoCompleteDirective = AutoCompleteDirective;\n\t\n\t\n\t/***/ }\n\t/******/ ])\n\t});\n\t;\n\t//# sourceMappingURL=ng2-auto-complete.umd.js.map\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_6__;\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_7__;\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_8__;\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_9__;\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function webpackUniversalModuleDefinition(root, factory) {\n\t\tif(true)\n\t\t\tmodule.exports = factory(__webpack_require__(1), __webpack_require__(2), __webpack_require__(6));\n\t\telse if(typeof define === 'function' && define.amd)\n\t\t\tdefine([\"@angular/core\", \"@angular/forms\", \"@angular/common\"], factory);\n\t\telse if(typeof exports === 'object')\n\t\t\texports[\"ng2-datetime-picker\"] = factory(require(\"@angular/core\"), require(\"@angular/forms\"), require(\"@angular/common\"));\n\t\telse\n\t\t\troot[\"ng2-datetime-picker\"] = factory(root[\"@angular/core\"], root[\"@angular/forms\"], root[\"@angular/common\"]);\n\t})(this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__) {\n\treturn /******/ (function(modules) { // webpackBootstrap\n\t/******/ \t// The module cache\n\t/******/ \tvar installedModules = {};\n\t/******/\n\t/******/ \t// The require function\n\t/******/ \tfunction __webpack_require__(moduleId) {\n\t/******/\n\t/******/ \t\t// Check if module is in cache\n\t/******/ \t\tif(installedModules[moduleId])\n\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\t/******/\n\t/******/ \t\t// Create a new module (and put it into the cache)\n\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t/******/ \t\t\texports: {},\n\t/******/ \t\t\tid: moduleId,\n\t/******/ \t\t\tloaded: false\n\t/******/ \t\t};\n\t/******/\n\t/******/ \t\t// Execute the module function\n\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t/******/\n\t/******/ \t\t// Flag the module as loaded\n\t/******/ \t\tmodule.loaded = true;\n\t/******/\n\t/******/ \t\t// Return the exports of the module\n\t/******/ \t\treturn module.exports;\n\t/******/ \t}\n\t/******/\n\t/******/\n\t/******/ \t// expose the modules object (__webpack_modules__)\n\t/******/ \t__webpack_require__.m = modules;\n\t/******/\n\t/******/ \t// expose the module cache\n\t/******/ \t__webpack_require__.c = installedModules;\n\t/******/\n\t/******/ \t// __webpack_public_path__\n\t/******/ \t__webpack_require__.p = \"\";\n\t/******/\n\t/******/ \t// Load entry module and return exports\n\t/******/ \treturn __webpack_require__(0);\n\t/******/ })\n\t/************************************************************************/\n\t/******/ ([\n\t/* 0 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(1);\n\t\tvar forms_1 = __webpack_require__(2);\n\t\tvar common_1 = __webpack_require__(3);\n\t\tvar datetime_1 = __webpack_require__(4);\n\t\texports.DateTime = datetime_1.DateTime;\n\t\tvar datetime_picker_component_1 = __webpack_require__(5);\n\t\texports.DateTimePickerComponent = datetime_picker_component_1.DateTimePickerComponent;\n\t\tvar datetime_picker_directive_1 = __webpack_require__(6);\n\t\texports.DateTimePickerDirective = datetime_picker_directive_1.DateTimePickerDirective;\n\t\tvar Ng2DatetimePickerModule = (function () {\n\t\t    function Ng2DatetimePickerModule() {\n\t\t    }\n\t\t    Ng2DatetimePickerModule = __decorate([\n\t\t        core_1.NgModule({\n\t\t            imports: [common_1.CommonModule, forms_1.FormsModule],\n\t\t            declarations: [datetime_picker_component_1.DateTimePickerComponent, datetime_picker_directive_1.DateTimePickerDirective],\n\t\t            exports: [datetime_picker_component_1.DateTimePickerComponent, datetime_picker_directive_1.DateTimePickerDirective],\n\t\t            entryComponents: [datetime_picker_component_1.DateTimePickerComponent],\n\t\t            providers: [datetime_1.DateTime]\n\t\t        }), \n\t\t        __metadata('design:paramtypes', [])\n\t\t    ], Ng2DatetimePickerModule);\n\t\t    return Ng2DatetimePickerModule;\n\t\t}());\n\t\texports.Ng2DatetimePickerModule = Ng2DatetimePickerModule;\n\t\n\t\n\t/***/ },\n\t/* 1 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\t\n\t/***/ },\n\t/* 2 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\t\n\t/***/ },\n\t/* 3 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\t\n\t/***/ },\n\t/* 4 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(1);\n\t\tvar DateTime = (function () {\n\t\t    function DateTime() {\n\t\t        this.initialize();\n\t\t    }\n\t\t    DateTime.prototype.initialize = function () {\n\t\t        this.months = [\n\t\t            { fullName: 'January', shortName: 'Jan' },\n\t\t            { fullName: 'February', shortName: 'Feb' },\n\t\t            { fullName: 'March', shortName: 'Mar' },\n\t\t            { fullName: 'April', shortName: 'Apr' },\n\t\t            { fullName: 'May', shortName: 'May' },\n\t\t            { fullName: 'June', shortName: 'Jun' },\n\t\t            { fullName: 'July', shortName: 'Jul' },\n\t\t            { fullName: 'August', shortName: 'Aug' },\n\t\t            { fullName: 'September', shortName: 'Sep' },\n\t\t            { fullName: 'October', shortName: 'Oct' },\n\t\t            { fullName: 'November', shortName: 'Nov' },\n\t\t            { fullName: 'December', shortName: 'Dec' }\n\t\t        ];\n\t\t        this.days = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31];\n\t\t        /**\n\t\t         * According to International Standard ISO 8601, Monday is the first day of the week\n\t\t         * followed by Tuesday, Wednesday, Thursday, Friday, Saturday,\n\t\t         * and with Sunday as the seventh and final day.\n\t\t         * However, in Javascript Sunday is 0, Monday is 1.. and so on\n\t\t         */\n\t\t        this.daysOfWeek = [\n\t\t            { fullName: 'Sunday', shortName: 'Su', weekend: true },\n\t\t            { fullName: 'Monday', shortName: 'Mo' },\n\t\t            { fullName: 'Tuesday', shortName: 'Tu' },\n\t\t            { fullName: 'Wednesday', shortName: 'We' },\n\t\t            { fullName: 'Thursday', shortName: 'Th' },\n\t\t            { fullName: 'Friday', shortName: 'Fr' },\n\t\t            { fullName: 'Saturday', shortName: 'Sa', weekend: true }\n\t\t        ];\n\t\t        /**\n\t\t         * if momentjs is available, use momentjs localized months, week, etc.\n\t\t         */\n\t\t        if (typeof moment !== 'undefined') {\n\t\t            this.months = this.months.map(function (el, index) {\n\t\t                el.fullName = moment.months()[index];\n\t\t                el.shortName = moment.monthsShort()[index];\n\t\t                return el;\n\t\t            });\n\t\t            this.daysOfWeek = this.daysOfWeek.map(function (el, index) {\n\t\t                el.fullName = moment.weekdays()[index];\n\t\t                el.shortName = moment.weekdaysShort()[index].substr(0, 2);\n\t\t                return el;\n\t\t            });\n\t\t            this.firstDayOfWeek = moment.localeData().firstDayOfWeek();\n\t\t        }\n\t\t        this.firstDayOfWeek = this.firstDayOfWeek || 0;\n\t\t        this.localizedDaysOfWeek = this.daysOfWeek\n\t\t            .concat(this.daysOfWeek)\n\t\t            .splice(this.firstDayOfWeek, 7);\n\t\t    };\n\t\t    DateTime.prototype.getMonthData = function (year, month) {\n\t\t        year = month > 11 ? year + 1 :\n\t\t            month < 0 ? year - 1 : year;\n\t\t        month = (month + 12) % 12;\n\t\t        var firstDayOfMonth = new Date(year, month, 1);\n\t\t        var lastDayOfMonth = new Date(year, month + 1, 0);\n\t\t        var lastDayOfPreviousMonth = new Date(year, month, 0);\n\t\t        var daysInMonth = lastDayOfMonth.getDate();\n\t\t        var daysInLastMonth = lastDayOfPreviousMonth.getDate();\n\t\t        var dayOfWeek = firstDayOfMonth.getDay();\n\t\t        // Ensure there are always leading days to give context\n\t\t        var leadingDays = (dayOfWeek - this.firstDayOfWeek + 7) % 7 || 7;\n\t\t        var trailingDays = this.days.slice(0, 6 * 7 - (leadingDays + daysInMonth));\n\t\t        if (trailingDays.length > 7) {\n\t\t            trailingDays = trailingDays.slice(0, trailingDays.length - 7);\n\t\t        }\n\t\t        var monthData = {\n\t\t            year: year,\n\t\t            month: month,\n\t\t            days: this.days.slice(0, daysInMonth),\n\t\t            leadingDays: this.days.slice(-leadingDays - (31 - daysInLastMonth), daysInLastMonth),\n\t\t            trailingDays: trailingDays\n\t\t        };\n\t\t        return monthData;\n\t\t    };\n\t\t    ;\n\t\t    DateTime.momentFormatDate = function (d, dateFormat) {\n\t\t        if (typeof moment === 'undefined') {\n\t\t            console.error(\"momentjs is required with dateFormat.\\n        please add <script src=\\\"moment.min.js\\\"></script>\\\"> in your html.\");\n\t\t        }\n\t\t        return moment(d).format(dateFormat);\n\t\t    };\n\t\t    DateTime.momentParse = function (dateStr) {\n\t\t        if (typeof moment === 'undefined') {\n\t\t            console.error(\"momentjs is required with dateFormat.\\n        please add <script src=\\\"moment.min.js\\\"></script>\\\"> in your html.\");\n\t\t        }\n\t\t        return moment(dateStr).toDate();\n\t\t    };\n\t\t    DateTime.formatDate = function (d, dateOnly) {\n\t\t        // return d.toLocaleString('en-us', hash); // IE11 does not understand this\n\t\t        var pad0 = function (number) {\n\t\t            return (\"0\" + number).slice(-2);\n\t\t        };\n\t\t        var ret = d.getFullYear() + '-' + pad0(d.getMonth() + 1) + '-' + pad0(d.getDate());\n\t\t        if (!dateOnly) {\n\t\t            ret += ' ' + pad0(d.getHours()) + ':' + pad0(d.getMinutes());\n\t\t        }\n\t\t        return ret;\n\t\t    };\n\t\t    //return date as given from given string\n\t\t    // without considering timezone and day light saving time considered\n\t\t    DateTime.parse = function (dateStr) {\n\t\t        dateStr = DateTime.removeTimezone(dateStr);\n\t\t        dateStr = dateStr + DateTime.addDSTOffset(dateStr);\n\t\t        return DateTime.getDateFromString(dateStr);\n\t\t    };\n\t\t    //remove timezone\n\t\t    DateTime.removeTimezone = function (dateStr) {\n\t\t        // if no time is given, add 00:00:00 at the end\n\t\t        var matches = dateStr.match(/[0-9]{2}:/);\n\t\t        dateStr += matches ? '' : ' 00:00:00';\n\t\t        return dateStr.replace(/([0-9]{2}-[0-9]{2})-([0-9]{4})/, '$2-$1') //mm-dd-yyyy to yyyy-mm-dd\n\t\t            .replace(/([\\/-][0-9]{2,4})\\ ([0-9]{2}\\:[0-9]{2}\\:)/, '$1T$2') //reformat for FF\n\t\t            .replace(/EDT|EST|CDT|CST|MDT|PDT|PST|UT|GMT/g, '') //remove timezone\n\t\t            .replace(/\\s*\\(\\)\\s*/, '') //remove timezone\n\t\t            .replace(/[\\-\\+][0-9]{2}:?[0-9]{2}$/, '') //remove timezone\n\t\t            .replace(/000Z$/, '00'); //remove timezone\n\t\t    };\n\t\t    DateTime.addDSTOffset = function (dateStr) {\n\t\t        var date = DateTime.getDateFromString(dateStr);\n\t\t        var jan = new Date(date.getFullYear(), 0, 1);\n\t\t        var jul = new Date(date.getFullYear(), 6, 1);\n\t\t        var stdTimezoneOffset = Math.max(jan.getTimezoneOffset(), jul.getTimezoneOffset());\n\t\t        var isDST = date.getTimezoneOffset() < stdTimezoneOffset;\n\t\t        var offset = isDST ? stdTimezoneOffset - 60 : stdTimezoneOffset;\n\t\t        var diff = offset >= 0 ? '-' : '+';\n\t\t        offset = Math.abs(offset);\n\t\t        return diff +\n\t\t            ('0' + (offset / 60)).slice(-2) + ':' +\n\t\t            ('0' + (offset % 60)).slice(-2);\n\t\t    };\n\t\t    ;\n\t\t    DateTime.getDateFromString = function (dateStr) {\n\t\t        var tmp = dateStr.split(/[\\+\\-:\\ T]/); // split by dash, colon or space\n\t\t        return new Date(parseInt(tmp[0], 10), parseInt(tmp[1], 10) - 1, parseInt(tmp[2], 10), parseInt(tmp[3] || '0', 10), parseInt(tmp[4] || '0', 10), parseInt(tmp[5] || '0', 10));\n\t\t    };\n\t\t    DateTime = __decorate([\n\t\t        core_1.Injectable(), \n\t\t        __metadata('design:paramtypes', [])\n\t\t    ], DateTime);\n\t\t    return DateTime;\n\t\t}());\n\t\texports.DateTime = DateTime;\n\t\n\t\n\t/***/ },\n\t/* 5 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(1);\n\t\tvar datetime_1 = __webpack_require__(4);\n\t\t//@TODO\n\t\t// . display currently selected day\n\t\t/**\n\t\t * show a selected date in monthly calendar\n\t\t */\n\t\tvar DateTimePickerComponent = (function () {\n\t\t    function DateTimePickerComponent(elementRef, dateTime, cdRef) {\n\t\t        this.dateTime = dateTime;\n\t\t        this.cdRef = cdRef;\n\t\t        this.changes = new core_1.EventEmitter();\n\t\t        this.closing = new core_1.EventEmitter();\n\t\t        this.el = elementRef.nativeElement;\n\t\t    }\n\t\t    DateTimePickerComponent.prototype.ngAfterViewInit = function () {\n\t\t        if (!this.dateOnly) {\n\t\t            this._hours.nativeElement.addEventListener('keyup', function (e) {\n\t\t                e.stopPropagation();\n\t\t            });\n\t\t            this._hours.nativeElement.addEventListener('mousedown', function (e) {\n\t\t                e.stopPropagation();\n\t\t            });\n\t\t            this._minutes.nativeElement.addEventListener('keyup', function (e) {\n\t\t                e.stopPropagation();\n\t\t            });\n\t\t            this._minutes.nativeElement.addEventListener('mousedown', function (e) {\n\t\t                e.stopPropagation();\n\t\t            });\n\t\t        }\n\t\t    };\n\t\t    Object.defineProperty(DateTimePickerComponent.prototype, \"year\", {\n\t\t        get: function () {\n\t\t            return this.selectedDate.getFullYear();\n\t\t        },\n\t\t        enumerable: true,\n\t\t        configurable: true\n\t\t    });\n\t\t    Object.defineProperty(DateTimePickerComponent.prototype, \"month\", {\n\t\t        get: function () {\n\t\t            return this.selectedDate.getMonth();\n\t\t        },\n\t\t        enumerable: true,\n\t\t        configurable: true\n\t\t    });\n\t\t    Object.defineProperty(DateTimePickerComponent.prototype, \"day\", {\n\t\t        get: function () {\n\t\t            return this.selectedDate.getDate();\n\t\t        },\n\t\t        enumerable: true,\n\t\t        configurable: true\n\t\t    });\n\t\t    Object.defineProperty(DateTimePickerComponent.prototype, \"today\", {\n\t\t        get: function () {\n\t\t            var dt = new Date();\n\t\t            dt.setHours(0);\n\t\t            dt.setMinutes(0);\n\t\t            dt.setSeconds(0);\n\t\t            dt.setMilliseconds(0);\n\t\t            return dt;\n\t\t        },\n\t\t        enumerable: true,\n\t\t        configurable: true\n\t\t    });\n\t\t    DateTimePickerComponent.prototype.initDateTime = function (date) {\n\t\t        this.selectedDate = date;\n\t\t        this.hour = this.selectedDate.getHours();\n\t\t        this.minute = this.selectedDate.getMinutes();\n\t\t        this.monthData = this.dateTime.getMonthData(this.year, this.month);\n\t\t    };\n\t\t    DateTimePickerComponent.prototype.toDate = function (year, month, day) {\n\t\t        return new Date(year, month, day);\n\t\t    };\n\t\t    DateTimePickerComponent.prototype.toDateOnly = function (date) {\n\t\t        return new Date(date.getFullYear(), date.getMonth(), date.getDate(), 0, 0, 0, 0);\n\t\t    };\n\t\t    /**\n\t\t     * set the selected date and close it when closeOnSelect is true\n\t\t     * @param date {Date}\n\t\t     */\n\t\t    DateTimePickerComponent.prototype.selectDate = function (dayNum) {\n\t\t        if (dayNum) {\n\t\t            this.selectedDate = new Date(this.monthData.year, this.monthData.month, dayNum);\n\t\t        }\n\t\t        this.changes.emit({\n\t\t            selectedDate: this.selectedDate,\n\t\t            hour: this.hour,\n\t\t            minute: this.minute\n\t\t        });\n\t\t        this.closing.emit(true);\n\t\t    };\n\t\t    ;\n\t\t    /**\n\t\t     * show prev/next month calendar\n\t\t     */\n\t\t    DateTimePickerComponent.prototype.updateMonthData = function (num) {\n\t\t        this.monthData = this.dateTime.getMonthData(this.monthData.year, this.monthData.month + num);\n\t\t    };\n\t\t    __decorate([\n\t\t        core_1.ViewChild('hours'), \n\t\t        __metadata('design:type', core_1.ElementRef)\n\t\t    ], DateTimePickerComponent.prototype, \"_hours\", void 0);\n\t\t    __decorate([\n\t\t        core_1.ViewChild('minutes'), \n\t\t        __metadata('design:type', core_1.ElementRef)\n\t\t    ], DateTimePickerComponent.prototype, \"_minutes\", void 0);\n\t\t    DateTimePickerComponent = __decorate([\n\t\t        core_1.Component({\n\t\t            providers: [datetime_1.DateTime],\n\t\t            selector: 'datetime-picker',\n\t\t            template: \"\\n<div class=\\\"datetime-picker\\\" tabindex=\\\"0\\\">\\n\\n  <!-- Month - Year  -->\\n  <div class=\\\"month\\\">\\n    <button type=\\\"button\\\" class=\\\"prev\\\" (click)=\\\"updateMonthData(-1)\\\">&laquo;</button>\\n     <span title=\\\"{{dateTime.months[monthData.month].fullName}}\\\">\\n           {{dateTime.months[monthData.month].shortName}}\\n     </span>\\n    {{monthData.year}}\\n    <button type=\\\"button\\\" class=\\\"next\\\" (click)=\\\"updateMonthData(+1)\\\">&raquo;</button>\\n  </div>\\n\\n  <div class=\\\"days\\\">\\n\\n    <!-- Su Mo Tu We Th Fr Sa -->\\n    <div class=\\\"day-of-week\\\"\\n         *ngFor=\\\"let dayOfWeek of dateTime.localizedDaysOfWeek\\\"\\n         [ngClass]=\\\"{weekend: dayOfWeek.weekend}\\\"\\n         title=\\\"{{dayOfWeek.fullName}}\\\">\\n      {{dayOfWeek.shortName}}\\n    </div>\\n\\n    <!-- Fill up blank days for this month -->\\n    <div *ngIf=\\\"monthData.leadingDays.length < 7\\\">\\n      <div class=\\\"day\\\" *ngFor=\\\"let dayNum of monthData.leadingDays\\\"\\n           [ngClass]=\\\"{weekend: [0,6].indexOf(toDate(monthData.year, monthData.month-1, dayNum).getDay()) !== -1}\\\">\\n        {{dayNum}}\\n      </div>\\n    </div>\\n\\n    <div class=\\\"day selectable\\\"\\n         *ngFor=\\\"let dayNum of monthData.days\\\"\\n         (click)=\\\"selectDate(dayNum)\\\"\\n         title=\\\"{{monthData.year}}-{{monthData.month+1}}-{{dayNum}}\\\"\\n         [ngClass]=\\\"{\\n           selected:\\n             toDate(monthData.year, monthData.month, dayNum).getTime() === toDateOnly(selectedDate).getTime(),\\n           today:\\n             toDate(monthData.year, monthData.month, dayNum).getTime() === today.getTime(),\\n           weekend:\\n             [0,6].indexOf(toDate(monthData.year, monthData.month, dayNum).getDay()) !== -1\\n         }\\\">\\n      {{dayNum}}\\n    </div>\\n\\n    <!-- Fill up blank days for this month -->\\n    <div *ngIf=\\\"monthData.trailingDays.length < 7\\\">\\n      <div class=\\\"day\\\"\\n           *ngFor=\\\"let dayNum of monthData.trailingDays\\\"\\n           [ngClass]=\\\"{weekend: [0,6].indexOf(toDate(monthData.year, monthData.month+1, dayNum).getDay()) !== -1}\\\">\\n        {{dayNum}}\\n      </div>\\n    </div>\\n  </div>\\n\\n  <!-- Time -->\\n  <div class=\\\"days\\\" id=\\\"time\\\" *ngIf=\\\"!dateOnly\\\">\\n    <label class=\\\"timeLabel\\\">Time:</label>\\n    <span class=\\\"timeValue\\\">\\n      {{(\\\"0\\\"+hour).slice(-2)}} : {{(\\\"0\\\"+minute).slice(-2)}}\\n    </span><br/>\\n    <label class=\\\"hourLabel\\\">Hour:</label>\\n    <input #hours class=\\\"hourInput\\\"\\n           (change)=\\\"selectDate()\\\"\\n           type=\\\"range\\\" min=\\\"0\\\" max=\\\"23\\\" [(ngModel)]=\\\"hour\\\" />\\n    <label class=\\\"minutesLabel\\\">Min:</label>\\n    <input #minutes class=\\\"minutesInput\\\"\\n           (change)=\\\"selectDate()\\\"\\n           type=\\\"range\\\" min=\\\"0\\\" max=\\\"59\\\" range=\\\"10\\\" [(ngModel)]=\\\"minute\\\"/>\\n  </div>\\n</div>\\n\\n<!--<hr/>-->\\n<!--Date: {{selectedDate}}<br/>-->\\n<!--Hour: {{hour}} Minute: {{minute}}<br/>-->\\n  \",\n\t\t            styles: [\n\t\t                \"\\n @keyframes slideDown {\\n  0% {\\n    transform:  translateY(-10px);\\n  }\\n  100% {\\n    transform: translateY(0px);\\n  }\\n}\\n\\n.datetime-picker {\\n    color: #333;\\n    outline-width: 0;\\n    font: normal 14px sans-serif;\\n    border: 1px solid #ddd;\\n    display: inline-block;\\n    background: #fff;\\n    animation: slideDown 0.1s ease-in-out;\\n    animation-fill-mode: both;\\n}\\n.datetime-picker > .month {\\n    text-align: center;\\n    line-height: 22px;\\n    padding: 10px;\\n    background: #fcfcfc;\\n    text-transform: uppercase;\\n    font-weight: bold;\\n    border-bottom: 1px solid #ddd;\\n    position: relative;\\n}\\n.datetime-picker > .month > button {\\n    color: #555;\\n    font: normal 14px sans-serif;\\n    outline: none;\\n    position: absolute;\\n    background: transparent;\\n    border: none;\\n    cursor: pointer;\\n}\\n.datetime-picker > .month > button:hover {\\n    color: #333;\\n}\\n.datetime-picker > .month > button.prev {\\n    left: 10px;\\n}\\n.datetime-picker > .month > button.next {\\n    right: 10px;\\n}\\n.datetime-picker > .days {\\n    width: 210px; /* 30 x 7 */\\n    margin: 10px;\\n    text-align: center;\\n}\\n.datetime-picker > .days .day-of-week,\\n.datetime-picker > .days .day {\\n    box-sizing: border-box;\\n    -moz-box-sizing: border-box;\\n    border: 1px solid transparent;\\n    width: 30px;\\n    line-height: 28px;\\n    float: left;\\n}\\n.datetime-picker > .days .day-of-week {\\n    font-weight: bold;\\n}\\n.datetime-picker > .days .day-of-week.weekend {\\n    color: #ccc;\\n    background-color: inherit;\\n}\\n.datetime-picker > .days .day:not(.selectable) {\\n    color: #ccc;\\n    cursor: default;\\n}\\n.datetime-picker > .days .weekend {\\n    color: #ccc;\\n    background-color: #eee;\\n}\\n.datetime-picker > .days .day.selectable  {\\n    cursor: pointer;\\n}\\n.datetime-picker > .days .day.selected {\\n    background: gray;\\n    color: #fff;\\n}\\n.datetime-picker > .days .day:not(.selected).selectable:hover {\\n    background: #eee;\\n}\\n.datetime-picker > .days:after {\\n    content: '';\\n    display: block;\\n    clear: left;\\n    height: 0;\\n}\\n.datetime-picker .hourLabel,\\n.datetime-picker .minutesLabel {\\n    display: inline-block;\\n    width: 40px;\\n    text-align: right;\\n}\\n.datetime-picker input[type=range] {\\n    width: 150px;\\n}\\n  \"\n\t\t            ],\n\t\t            encapsulation: core_1.ViewEncapsulation.None\n\t\t        }), \n\t\t        __metadata('design:paramtypes', [core_1.ElementRef, datetime_1.DateTime, core_1.ChangeDetectorRef])\n\t\t    ], DateTimePickerComponent);\n\t\t    return DateTimePickerComponent;\n\t\t}());\n\t\texports.DateTimePickerComponent = DateTimePickerComponent;\n\t\n\t\n\t/***/ },\n\t/* 6 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(1);\n\t\tvar datetime_picker_component_1 = __webpack_require__(5);\n\t\tvar datetime_1 = __webpack_require__(4);\n\t\t/**\n\t\t * To simplify the implementation, it limits the type if value to string only, not a date\n\t\t * If the given string is not a valid date, it defaults back to today\n\t\t */\n\t\tvar DateTimePickerDirective = (function () {\n\t\t    function DateTimePickerDirective(_resolver, _viewContainerRef) {\n\t\t        var _this = this;\n\t\t        this._resolver = _resolver;\n\t\t        this._viewContainerRef = _viewContainerRef;\n\t\t        /**\n\t\t         * @deprecated\n\t\t         */\n\t\t        this.ngModelChange = new core_1.EventEmitter();\n\t\t        this.valueChange = new core_1.EventEmitter();\n\t\t        this._keyEventListener = function (e) {\n\t\t            if (e.keyCode === 27) {\n\t\t                _this.hideDatetimePicker();\n\t\t            }\n\t\t        };\n\t\t        this.hideDatetimePicker = function (event) {\n\t\t            if (_this._componentRef) {\n\t\t                if (event && event.type === 'click' &&\n\t\t                    event.target !== _this._el && !_this._elementIn(event.target, _this._datetimePicker)) {\n\t\t                    _this._componentRef.destroy();\n\t\t                    _this._componentRef = undefined;\n\t\t                }\n\t\t                else if (!event) {\n\t\t                    _this._componentRef.destroy();\n\t\t                    _this._componentRef = undefined;\n\t\t                }\n\t\t            }\n\t\t        };\n\t\t        this._el = this._viewContainerRef.element.nativeElement;\n\t\t    }\n\t\t    DateTimePickerDirective.prototype.ngOnInit = function () {\n\t\t        //wrap this element with a <div> tag, so that we can position dynamic elememnt correctly\n\t\t        var wrapper = document.createElement(\"div\");\n\t\t        wrapper.className = 'ng2-datetime-picker';\n\t\t        wrapper.style.display = 'inline-block';\n\t\t        wrapper.style.position = 'relative';\n\t\t        this._el.parentElement.insertBefore(wrapper, this._el.nextSibling);\n\t\t        wrapper.appendChild(this._el);\n\t\t        this._registerEventListeners();\n\t\t    };\n\t\t    DateTimePickerDirective.prototype.ngOnChanges = function (changes) {\n\t\t        var _this = this;\n\t\t        if (changes['value'] !== undefined || changes['ngModel'] !== undefined) {\n\t\t            if (changes['ngModel'] !== undefined) {\n\t\t                this.value = this.ngModel;\n\t\t            }\n\t\t            var dateNgModel_1;\n\t\t            if (typeof this.value === 'string') {\n\t\t                //remove timezone and respect day light saving time\n\t\t                dateNgModel_1 = this.dateFormat ?\n\t\t                    datetime_1.DateTime.momentParse('' + this.value) :\n\t\t                    datetime_1.DateTime.parse('' + this.value);\n\t\t            }\n\t\t            else if (this.value instanceof Date) {\n\t\t                dateNgModel_1 = this.value;\n\t\t            }\n\t\t            else {\n\t\t                dateNgModel_1 = new Date();\n\t\t            }\n\t\t            var formatted = void 0;\n\t\t            if (this.dateFormat) {\n\t\t                formatted = datetime_1.DateTime.momentFormatDate(dateNgModel_1, this.dateFormat);\n\t\t            }\n\t\t            else {\n\t\t                formatted = datetime_1.DateTime.formatDate(dateNgModel_1, this.dateOnly);\n\t\t            }\n\t\t            this._el['value'] = formatted;\n\t\t            this._value = dateNgModel_1;\n\t\t            // @deprecated\n\t\t            if (this.dateFormat) {\n\t\t                dateNgModel_1.toString = function () {\n\t\t                    return datetime_1.DateTime.momentFormatDate(dateNgModel_1, _this.dateFormat);\n\t\t                };\n\t\t            }\n\t\t            else {\n\t\t                dateNgModel_1.toString = function () {\n\t\t                    return datetime_1.DateTime.formatDate(dateNgModel_1, _this.dateOnly);\n\t\t                };\n\t\t            }\n\t\t            setTimeout(function () {\n\t\t                _this.ngModelChange.emit(dateNgModel_1);\n\t\t            });\n\t\t            this._initDate();\n\t\t        }\n\t\t    };\n\t\t    DateTimePickerDirective.prototype.ngOnDestroy = function () {\n\t\t        // add a click listener to document, so that it can hide when others clicked\n\t\t        document.body.removeEventListener('click', this.hideDatetimePicker);\n\t\t        this._el.removeEventListener('keyup', this._keyEventListener);\n\t\t        if (this._datetimePicker) {\n\t\t            this._datetimePicker.removeEventListener('keyup', this._keyEventListener);\n\t\t        }\n\t\t    };\n\t\t    //show datetimePicker below the current element\n\t\t    DateTimePickerDirective.prototype.showDatetimePicker = function () {\n\t\t        var _this = this;\n\t\t        if (this._componentRef) {\n\t\t            return;\n\t\t        }\n\t\t        var factory = this._resolver.resolveComponentFactory(datetime_picker_component_1.DateTimePickerComponent);\n\t\t        this._componentRef = this._viewContainerRef.createComponent(factory);\n\t\t        this._datetimePicker = this._componentRef.location.nativeElement;\n\t\t        this._datetimePicker.addEventListener('keyup', this._keyEventListener);\n\t\t        this._initDate();\n\t\t        this._styleDatetimePicker();\n\t\t        var component = this._componentRef.instance;\n\t\t        component.changes.subscribe(function (changes) {\n\t\t            var newNgModel = new Date(changes.selectedDate);\n\t\t            newNgModel.setHours(parseInt(changes.hour, 10));\n\t\t            newNgModel.setMinutes(parseInt(changes.minute, 10));\n\t\t            var formatted;\n\t\t            if (_this.dateFormat) {\n\t\t                formatted = datetime_1.DateTime.momentFormatDate(newNgModel, _this.dateFormat);\n\t\t            }\n\t\t            else {\n\t\t                formatted = datetime_1.DateTime.formatDate(newNgModel, _this.dateOnly);\n\t\t            }\n\t\t            _this._el['value'] = formatted;\n\t\t            _this._value = newNgModel;\n\t\t            _this.valueChange.emit(newNgModel);\n\t\t            // @deprecated\n\t\t            if (_this.dateFormat) {\n\t\t                newNgModel.toString = function () {\n\t\t                    return datetime_1.DateTime.momentFormatDate(newNgModel, _this.dateFormat);\n\t\t                };\n\t\t            }\n\t\t            else {\n\t\t                newNgModel.toString = function () {\n\t\t                    return datetime_1.DateTime.formatDate(newNgModel, _this.dateOnly);\n\t\t                };\n\t\t            }\n\t\t            _this.ngModelChange.emit(newNgModel);\n\t\t        });\n\t\t        component.closing.subscribe(function () {\n\t\t            if (_this.closeOnSelect !== \"false\") {\n\t\t                _this.hideDatetimePicker();\n\t\t            }\n\t\t        });\n\t\t    };\n\t\t    DateTimePickerDirective.prototype._elementIn = function (el, containerEl) {\n\t\t        while (el = el.parentNode) {\n\t\t            if (el === containerEl)\n\t\t                return true;\n\t\t        }\n\t\t        return false;\n\t\t    };\n\t\t    DateTimePickerDirective.prototype._initDate = function () {\n\t\t        if (this._componentRef) {\n\t\t            var component = this._componentRef.instance;\n\t\t            component.initDateTime(this._value);\n\t\t            component.dateOnly = this.dateOnly;\n\t\t        }\n\t\t    };\n\t\t    DateTimePickerDirective.prototype._registerEventListeners = function () {\n\t\t        // add a click listener to document, so that it can hide when others clicked\n\t\t        document.body.addEventListener('click', this.hideDatetimePicker);\n\t\t        this._el.addEventListener('keyup', this._keyEventListener);\n\t\t    };\n\t\t    DateTimePickerDirective.prototype._styleDatetimePicker = function () {\n\t\t        var _this = this;\n\t\t        // setting width/height auto complete\n\t\t        var thisElBCR = this._el.getBoundingClientRect();\n\t\t        this._datetimePicker.style.width = thisElBCR.width + 'px';\n\t\t        this._datetimePicker.style.position = 'absolute';\n\t\t        this._datetimePicker.style.zIndex = '1000';\n\t\t        this._datetimePicker.style.left = '0';\n\t\t        this._datetimePicker.style.transition = 'height 0.3s ease-in';\n\t\t        this._datetimePicker.style.visibility = 'hidden';\n\t\t        setTimeout(function () {\n\t\t            var thisElBcr = _this._el.getBoundingClientRect();\n\t\t            var datetimePickerElBcr = _this._datetimePicker.getBoundingClientRect();\n\t\t            if (thisElBcr.bottom + datetimePickerElBcr.height > window.innerHeight) {\n\t\t                // if not enough space to show on below, show above\n\t\t                _this._datetimePicker.style.bottom = '0';\n\t\t            }\n\t\t            else {\n\t\t                // otherwise, show below\n\t\t                _this._datetimePicker.style.top = thisElBcr.height + 'px';\n\t\t            }\n\t\t            _this._datetimePicker.style.visibility = 'visible';\n\t\t        });\n\t\t    };\n\t\t    ;\n\t\t    __decorate([\n\t\t        core_1.Input('date-format'), \n\t\t        __metadata('design:type', String)\n\t\t    ], DateTimePickerDirective.prototype, \"dateFormat\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input('date-only'), \n\t\t        __metadata('design:type', Boolean)\n\t\t    ], DateTimePickerDirective.prototype, \"dateOnly\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input('close-on-select'), \n\t\t        __metadata('design:type', String)\n\t\t    ], DateTimePickerDirective.prototype, \"closeOnSelect\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input(), \n\t\t        __metadata('design:type', Date)\n\t\t    ], DateTimePickerDirective.prototype, \"ngModel\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Output(), \n\t\t        __metadata('design:type', core_1.EventEmitter)\n\t\t    ], DateTimePickerDirective.prototype, \"ngModelChange\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input('value'), \n\t\t        __metadata('design:type', Object)\n\t\t    ], DateTimePickerDirective.prototype, \"value\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Output('valueChange'), \n\t\t        __metadata('design:type', core_1.EventEmitter)\n\t\t    ], DateTimePickerDirective.prototype, \"valueChange\", void 0);\n\t\t    DateTimePickerDirective = __decorate([\n\t\t        core_1.Directive({\n\t\t            selector: '[datetime-picker], [ng2-datetime-picker]',\n\t\t            providers: [datetime_1.DateTime],\n\t\t            host: {\n\t\t                '(click)': 'showDatetimePicker()'\n\t\t            }\n\t\t        }), \n\t\t        __metadata('design:paramtypes', [core_1.ComponentFactoryResolver, core_1.ViewContainerRef])\n\t\t    ], DateTimePickerDirective);\n\t\t    return DateTimePickerDirective;\n\t\t}());\n\t\texports.DateTimePickerDirective = DateTimePickerDirective;\n\t\n\t\n\t/***/ }\n\t/******/ ])\n\t});\n\t;\n\t//# sourceMappingURL=ng2-datetime-picker.umd.js.map\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function webpackUniversalModuleDefinition(root, factory) {\n\t\tif(true)\n\t\t\tmodule.exports = factory(__webpack_require__(1), __webpack_require__(2), __webpack_require__(3));\n\t\telse if(typeof define === 'function' && define.amd)\n\t\t\tdefine([\"@angular/core\", \"@angular/forms\", \"@angular/platform-browser\"], factory);\n\t\telse if(typeof exports === 'object')\n\t\t\texports[\"ng2-collapsable\"] = factory(require(\"@angular/core\"), require(\"@angular/forms\"), require(\"@angular/platform-browser\"));\n\t\telse\n\t\t\troot[\"ng2-collapsable\"] = factory(root[\"@angular/core\"], root[\"@angular/forms\"], root[\"@angular/platform-browser\"]);\n\t})(this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__) {\n\treturn /******/ (function(modules) { // webpackBootstrap\n\t/******/ \t// The module cache\n\t/******/ \tvar installedModules = {};\n\t/******/\n\t/******/ \t// The require function\n\t/******/ \tfunction __webpack_require__(moduleId) {\n\t/******/\n\t/******/ \t\t// Check if module is in cache\n\t/******/ \t\tif(installedModules[moduleId])\n\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\t/******/\n\t/******/ \t\t// Create a new module (and put it into the cache)\n\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t/******/ \t\t\texports: {},\n\t/******/ \t\t\tid: moduleId,\n\t/******/ \t\t\tloaded: false\n\t/******/ \t\t};\n\t/******/\n\t/******/ \t\t// Execute the module function\n\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t/******/\n\t/******/ \t\t// Flag the module as loaded\n\t/******/ \t\tmodule.loaded = true;\n\t/******/\n\t/******/ \t\t// Return the exports of the module\n\t/******/ \t\treturn module.exports;\n\t/******/ \t}\n\t/******/\n\t/******/\n\t/******/ \t// expose the modules object (__webpack_modules__)\n\t/******/ \t__webpack_require__.m = modules;\n\t/******/\n\t/******/ \t// expose the module cache\n\t/******/ \t__webpack_require__.c = installedModules;\n\t/******/\n\t/******/ \t// __webpack_public_path__\n\t/******/ \t__webpack_require__.p = \"\";\n\t/******/\n\t/******/ \t// Load entry module and return exports\n\t/******/ \treturn __webpack_require__(0);\n\t/******/ })\n\t/************************************************************************/\n\t/******/ ([\n\t/* 0 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(1);\n\t\tvar forms_1 = __webpack_require__(2);\n\t\tvar platform_browser_1 = __webpack_require__(3);\n\t\tvar ng2_collapsable_component_1 = __webpack_require__(4);\n\t\texports.Ng2CollapsableComponent = ng2_collapsable_component_1.Ng2CollapsableComponent;\n\t\tvar Ng2CollapsableModule = (function () {\n\t\t    function Ng2CollapsableModule() {\n\t\t    }\n\t\t    Ng2CollapsableModule = __decorate([\n\t\t        core_1.NgModule({\n\t\t            imports: [platform_browser_1.BrowserModule, forms_1.FormsModule],\n\t\t            declarations: [ng2_collapsable_component_1.Ng2CollapsableComponent],\n\t\t            exports: [ng2_collapsable_component_1.Ng2CollapsableComponent]\n\t\t        }), \n\t\t        __metadata('design:paramtypes', [])\n\t\t    ], Ng2CollapsableModule);\n\t\t    return Ng2CollapsableModule;\n\t\t}());\n\t\texports.Ng2CollapsableModule = Ng2CollapsableModule;\n\t\n\t\n\t/***/ },\n\t/* 1 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\t\n\t/***/ },\n\t/* 2 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\t\n\t/***/ },\n\t/* 3 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\t\n\t/***/ },\n\t/* 4 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(1);\n\t\tvar Ng2CollapsableComponent = (function () {\n\t\t    function Ng2CollapsableComponent(viewContainer) {\n\t\t        this.viewContainer = viewContainer;\n\t\t        this.selectedIndexClass = 'selected';\n\t\t        this.selectedContentsClass = 'selected';\n\t\t        this.el = this.viewContainer.element.nativeElement;\n\t\t    }\n\t\t    Ng2CollapsableComponent.prototype.ngAfterViewInit = function () {\n\t\t        var _this = this;\n\t\t        this.indexEls = [].slice.call(this.el.querySelectorAll('[index]'));\n\t\t        this.contentsEls = [].slice.call(this.el.querySelectorAll('[contents]'));\n\t\t        this.selectTab(this.selectedIndex);\n\t\t        this.indexEls.forEach(function (el) {\n\t\t            el.addEventListener('click', function () {\n\t\t                _this.selectTab(el.getAttribute('index'));\n\t\t            });\n\t\t        });\n\t\t    };\n\t\t    Ng2CollapsableComponent.prototype.selectTab = function (id) {\n\t\t        var _this = this;\n\t\t        id = id || this.indexEls[0].getAttribute('index');\n\t\t        this.indexEls.forEach(function (el) {\n\t\t            _this.removeClass(el, _this.selectedIndexClass);\n\t\t            if (el.getAttribute('index') == id) {\n\t\t                _this.addClass(el, _this.selectedIndexClass);\n\t\t            }\n\t\t        });\n\t\t        this.contentsEls.forEach(function (el) {\n\t\t            _this.removeClass(el, _this.selectedContentsClass);\n\t\t            if (el.getAttribute('contents') == id) {\n\t\t                _this.addClass(el, _this.selectedContentsClass);\n\t\t            }\n\t\t        });\n\t\t    };\n\t\t    Ng2CollapsableComponent.prototype.addClass = function (el, str) {\n\t\t        var classNames = (el.className || '').split(' ');\n\t\t        classNames.push(str);\n\t\t        el.className = classNames.join(' ');\n\t\t    };\n\t\t    Ng2CollapsableComponent.prototype.removeClass = function (el, str) {\n\t\t        el.className = (el.className || '').replace(new RegExp('[ ]*' + str), '');\n\t\t    };\n\t\t    __decorate([\n\t\t        core_1.Input('selected'), \n\t\t        __metadata('design:type', String)\n\t\t    ], Ng2CollapsableComponent.prototype, \"selectedIndex\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input('selected-index-class'), \n\t\t        __metadata('design:type', String)\n\t\t    ], Ng2CollapsableComponent.prototype, \"selectedIndexClass\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input('selected-contents-class'), \n\t\t        __metadata('design:type', String)\n\t\t    ], Ng2CollapsableComponent.prototype, \"selectedContentsClass\", void 0);\n\t\t    Ng2CollapsableComponent = __decorate([\n\t\t        core_1.Component({\n\t\t            selector: 'ng2-collapsable, [ng2-collapsable]',\n\t\t            encapsulation: core_1.ViewEncapsulation.None,\n\t\t            template: \"<ng-content></ng-content>\",\n\t\t            styles: [\"\\n    [ng2-collapsable] [index] {\\n      display: block;\\n      cursor: pointer;\\n      position: relative;\\n      margin: 2px 0 0 0;\\n      padding: .5em .5em .5em .7em;\\n      border: 1px solid #cccccc;\\n      background: #ededed;\\n      font-weight: normal;\\n      border-radius: 2px; \\n      color: #2b2b2b;\\n    }\\n    [ng2-collapsable] [index].selected {\\n      border: 1px solid #003eff;\\n      background: #007fff;\\n      color: #ffffff;\\n      border-radius: 2px 2px 0 0;\\n    }\\n    [ng2-collapsable] [contents] {\\n      border-top: 0;\\n      background: #ffffff;\\n      color: #333333;\\n      padding: 0px;\\n      border-radius: 0 0 2px 2px;\\n      height: 0;\\n      border: 0;\\n      font-size: 0;\\n    }\\n    [ng2-collapsable] [contents].selected {\\n      height: 50px;\\n      padding: 10px;\\n      border: 1px solid #dddddd;\\n      transition: font-size 0.3s ease-in, height 0.3s ease-in;\\n      font-size: inherit;\\n    }\\n  \"],\n\t\t        }), \n\t\t        __metadata('design:paramtypes', [core_1.ViewContainerRef])\n\t\t    ], Ng2CollapsableComponent);\n\t\t    return Ng2CollapsableComponent;\n\t\t}());\n\t\texports.Ng2CollapsableComponent = Ng2CollapsableComponent;\n\t\n\t\n\t/***/ }\n\t/******/ ])\n\t});\n\t;\n\t//# sourceMappingURL=ng2-collapsable.umd.js.map\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function webpackUniversalModuleDefinition(root, factory) {\n\t\tif(true)\n\t\t\tmodule.exports = factory(__webpack_require__(1), __webpack_require__(2), __webpack_require__(3));\n\t\telse if(typeof define === 'function' && define.amd)\n\t\t\tdefine([\"@angular/core\", \"@angular/forms\", \"@angular/platform-browser\"], factory);\n\t\telse if(typeof exports === 'object')\n\t\t\texports[\"ng2-infinite-list\"] = factory(require(\"@angular/core\"), require(\"@angular/forms\"), require(\"@angular/platform-browser\"));\n\t\telse\n\t\t\troot[\"ng2-infinite-list\"] = factory(root[\"@angular/core\"], root[\"@angular/forms\"], root[\"@angular/platform-browser\"]);\n\t})(this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__) {\n\treturn /******/ (function(modules) { // webpackBootstrap\n\t/******/ \t// The module cache\n\t/******/ \tvar installedModules = {};\n\t/******/\n\t/******/ \t// The require function\n\t/******/ \tfunction __webpack_require__(moduleId) {\n\t/******/\n\t/******/ \t\t// Check if module is in cache\n\t/******/ \t\tif(installedModules[moduleId])\n\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\t/******/\n\t/******/ \t\t// Create a new module (and put it into the cache)\n\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t/******/ \t\t\texports: {},\n\t/******/ \t\t\tid: moduleId,\n\t/******/ \t\t\tloaded: false\n\t/******/ \t\t};\n\t/******/\n\t/******/ \t\t// Execute the module function\n\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t/******/\n\t/******/ \t\t// Flag the module as loaded\n\t/******/ \t\tmodule.loaded = true;\n\t/******/\n\t/******/ \t\t// Return the exports of the module\n\t/******/ \t\treturn module.exports;\n\t/******/ \t}\n\t/******/\n\t/******/\n\t/******/ \t// expose the modules object (__webpack_modules__)\n\t/******/ \t__webpack_require__.m = modules;\n\t/******/\n\t/******/ \t// expose the module cache\n\t/******/ \t__webpack_require__.c = installedModules;\n\t/******/\n\t/******/ \t// __webpack_public_path__\n\t/******/ \t__webpack_require__.p = \"\";\n\t/******/\n\t/******/ \t// Load entry module and return exports\n\t/******/ \treturn __webpack_require__(0);\n\t/******/ })\n\t/************************************************************************/\n\t/******/ ([\n\t/* 0 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(1);\n\t\tvar forms_1 = __webpack_require__(2);\n\t\tvar platform_browser_1 = __webpack_require__(3);\n\t\tvar ng2_infinite_list_directive_1 = __webpack_require__(4);\n\t\texports.Ng2InfiniteListDirective = ng2_infinite_list_directive_1.Ng2InfiniteListDirective;\n\t\tvar Ng2InfiniteListModule = (function () {\n\t\t    function Ng2InfiniteListModule() {\n\t\t    }\n\t\t    Ng2InfiniteListModule = __decorate([\n\t\t        core_1.NgModule({\n\t\t            imports: [platform_browser_1.BrowserModule, forms_1.FormsModule],\n\t\t            declarations: [ng2_infinite_list_directive_1.Ng2InfiniteListDirective],\n\t\t            exports: [ng2_infinite_list_directive_1.Ng2InfiniteListDirective]\n\t\t        }), \n\t\t        __metadata('design:paramtypes', [])\n\t\t    ], Ng2InfiniteListModule);\n\t\t    return Ng2InfiniteListModule;\n\t\t}());\n\t\texports.Ng2InfiniteListModule = Ng2InfiniteListModule;\n\t\n\t\n\t/***/ },\n\t/* 1 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\t\n\t/***/ },\n\t/* 2 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\t\n\t/***/ },\n\t/* 3 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\t\n\t/***/ },\n\t/* 4 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(1);\n\t\tvar ng2_utils_1 = __webpack_require__(5);\n\t\tvar Ng2InfiniteListDirective = (function () {\n\t\t    function Ng2InfiniteListDirective(el) {\n\t\t        var _this = this;\n\t\t        this.endVisible = new core_1.EventEmitter();\n\t\t        this.elementVisible = ng2_utils_1.elementVisible;\n\t\t        this.scrollListener = function () {\n\t\t            var visible = _this.elementVisible(_this.endEl, _this.el);\n\t\t            if (_this.horizontal && (visible.left || visible.right)) {\n\t\t                _this.endVisible.emit(true);\n\t\t            }\n\t\t            else if (!_this.horizontal && (visible.top || visible.bottom)) {\n\t\t                _this.endVisible.emit(true);\n\t\t            }\n\t\t        };\n\t\t        this.el = el.nativeElement;\n\t\t    }\n\t\t    // setup list of sections\n\t\t    Ng2InfiniteListDirective.prototype.ngOnInit = function () {\n\t\t        this.endEl = this.el.querySelector('[ng2-infinite-list-end]');\n\t\t        if (!this.endEl) {\n\t\t            throw \"Invalid 'ng2-infinite-list-end\";\n\t\t        }\n\t\t        this.scrollListener();\n\t\t        this.el.addEventListener('scroll', this.scrollListener);\n\t\t        window.addEventListener('resize', this.scrollListener);\n\t\t    };\n\t\t    __decorate([\n\t\t        core_1.Input(), \n\t\t        __metadata('design:type', Boolean)\n\t\t    ], Ng2InfiniteListDirective.prototype, \"horizontal\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Output(), \n\t\t        __metadata('design:type', Object)\n\t\t    ], Ng2InfiniteListDirective.prototype, \"endVisible\", void 0);\n\t\t    Ng2InfiniteListDirective = __decorate([\n\t\t        core_1.Directive({ selector: '[ng2-infinite-list]' }), \n\t\t        __metadata('design:paramtypes', [core_1.ElementRef])\n\t\t    ], Ng2InfiniteListDirective);\n\t\t    return Ng2InfiniteListDirective;\n\t\t}());\n\t\texports.Ng2InfiniteListDirective = Ng2InfiniteListDirective;\n\t\n\t\n\t/***/ },\n\t/* 5 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t(function webpackUniversalModuleDefinition(root, factory) {\n\t\t\tif(true)\n\t\t\t\tmodule.exports = factory(__webpack_require__(1));\n\t\t\telse if(typeof define === 'function' && define.amd)\n\t\t\t\tdefine([\"@angular/core\"], factory);\n\t\t\telse if(typeof exports === 'object')\n\t\t\t\texports[\"ng2-utils\"] = factory(require(\"@angular/core\"));\n\t\t\telse\n\t\t\t\troot[\"ng2-utils\"] = factory(root[\"@angular/core\"]);\n\t\t})(this, function(__WEBPACK_EXTERNAL_MODULE_1__) {\n\t\treturn /******/ (function(modules) { // webpackBootstrap\n\t\t/******/ \t// The module cache\n\t\t/******/ \tvar installedModules = {};\n\t\t/******/\n\t\t/******/ \t// The require function\n\t\t/******/ \tfunction __webpack_require__(moduleId) {\n\t\t/******/\n\t\t/******/ \t\t// Check if module is in cache\n\t\t/******/ \t\tif(installedModules[moduleId])\n\t\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\t\t/******/\n\t\t/******/ \t\t// Create a new module (and put it into the cache)\n\t\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t\t/******/ \t\t\texports: {},\n\t\t/******/ \t\t\tid: moduleId,\n\t\t/******/ \t\t\tloaded: false\n\t\t/******/ \t\t};\n\t\t/******/\n\t\t/******/ \t\t// Execute the module function\n\t\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t\t/******/\n\t\t/******/ \t\t// Flag the module as loaded\n\t\t/******/ \t\tmodule.loaded = true;\n\t\t/******/\n\t\t/******/ \t\t// Return the exports of the module\n\t\t/******/ \t\treturn module.exports;\n\t\t/******/ \t}\n\t\t/******/\n\t\t/******/\n\t\t/******/ \t// expose the modules object (__webpack_modules__)\n\t\t/******/ \t__webpack_require__.m = modules;\n\t\t/******/\n\t\t/******/ \t// expose the module cache\n\t\t/******/ \t__webpack_require__.c = installedModules;\n\t\t/******/\n\t\t/******/ \t// __webpack_public_path__\n\t\t/******/ \t__webpack_require__.p = \"\";\n\t\t/******/\n\t\t/******/ \t// Load entry module and return exports\n\t\t/******/ \treturn __webpack_require__(0);\n\t\t/******/ })\n\t\t/************************************************************************/\n\t\t/******/ ([\n\t\t/* 0 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t};\n\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t};\n\t\t\tvar core_1 = __webpack_require__(1);\n\t\t\tvar scroll_to_1 = __webpack_require__(2);\n\t\t\texports.scrollTo = scroll_to_1.scrollTo;\n\t\t\tvar element_visible_1 = __webpack_require__(3);\n\t\t\texports.elementVisible = element_visible_1.elementVisible;\n\t\t\tvar computed_style_1 = __webpack_require__(4);\n\t\t\texports.computedStyle = computed_style_1.computedStyle;\n\t\t\tvar outer_width_1 = __webpack_require__(5);\n\t\t\texports.outerWidth = outer_width_1.outerWidth;\n\t\t\tvar outer_height_1 = __webpack_require__(6);\n\t\t\texports.outerHeight = outer_height_1.outerHeight;\n\t\t\tvar Ng2UtilsModule = (function () {\n\t\t\t    function Ng2UtilsModule() {\n\t\t\t    }\n\t\t\t    Ng2UtilsModule = __decorate([\n\t\t\t        core_1.NgModule({\n\t\t\t            declarations: [\n\t\t\t                scroll_to_1.scrollTo,\n\t\t\t                element_visible_1.elementVisible,\n\t\t\t                computed_style_1.computedStyle,\n\t\t\t                outer_width_1.outerWidth,\n\t\t\t                outer_height_1.outerHeight\n\t\t\t            ],\n\t\t\t            exports: [\n\t\t\t                scroll_to_1.scrollTo,\n\t\t\t                element_visible_1.elementVisible,\n\t\t\t                computed_style_1.computedStyle,\n\t\t\t                outer_width_1.outerWidth,\n\t\t\t                outer_height_1.outerHeight\n\t\t\t            ]\n\t\t\t        }), \n\t\t\t        __metadata('design:paramtypes', [])\n\t\t\t    ], Ng2UtilsModule);\n\t\t\t    return Ng2UtilsModule;\n\t\t\t}());\n\t\t\texports.Ng2UtilsModule = Ng2UtilsModule;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 1 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\t\t\n\t\t/***/ },\n\t\t/* 2 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\t/**\n\t\t\t * scroll to the selector within the parent selector by scrolling 10 times within 500ms\n\t\t\t * @param selector\n\t\t\t * @param parentSelector\n\t\t\t */\n\t\t\tfunction scrollTo(selector, parentSelector) {\n\t\t\t    console.log('selector', selector, 'parentSelector', parentSelector);\n\t\t\t    var parentEl, targetEl;\n\t\t\t    targetEl = document.querySelector(selector);\n\t\t\t    if (!targetEl) {\n\t\t\t        throw \"Invalid selector \" + selector;\n\t\t\t    }\n\t\t\t    parentEl = document.querySelector(parentSelector);\n\t\t\t    if (!parentEl) {\n\t\t\t        throw \"Invalid parent selector \" + parentSelector;\n\t\t\t    }\n\t\t\t    var parentElStyle = window.getComputedStyle(parentEl);\n\t\t\t    parentEl = parentElStyle['overflow'] === 'auto' ? parentEl : document.body;\n\t\t\t    var currentScrollTop = parentEl.scrollTop;\n\t\t\t    var targetOffsetTop = targetEl.offsetTop;\n\t\t\t    if (parentEl === document.body) {\n\t\t\t        var bodyRect = document.body.getBoundingClientRect();\n\t\t\t        var targetRect = targetEl.getBoundingClientRect();\n\t\t\t        targetOffsetTop = targetRect.top - bodyRect.top;\n\t\t\t    }\n\t\t\t    var step = Math.ceil((targetOffsetTop - currentScrollTop) / 10);\n\t\t\t    (function loop(i) {\n\t\t\t        setTimeout(function main() {\n\t\t\t            parentEl.scrollTop += step;\n\t\t\t            i > 1 && loop(i - 1);\n\t\t\t        }, 50);\n\t\t\t    }(10));\n\t\t\t}\n\t\t\texports.scrollTo = scrollTo;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 3 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\t/**\n\t\t\t * Returns an element is visible within outer element\n\t\t\t * @param innerEl\n\t\t\t * @param outerEl\n\t\t\t * @param adjustment\n\t\t\t * @returns {{top: boolean, bottom: boolean, left: boolean, right: boolean}}\n\t\t\t */\n\t\t\tfunction elementVisible(innerEl, outerEl, adjustment) {\n\t\t\t    var innerRect = innerEl.getBoundingClientRect();\n\t\t\t    var bottomAdjustment = (adjustment && adjustment.bottom || 0);\n\t\t\t    if (outerEl === window) {\n\t\t\t        return {\n\t\t\t            top: innerRect.bottom - bottomAdjustment > window.innerHeight\n\t\t\t                && innerRect.top < window.innerHeight,\n\t\t\t            bottom: innerRect.bottom - bottomAdjustment > 0\n\t\t\t                && innerRect.bottom < window.innerHeight,\n\t\t\t            left: innerRect.right > window.innerWidth\n\t\t\t                && innerRect.left < window.innerWidth,\n\t\t\t            right: innerRect.right > 0\n\t\t\t                && innerRect.right < window.innerWidth\n\t\t\t        };\n\t\t\t    }\n\t\t\t    else {\n\t\t\t        var outerRect = outerEl.getBoundingClientRect();\n\t\t\t        var defaultView = (innerEl.ownerDocument || document).defaultView;\n\t\t\t        var computedStyle = defaultView.getComputedStyle(outerEl, null);\n\t\t\t        var outerRectBorderTopWidth = parseInt(computedStyle.getPropertyValue('border-top-width'), 10);\n\t\t\t        var outerRectBorderLeftWidth = parseInt(computedStyle.getPropertyValue('border-left-width'), 10);\n\t\t\t        /* top is visible or bottom is visible */\n\t\t\t        var topVisible = (innerRect.top >= outerRect.top\n\t\t\t            && innerRect.top < outerRect.bottom);\n\t\t\t        var bottomVisible = (innerRect.bottom > (outerRect.top + outerRectBorderTopWidth)\n\t\t\t            && innerRect.bottom < outerRect.bottom);\n\t\t\t        var leftVisible = (innerRect.left >= outerRect.left\n\t\t\t            && innerRect.left < outerRect.right);\n\t\t\t        var rightVisible = (innerRect.right > (outerRect.left + outerRectBorderLeftWidth)\n\t\t\t            && innerRect.right < outerRect.right);\n\t\t\t        return {\n\t\t\t            top: topVisible,\n\t\t\t            bottom: bottomVisible,\n\t\t\t            left: leftVisible,\n\t\t\t            right: rightVisible\n\t\t\t        };\n\t\t\t    }\n\t\t\t}\n\t\t\texports.elementVisible = elementVisible;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 4 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\t/**\n\t\t\t * returns coumputed style of given element\n\t\t\t * @param el\n\t\t\t * @param styleProp\n\t\t\t * @returns {any}\n\t\t\t */\n\t\t\tfunction computedStyle(el, styleProp) {\n\t\t\t    var value, defaultView = (el.ownerDocument || document).defaultView;\n\t\t\t    // W3C standard way:\n\t\t\t    if (defaultView && defaultView.getComputedStyle) {\n\t\t\t        // sanitize property name to css notation\n\t\t\t        // (hypen separated words eg. font-Size)\n\t\t\t        styleProp = styleProp.replace(/([A-Z])/g, \"-$1\").toLowerCase();\n\t\t\t        return defaultView.getComputedStyle(el, null).getPropertyValue(styleProp);\n\t\t\t    }\n\t\t\t    else if (el['currentStyle']) {\n\t\t\t        // sanitize property name to camelCase\n\t\t\t        styleProp = styleProp.replace(/\\-(\\w)/g, function (str, letter) {\n\t\t\t            return letter.toUpperCase();\n\t\t\t        });\n\t\t\t        value = el['currentStyle'][styleProp];\n\t\t\t        // convert other units to pixels on IE\n\t\t\t        if (/^\\d+(em|pt|%|ex)?$/i.test(value)) {\n\t\t\t            return (function (value) {\n\t\t\t                var oldLeft = el.style.left, oldRsLeft = el['runtimeStyle'].left;\n\t\t\t                el['runtimeStyle'].left = el['currentStyle'].left;\n\t\t\t                el.style.left = value || 0;\n\t\t\t                value = el.style['pixelLeft'] + \"px\";\n\t\t\t                el.style.left = oldLeft;\n\t\t\t                el['runtimeStyle'].left = oldRsLeft;\n\t\t\t                return value;\n\t\t\t            })(value);\n\t\t\t        }\n\t\t\t        return value;\n\t\t\t    }\n\t\t\t}\n\t\t\texports.computedStyle = computedStyle;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 5 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tfunction outerWidth(el) {\n\t\t\t    var style = getComputedStyle(el);\n\t\t\t    return el.offsetWidth +\n\t\t\t        parseInt(style.getPropertyValue('margin-left')) +\n\t\t\t        parseInt(style.getPropertyValue('margin-right'));\n\t\t\t}\n\t\t\texports.outerWidth = outerWidth;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 6 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tfunction outerHeight(el) {\n\t\t\t    var style = getComputedStyle(el);\n\t\t\t    return el.offsetHeight +\n\t\t\t        parseInt(style.getPropertyValue('margin-top')) +\n\t\t\t        parseInt(style.getPropertyValue('margin-bottom'));\n\t\t\t}\n\t\t\texports.outerHeight = outerHeight;\n\t\t\n\t\t\n\t\t/***/ }\n\t\t/******/ ])\n\t\t});\n\t\t;\n\t\t//# sourceMappingURL=ng2-utils.umd.js.map\n\t\n\t/***/ }\n\t/******/ ])\n\t});\n\t;\n\t//# sourceMappingURL=ng2-infinite-list.umd.js.map\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function webpackUniversalModuleDefinition(root, factory) {\n\t\tif(true)\n\t\t\tmodule.exports = factory(__webpack_require__(1), __webpack_require__(6), __webpack_require__(8));\n\t\telse if(typeof define === 'function' && define.amd)\n\t\t\tdefine([\"@angular/core\", \"@angular/common\", \"rxjs/Rx\"], factory);\n\t\telse if(typeof exports === 'object')\n\t\t\texports[\"ng2-map\"] = factory(require(\"@angular/core\"), require(\"@angular/common\"), require(\"rxjs/Rx\"));\n\t\telse\n\t\t\troot[\"ng2-map\"] = factory(root[\"@angular/core\"], root[\"@angular/common\"], root[\"rxjs/Rx\"]);\n\t})(this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_6__) {\n\treturn /******/ (function(modules) { // webpackBootstrap\n\t/******/ \t// The module cache\n\t/******/ \tvar installedModules = {};\n\t/******/\n\t/******/ \t// The require function\n\t/******/ \tfunction __webpack_require__(moduleId) {\n\t/******/\n\t/******/ \t\t// Check if module is in cache\n\t/******/ \t\tif(installedModules[moduleId])\n\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\t/******/\n\t/******/ \t\t// Create a new module (and put it into the cache)\n\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t/******/ \t\t\texports: {},\n\t/******/ \t\t\tid: moduleId,\n\t/******/ \t\t\tloaded: false\n\t/******/ \t\t};\n\t/******/\n\t/******/ \t\t// Execute the module function\n\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t/******/\n\t/******/ \t\t// Flag the module as loaded\n\t/******/ \t\tmodule.loaded = true;\n\t/******/\n\t/******/ \t\t// Return the exports of the module\n\t/******/ \t\treturn module.exports;\n\t/******/ \t}\n\t/******/\n\t/******/\n\t/******/ \t// expose the modules object (__webpack_modules__)\n\t/******/ \t__webpack_require__.m = modules;\n\t/******/\n\t/******/ \t// expose the module cache\n\t/******/ \t__webpack_require__.c = installedModules;\n\t/******/\n\t/******/ \t// __webpack_public_path__\n\t/******/ \t__webpack_require__.p = \"\";\n\t/******/\n\t/******/ \t// Load entry module and return exports\n\t/******/ \treturn __webpack_require__(0);\n\t/******/ })\n\t/************************************************************************/\n\t/******/ ([\n\t/* 0 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(1);\n\t\tvar common_1 = __webpack_require__(2);\n\t\tvar option_builder_1 = __webpack_require__(3);\n\t\texports.OptionBuilder = option_builder_1.OptionBuilder;\n\t\tvar geo_coder_1 = __webpack_require__(5);\n\t\texports.GeoCoder = geo_coder_1.GeoCoder;\n\t\tvar navigator_geolocation_1 = __webpack_require__(7);\n\t\texports.NavigatorGeolocation = navigator_geolocation_1.NavigatorGeolocation;\n\t\tvar ng2_map_1 = __webpack_require__(8);\n\t\texports.Ng2Map = ng2_map_1.Ng2Map;\n\t\tvar ng2_map_component_1 = __webpack_require__(9);\n\t\texports.Ng2MapComponent = ng2_map_component_1.Ng2MapComponent;\n\t\tvar marker_1 = __webpack_require__(10);\n\t\texports.Marker = marker_1.Marker;\n\t\tvar info_window_1 = __webpack_require__(11);\n\t\texports.InfoWindow = info_window_1.InfoWindow;\n\t\tvar Ng2MapModule = (function () {\n\t\t    function Ng2MapModule() {\n\t\t    }\n\t\t    Ng2MapModule = __decorate([\n\t\t        core_1.NgModule({\n\t\t            imports: [common_1.CommonModule],\n\t\t            declarations: [ng2_map_component_1.Ng2MapComponent, marker_1.Marker, info_window_1.InfoWindow],\n\t\t            providers: [geo_coder_1.GeoCoder, navigator_geolocation_1.NavigatorGeolocation, ng2_map_1.Ng2Map, option_builder_1.OptionBuilder],\n\t\t            exports: [ng2_map_component_1.Ng2MapComponent, marker_1.Marker, info_window_1.InfoWindow]\n\t\t        }), \n\t\t        __metadata('design:paramtypes', [])\n\t\t    ], Ng2MapModule);\n\t\t    return Ng2MapModule;\n\t\t}());\n\t\texports.Ng2MapModule = Ng2MapModule;\n\t\n\t\n\t/***/ },\n\t/* 1 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\t\n\t/***/ },\n\t/* 2 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\t\n\t/***/ },\n\t/* 3 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(1);\n\t\tvar util_1 = __webpack_require__(4);\n\t\tvar geo_coder_1 = __webpack_require__(5);\n\t\t/**\n\t\t * change any object to google object options\n\t\t * e.g. [1,2] -> new google.maps.LatLng(1,2);\n\t\t */\n\t\tvar OptionBuilder = (function () {\n\t\t    function OptionBuilder(geoCoder) {\n\t\t        this.geoCoder = geoCoder;\n\t\t    }\n\t\t    OptionBuilder.prototype.googlizeAllInputs = function (definedInputs, userInputs) {\n\t\t        var _this = this;\n\t\t        var options = {};\n\t\t        definedInputs.forEach(function (input) {\n\t\t            if (userInputs[input] !== undefined) {\n\t\t                options[input] = _this.googlize(userInputs[input], { key: input });\n\t\t            }\n\t\t        });\n\t\t        return options;\n\t\t    };\n\t\t    OptionBuilder.prototype.googlizeMultiple = function (inputs, options) {\n\t\t        options = options || {};\n\t\t        for (var key in inputs) {\n\t\t            var val = inputs[key];\n\t\t            // (non-strings are fully converted)\n\t\t            if (typeof val !== 'string') {\n\t\t                options[key] = val;\n\t\t            } // sometimes '0' needed to stay as it is\n\t\t            else if (!(options['doNotConverStringToNumber'] && val.match(/^[0-9]+$/))) {\n\t\t                options[key] = this.googlize(val, { key: key });\n\t\t            }\n\t\t        } // for(var key in attrs)\n\t\t        return options;\n\t\t    };\n\t\t    OptionBuilder.prototype.googlize = function (input, options) {\n\t\t        options = options || {};\n\t\t        var output;\n\t\t        if (input === 'false' || input === false) {\n\t\t            output = false;\n\t\t        }\n\t\t        else if (input === '0' || input === 0) {\n\t\t            output = 0;\n\t\t        }\n\t\t        else {\n\t\t            output =\n\t\t                // -> googlize -> getJsonParsed -> googlizeMultiple -> googlize until all elements are parsed\n\t\t                this.getJSONParsed(input, options)\n\t\t                    || this.getAnyMapObject(input)\n\t\t                    || this.getAnyMapConstant(input, options)\n\t\t                    || this.getDateObject(input);\n\t\t        }\n\t\t        if (output instanceof Array) {\n\t\t            if (options['key'] === \"bounds\") {\n\t\t                output = new google.maps.LatLngBounds(output[0], output[1]);\n\t\t            }\n\t\t            else if (options['key'] === \"icons\") {\n\t\t                output = this.getMapIcons(output);\n\t\t            }\n\t\t        }\n\t\t        if (options['key'] && output instanceof Object) {\n\t\t            if (options['key'] === 'icon') {\n\t\t                output = this.getMarkerIcon(output);\n\t\t            }\n\t\t            else if (options['key'].match(/ControlOptions$/)) {\n\t\t                output = this.getMapControlOption(output);\n\t\t            }\n\t\t        }\n\t\t        return output;\n\t\t    };\n\t\t    OptionBuilder.prototype.getLatLng = function (input) {\n\t\t        var output;\n\t\t        if (input[0].constructor == Array) {\n\t\t            output = input.map(function (el) { return new google.maps.LatLng(el[0], el[1]); });\n\t\t        }\n\t\t        else if (!isNaN(parseFloat(input[0])) && isFinite(input[0])) {\n\t\t            output = new google.maps.LatLng(input[0], input[1]);\n\t\t        }\n\t\t        return output;\n\t\t    };\n\t\t    OptionBuilder.prototype.getJSONParsed = function (input, options) {\n\t\t        var output;\n\t\t        try {\n\t\t            output = util_1.getJSON(input);\n\t\t            if (output instanceof Array) {\n\t\t                // [{a:1}] : not lat/lng ones\n\t\t                if (output[0].constructor !== Object) {\n\t\t                    output = this.getLatLng(output);\n\t\t                }\n\t\t            }\n\t\t            else if (output === Object(output)) {\n\t\t                // check for nested hashes and convert to Google API options\n\t\t                var newOptions = options;\n\t\t                newOptions['doNotConverStringToNumber'] = true;\n\t\t                output = this.googlizeMultiple(output, newOptions);\n\t\t            }\n\t\t        }\n\t\t        catch (e) {\n\t\t        }\n\t\t        return output;\n\t\t    };\n\t\t    OptionBuilder.prototype.getAnyMapObject = function (input) {\n\t\t        var output;\n\t\t        if (input.match(/^[A-Z][a-zA-Z0-9]+\\(.*\\)$/)) {\n\t\t            try {\n\t\t                var exp = \"new google.maps.\" + input;\n\t\t                output = eval(exp);\n\t\t            }\n\t\t            catch (e) { }\n\t\t        }\n\t\t        return output;\n\t\t    };\n\t\t    OptionBuilder.prototype.getAnyMapConstant = function (input, options) {\n\t\t        var output;\n\t\t        if (input.match(/^([A-Z][a-zA-Z0-9]+)\\.([A-Z]+)$/)) {\n\t\t            try {\n\t\t                var matches = input.match(/^([A-Z][a-zA-Z0-9]+)\\.([A-Z]+)$/);\n\t\t                output = google.maps[matches[1]][matches[2]];\n\t\t            }\n\t\t            catch (e) { }\n\t\t        }\n\t\t        else if (input.match(/^[A-Z]+$/)) {\n\t\t            try {\n\t\t                var capitalizedKey = options['key'].charAt(0).toUpperCase() +\n\t\t                    options['key'].slice(1);\n\t\t                output = google.maps[capitalizedKey][input];\n\t\t            }\n\t\t            catch (e) { }\n\t\t        }\n\t\t        return output;\n\t\t    };\n\t\t    /**\n\t\t     * streetviewControl, panControl, etc, not a general control\n\t\t     */\n\t\t    OptionBuilder.prototype.getMapControlOption = function (controlOptions) {\n\t\t        var newControlOptions = controlOptions;\n\t\t        for (var key in newControlOptions) {\n\t\t            if (newControlOptions[key]) {\n\t\t                var value = newControlOptions[key];\n\t\t                if (typeof value === 'string') {\n\t\t                    value = value.toUpperCase();\n\t\t                }\n\t\t                else if (key === \"mapTypeIds\") {\n\t\t                    value = value.map(function (str) {\n\t\t                        if (str.match(/^[A-Z]+$/)) {\n\t\t                            return google.maps.MapTypeId[str.toUpperCase()];\n\t\t                        }\n\t\t                        else {\n\t\t                            return str;\n\t\t                        }\n\t\t                    });\n\t\t                }\n\t\t                if (key === \"style\") {\n\t\t                    var objName = key.replace(/Options$/, '') + \"Style\";\n\t\t                    newControlOptions[key] = google.maps[objName][value];\n\t\t                }\n\t\t                else if (key === \"position\") {\n\t\t                    newControlOptions[key] = google.maps.ControlPosition[value];\n\t\t                }\n\t\t                else {\n\t\t                    newControlOptions[key] = value;\n\t\t                }\n\t\t            }\n\t\t        }\n\t\t        return newControlOptions;\n\t\t    };\n\t\t    OptionBuilder.prototype.getDateObject = function (input) {\n\t\t        var output;\n\t\t        if (input.match(/^(\\d{4}\\-\\d\\d\\-\\d\\d([tT][\\d:\\.]*)?)([zZ]|([+\\-])(\\d\\d):?(\\d\\d))?$/)) {\n\t\t            try {\n\t\t                output = new Date(input);\n\t\t            }\n\t\t            catch (e) { }\n\t\t        }\n\t\t        return output;\n\t\t    };\n\t\t    OptionBuilder.prototype.getMapIcons = function (input) {\n\t\t        return input.map(function (el) {\n\t\t            if (el.icon.path.match(/^[A-Z_]+$/)) {\n\t\t                el.icon.path = google.maps.SymbolPath[el.icon.path];\n\t\t            }\n\t\t            return el;\n\t\t        });\n\t\t    };\n\t\t    OptionBuilder.prototype.getMarkerIcon = function (input) {\n\t\t        var output = input;\n\t\t        if ((\"\" + output.path).match(/^[A-Z_]+$/)) {\n\t\t            output.path = google.maps.SymbolPath[output.path];\n\t\t        }\n\t\t        for (var key in output) {\n\t\t            var arr = output[key];\n\t\t            if (key == \"anchor\" || key == \"origin\" || key == \"labelOrigin\") {\n\t\t                output[key] = new google.maps.Point(arr[0], arr[1]);\n\t\t            }\n\t\t            else if (key == \"size\" || key == \"scaledSize\") {\n\t\t                output[key] = new google.maps.Size(arr[0], arr[1]);\n\t\t            }\n\t\t        }\n\t\t        return output;\n\t\t    };\n\t\t    OptionBuilder = __decorate([\n\t\t        core_1.Injectable(), \n\t\t        __metadata('design:paramtypes', [geo_coder_1.GeoCoder])\n\t\t    ], OptionBuilder);\n\t\t    return OptionBuilder;\n\t\t}());\n\t\texports.OptionBuilder = OptionBuilder;\n\t\n\t\n\t/***/ },\n\t/* 4 */\n\t/***/ function(module, exports) {\n\t\n\t\t\"use strict\";\n\t\t/**\n\t\t * return json string from json-like string\n\t\t */\n\t\tvar jsonize = function (str) {\n\t\t    try {\n\t\t        JSON.parse(str);\n\t\t        return str;\n\t\t    }\n\t\t    catch (e) {\n\t\t        return str\n\t\t            .replace(/([\\$\\w]+)\\s*:/g, // wrap keys without double quote\n\t\t        function (_, $1) {\n\t\t            return '\"' + $1 + '\":';\n\t\t        })\n\t\t            .replace(/'([^']+)'/g, // replacing single quote to double quote\n\t\t        function (_, $1) {\n\t\t            return '\"' + $1 + '\"';\n\t\t        });\n\t\t    }\n\t\t};\n\t\texports.jsonize = jsonize;\n\t\t/**\n\t\t * Returns string to an object by using JSON.parse()\n\t\t */\n\t\tvar getJSON = function (input) {\n\t\t    if (typeof input === 'string') {\n\t\t        var re = /^[\\+\\-]?[0-9\\.]+,[ ]*\\ ?[\\+\\-]?[0-9\\.]+$/; //lat,lng\n\t\t        if (input.match(re)) {\n\t\t            input = \"[\" + input + \"]\";\n\t\t        }\n\t\t        return JSON.parse(jsonize(input));\n\t\t    }\n\t\t    else {\n\t\t        return input;\n\t\t    }\n\t\t};\n\t\texports.getJSON = getJSON;\n\t\t/* tslint:enable */\n\t\n\t\n\t/***/ },\n\t/* 5 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(1);\n\t\tvar Rx_1 = __webpack_require__(6);\n\t\t/**\n\t\t *   Provides [defered/promise API](https://docs.angularjs.org/api/ng/service/$q)\n\t\t *   service for Google Geocoder service\n\t\t */\n\t\tvar GeoCoder = (function () {\n\t\t    function GeoCoder() {\n\t\t    }\n\t\t    GeoCoder.prototype.geocode = function (options) {\n\t\t        var geocode$ = new Rx_1.Subject();\n\t\t        var geocoder = new google.maps.Geocoder();\n\t\t        geocoder.geocode(options, function (results, status) {\n\t\t            if (status == google.maps.GeocoderStatus.OK) {\n\t\t                geocode$.next(results);\n\t\t            }\n\t\t            else {\n\t\t                geocode$.error(results);\n\t\t            }\n\t\t        });\n\t\t        return geocode$;\n\t\t    };\n\t\t    ;\n\t\t    GeoCoder = __decorate([\n\t\t        core_1.Injectable(), \n\t\t        __metadata('design:paramtypes', [])\n\t\t    ], GeoCoder);\n\t\t    return GeoCoder;\n\t\t}());\n\t\texports.GeoCoder = GeoCoder;\n\t\n\t\n\t/***/ },\n\t/* 6 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_6__;\n\t\n\t/***/ },\n\t/* 7 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(1);\n\t\tvar Rx_1 = __webpack_require__(6);\n\t\t/**\n\t\t *  service for navigator.geolocation methods\n\t\t */\n\t\tvar NavigatorGeolocation = (function () {\n\t\t    function NavigatorGeolocation() {\n\t\t    }\n\t\t    NavigatorGeolocation.prototype.getCurrentPosition = function (geoLocationOptions) {\n\t\t        geoLocationOptions = geoLocationOptions || { timeout: 5000 };\n\t\t        var getCurrentPosition$ = new Rx_1.Subject();\n\t\t        if (navigator.geolocation) {\n\t\t            navigator.geolocation.getCurrentPosition(function (position) {\n\t\t                getCurrentPosition$.next(position);\n\t\t            }, function (evt) {\n\t\t                getCurrentPosition$.error(evt);\n\t\t            }, geoLocationOptions);\n\t\t        }\n\t\t        else {\n\t\t            getCurrentPosition$.error(\"Browser Geolocation service failed.\");\n\t\t        }\n\t\t        return getCurrentPosition$;\n\t\t    };\n\t\t    ;\n\t\t    NavigatorGeolocation = __decorate([\n\t\t        core_1.Injectable(), \n\t\t        __metadata('design:paramtypes', [])\n\t\t    ], NavigatorGeolocation);\n\t\t    return NavigatorGeolocation;\n\t\t}());\n\t\texports.NavigatorGeolocation = NavigatorGeolocation;\n\t\n\t\n\t/***/ },\n\t/* 8 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(1);\n\t\tvar Rx_1 = __webpack_require__(6);\n\t\tvar option_builder_1 = __webpack_require__(3);\n\t\tvar geo_coder_1 = __webpack_require__(5);\n\t\t/**\n\t\t * collection of map instance-related properties and methods\n\t\t */\n\t\tvar Ng2Map = (function () {\n\t\t    function Ng2Map(geoCoder, optionBuilder) {\n\t\t        this.geoCoder = geoCoder;\n\t\t        this.optionBuilder = optionBuilder;\n\t\t        this.mapReady$ = new Rx_1.Subject();\n\t\t    }\n\t\t    Ng2Map.prototype.setObjectEvents = function (definedEvents, thisObj, prefix) {\n\t\t        definedEvents.forEach(function (definedEvent) {\n\t\t            var eventName = definedEvent\n\t\t                .toLowerCase()\n\t\t                .replace(new RegExp(\"^\" + prefix), '');\n\t\t            thisObj[prefix].addListener(eventName, function (event) {\n\t\t                thisObj[definedEvent].emit(this);\n\t\t            });\n\t\t        });\n\t\t    };\n\t\t    Ng2Map.prototype.updateGoogleObject = function (object, changes) {\n\t\t        var val, currentValue, setMethodName;\n\t\t        if (object) {\n\t\t            for (var key in changes) {\n\t\t                setMethodName = \"set\" + key.replace(/^[a-z]/, function (x) { return x.toUpperCase(); });\n\t\t                currentValue = changes[key].currentValue;\n\t\t                if (['position', 'center'].indexOf(key) !== -1 && typeof currentValue === 'string') {\n\t\t                    this.geoCoder.geocode({ address: currentValue }).subscribe(function (results) {\n\t\t                        object[setMethodName](results[0].geometry.location);\n\t\t                    });\n\t\t                }\n\t\t                else {\n\t\t                    val = this.optionBuilder.googlize(currentValue);\n\t\t                    object[setMethodName](val);\n\t\t                }\n\t\t            }\n\t\t        }\n\t\t    };\n\t\t    Ng2Map.prototype.updateProperty = function (object, key, currentValue) {\n\t\t        var val, setMethodName;\n\t\t        setMethodName = \"set\" + key.replace(/^[a-z]/, function (x) { return x.toUpperCase(); });\n\t\t        if (['position', 'center'].indexOf(key) !== -1 && typeof currentValue === 'string') {\n\t\t            this.geoCoder.geocode({ address: currentValue }).subscribe(function (results) {\n\t\t                object[setMethodName](results[0].geometry.location);\n\t\t            });\n\t\t        }\n\t\t        else {\n\t\t            val = this.optionBuilder.googlize(currentValue);\n\t\t            object[setMethodName](val);\n\t\t        }\n\t\t    };\n\t\t    Ng2Map = __decorate([\n\t\t        core_1.Injectable(), \n\t\t        __metadata('design:paramtypes', [geo_coder_1.GeoCoder, option_builder_1.OptionBuilder])\n\t\t    ], Ng2Map);\n\t\t    return Ng2Map;\n\t\t}());\n\t\texports.Ng2Map = Ng2Map;\n\t\n\t\n\t/***/ },\n\t/* 9 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(1);\n\t\tvar option_builder_1 = __webpack_require__(3);\n\t\tvar navigator_geolocation_1 = __webpack_require__(7);\n\t\tvar geo_coder_1 = __webpack_require__(5);\n\t\tvar ng2_map_1 = __webpack_require__(8);\n\t\tvar Rx_1 = __webpack_require__(6);\n\t\tvar INPUTS = \"\\n  backgroundColor, center, disableDefaultUI, disableDoubleClickZoom, draggable, draggableCursor,\\n  draggingCursor, heading, keyboardShortcuts, mapMaker, mapTypeControl, mapTypeId, maxZoom, minZoom,\\n  noClear, overviewMapControl, panControl, panControlOptions, rotateControl, scaleControl, scrollwheel,\\n  streetView, styles, tilt, zoom, streetViewControl, zoomControl, mapTypeControlOptions,\\n  overviewMapControlOptions, rotateControlOptions, scaleControlOptions, streetViewControlOptions,\\n  zoomControlOptions\".split(',').map(function (el) { return el.trim(); });\n\t\tvar OUTPUTS = \"\\n  bounds_changed, center_changed, click, dblclick, drag, dragend, dragstart, heading_changed, idle\\n  maptypeid_changed, mousemove, mouseout, mouseover, projection_changed, resize, rightclick, \\n  tilesloaded, tile_changed, zoom_changed\"\n\t\t    .split(',').map(function (el) { return (\"map\" + el.trim().replace(/^[a-z]/, function (x) { return x.toUpperCase(); })); });\n\t\tvar Ng2MapComponent = (function () {\n\t\t    function Ng2MapComponent(optionBuilder, elementRef, zone, geolocation, geoCoder, ng2Map) {\n\t\t        var _this = this;\n\t\t        this.optionBuilder = optionBuilder;\n\t\t        this.elementRef = elementRef;\n\t\t        this.zone = zone;\n\t\t        this.geolocation = geolocation;\n\t\t        this.geoCoder = geoCoder;\n\t\t        this.ng2Map = ng2Map;\n\t\t        this.mapOptions = {};\n\t\t        this.inputChanges$ = new Rx_1.Subject();\n\t\t        //map objects by group\n\t\t        this.infoWindows = {};\n\t\t        if (typeof google === 'undefined' || !google.maps.Map) {\n\t\t            this.mapInitPath = 1;\n\t\t            this.addGoogleMapsApi();\n\t\t        }\n\t\t        // all outputs needs to be initialized,\n\t\t        // http://stackoverflow.com/questions/37765519/angular2-directive-cannot-read-property-subscribe-of-undefined-with-outputs\n\t\t        OUTPUTS.forEach(function (output) { return _this[output] = new core_1.EventEmitter(); });\n\t\t    }\n\t\t    Ng2MapComponent.prototype.ngAfterViewInit = function () {\n\t\t        if (this.mapInitPath !== 1) {\n\t\t            this.initializeMap();\n\t\t        }\n\t\t    };\n\t\t    Ng2MapComponent.prototype.ngOnChanges = function (changes) {\n\t\t        this.inputChanges$.next(changes);\n\t\t    };\n\t\t    Ng2MapComponent.prototype.addGoogleMapsApi = function () {\n\t\t        var _this = this;\n\t\t        window['ng2MapComponentRef'] = { zone: this.zone, componentFn: function () { return _this.initializeMap(); } };\n\t\t        window['initNg2Map'] = function () {\n\t\t            window['ng2MapComponentRef'].zone.run(function () { window['ng2MapComponentRef'].componentFn(); });\n\t\t        };\n\t\t        if (!window['google'] && !document.querySelector('#ng2-map-api')) {\n\t\t            var script = document.createElement('script');\n\t\t            script.id = \"ng2-map-api\";\n\t\t            // script.src = \"https://maps.google.com/maps/api/js?callback=initNg2Map\";\n\t\t            var apiUrl = Ng2MapComponent['apiUrl'] || \"https://maps.google.com/maps/api/js\";\n\t\t            apiUrl += apiUrl.indexOf('?') ? '&' : '?';\n\t\t            script.src = apiUrl + \"callback=initNg2Map\";\n\t\t            document.querySelector('body').appendChild(script);\n\t\t        }\n\t\t    };\n\t\t    Ng2MapComponent.prototype.initializeMap = function () {\n\t\t        var _this = this;\n\t\t        this.el = this.elementRef.nativeElement.querySelector('.google-map');\n\t\t        console.log('this.el...............', this.el);\n\t\t        this.mapOptions = this.optionBuilder.googlizeAllInputs(INPUTS, this);\n\t\t        console.log('this.mapOptions', this.mapOptions);\n\t\t        this.mapOptions.zoom = this.mapOptions.zoom || 15;\n\t\t        typeof this.mapOptions.center === 'string' && (delete this.mapOptions.center);\n\t\t        this.map = new google.maps.Map(this.el, this.mapOptions);\n\t\t        this.setCenter();\n\t\t        //set google events listeners and emits to this outputs listeners\n\t\t        this.ng2Map.setObjectEvents(OUTPUTS, this, 'map');\n\t\t        // broadcast map ready message\n\t\t        this.ng2Map.map = this.map;\n\t\t        this.ng2Map.mapComponent = this;\n\t\t        this.ng2Map.map['mapComponent'] = this;\n\t\t        // ........\n\t\t        console.log('map is ready.......');\n\t\t        this.ng2Map.mapReady$.next(this.map);\n\t\t        // update map when input changes\n\t\t        this.inputChanges$\n\t\t            .debounceTime(1000)\n\t\t            .subscribe(function (changes) { return _this.ng2Map.updateGoogleObject(_this.map, changes); });\n\t\t    };\n\t\t    Ng2MapComponent.prototype.setCenter = function () {\n\t\t        var _this = this;\n\t\t        if (!this['center']) {\n\t\t            this.geolocation.getCurrentPosition().subscribe(function (position) {\n\t\t                console.log('setting map center from current location');\n\t\t                var latLng = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);\n\t\t                _this.map.setCenter(latLng);\n\t\t            });\n\t\t        }\n\t\t        else if (typeof this['center'] === 'string') {\n\t\t            this.geoCoder.geocode({ address: this['center'] }).subscribe(function (results) {\n\t\t                console.log('setting map center from address', _this['center']);\n\t\t                _this.map.setCenter(results[0].geometry.location);\n\t\t            });\n\t\t        }\n\t\t    };\n\t\t    Ng2MapComponent.prototype.openInfoWindow = function (id, anchor, data) {\n\t\t        this.infoWindows[id].open(anchor, data);\n\t\t    };\n\t\t    Ng2MapComponent.prototype.ngOnDestroy = function () {\n\t\t        var _this = this;\n\t\t        OUTPUTS.forEach(function (output) { return google.maps.event.clearListeners(_this.map, output); });\n\t\t    };\n\t\t    Ng2MapComponent = __decorate([\n\t\t        core_1.Component({\n\t\t            selector: 'ng2-map, jui-map',\n\t\t            providers: [ng2_map_1.Ng2Map, option_builder_1.OptionBuilder, geo_coder_1.GeoCoder, navigator_geolocation_1.NavigatorGeolocation],\n\t\t            styles: [\"\\n    ng2-map {display: block; height: 300px;}\\n    .google-map {width: 100%; height: 100%}\\n  \"],\n\t\t            inputs: INPUTS,\n\t\t            outputs: OUTPUTS,\n\t\t            encapsulation: core_1.ViewEncapsulation.None,\n\t\t            template: \"\\n    <div class=\\\"google-map\\\"></div>\\n    <ng-content></ng-content>\\n  \"\n\t\t        }), \n\t\t        __metadata('design:paramtypes', [option_builder_1.OptionBuilder, core_1.ElementRef, core_1.NgZone, navigator_geolocation_1.NavigatorGeolocation, geo_coder_1.GeoCoder, ng2_map_1.Ng2Map])\n\t\t    ], Ng2MapComponent);\n\t\t    return Ng2MapComponent;\n\t\t}());\n\t\texports.Ng2MapComponent = Ng2MapComponent;\n\t\n\t\n\t/***/ },\n\t/* 10 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(1);\n\t\tvar option_builder_1 = __webpack_require__(3);\n\t\tvar navigator_geolocation_1 = __webpack_require__(7);\n\t\tvar geo_coder_1 = __webpack_require__(5);\n\t\tvar ng2_map_1 = __webpack_require__(8);\n\t\tvar Rx_1 = __webpack_require__(6);\n\t\tvar INPUTS = \"\\n  anchorPoint, animation, clickable, cursor, draggable, icon, label, opacity\\n  ,optimized,place, position, shape, title, visible, zIndex\".split(',').map(function (el) { return el.trim(); });\n\t\tvar OUTPUTS = \"\\n  animation_changed, click, clickable_changed, cursor_changed, dblclick, drag, dragend, draggable_changed,\\n  dragstart, flat_changed, icon_changed, mousedown, mouseout, mouseover, mouseup, position_changed, rightclick,\\n  shape_changed, title_changed, visible_changed, zindex_changed\\n  \".split(',').map(function (el) { return (\"marker\" + el.trim().replace(/^[a-z]/, function (x) { return x.toUpperCase(); })); });\n\t\tvar Marker = (function () {\n\t\t    function Marker(ng2Map, optionBuilder, geolocation, geoCoder) {\n\t\t        var _this = this;\n\t\t        this.ng2Map = ng2Map;\n\t\t        this.optionBuilder = optionBuilder;\n\t\t        this.geolocation = geolocation;\n\t\t        this.geoCoder = geoCoder;\n\t\t        this.options = {};\n\t\t        this.inputChanges$ = new Rx_1.Subject();\n\t\t        if (this.ng2Map.map) {\n\t\t            this.initialize(this.ng2Map.map);\n\t\t        }\n\t\t        else {\n\t\t            this.ng2Map.mapReady$.subscribe(function (map) { return _this.initialize(map); });\n\t\t        }\n\t\t        // all outputs needs to be initialized,\n\t\t        // http://stackoverflow.com/questions/37765519/angular2-directive-cannot-read-property-subscribe-of-undefined-with-outputs\n\t\t        OUTPUTS.forEach(function (output) { return _this[output] = new core_1.EventEmitter(); });\n\t\t    }\n\t\t    Marker.prototype.ngOnChanges = function (changes) {\n\t\t        this.inputChanges$.next(changes);\n\t\t    };\n\t\t    // called when map is ready\n\t\t    Marker.prototype.initialize = function (map) {\n\t\t        var _this = this;\n\t\t        console.log('marker is being initialized');\n\t\t        this.options = this.optionBuilder.googlizeAllInputs(INPUTS, this);\n\t\t        console.log('MARKER options', this.options);\n\t\t        this.options.map = map;\n\t\t        // will be set after geocoded\n\t\t        typeof this.options.position === 'string' && (delete this.options.position);\n\t\t        this.marker = new google.maps.Marker(this.options);\n\t\t        this.setPosition();\n\t\t        //set google events listeners and emits to this outputs listeners\n\t\t        this.ng2Map.setObjectEvents(OUTPUTS, this, 'marker');\n\t\t        // update marker when input changes\n\t\t        this.inputChanges$\n\t\t            .subscribe(function (changes) {\n\t\t            console.log('marker options are changed', changes);\n\t\t            _this.ng2Map.updateGoogleObject(_this.marker, changes);\n\t\t        });\n\t\t    };\n\t\t    Marker.prototype.setPosition = function () {\n\t\t        var _this = this;\n\t\t        setTimeout(function () {\n\t\t            if (!_this['position']) {\n\t\t                _this.geolocation.getCurrentPosition().subscribe(function (position) {\n\t\t                    console.log('setting marker position from current location');\n\t\t                    var latLng = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);\n\t\t                    _this.marker.setPosition(latLng);\n\t\t                });\n\t\t            }\n\t\t            else if (typeof _this['position'] === 'string') {\n\t\t                _this.geoCoder.geocode({ address: _this['position'] }).subscribe(function (results) {\n\t\t                    console.log('setting marker position from address', _this['position']);\n\t\t                    _this.marker.setPosition(results[0].geometry.location);\n\t\t                });\n\t\t            }\n\t\t        }, 500);\n\t\t    };\n\t\t    Marker.prototype.ngOnDestroy = function () {\n\t\t        var _this = this;\n\t\t        OUTPUTS.forEach(function (output) { return google.maps.event.clearListeners(_this.marker, output); });\n\t\t        delete this.marker.setMap(null);\n\t\t        delete this.marker;\n\t\t    };\n\t\t    Marker = __decorate([\n\t\t        core_1.Directive({\n\t\t            selector: 'marker',\n\t\t            inputs: INPUTS,\n\t\t            outputs: OUTPUTS\n\t\t        }), \n\t\t        __metadata('design:paramtypes', [ng2_map_1.Ng2Map, option_builder_1.OptionBuilder, navigator_geolocation_1.NavigatorGeolocation, geo_coder_1.GeoCoder])\n\t\t    ], Marker);\n\t\t    return Marker;\n\t\t}());\n\t\texports.Marker = Marker;\n\t\n\t\n\t/***/ },\n\t/* 11 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(1);\n\t\tvar option_builder_1 = __webpack_require__(3);\n\t\tvar ng2_map_1 = __webpack_require__(8);\n\t\tvar Rx_1 = __webpack_require__(6);\n\t\tvar INPUTS = \"\\n  content, disableAutoPan, maxWidth, pixelOffset, position, zIndex\\n  \".split(',').map(function (el) { return el.trim(); });\n\t\tvar OUTPUTS = \"\\n  closeclick, content_changed, domready, position_changed, zindex_changed\\n  \".split(',').map(function (el) { return (\"infoWindow\" + el.trim().replace(/^[a-z]/, function (x) { return x.toUpperCase(); })); });\n\t\tvar InfoWindow = (function () {\n\t\t    function InfoWindow(optionBuilder, elementRef, ng2Map) {\n\t\t        var _this = this;\n\t\t        this.optionBuilder = optionBuilder;\n\t\t        this.elementRef = elementRef;\n\t\t        this.ng2Map = ng2Map;\n\t\t        this.options = {};\n\t\t        this.inputChanges$ = new Rx_1.Subject();\n\t\t        this.elementRef.nativeElement.style.display = 'none';\n\t\t        if (this.ng2Map.map) {\n\t\t            this.initialize(this.ng2Map.map);\n\t\t        }\n\t\t        else {\n\t\t            this.ng2Map.mapReady$.subscribe(function (map) { return _this.initialize(map); });\n\t\t        }\n\t\t        // all outputs needs to be initialized,\n\t\t        // http://stackoverflow.com/questions/37765519/angular2-directive-cannot-read-property-subscribe-of-undefined-with-outputs\n\t\t        OUTPUTS.forEach(function (output) { return _this[output] = new core_1.EventEmitter(); });\n\t\t    }\n\t\t    InfoWindow.prototype.ngOnChanges = function (changes) {\n\t\t        this.inputChanges$.next(changes);\n\t\t    };\n\t\t    // called when map is ready\n\t\t    InfoWindow.prototype.initialize = function (map) {\n\t\t        var _this = this;\n\t\t        console.log('infowindow is being initialized');\n\t\t        this.template = this.elementRef.nativeElement.innerHTML;\n\t\t        this.options = this.optionBuilder.googlizeAllInputs(INPUTS, this);\n\t\t        this.infoWindow = new google.maps.InfoWindow(this.options);\n\t\t        console.log('INFOWINDOW options', this.options);\n\t\t        //register infoWindow ids to Ng2Map, so that it can be opened by id\n\t\t        this.el = this.elementRef.nativeElement;\n\t\t        if (this.el.id) {\n\t\t            this.ng2Map.mapComponent.infoWindows[this.el.id] = this;\n\t\t        }\n\t\t        else {\n\t\t            console.error('An InfoWindow must have an id. e.g. id=\"detail\"');\n\t\t        }\n\t\t        //set google events listeners and emits to this outputs listeners\n\t\t        this.ng2Map.setObjectEvents(OUTPUTS, this, 'infoWindow');\n\t\t        // update object when input changes\n\t\t        this.inputChanges$\n\t\t            .debounceTime(1000)\n\t\t            .subscribe(function (changes) { return _this.ng2Map.updateGoogleObject(_this.infoWindow, changes); });\n\t\t    };\n\t\t    InfoWindow.prototype.open = function (anchor, data) {\n\t\t        var html = this.template;\n\t\t        for (var key in data) {\n\t\t            this[key] = data[key];\n\t\t            html = html.replace(\"[[\" + key + \"]]\", data[key]);\n\t\t        }\n\t\t        //set content and open it\n\t\t        this.infoWindow.setContent(html);\n\t\t        this.infoWindow.open(this.ng2Map.map, anchor);\n\t\t    };\n\t\t    InfoWindow.prototype.ngOnDestroy = function () {\n\t\t        var _this = this;\n\t\t        OUTPUTS.forEach(function (output) { return google.maps.event.clearListeners(_this.infoWindow, output); });\n\t\t        delete this.infoWindow;\n\t\t    };\n\t\t    InfoWindow = __decorate([\n\t\t        core_1.Component({\n\t\t            selector: 'info-window',\n\t\t            inputs: INPUTS,\n\t\t            outputs: OUTPUTS,\n\t\t            template: \"<ng-content></ng-content>\"\n\t\t        }), \n\t\t        __metadata('design:paramtypes', [option_builder_1.OptionBuilder, core_1.ElementRef, ng2_map_1.Ng2Map])\n\t\t    ], InfoWindow);\n\t\t    return InfoWindow;\n\t\t}());\n\t\texports.InfoWindow = InfoWindow;\n\t\n\t\n\t/***/ }\n\t/******/ ])\n\t});\n\t;\n\t//# sourceMappingURL=ng2-map.umd.js.map\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function webpackUniversalModuleDefinition(root, factory) {\n\t\tif(true)\n\t\t\tmodule.exports = factory(__webpack_require__(1), __webpack_require__(2), __webpack_require__(3));\n\t\telse if(typeof define === 'function' && define.amd)\n\t\t\tdefine([\"@angular/core\", \"@angular/forms\", \"@angular/platform-browser\"], factory);\n\t\telse if(typeof exports === 'object')\n\t\t\texports[\"ng2-menu\"] = factory(require(\"@angular/core\"), require(\"@angular/forms\"), require(\"@angular/platform-browser\"));\n\t\telse\n\t\t\troot[\"ng2-menu\"] = factory(root[\"@angular/core\"], root[\"@angular/forms\"], root[\"@angular/platform-browser\"]);\n\t})(this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__) {\n\treturn /******/ (function(modules) { // webpackBootstrap\n\t/******/ \t// The module cache\n\t/******/ \tvar installedModules = {};\n\t/******/\n\t/******/ \t// The require function\n\t/******/ \tfunction __webpack_require__(moduleId) {\n\t/******/\n\t/******/ \t\t// Check if module is in cache\n\t/******/ \t\tif(installedModules[moduleId])\n\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\t/******/\n\t/******/ \t\t// Create a new module (and put it into the cache)\n\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t/******/ \t\t\texports: {},\n\t/******/ \t\t\tid: moduleId,\n\t/******/ \t\t\tloaded: false\n\t/******/ \t\t};\n\t/******/\n\t/******/ \t\t// Execute the module function\n\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t/******/\n\t/******/ \t\t// Flag the module as loaded\n\t/******/ \t\tmodule.loaded = true;\n\t/******/\n\t/******/ \t\t// Return the exports of the module\n\t/******/ \t\treturn module.exports;\n\t/******/ \t}\n\t/******/\n\t/******/\n\t/******/ \t// expose the modules object (__webpack_modules__)\n\t/******/ \t__webpack_require__.m = modules;\n\t/******/\n\t/******/ \t// expose the module cache\n\t/******/ \t__webpack_require__.c = installedModules;\n\t/******/\n\t/******/ \t// __webpack_public_path__\n\t/******/ \t__webpack_require__.p = \"\";\n\t/******/\n\t/******/ \t// Load entry module and return exports\n\t/******/ \treturn __webpack_require__(0);\n\t/******/ })\n\t/************************************************************************/\n\t/******/ ([\n\t/* 0 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(1);\n\t\tvar forms_1 = __webpack_require__(2);\n\t\tvar platform_browser_1 = __webpack_require__(3);\n\t\tvar ng2_menu_directive_1 = __webpack_require__(4);\n\t\texports.Ng2MenuDirective = ng2_menu_directive_1.Ng2MenuDirective;\n\t\tvar Ng2MenuModule = (function () {\n\t\t    function Ng2MenuModule() {\n\t\t    }\n\t\t    Ng2MenuModule = __decorate([\n\t\t        core_1.NgModule({\n\t\t            imports: [platform_browser_1.BrowserModule, forms_1.FormsModule],\n\t\t            declarations: [ng2_menu_directive_1.Ng2MenuDirective],\n\t\t            exports: [ng2_menu_directive_1.Ng2MenuDirective]\n\t\t        }), \n\t\t        __metadata('design:paramtypes', [])\n\t\t    ], Ng2MenuModule);\n\t\t    return Ng2MenuModule;\n\t\t}());\n\t\texports.Ng2MenuModule = Ng2MenuModule;\n\t\n\t\n\t/***/ },\n\t/* 1 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\t\n\t/***/ },\n\t/* 2 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\t\n\t/***/ },\n\t/* 3 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\t\n\t/***/ },\n\t/* 4 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(1);\n\t\tvar Ng2MenuDirective = (function () {\n\t\t    function Ng2MenuDirective(viewContainerRef) {\n\t\t        this.viewContainerRef = viewContainerRef;\n\t\t        this.el = this.viewContainerRef.element.nativeElement;\n\t\t        this.el.parentElement.style.position = 'relative';\n\t\t        this.el.parentElement.className += ' has-ng2-menu';\n\t\t    }\n\t\t    Ng2MenuDirective.prototype.ngAfterViewInit = function () {\n\t\t        var _this = this;\n\t\t        this.el.parentElement.addEventListener('mouseover', function (event) {\n\t\t            _this.el.parentElement.className += \" active\";\n\t\t            _this.el.style.position = \"absolute\";\n\t\t            if (_this.el.parentElement.offsetWidth) {\n\t\t                _this.setPosition();\n\t\t            }\n\t\t            else {\n\t\t                setTimeout(function () { return _this.setPosition(); });\n\t\t            }\n\t\t        });\n\t\t        this.el.parentElement.addEventListener('mouseout', function (event) {\n\t\t            _this.el.parentElement.className = _this.el.parentElement.className.replace(/\\s?active/, '');\n\t\t        });\n\t\t    };\n\t\t    Ng2MenuDirective.prototype.setPosition = function () {\n\t\t        if (this.position === \"bottom\") {\n\t\t            this.el.style.left = \"0\";\n\t\t            this.el.style.top = this.el.parentElement.offsetHeight - 1 + 'px';\n\t\t        }\n\t\t        else if (this.position === \"top\") {\n\t\t            this.el.style.left = \"0\";\n\t\t            this.el.style.bottom = this.el.parentElement.offsetHeight - 1 + 'px';\n\t\t        }\n\t\t        else if (this.position === \"right\") {\n\t\t            this.el.style.left = this.el.parentElement.offsetWidth - 1 + 'px';\n\t\t            this.el.style.top = \"0\";\n\t\t        }\n\t\t        else if (this.position === \"left\") {\n\t\t            this.el.style.right = this.el.parentElement.offsetWidth - 1 + 'px';\n\t\t            this.el.style.top = \"0\";\n\t\t        }\n\t\t    };\n\t\t    __decorate([\n\t\t        core_1.Input('ng2-menu'), \n\t\t        __metadata('design:type', String)\n\t\t    ], Ng2MenuDirective.prototype, \"position\", void 0);\n\t\t    Ng2MenuDirective = __decorate([\n\t\t        core_1.Directive({\n\t\t            selector: '[ng2-menu]'\n\t\t        }), \n\t\t        __metadata('design:paramtypes', [core_1.ViewContainerRef])\n\t\t    ], Ng2MenuDirective);\n\t\t    return Ng2MenuDirective;\n\t\t}());\n\t\texports.Ng2MenuDirective = Ng2MenuDirective;\n\t\n\t\n\t/***/ }\n\t/******/ ])\n\t});\n\t;\n\t//# sourceMappingURL=ng2-menu.umd.js.map\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function webpackUniversalModuleDefinition(root, factory) {\n\t\tif(true)\n\t\t\tmodule.exports = factory(__webpack_require__(1), __webpack_require__(2), __webpack_require__(3));\n\t\telse if(typeof define === 'function' && define.amd)\n\t\t\tdefine([\"@angular/core\", \"@angular/forms\", \"@angular/platform-browser\"], factory);\n\t\telse if(typeof exports === 'object')\n\t\t\texports[\"ng2-parallax-scroll\"] = factory(require(\"@angular/core\"), require(\"@angular/forms\"), require(\"@angular/platform-browser\"));\n\t\telse\n\t\t\troot[\"ng2-parallax-scroll\"] = factory(root[\"@angular/core\"], root[\"@angular/forms\"], root[\"@angular/platform-browser\"]);\n\t})(this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__) {\n\treturn /******/ (function(modules) { // webpackBootstrap\n\t/******/ \t// The module cache\n\t/******/ \tvar installedModules = {};\n\t/******/\n\t/******/ \t// The require function\n\t/******/ \tfunction __webpack_require__(moduleId) {\n\t/******/\n\t/******/ \t\t// Check if module is in cache\n\t/******/ \t\tif(installedModules[moduleId])\n\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\t/******/\n\t/******/ \t\t// Create a new module (and put it into the cache)\n\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t/******/ \t\t\texports: {},\n\t/******/ \t\t\tid: moduleId,\n\t/******/ \t\t\tloaded: false\n\t/******/ \t\t};\n\t/******/\n\t/******/ \t\t// Execute the module function\n\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t/******/\n\t/******/ \t\t// Flag the module as loaded\n\t/******/ \t\tmodule.loaded = true;\n\t/******/\n\t/******/ \t\t// Return the exports of the module\n\t/******/ \t\treturn module.exports;\n\t/******/ \t}\n\t/******/\n\t/******/\n\t/******/ \t// expose the modules object (__webpack_modules__)\n\t/******/ \t__webpack_require__.m = modules;\n\t/******/\n\t/******/ \t// expose the module cache\n\t/******/ \t__webpack_require__.c = installedModules;\n\t/******/\n\t/******/ \t// __webpack_public_path__\n\t/******/ \t__webpack_require__.p = \"\";\n\t/******/\n\t/******/ \t// Load entry module and return exports\n\t/******/ \treturn __webpack_require__(0);\n\t/******/ })\n\t/************************************************************************/\n\t/******/ ([\n\t/* 0 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(1);\n\t\tvar forms_1 = __webpack_require__(2);\n\t\tvar platform_browser_1 = __webpack_require__(3);\n\t\tvar ng2_parallax_scroll_directive_1 = __webpack_require__(4);\n\t\texports.Ng2ParallaxScrollDirective = ng2_parallax_scroll_directive_1.Ng2ParallaxScrollDirective;\n\t\tvar Ng2ParallaxScrollModule = (function () {\n\t\t    function Ng2ParallaxScrollModule() {\n\t\t    }\n\t\t    Ng2ParallaxScrollModule = __decorate([\n\t\t        core_1.NgModule({\n\t\t            imports: [platform_browser_1.BrowserModule, forms_1.FormsModule],\n\t\t            declarations: [ng2_parallax_scroll_directive_1.Ng2ParallaxScrollDirective],\n\t\t            exports: [ng2_parallax_scroll_directive_1.Ng2ParallaxScrollDirective]\n\t\t        }), \n\t\t        __metadata('design:paramtypes', [])\n\t\t    ], Ng2ParallaxScrollModule);\n\t\t    return Ng2ParallaxScrollModule;\n\t\t}());\n\t\texports.Ng2ParallaxScrollModule = Ng2ParallaxScrollModule;\n\t\n\t\n\t/***/ },\n\t/* 1 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\t\n\t/***/ },\n\t/* 2 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\t\n\t/***/ },\n\t/* 3 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\t\n\t/***/ },\n\t/* 4 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(1);\n\t\tvar Ng2ParallaxScrollDirective = (function () {\n\t\t    function Ng2ParallaxScrollDirective(viewContainer) {\n\t\t        this.viewContainer = viewContainer;\n\t\t        this.el = this.viewContainer.element.nativeElement;\n\t\t    }\n\t\t    Ng2ParallaxScrollDirective.prototype.ngAfterViewInit = function () {\n\t\t        var _this = this;\n\t\t        this.img = this.el.querySelector(\"img\");\n\t\t        this.img.onload = function () {\n\t\t            _this.imgOrgWidth = _this.imgOrgWidth || _this.img.offsetWidth;\n\t\t            _this.imgOrgHeight = _this.imgOrgHeight || _this.img.offsetHeight;\n\t\t            console.log(_this.img.offsetWidth, _this.img.offsetHeight, _this.img.width, _this.img.height);\n\t\t            _this.setParallaxImage();\n\t\t            _this.updateParallaxImage();\n\t\t            window.addEventListener('scroll', function () {\n\t\t                _this.updateParallaxImage();\n\t\t            });\n\t\t            window.addEventListener('resize', function () {\n\t\t                _this.setParallaxImage();\n\t\t                _this.updateParallaxImage();\n\t\t            });\n\t\t        };\n\t\t    };\n\t\t    Ng2ParallaxScrollDirective.prototype.setParallaxImage = function () {\n\t\t        //set img style\n\t\t        var imgSize = this.imgOrgWidth > this.el.offsetWidth ?\n\t\t            { width: this.el.offsetWidth + 'px' } : { height: this.el.offsetHeight * 1.5 + 'px' };\n\t\t        Object.assign(this.img.style, {\n\t\t            display: 'block', position: 'absolute', bottom: 0, left: 0\n\t\t        }, imgSize);\n\t\t        // set container style\n\t\t        Object.assign(this.el.style, {\n\t\t            position: 'relative', overflow: 'hidden'\n\t\t        });\n\t\t        // wrap image with a div, then set style\n\t\t        var imgWrapperEl = this.el.querySelector('.parallax-img-wrapper');\n\t\t        if (!imgWrapperEl) {\n\t\t            imgWrapperEl = document.createElement('div');\n\t\t            imgWrapperEl.className = 'parallax-img-wrapper';\n\t\t            imgWrapperEl.appendChild(this.img);\n\t\t            this.el.appendChild(imgWrapperEl);\n\t\t        }\n\t\t        Object.assign(imgWrapperEl.style, {\n\t\t            position: 'absolute', top: 0, left: 0, right: 0, bottom: 0, zIndex: -1\n\t\t        });\n\t\t    };\n\t\t    Ng2ParallaxScrollDirective.prototype.updateParallaxImage = function () {\n\t\t        var elRect = this.el.getBoundingClientRect();\n\t\t        var imgRect = this.img.getBoundingClientRect();\n\t\t        var imgDist = imgRect.height - elRect.height;\n\t\t        var bottom = this.el.offsetTop + elRect.height;\n\t\t        var top = this.el.offsetTop;\n\t\t        var scrollTop = document.body.scrollTop;\n\t\t        var windowBottom = scrollTop + window.innerHeight;\n\t\t        var percentScrolled = (windowBottom - top) / (elRect.height + window.innerHeight);\n\t\t        //console.log(imgDist, percentScrolled, imgDist * percentScrolled);\n\t\t        var parallax = Math.round((imgDist * percentScrolled));\n\t\t        if ((bottom > scrollTop) && (top < (scrollTop + window.innerHeight))) {\n\t\t            this.img.style.bottom = parallax * -1 + 'px';\n\t\t        }\n\t\t    };\n\t\t    Ng2ParallaxScrollDirective = __decorate([\n\t\t        core_1.Directive({\n\t\t            selector: '[ng2-parallax], ng2-parallax'\n\t\t        }), \n\t\t        __metadata('design:paramtypes', [core_1.ViewContainerRef])\n\t\t    ], Ng2ParallaxScrollDirective);\n\t\t    return Ng2ParallaxScrollDirective;\n\t\t}());\n\t\texports.Ng2ParallaxScrollDirective = Ng2ParallaxScrollDirective;\n\t\n\t\n\t/***/ }\n\t/******/ ])\n\t});\n\t;\n\t//# sourceMappingURL=ng2-parallax-scroll.umd.js.map\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function webpackUniversalModuleDefinition(root, factory) {\n\t\tif(true)\n\t\t\tmodule.exports = factory(__webpack_require__(1), __webpack_require__(2), __webpack_require__(3));\n\t\telse if(typeof define === 'function' && define.amd)\n\t\t\tdefine([\"@angular/core\", \"@angular/forms\", \"@angular/platform-browser\"], factory);\n\t\telse if(typeof exports === 'object')\n\t\t\texports[\"ng2-popup\"] = factory(require(\"@angular/core\"), require(\"@angular/forms\"), require(\"@angular/platform-browser\"));\n\t\telse\n\t\t\troot[\"ng2-popup\"] = factory(root[\"@angular/core\"], root[\"@angular/forms\"], root[\"@angular/platform-browser\"]);\n\t})(this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__) {\n\treturn /******/ (function(modules) { // webpackBootstrap\n\t/******/ \t// The module cache\n\t/******/ \tvar installedModules = {};\n\t/******/\n\t/******/ \t// The require function\n\t/******/ \tfunction __webpack_require__(moduleId) {\n\t/******/\n\t/******/ \t\t// Check if module is in cache\n\t/******/ \t\tif(installedModules[moduleId])\n\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\t/******/\n\t/******/ \t\t// Create a new module (and put it into the cache)\n\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t/******/ \t\t\texports: {},\n\t/******/ \t\t\tid: moduleId,\n\t/******/ \t\t\tloaded: false\n\t/******/ \t\t};\n\t/******/\n\t/******/ \t\t// Execute the module function\n\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t/******/\n\t/******/ \t\t// Flag the module as loaded\n\t/******/ \t\tmodule.loaded = true;\n\t/******/\n\t/******/ \t\t// Return the exports of the module\n\t/******/ \t\treturn module.exports;\n\t/******/ \t}\n\t/******/\n\t/******/\n\t/******/ \t// expose the modules object (__webpack_modules__)\n\t/******/ \t__webpack_require__.m = modules;\n\t/******/\n\t/******/ \t// expose the module cache\n\t/******/ \t__webpack_require__.c = installedModules;\n\t/******/\n\t/******/ \t// __webpack_public_path__\n\t/******/ \t__webpack_require__.p = \"\";\n\t/******/\n\t/******/ \t// Load entry module and return exports\n\t/******/ \treturn __webpack_require__(0);\n\t/******/ })\n\t/************************************************************************/\n\t/******/ ([\n\t/* 0 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(1);\n\t\tvar forms_1 = __webpack_require__(2);\n\t\tvar platform_browser_1 = __webpack_require__(3);\n\t\tvar ng2_overlay_1 = __webpack_require__(4);\n\t\tvar ng2_popup_component_1 = __webpack_require__(5);\n\t\texports.Ng2PopupComponent = ng2_popup_component_1.Ng2PopupComponent;\n\t\tvar ng2_message_popup_component_1 = __webpack_require__(6);\n\t\texports.Ng2MessagePopupComponent = ng2_message_popup_component_1.Ng2MessagePopupComponent;\n\t\tvar Ng2PopupModule = (function () {\n\t\t    function Ng2PopupModule() {\n\t\t    }\n\t\t    Ng2PopupModule = __decorate([\n\t\t        core_1.NgModule({\n\t\t            imports: [platform_browser_1.BrowserModule, forms_1.FormsModule, ng2_overlay_1.Ng2OverlayModule],\n\t\t            declarations: [ng2_message_popup_component_1.Ng2MessagePopupComponent, ng2_popup_component_1.Ng2PopupComponent],\n\t\t            exports: [ng2_message_popup_component_1.Ng2MessagePopupComponent, ng2_popup_component_1.Ng2PopupComponent],\n\t\t            entryComponents: [ng2_message_popup_component_1.Ng2MessagePopupComponent]\n\t\t        }), \n\t\t        __metadata('design:paramtypes', [])\n\t\t    ], Ng2PopupModule);\n\t\t    return Ng2PopupModule;\n\t\t}());\n\t\texports.Ng2PopupModule = Ng2PopupModule;\n\t\n\t\n\t/***/ },\n\t/* 1 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\t\n\t/***/ },\n\t/* 2 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\t\n\t/***/ },\n\t/* 3 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\t\n\t/***/ },\n\t/* 4 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t(function webpackUniversalModuleDefinition(root, factory) {\n\t\t\tif(true)\n\t\t\t\tmodule.exports = factory(__webpack_require__(1), __webpack_require__(2), __webpack_require__(3));\n\t\t\telse if(typeof define === 'function' && define.amd)\n\t\t\t\tdefine([\"@angular/core\", \"@angular/forms\", \"@angular/platform-browser\"], factory);\n\t\t\telse if(typeof exports === 'object')\n\t\t\t\texports[\"ng2-overlay\"] = factory(require(\"@angular/core\"), require(\"@angular/forms\"), require(\"@angular/platform-browser\"));\n\t\t\telse\n\t\t\t\troot[\"ng2-overlay\"] = factory(root[\"@angular/core\"], root[\"@angular/forms\"], root[\"@angular/platform-browser\"]);\n\t\t})(this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__) {\n\t\treturn /******/ (function(modules) { // webpackBootstrap\n\t\t/******/ \t// The module cache\n\t\t/******/ \tvar installedModules = {};\n\t\t/******/\n\t\t/******/ \t// The require function\n\t\t/******/ \tfunction __webpack_require__(moduleId) {\n\t\t/******/\n\t\t/******/ \t\t// Check if module is in cache\n\t\t/******/ \t\tif(installedModules[moduleId])\n\t\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\t\t/******/\n\t\t/******/ \t\t// Create a new module (and put it into the cache)\n\t\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t\t/******/ \t\t\texports: {},\n\t\t/******/ \t\t\tid: moduleId,\n\t\t/******/ \t\t\tloaded: false\n\t\t/******/ \t\t};\n\t\t/******/\n\t\t/******/ \t\t// Execute the module function\n\t\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t\t/******/\n\t\t/******/ \t\t// Flag the module as loaded\n\t\t/******/ \t\tmodule.loaded = true;\n\t\t/******/\n\t\t/******/ \t\t// Return the exports of the module\n\t\t/******/ \t\treturn module.exports;\n\t\t/******/ \t}\n\t\t/******/\n\t\t/******/\n\t\t/******/ \t// expose the modules object (__webpack_modules__)\n\t\t/******/ \t__webpack_require__.m = modules;\n\t\t/******/\n\t\t/******/ \t// expose the module cache\n\t\t/******/ \t__webpack_require__.c = installedModules;\n\t\t/******/\n\t\t/******/ \t// __webpack_public_path__\n\t\t/******/ \t__webpack_require__.p = \"\";\n\t\t/******/\n\t\t/******/ \t// Load entry module and return exports\n\t\t/******/ \treturn __webpack_require__(0);\n\t\t/******/ })\n\t\t/************************************************************************/\n\t\t/******/ ([\n\t\t/* 0 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t};\n\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t};\n\t\t\tvar core_1 = __webpack_require__(1);\n\t\t\tvar forms_1 = __webpack_require__(2);\n\t\t\tvar platform_browser_1 = __webpack_require__(3);\n\t\t\tvar overlay_1 = __webpack_require__(4);\n\t\t\texports.Overlay = overlay_1.Overlay;\n\t\t\tvar overlay_manager_1 = __webpack_require__(6);\n\t\t\texports.OverlayManager = overlay_manager_1.OverlayManager;\n\t\t\tvar overlay_directive_1 = __webpack_require__(7);\n\t\t\texports.OverlayDirective = overlay_directive_1.OverlayDirective;\n\t\t\tvar Ng2OverlayModule = (function () {\n\t\t\t    function Ng2OverlayModule() {\n\t\t\t    }\n\t\t\t    Ng2OverlayModule = __decorate([\n\t\t\t        core_1.NgModule({\n\t\t\t            imports: [platform_browser_1.BrowserModule, forms_1.FormsModule],\n\t\t\t            declarations: [overlay_directive_1.OverlayDirective],\n\t\t\t            providers: [overlay_manager_1.OverlayManager],\n\t\t\t            exports: [overlay_directive_1.OverlayDirective]\n\t\t\t        }), \n\t\t\t        __metadata('design:paramtypes', [])\n\t\t\t    ], Ng2OverlayModule);\n\t\t\t    return Ng2OverlayModule;\n\t\t\t}());\n\t\t\texports.Ng2OverlayModule = Ng2OverlayModule;\n\t\t\t;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 1 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\t\t\n\t\t/***/ },\n\t\t/* 2 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\t\t\n\t\t/***/ },\n\t\t/* 3 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\t\t\n\t\t/***/ },\n\t\t/* 4 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar util_1 = __webpack_require__(5);\n\t\t\tvar Overlay = (function () {\n\t\t\t    function Overlay(el, options) {\n\t\t\t        options = options || {};\n\t\t\t        this.id = options.id;\n\t\t\t        this.type = options.type;\n\t\t\t        if (!this.id) {\n\t\t\t            throw \"Invalid overlay id\";\n\t\t\t        }\n\t\t\t        this.element = el; // overlay wrapper element with table dsplay\n\t\t\t        this.windowOverlay = options.windowOverlay;\n\t\t\t        this.position = this.getPositionProperty(options.position || 'center center');\n\t\t\t    }\n\t\t\t    Overlay.prototype.positionIt = function (event) {\n\t\t\t        if (this.position.inside) {\n\t\t\t            this.positionItInside(this.position);\n\t\t\t        }\n\t\t\t        else {\n\t\t\t            this.positionItOutside(this.position, event);\n\t\t\t        }\n\t\t\t    };\n\t\t\t    Overlay.prototype.getPositionProperty = function (positionStr) {\n\t\t\t        var position = {}, inside;\n\t\t\t        var _a = positionStr.split(' '), vertical = _a[0], horizontal = _a[1], insideStr = _a[2];\n\t\t\t        horizontal = horizontal || 'center';\n\t\t\t        vertical = vertical || 'center';\n\t\t\t        inside = (insideStr !== 'outside' || this.windowOverlay);\n\t\t\t        position.horizontal = Overlay[horizontal.toUpperCase()];\n\t\t\t        position.vertical = Overlay[vertical.toUpperCase()];\n\t\t\t        position.inside = inside;\n\t\t\t        return position;\n\t\t\t    };\n\t\t\t    Overlay.prototype.positionItInside = function (position) {\n\t\t\t        this.element.style.display = 'flex';\n\t\t\t        //top / left positioning\n\t\t\t        if (this.windowOverlay) {\n\t\t\t            this.element.style.position = 'fixed';\n\t\t\t            //works as blocker\n\t\t\t            Object.assign(this.element.style, {\n\t\t\t                backgroundColor: 'rgba(0,0,0,0.2)',\n\t\t\t                top: '0', left: '0', bottom: '0', right: '0',\n\t\t\t                width: '100%', height: '100%'\n\t\t\t            });\n\t\t\t        }\n\t\t\t        else {\n\t\t\t            //adjust top/left to match to parentElement\n\t\t\t            var parentEl = this.element.parentElement;\n\t\t\t            //works as a blocker\n\t\t\t            Object.assign(this.element.style, {\n\t\t\t                position: 'absolute',\n\t\t\t                // backgroundColor: 'transparent',\n\t\t\t                backgroundColor: 'rgba(0,0,0,0.2)',\n\t\t\t                top: parentEl.offsetTop + 'px',\n\t\t\t                left: parentEl.offsetLeft + 'px',\n\t\t\t                width: parentEl.offsetWidth + 'px',\n\t\t\t                height: parentEl.offsetHeight + 'px'\n\t\t\t            });\n\t\t\t        }\n\t\t\t        ;\n\t\t\t        //horizontal position\n\t\t\t        switch (position.horizontal) {\n\t\t\t            case Overlay.LEFT:\n\t\t\t                this.element.style.justifyContent = 'flex-start';\n\t\t\t                break;\n\t\t\t            case Overlay.CENTER:\n\t\t\t                this.element.style.justifyContent = 'center';\n\t\t\t                break;\n\t\t\t            case Overlay.RIGHT:\n\t\t\t                this.element.style.justifyContent = 'flex-end';\n\t\t\t                break;\n\t\t\t        }\n\t\t\t        //vertical position\n\t\t\t        switch (position.vertical) {\n\t\t\t            case Overlay.LEFT:\n\t\t\t                this.element.style.alignItems = 'flex-start';\n\t\t\t                break;\n\t\t\t            case Overlay.CENTER:\n\t\t\t            case Overlay.MIDDLE:\n\t\t\t                this.element.style.alignItems = 'center';\n\t\t\t                break;\n\t\t\t            case Overlay.RIGHT:\n\t\t\t                this.element.style.alignItems = 'flex-end';\n\t\t\t                break;\n\t\t\t        }\n\t\t\t    };\n\t\t\t    Overlay.prototype.positionItOutside = function (position, event) {\n\t\t\t        //adjust top/left to match to parentElement\n\t\t\t        var parentEl = this.element.parentElement;\n\t\t\t        //works as guide line?\n\t\t\t        Object.assign(this.element.style, {\n\t\t\t            position: 'absolute',\n\t\t\t            pointerEvents: 'none',\n\t\t\t            top: parentEl.offsetTop + 'px',\n\t\t\t            left: parentEl.offsetLeft + 'px',\n\t\t\t            width: parentEl.offsetWidth + 'px',\n\t\t\t            height: parentEl.offsetHeight + 'px'\n\t\t\t        });\n\t\t\t        this.element.style.display = 'block';\n\t\t\t        var elToPosition = (this.element.children[0]);\n\t\t\t        elToPosition.style.position = 'absolute';\n\t\t\t        elToPosition.style.pointerEvents = 'auto';\n\t\t\t        switch (position.vertical) {\n\t\t\t            case Overlay.TOP:\n\t\t\t                elToPosition.style.bottom = this.element.offsetHeight + 'px';\n\t\t\t                break;\n\t\t\t            case Overlay.BOTTOM:\n\t\t\t                elToPosition.style.top = this.element.offsetHeight + 'px';\n\t\t\t                break;\n\t\t\t            case Overlay.LEFT:\n\t\t\t                elToPosition.style.right = this.element.offsetWidth + 'px';\n\t\t\t                break;\n\t\t\t            case Overlay.RIGHT:\n\t\t\t                elToPosition.style.left = this.element.offsetWidth + 'px';\n\t\t\t                break;\n\t\t\t        }\n\t\t\t        switch (position.horizontal) {\n\t\t\t            case Overlay.CENTER:\n\t\t\t                elToPosition.style.left = (this.element.offsetWidth - elToPosition.offsetWidth) / 2 + 'px';\n\t\t\t                break;\n\t\t\t            case Overlay.LEFT:\n\t\t\t                elToPosition.style.left = '0';\n\t\t\t                break;\n\t\t\t            case Overlay.RIGHT:\n\t\t\t                elToPosition.style.right = '0';\n\t\t\t                break;\n\t\t\t            case Overlay.TOP:\n\t\t\t                elToPosition.style.top = '0';\n\t\t\t                break;\n\t\t\t            case Overlay.BOTTOM:\n\t\t\t                elToPosition.style.bottom = '0';\n\t\t\t                break;\n\t\t\t            case Overlay.CURSOR:\n\t\t\t                var mousePos = util_1.Util.getMousePositionInElement(event, this.element);\n\t\t\t                if ((mousePos.x + elToPosition.offsetWidth) > this.element.offsetWidth) {\n\t\t\t                    elToPosition.style.left = (this.element.offsetWidth - elToPosition.offsetWidth - 5) + 'px';\n\t\t\t                }\n\t\t\t                else if (mousePos.x < elToPosition.offsetWidth / 2) {\n\t\t\t                    elToPosition.style.left = '0px';\n\t\t\t                }\n\t\t\t                else {\n\t\t\t                    elToPosition.style.left = mousePos.x - elToPosition.offsetWidth / 2 + 'px';\n\t\t\t                }\n\t\t\t                break;\n\t\t\t        }\n\t\t\t    };\n\t\t\t    Overlay.TOP = 11;\n\t\t\t    Overlay.MIDDLE = 12;\n\t\t\t    Overlay.BOTTOM = 13;\n\t\t\t    Overlay.LEFT = 21;\n\t\t\t    Overlay.CENTER = 22;\n\t\t\t    Overlay.RIGHT = 23;\n\t\t\t    Overlay.CURSOR = 31;\n\t\t\t    return Overlay;\n\t\t\t}());\n\t\t\texports.Overlay = Overlay;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 5 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar Util = (function () {\n\t\t\t    function Util() {\n\t\t\t    }\n\t\t\t    Util.getDocumentPosition = function (oElement) {\n\t\t\t        var posX = 0, posY = 0;\n\t\t\t        if (oElement.offsetParent) {\n\t\t\t            for (; oElement; oElement = oElement.offsetParent) {\n\t\t\t                posX += oElement.offsetLeft;\n\t\t\t                posY += oElement.offsetTop;\n\t\t\t            }\n\t\t\t            return { x: posX, y: posY };\n\t\t\t        }\n\t\t\t        else {\n\t\t\t            return { x: oElement['x'], y: oElement['y'] };\n\t\t\t        }\n\t\t\t    };\n\t\t\t    Util.getMousePositionInElement = function (evt, element) {\n\t\t\t        evt = evt || window.event;\n\t\t\t        var posX = 0, posY = 0;\n\t\t\t        var elPos = this.getDocumentPosition(element);\n\t\t\t        if (evt.pageX || evt.pageY) {\n\t\t\t            posX = evt.pageX;\n\t\t\t            posY = evt.pageY;\n\t\t\t        }\n\t\t\t        else if (evt.clientX || evt.clientY) {\n\t\t\t            posX = evt.clientX +\n\t\t\t                document.body.scrollLeft +\n\t\t\t                document.documentElement.scrollLeft;\n\t\t\t            posY = evt.clientY +\n\t\t\t                document.body.scrollTop +\n\t\t\t                document.documentElement.scrollTop;\n\t\t\t        }\n\t\t\t        return {\n\t\t\t            x: posX - elPos.x,\n\t\t\t            y: posY - elPos.y\n\t\t\t        };\n\t\t\t    };\n\t\t\t    return Util;\n\t\t\t}());\n\t\t\texports.Util = Util;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 6 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t};\n\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t};\n\t\t\tvar core_1 = __webpack_require__(1);\n\t\t\tvar OverlayManager = (function () {\n\t\t\t    function OverlayManager() {\n\t\t\t    }\n\t\t\t    OverlayManager.prototype.register = function (overlay) {\n\t\t\t        OverlayManager.overlays[overlay.id] = overlay;\n\t\t\t        // console.log('overlay.register, OverlayManager.overlays', OverlayManager.overlays);\n\t\t\t    };\n\t\t\t    OverlayManager.prototype.open = function (arg, event) {\n\t\t\t        var overlay = typeof arg === 'string' ? OverlayManager.overlays[arg] : arg;\n\t\t\t        if (!overlay.opened) {\n\t\t\t            overlay.positionIt(event);\n\t\t\t            overlay.opened = true;\n\t\t\t        }\n\t\t\t    };\n\t\t\t    OverlayManager.prototype.close = function (arg) {\n\t\t\t        var overlay = typeof arg === 'string' ? OverlayManager.overlays[arg] : arg;\n\t\t\t        overlay.element.style.display = 'none';\n\t\t\t        overlay.opened = false;\n\t\t\t    };\n\t\t\t    //list of overlay objects\n\t\t\t    OverlayManager.overlays = {};\n\t\t\t    OverlayManager = __decorate([\n\t\t\t        core_1.Injectable(), \n\t\t\t        __metadata('design:paramtypes', [])\n\t\t\t    ], OverlayManager);\n\t\t\t    return OverlayManager;\n\t\t\t}());\n\t\t\texports.OverlayManager = OverlayManager;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 7 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t};\n\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t};\n\t\t\tvar core_1 = __webpack_require__(1);\n\t\t\tvar overlay_manager_1 = __webpack_require__(6);\n\t\t\tvar overlay_1 = __webpack_require__(4);\n\t\t\tvar OverlayDirective = (function () {\n\t\t\t    function OverlayDirective(viewContainerRef, overlayManager) {\n\t\t\t        this.viewContainerRef = viewContainerRef;\n\t\t\t        this.overlayManager = overlayManager;\n\t\t\t        this.el = this.viewContainerRef.element.nativeElement;\n\t\t\t    }\n\t\t\t    OverlayDirective.prototype.ngAfterViewInit = function () {\n\t\t\t        this.wrapItWithOverlayTag();\n\t\t\t        this.registerToOverlayManager();\n\t\t\t    };\n\t\t\t    OverlayDirective.prototype.wrapItWithOverlayTag = function () {\n\t\t\t        //console.log('wrapped overlay directive element with <ng2-overlay>');\n\t\t\t        this.overlayEl = document.createElement('ng2-overlay');\n\t\t\t        this.overlayEl.style.display = 'none';\n\t\t\t        this.el.parentElement.insertBefore(this.overlayEl, this.el.nextSibling);\n\t\t\t        this.overlayEl.appendChild(this.el);\n\t\t\t    };\n\t\t\t    //create Overlay object,  then register this element to overlayManager\n\t\t\t    OverlayDirective.prototype.registerToOverlayManager = function () {\n\t\t\t        var positionStr = this.overlayPosition;\n\t\t\t        var overlay = new overlay_1.Overlay(this.overlayEl, {\n\t\t\t            id: this.el.id,\n\t\t\t            windowOverlay: this.overlayOf == \"window\",\n\t\t\t            position: positionStr\n\t\t\t        });\n\t\t\t        //console.log('registering overlay', overlay);\n\t\t\t        this.overlayManager.register(overlay);\n\t\t\t    };\n\t\t\t    __decorate([\n\t\t\t        core_1.Input('ng2-overlay-of'), \n\t\t\t        __metadata('design:type', String)\n\t\t\t    ], OverlayDirective.prototype, \"overlayOf\", void 0);\n\t\t\t    __decorate([\n\t\t\t        core_1.Input('ng2-overlay-position'), \n\t\t\t        __metadata('design:type', String)\n\t\t\t    ], OverlayDirective.prototype, \"overlayPosition\", void 0);\n\t\t\t    OverlayDirective = __decorate([\n\t\t\t        core_1.Directive({\n\t\t\t            selector: '[ng2-overlay], [ng2-overlay-of], [ng2-overlay-position]',\n\t\t\t        }), \n\t\t\t        __metadata('design:paramtypes', [core_1.ViewContainerRef, overlay_manager_1.OverlayManager])\n\t\t\t    ], OverlayDirective);\n\t\t\t    return OverlayDirective;\n\t\t\t}());\n\t\t\texports.OverlayDirective = OverlayDirective;\n\t\t\n\t\t\n\t\t/***/ }\n\t\t/******/ ])\n\t\t});\n\t\t;\n\t\t//# sourceMappingURL=ng2-overlay.umd.js.map\n\t\n\t/***/ },\n\t/* 5 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(1);\n\t\tvar ng2_overlay_1 = __webpack_require__(4);\n\t\tvar Ng2PopupComponent = (function () {\n\t\t    function Ng2PopupComponent(componentResolver, overlayManager) {\n\t\t        this.componentResolver = componentResolver;\n\t\t        this.overlayManager = overlayManager;\n\t\t    }\n\t\t    Ng2PopupComponent.prototype.ngAfterViewInit = function () {\n\t\t        var overlayEl = this.marker.element.nativeElement.parentElement.parentElement;\n\t\t        var overlay = new ng2_overlay_1.Overlay(overlayEl, {\n\t\t            id: 'ng2-popup-overlay',\n\t\t            windowOverlay: true,\n\t\t            position: 'center center'\n\t\t        });\n\t\t        this.overlayManager.register(overlay);\n\t\t    };\n\t\t    Ng2PopupComponent.prototype.open = function (component, options) {\n\t\t        this.close();\n\t\t        this.opened = true;\n\t\t        this.classNames = options.classNames;\n\t\t        this.closeButton = options.closeButton;\n\t\t        var factory = this.componentResolver.resolveComponentFactory(component);\n\t\t        var componentRef = this.marker.createComponent(factory);\n\t\t        componentRef.instance.popupOptions = options;\n\t\t        componentRef.instance.popup = this;\n\t\t        this.overlayManager.open('ng2-popup-overlay', null); //(id, event)\n\t\t    };\n\t\t    Ng2PopupComponent.prototype.close = function () {\n\t\t        this.opened = false;\n\t\t        this.overlayManager.close('ng2-popup-overlay');\n\t\t        try {\n\t\t            this.marker.remove();\n\t\t        }\n\t\t        catch (e) { }\n\t\t    };\n\t\t    __decorate([\n\t\t        core_1.ViewChild('marker', { read: core_1.ViewContainerRef }), \n\t\t        __metadata('design:type', Object)\n\t\t    ], Ng2PopupComponent.prototype, \"marker\", void 0);\n\t\t    Ng2PopupComponent = __decorate([\n\t\t        core_1.Component({\n\t\t            selector: 'ng2-popup',\n\t\t            directives: [ng2_overlay_1.OverlayDirective],\n\t\t            providers: [ng2_overlay_1.OverlayManager],\n\t\t            template: \"\\n    <div id=\\\"ng2-popup-overlay\\\"> <!-- <-- this is overlay -->\\n      <div class=\\\"popup-container {{classNames}}\\\" [ngClass]=\\\"{opened: opened}\\\">\\n        <div *ngIf=\\\"closeButton != false\\\" class=\\\"close-popup\\\" (click)=\\\"close()\\\">x</div>\\n        <div class=\\\"marker\\\" #marker></div> <!-- to position popup component -->\\n        <!-- popup component will be here -->\\n      </div>\\n    </div>\\n  \",\n\t\t            styles: [\"\\n    .popup-container { \\n      background: #fff;\\n      border: 1px solid #ccc;\\n      box-shadow: 0 5px 15px rgba(0,0,0,.5);\\n      border-radius: 5px;\\n      width: 600px;\\n      display: none;\\n    }\\n    .popup-container.opened { \\n      display: block;\\n    }\\n    .close-popup {\\n      font-family: \\\"Helvetica Neue\\\", Helvetica, Arial, sans-serif;\\n      float: right; \\n      cursor: pointer; \\n      font-size: 21px;\\n      line-height: 1;\\n      text-shadow: 0 1px 0 #fff;\\n      opacity: 0.2;\\n      padding: 10px;\\n    }\\n    /*.marker ~ * { display:block; background: #fff}*/\\n    .popup-container.small { width: 300px}\\n    .popup-container.large { width: 900px}\\n  \"],\n\t\t            encapsulation: core_1.ViewEncapsulation.None\n\t\t        }), \n\t\t        __metadata('design:paramtypes', [core_1.ComponentFactoryResolver, ng2_overlay_1.OverlayManager])\n\t\t    ], Ng2PopupComponent);\n\t\t    return Ng2PopupComponent;\n\t\t}());\n\t\texports.Ng2PopupComponent = Ng2PopupComponent;\n\t\n\t\n\t/***/ },\n\t/* 6 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(1);\n\t\tvar Ng2MessagePopupComponent = (function () {\n\t\t    function Ng2MessagePopupComponent() {\n\t\t    }\n\t\t    Ng2MessagePopupComponent = __decorate([\n\t\t        core_1.Component({\n\t\t            selector: 'ng2-message-popup',\n\t\t            template: \"\\n    <div>\\n      <div class=\\\"popup-header\\\">{{popupOptions.title}}</div>\\n      <div class=\\\"popup-body\\\">{{popupOptions.message}}</div>\\n      <div class=\\\"popup-footer\\\" *ngIf=\\\"popupOptions.buttons\\\">\\n        <button *ngIf=\\\"popupOptions.buttons.OK\\\"\\n          (click)=\\\"popupOptions.buttons.OK()\\\">Ok</button>\\n        <button *ngIf=\\\"popupOptions.buttons.CANCEL\\\"\\n          (click)=\\\"popupOptions.buttons.CANCEL()\\\">Cancel</button>\\n      </div>\\n    </div>\\n  \",\n\t\t            encapsulation: core_1.ViewEncapsulation.None,\n\t\t            styles: [\"\\n    .popup-header, .popup-body, .popup-footer {\\n      padding: 15px;\\n      text-align: center;\\n    }\\n    .popup-header  {\\n      font-weight: bold;\\n      font-size: 18px;\\n      border-bottom: 1px solid #ccc;\\n    }\\n  \"]\n\t\t        }), \n\t\t        __metadata('design:paramtypes', [])\n\t\t    ], Ng2MessagePopupComponent);\n\t\t    return Ng2MessagePopupComponent;\n\t\t}());\n\t\texports.Ng2MessagePopupComponent = Ng2MessagePopupComponent;\n\t\n\t\n\t/***/ }\n\t/******/ ])\n\t});\n\t;\n\t//# sourceMappingURL=ng2-popup.umd.js.map\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function webpackUniversalModuleDefinition(root, factory) {\n\t\tif(true)\n\t\t\tmodule.exports = factory(__webpack_require__(1), __webpack_require__(2), __webpack_require__(3));\n\t\telse if(typeof define === 'function' && define.amd)\n\t\t\tdefine([\"@angular/core\", \"@angular/forms\", \"@angular/platform-browser\"], factory);\n\t\telse if(typeof exports === 'object')\n\t\t\texports[\"ng2-sticky\"] = factory(require(\"@angular/core\"), require(\"@angular/forms\"), require(\"@angular/platform-browser\"));\n\t\telse\n\t\t\troot[\"ng2-sticky\"] = factory(root[\"@angular/core\"], root[\"@angular/forms\"], root[\"@angular/platform-browser\"]);\n\t})(this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__) {\n\treturn /******/ (function(modules) { // webpackBootstrap\n\t/******/ \t// The module cache\n\t/******/ \tvar installedModules = {};\n\t/******/\n\t/******/ \t// The require function\n\t/******/ \tfunction __webpack_require__(moduleId) {\n\t/******/\n\t/******/ \t\t// Check if module is in cache\n\t/******/ \t\tif(installedModules[moduleId])\n\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\t/******/\n\t/******/ \t\t// Create a new module (and put it into the cache)\n\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t/******/ \t\t\texports: {},\n\t/******/ \t\t\tid: moduleId,\n\t/******/ \t\t\tloaded: false\n\t/******/ \t\t};\n\t/******/\n\t/******/ \t\t// Execute the module function\n\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t/******/\n\t/******/ \t\t// Flag the module as loaded\n\t/******/ \t\tmodule.loaded = true;\n\t/******/\n\t/******/ \t\t// Return the exports of the module\n\t/******/ \t\treturn module.exports;\n\t/******/ \t}\n\t/******/\n\t/******/\n\t/******/ \t// expose the modules object (__webpack_modules__)\n\t/******/ \t__webpack_require__.m = modules;\n\t/******/\n\t/******/ \t// expose the module cache\n\t/******/ \t__webpack_require__.c = installedModules;\n\t/******/\n\t/******/ \t// __webpack_public_path__\n\t/******/ \t__webpack_require__.p = \"\";\n\t/******/\n\t/******/ \t// Load entry module and return exports\n\t/******/ \treturn __webpack_require__(0);\n\t/******/ })\n\t/************************************************************************/\n\t/******/ ([\n\t/* 0 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(1);\n\t\tvar forms_1 = __webpack_require__(2);\n\t\tvar platform_browser_1 = __webpack_require__(3);\n\t\tvar ng2_sticky_directive_1 = __webpack_require__(4);\n\t\texports.Ng2StickyDirective = ng2_sticky_directive_1.Ng2StickyDirective;\n\t\tvar Ng2StickyModule = (function () {\n\t\t    function Ng2StickyModule() {\n\t\t    }\n\t\t    Ng2StickyModule = __decorate([\n\t\t        core_1.NgModule({\n\t\t            imports: [platform_browser_1.BrowserModule, forms_1.FormsModule],\n\t\t            declarations: [ng2_sticky_directive_1.Ng2StickyDirective],\n\t\t            exports: [ng2_sticky_directive_1.Ng2StickyDirective]\n\t\t        }), \n\t\t        __metadata('design:paramtypes', [])\n\t\t    ], Ng2StickyModule);\n\t\t    return Ng2StickyModule;\n\t\t}());\n\t\texports.Ng2StickyModule = Ng2StickyModule;\n\t\n\t\n\t/***/ },\n\t/* 1 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\t\n\t/***/ },\n\t/* 2 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\t\n\t/***/ },\n\t/* 3 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\t\n\t/***/ },\n\t/* 4 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t'use strict';\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(1);\n\t\tvar ng2_utils_1 = __webpack_require__(5);\n\t\tvar Ng2StickyDirective = (function () {\n\t\t    function Ng2StickyDirective(el) {\n\t\t        var _this = this;\n\t\t        this.stickyOffsetTop = 0;\n\t\t        this.scrollHandler = function () {\n\t\t            // let elRect: ClientRect = this.el.getBoundingClientRect();\n\t\t            var parentRect = _this.el.parentElement.getBoundingClientRect();\n\t\t            var bodyRect = document.body.getBoundingClientRect();\n\t\t            var dynProps;\n\t\t            if (_this.original.float === 'right') {\n\t\t                var right = bodyRect.right - parentRect.right + _this.original.marginRight;\n\t\t                dynProps = { right: right + 'px' };\n\t\t            }\n\t\t            else if (_this.original.float === 'left') {\n\t\t                var left = parentRect.left - bodyRect.left + _this.original.marginLeft;\n\t\t                dynProps = { left: left + 'px' };\n\t\t            }\n\t\t            else {\n\t\t                //console.log('parentRect..............', parentRect.width);\n\t\t                dynProps = { width: parentRect.width + 'px' };\n\t\t            }\n\t\t            //console.log('dynProps', dynProps);\n\t\t            if (_this.original.marginTop + _this.original.marginBottom +\n\t\t                _this.original.boundingClientRect.height + _this.stickyOffsetTop >= parentRect.bottom) {\n\t\t                /**\n\t\t                 * stikcy element reached to the bottom of the container\n\t\t                 */\n\t\t                // console.log('case 1 (absolute)', parentRect.bottom, this.original.marginBottom);\n\t\t                var floatAdjustment = _this.original.float === 'right' ? { right: 0 } :\n\t\t                    _this.original.float === 'left' ? { left: 0 } : {};\n\t\t                Object.assign(_this.el.style, {\n\t\t                    position: 'absolute',\n\t\t                    float: 'none',\n\t\t                    top: 'inherit',\n\t\t                    bottom: 0\n\t\t                }, dynProps, floatAdjustment);\n\t\t            }\n\t\t            else if (parentRect.top * -1 + _this.original.marginTop + _this.stickyOffsetTop > _this.original.offsetTop) {\n\t\t                /**\n\t\t                 * stikcy element is in the middle of container\n\t\t                 */\n\t\t                //console.log('case 2 (fixed)', parentRect.top * -1, this.original.marginTop, this.original.offsetTop);\n\t\t                // if not floating, add an empty filler element, since the original elements becames 'fixed'\n\t\t                if (_this.original.float !== 'left' && _this.original.float !== 'right' && !_this.fillerEl) {\n\t\t                    _this.fillerEl = document.createElement('div');\n\t\t                    _this.fillerEl.style.height = _this.el.offsetHeight + 'px';\n\t\t                    _this.parentEl.insertBefore(_this.fillerEl, _this.el);\n\t\t                }\n\t\t                Object.assign(_this.el.style, {\n\t\t                    position: 'fixed',\n\t\t                    float: 'none',\n\t\t                    top: _this.stickyOffsetTop + 'px',\n\t\t                    bottom: 'inherit'\n\t\t                }, dynProps);\n\t\t            }\n\t\t            else {\n\t\t                /**\n\t\t                 * stikcy element is in the original position\n\t\t                 */\n\t\t                // console.log('case 3 (original)');\n\t\t                if (_this.fillerEl) {\n\t\t                    _this.parentEl.removeChild(_this.fillerEl); //IE11 does not work with el.remove()\n\t\t                    _this.fillerEl = undefined;\n\t\t                }\n\t\t                Object.assign(_this.el.style, {\n\t\t                    position: _this.original.position,\n\t\t                    float: _this.original.float,\n\t\t                    top: _this.original.top,\n\t\t                    bottom: _this.original.bottom,\n\t\t                    width: _this.original.width,\n\t\t                    left: _this.original.left\n\t\t                }, dynProps);\n\t\t            }\n\t\t        };\n\t\t        this.el = this.el = el.nativeElement;\n\t\t        this.parentEl = this.el.parentElement;\n\t\t    }\n\t\t    Ng2StickyDirective.prototype.ngAfterViewInit = function () {\n\t\t        this.el.style.boxSizing = 'border-box';\n\t\t        if (this.stickyAfter) {\n\t\t            var cetStickyAfterEl = document.querySelector(this.stickyAfter);\n\t\t            if (cetStickyAfterEl) {\n\t\t                this.stickyOffsetTop = cetStickyAfterEl.getBoundingClientRect().bottom;\n\t\t            }\n\t\t        }\n\t\t        // set the parent relatively positioned\n\t\t        var allowedPositions = ['absolute', 'fixed', 'relative'];\n\t\t        var parentElPosition = ng2_utils_1.computedStyle(this.parentEl, 'position');\n\t\t        if (allowedPositions.indexOf(parentElPosition) === -1) {\n\t\t            this.parentEl.style.position = 'relative';\n\t\t        }\n\t\t        this.diff = {\n\t\t            top: this.el.offsetTop - this.parentEl.offsetTop,\n\t\t            left: this.el.offsetLeft - this.parentEl.offsetLeft\n\t\t        };\n\t\t        var elRect = this.el.getBoundingClientRect();\n\t\t        this.original = {\n\t\t            boundingClientRect: elRect,\n\t\t            position: ng2_utils_1.computedStyle(this.el, 'position'),\n\t\t            float: ng2_utils_1.computedStyle(this.el, 'float'),\n\t\t            top: ng2_utils_1.computedStyle(this.el, 'top'),\n\t\t            bottom: ng2_utils_1.computedStyle(this.el, 'bottom'),\n\t\t            left: ng2_utils_1.computedStyle(this.el, 'left'),\n\t\t            width: ng2_utils_1.computedStyle(this.el, 'width'),\n\t\t            offsetTop: this.el.offsetTop,\n\t\t            offsetLeft: this.el.offsetLeft,\n\t\t            marginTop: parseInt(ng2_utils_1.computedStyle(this.el, 'marginTop')),\n\t\t            marginBottom: parseInt(ng2_utils_1.computedStyle(this.el, 'marginBottom')),\n\t\t            marginLeft: parseInt(ng2_utils_1.computedStyle(this.el, 'marginLeft')),\n\t\t            marginRight: parseInt(ng2_utils_1.computedStyle(this.el, 'marginLeft'))\n\t\t        };\n\t\t        this.attach();\n\t\t    };\n\t\t    Ng2StickyDirective.prototype.attach = function () {\n\t\t        window.addEventListener('scroll', this.scrollHandler);\n\t\t        window.addEventListener('resize', this.scrollHandler);\n\t\t    };\n\t\t    Ng2StickyDirective.prototype.detach = function () {\n\t\t        window.removeEventListener('scroll', this.scrollHandler);\n\t\t        window.removeEventListener('resize', this.scrollHandler);\n\t\t    };\n\t\t    __decorate([\n\t\t        core_1.Input('sticky-after'), \n\t\t        __metadata('design:type', String)\n\t\t    ], Ng2StickyDirective.prototype, \"stickyAfter\", void 0);\n\t\t    Ng2StickyDirective = __decorate([\n\t\t        core_1.Directive({\n\t\t            selector: '[ng2-sticky]'\n\t\t        }), \n\t\t        __metadata('design:paramtypes', [core_1.ElementRef])\n\t\t    ], Ng2StickyDirective);\n\t\t    return Ng2StickyDirective;\n\t\t}());\n\t\texports.Ng2StickyDirective = Ng2StickyDirective;\n\t\n\t\n\t/***/ },\n\t/* 5 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t(function webpackUniversalModuleDefinition(root, factory) {\n\t\t\tif(true)\n\t\t\t\tmodule.exports = factory(__webpack_require__(1));\n\t\t\telse if(typeof define === 'function' && define.amd)\n\t\t\t\tdefine([\"@angular/core\"], factory);\n\t\t\telse if(typeof exports === 'object')\n\t\t\t\texports[\"ng2-utils\"] = factory(require(\"@angular/core\"));\n\t\t\telse\n\t\t\t\troot[\"ng2-utils\"] = factory(root[\"@angular/core\"]);\n\t\t})(this, function(__WEBPACK_EXTERNAL_MODULE_1__) {\n\t\treturn /******/ (function(modules) { // webpackBootstrap\n\t\t/******/ \t// The module cache\n\t\t/******/ \tvar installedModules = {};\n\t\t/******/\n\t\t/******/ \t// The require function\n\t\t/******/ \tfunction __webpack_require__(moduleId) {\n\t\t/******/\n\t\t/******/ \t\t// Check if module is in cache\n\t\t/******/ \t\tif(installedModules[moduleId])\n\t\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\t\t/******/\n\t\t/******/ \t\t// Create a new module (and put it into the cache)\n\t\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t\t/******/ \t\t\texports: {},\n\t\t/******/ \t\t\tid: moduleId,\n\t\t/******/ \t\t\tloaded: false\n\t\t/******/ \t\t};\n\t\t/******/\n\t\t/******/ \t\t// Execute the module function\n\t\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t\t/******/\n\t\t/******/ \t\t// Flag the module as loaded\n\t\t/******/ \t\tmodule.loaded = true;\n\t\t/******/\n\t\t/******/ \t\t// Return the exports of the module\n\t\t/******/ \t\treturn module.exports;\n\t\t/******/ \t}\n\t\t/******/\n\t\t/******/\n\t\t/******/ \t// expose the modules object (__webpack_modules__)\n\t\t/******/ \t__webpack_require__.m = modules;\n\t\t/******/\n\t\t/******/ \t// expose the module cache\n\t\t/******/ \t__webpack_require__.c = installedModules;\n\t\t/******/\n\t\t/******/ \t// __webpack_public_path__\n\t\t/******/ \t__webpack_require__.p = \"\";\n\t\t/******/\n\t\t/******/ \t// Load entry module and return exports\n\t\t/******/ \treturn __webpack_require__(0);\n\t\t/******/ })\n\t\t/************************************************************************/\n\t\t/******/ ([\n\t\t/* 0 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t};\n\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t};\n\t\t\tvar core_1 = __webpack_require__(1);\n\t\t\tvar scroll_to_1 = __webpack_require__(2);\n\t\t\texports.scrollTo = scroll_to_1.scrollTo;\n\t\t\tvar element_visible_1 = __webpack_require__(3);\n\t\t\texports.elementVisible = element_visible_1.elementVisible;\n\t\t\tvar computed_style_1 = __webpack_require__(4);\n\t\t\texports.computedStyle = computed_style_1.computedStyle;\n\t\t\tvar outer_width_1 = __webpack_require__(5);\n\t\t\texports.outerWidth = outer_width_1.outerWidth;\n\t\t\tvar outer_height_1 = __webpack_require__(6);\n\t\t\texports.outerHeight = outer_height_1.outerHeight;\n\t\t\tvar Ng2UtilsModule = (function () {\n\t\t\t    function Ng2UtilsModule() {\n\t\t\t    }\n\t\t\t    Ng2UtilsModule = __decorate([\n\t\t\t        core_1.NgModule({\n\t\t\t            declarations: [\n\t\t\t                scroll_to_1.scrollTo,\n\t\t\t                element_visible_1.elementVisible,\n\t\t\t                computed_style_1.computedStyle,\n\t\t\t                outer_width_1.outerWidth,\n\t\t\t                outer_height_1.outerHeight\n\t\t\t            ],\n\t\t\t            exports: [\n\t\t\t                scroll_to_1.scrollTo,\n\t\t\t                element_visible_1.elementVisible,\n\t\t\t                computed_style_1.computedStyle,\n\t\t\t                outer_width_1.outerWidth,\n\t\t\t                outer_height_1.outerHeight\n\t\t\t            ]\n\t\t\t        }), \n\t\t\t        __metadata('design:paramtypes', [])\n\t\t\t    ], Ng2UtilsModule);\n\t\t\t    return Ng2UtilsModule;\n\t\t\t}());\n\t\t\texports.Ng2UtilsModule = Ng2UtilsModule;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 1 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\t\t\n\t\t/***/ },\n\t\t/* 2 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\t/**\n\t\t\t * scroll to the selector within the parent selector by scrolling 10 times within 500ms\n\t\t\t * @param selector\n\t\t\t * @param parentSelector\n\t\t\t */\n\t\t\tfunction scrollTo(selector, parentSelector) {\n\t\t\t    console.log('selector', selector, 'parentSelector', parentSelector);\n\t\t\t    var parentEl, targetEl;\n\t\t\t    targetEl = document.querySelector(selector);\n\t\t\t    if (!targetEl) {\n\t\t\t        throw \"Invalid selector \" + selector;\n\t\t\t    }\n\t\t\t    parentEl = document.querySelector(parentSelector);\n\t\t\t    if (!parentEl) {\n\t\t\t        throw \"Invalid parent selector \" + parentSelector;\n\t\t\t    }\n\t\t\t    var parentElStyle = window.getComputedStyle(parentEl);\n\t\t\t    parentEl = parentElStyle['overflow'] === 'auto' ? parentEl : document.body;\n\t\t\t    var currentScrollTop = parentEl.scrollTop;\n\t\t\t    var targetOffsetTop = targetEl.offsetTop;\n\t\t\t    if (parentEl === document.body) {\n\t\t\t        var bodyRect = document.body.getBoundingClientRect();\n\t\t\t        var targetRect = targetEl.getBoundingClientRect();\n\t\t\t        targetOffsetTop = targetRect.top - bodyRect.top;\n\t\t\t    }\n\t\t\t    var step = Math.ceil((targetOffsetTop - currentScrollTop) / 10);\n\t\t\t    (function loop(i) {\n\t\t\t        setTimeout(function main() {\n\t\t\t            parentEl.scrollTop += step;\n\t\t\t            i > 1 && loop(i - 1);\n\t\t\t        }, 50);\n\t\t\t    }(10));\n\t\t\t}\n\t\t\texports.scrollTo = scrollTo;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 3 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\t/**\n\t\t\t * Returns an element is visible within outer element\n\t\t\t * @param innerEl\n\t\t\t * @param outerEl\n\t\t\t * @param adjustment\n\t\t\t * @returns {{top: boolean, bottom: boolean, left: boolean, right: boolean}}\n\t\t\t */\n\t\t\tfunction elementVisible(innerEl, outerEl, adjustment) {\n\t\t\t    var innerRect = innerEl.getBoundingClientRect();\n\t\t\t    var bottomAdjustment = (adjustment && adjustment.bottom || 0);\n\t\t\t    if (outerEl === window) {\n\t\t\t        return {\n\t\t\t            top: innerRect.bottom - bottomAdjustment > window.innerHeight\n\t\t\t                && innerRect.top < window.innerHeight,\n\t\t\t            bottom: innerRect.bottom - bottomAdjustment > 0\n\t\t\t                && innerRect.bottom < window.innerHeight,\n\t\t\t            left: innerRect.right > window.innerWidth\n\t\t\t                && innerRect.left < window.innerWidth,\n\t\t\t            right: innerRect.right > 0\n\t\t\t                && innerRect.right < window.innerWidth\n\t\t\t        };\n\t\t\t    }\n\t\t\t    else {\n\t\t\t        var outerRect = outerEl.getBoundingClientRect();\n\t\t\t        var defaultView = (innerEl.ownerDocument || document).defaultView;\n\t\t\t        var computedStyle = defaultView.getComputedStyle(outerEl, null);\n\t\t\t        var outerRectBorderTopWidth = parseInt(computedStyle.getPropertyValue('border-top-width'), 10);\n\t\t\t        var outerRectBorderLeftWidth = parseInt(computedStyle.getPropertyValue('border-left-width'), 10);\n\t\t\t        /* top is visible or bottom is visible */\n\t\t\t        var topVisible = (innerRect.top >= outerRect.top\n\t\t\t            && innerRect.top < outerRect.bottom);\n\t\t\t        var bottomVisible = (innerRect.bottom > (outerRect.top + outerRectBorderTopWidth)\n\t\t\t            && innerRect.bottom < outerRect.bottom);\n\t\t\t        var leftVisible = (innerRect.left >= outerRect.left\n\t\t\t            && innerRect.left < outerRect.right);\n\t\t\t        var rightVisible = (innerRect.right > (outerRect.left + outerRectBorderLeftWidth)\n\t\t\t            && innerRect.right < outerRect.right);\n\t\t\t        return {\n\t\t\t            top: topVisible,\n\t\t\t            bottom: bottomVisible,\n\t\t\t            left: leftVisible,\n\t\t\t            right: rightVisible\n\t\t\t        };\n\t\t\t    }\n\t\t\t}\n\t\t\texports.elementVisible = elementVisible;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 4 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\t/**\n\t\t\t * returns coumputed style of given element\n\t\t\t * @param el\n\t\t\t * @param styleProp\n\t\t\t * @returns {any}\n\t\t\t */\n\t\t\tfunction computedStyle(el, styleProp) {\n\t\t\t    var value, defaultView = (el.ownerDocument || document).defaultView;\n\t\t\t    // W3C standard way:\n\t\t\t    if (defaultView && defaultView.getComputedStyle) {\n\t\t\t        // sanitize property name to css notation\n\t\t\t        // (hypen separated words eg. font-Size)\n\t\t\t        styleProp = styleProp.replace(/([A-Z])/g, \"-$1\").toLowerCase();\n\t\t\t        return defaultView.getComputedStyle(el, null).getPropertyValue(styleProp);\n\t\t\t    }\n\t\t\t    else if (el['currentStyle']) {\n\t\t\t        // sanitize property name to camelCase\n\t\t\t        styleProp = styleProp.replace(/\\-(\\w)/g, function (str, letter) {\n\t\t\t            return letter.toUpperCase();\n\t\t\t        });\n\t\t\t        value = el['currentStyle'][styleProp];\n\t\t\t        // convert other units to pixels on IE\n\t\t\t        if (/^\\d+(em|pt|%|ex)?$/i.test(value)) {\n\t\t\t            return (function (value) {\n\t\t\t                var oldLeft = el.style.left, oldRsLeft = el['runtimeStyle'].left;\n\t\t\t                el['runtimeStyle'].left = el['currentStyle'].left;\n\t\t\t                el.style.left = value || 0;\n\t\t\t                value = el.style['pixelLeft'] + \"px\";\n\t\t\t                el.style.left = oldLeft;\n\t\t\t                el['runtimeStyle'].left = oldRsLeft;\n\t\t\t                return value;\n\t\t\t            })(value);\n\t\t\t        }\n\t\t\t        return value;\n\t\t\t    }\n\t\t\t}\n\t\t\texports.computedStyle = computedStyle;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 5 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tfunction outerWidth(el) {\n\t\t\t    var style = getComputedStyle(el);\n\t\t\t    return el.offsetWidth +\n\t\t\t        parseInt(style.getPropertyValue('margin-left')) +\n\t\t\t        parseInt(style.getPropertyValue('margin-right'));\n\t\t\t}\n\t\t\texports.outerWidth = outerWidth;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 6 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tfunction outerHeight(el) {\n\t\t\t    var style = getComputedStyle(el);\n\t\t\t    return el.offsetHeight +\n\t\t\t        parseInt(style.getPropertyValue('margin-top')) +\n\t\t\t        parseInt(style.getPropertyValue('margin-bottom'));\n\t\t\t}\n\t\t\texports.outerHeight = outerHeight;\n\t\t\n\t\t\n\t\t/***/ }\n\t\t/******/ ])\n\t\t});\n\t\t;\n\t\t//# sourceMappingURL=ng2-utils.umd.js.map\n\t\n\t/***/ }\n\t/******/ ])\n\t});\n\t;\n\t//# sourceMappingURL=ng2-sticky.umd.js.map\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function webpackUniversalModuleDefinition(root, factory) {\n\t\tif(true)\n\t\t\tmodule.exports = factory(__webpack_require__(1), __webpack_require__(2), __webpack_require__(3));\n\t\telse if(typeof define === 'function' && define.amd)\n\t\t\tdefine([\"@angular/core\", \"@angular/forms\", \"@angular/platform-browser\"], factory);\n\t\telse if(typeof exports === 'object')\n\t\t\texports[\"ng2-tab\"] = factory(require(\"@angular/core\"), require(\"@angular/forms\"), require(\"@angular/platform-browser\"));\n\t\telse\n\t\t\troot[\"ng2-tab\"] = factory(root[\"@angular/core\"], root[\"@angular/forms\"], root[\"@angular/platform-browser\"]);\n\t})(this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__) {\n\treturn /******/ (function(modules) { // webpackBootstrap\n\t/******/ \t// The module cache\n\t/******/ \tvar installedModules = {};\n\t/******/\n\t/******/ \t// The require function\n\t/******/ \tfunction __webpack_require__(moduleId) {\n\t/******/\n\t/******/ \t\t// Check if module is in cache\n\t/******/ \t\tif(installedModules[moduleId])\n\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\t/******/\n\t/******/ \t\t// Create a new module (and put it into the cache)\n\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t/******/ \t\t\texports: {},\n\t/******/ \t\t\tid: moduleId,\n\t/******/ \t\t\tloaded: false\n\t/******/ \t\t};\n\t/******/\n\t/******/ \t\t// Execute the module function\n\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t/******/\n\t/******/ \t\t// Flag the module as loaded\n\t/******/ \t\tmodule.loaded = true;\n\t/******/\n\t/******/ \t\t// Return the exports of the module\n\t/******/ \t\treturn module.exports;\n\t/******/ \t}\n\t/******/\n\t/******/\n\t/******/ \t// expose the modules object (__webpack_modules__)\n\t/******/ \t__webpack_require__.m = modules;\n\t/******/\n\t/******/ \t// expose the module cache\n\t/******/ \t__webpack_require__.c = installedModules;\n\t/******/\n\t/******/ \t// __webpack_public_path__\n\t/******/ \t__webpack_require__.p = \"\";\n\t/******/\n\t/******/ \t// Load entry module and return exports\n\t/******/ \treturn __webpack_require__(0);\n\t/******/ })\n\t/************************************************************************/\n\t/******/ ([\n\t/* 0 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(1);\n\t\tvar forms_1 = __webpack_require__(2);\n\t\tvar platform_browser_1 = __webpack_require__(3);\n\t\tvar ng2_tab_component_1 = __webpack_require__(4);\n\t\texports.Ng2TabComponent = ng2_tab_component_1.Ng2TabComponent;\n\t\tvar Ng2TabModule = (function () {\n\t\t    function Ng2TabModule() {\n\t\t    }\n\t\t    Ng2TabModule = __decorate([\n\t\t        core_1.NgModule({\n\t\t            imports: [platform_browser_1.BrowserModule, forms_1.FormsModule],\n\t\t            declarations: [ng2_tab_component_1.Ng2TabComponent],\n\t\t            exports: [ng2_tab_component_1.Ng2TabComponent]\n\t\t        }), \n\t\t        __metadata('design:paramtypes', [])\n\t\t    ], Ng2TabModule);\n\t\t    return Ng2TabModule;\n\t\t}());\n\t\texports.Ng2TabModule = Ng2TabModule;\n\t\n\t\n\t/***/ },\n\t/* 1 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\t\n\t/***/ },\n\t/* 2 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\t\n\t/***/ },\n\t/* 3 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\t\n\t/***/ },\n\t/* 4 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(1);\n\t\tvar Ng2TabComponent = (function () {\n\t\t    function Ng2TabComponent(viewContainer) {\n\t\t        this.viewContainer = viewContainer;\n\t\t        this.selectedIndexClass = 'selected';\n\t\t        this.selectedContentsClass = 'selected';\n\t\t        this.el = this.viewContainer.element.nativeElement;\n\t\t    }\n\t\t    Ng2TabComponent.prototype.ngAfterViewInit = function () {\n\t\t        var _this = this;\n\t\t        this.indexEls = [].slice.call(this.el.querySelectorAll('[index]'));\n\t\t        this.contentsEls = [].slice.call(this.el.querySelectorAll('[contents]'));\n\t\t        this.selectTab(this.selectedIndex);\n\t\t        this.indexEls.forEach(function (el) {\n\t\t            el.addEventListener('click', function () {\n\t\t                _this.selectTab(el.getAttribute('index'));\n\t\t            });\n\t\t        });\n\t\t    };\n\t\t    Ng2TabComponent.prototype.selectTab = function (id) {\n\t\t        var _this = this;\n\t\t        id = id || this.indexEls[0].getAttribute('index');\n\t\t        this.indexEls.forEach(function (el) {\n\t\t            _this.removeClass(el, _this.selectedIndexClass);\n\t\t            if (el.getAttribute('index') == id) {\n\t\t                _this.addClass(el, _this.selectedIndexClass);\n\t\t            }\n\t\t        });\n\t\t        this.contentsEls.forEach(function (el) {\n\t\t            el.style.display = 'none';\n\t\t            _this.removeClass(el, _this.selectedContentsClass);\n\t\t            if (el.getAttribute('contents') == id) {\n\t\t                el.style.display = '';\n\t\t                _this.addClass(el, _this.selectedContentsClass);\n\t\t            }\n\t\t        });\n\t\t    };\n\t\t    Ng2TabComponent.prototype.addClass = function (el, str) {\n\t\t        var classNames = (el.className || '').split(' ');\n\t\t        classNames.push(str);\n\t\t        el.className = classNames.join(' ');\n\t\t    };\n\t\t    Ng2TabComponent.prototype.removeClass = function (el, str) {\n\t\t        el.className = (el.className || '').replace(new RegExp('[ ]*' + str), '');\n\t\t    };\n\t\t    __decorate([\n\t\t        core_1.Input('selected'), \n\t\t        __metadata('design:type', String)\n\t\t    ], Ng2TabComponent.prototype, \"selectedIndex\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input('selected-index-class'), \n\t\t        __metadata('design:type', String)\n\t\t    ], Ng2TabComponent.prototype, \"selectedIndexClass\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input('selected-contents-class'), \n\t\t        __metadata('design:type', String)\n\t\t    ], Ng2TabComponent.prototype, \"selectedContentsClass\", void 0);\n\t\t    Ng2TabComponent = __decorate([\n\t\t        core_1.Component({\n\t\t            selector: 'ng2-tab, [ng2-tab]',\n\t\t            encapsulation: core_1.ViewEncapsulation.None,\n\t\t            template: \"<ng-content></ng-content>\",\n\t\t            styles: [\"\\n    .tabs {\\n      position: relative;\\n      top: 1px;\\n      background: transparent;\\n      display: block;\\n    }\\n    .tabs [index] {\\n      display: inline-block;\\n      border: 1px solid #999;\\n      padding: 5px 10px;\\n      border-radius: 2px 2px 0 0;\\n    }\\n    .tabs [index].selected {\\n      padding-top: 0;\\n      background: #f7f7f7;\\n      border-top: 5px solid #00BCD4;\\n      border-bottom: 1px solid transparent;\\n    }\\n    .tab-contents {\\n      border: 1px solid #999;\\n      border-radius: 2px;\\n      min-height: 3em;\\n    }\\n  \"],\n\t\t        }), \n\t\t        __metadata('design:paramtypes', [core_1.ViewContainerRef])\n\t\t    ], Ng2TabComponent);\n\t\t    return Ng2TabComponent;\n\t\t}());\n\t\texports.Ng2TabComponent = Ng2TabComponent;\n\t\n\t\n\t/***/ }\n\t/******/ ])\n\t});\n\t;\n\t//# sourceMappingURL=ng2-tab.umd.js.map\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function webpackUniversalModuleDefinition(root, factory) {\n\t\tif(true)\n\t\t\tmodule.exports = factory(__webpack_require__(1), __webpack_require__(2), __webpack_require__(3));\n\t\telse if(typeof define === 'function' && define.amd)\n\t\t\tdefine([\"@angular/core\", \"@angular/forms\", \"@angular/platform-browser\"], factory);\n\t\telse if(typeof exports === 'object')\n\t\t\texports[\"ng2-tooltip-overlay\"] = factory(require(\"@angular/core\"), require(\"@angular/forms\"), require(\"@angular/platform-browser\"));\n\t\telse\n\t\t\troot[\"ng2-tooltip-overlay\"] = factory(root[\"@angular/core\"], root[\"@angular/forms\"], root[\"@angular/platform-browser\"]);\n\t})(this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__) {\n\treturn /******/ (function(modules) { // webpackBootstrap\n\t/******/ \t// The module cache\n\t/******/ \tvar installedModules = {};\n\t/******/\n\t/******/ \t// The require function\n\t/******/ \tfunction __webpack_require__(moduleId) {\n\t/******/\n\t/******/ \t\t// Check if module is in cache\n\t/******/ \t\tif(installedModules[moduleId])\n\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\t/******/\n\t/******/ \t\t// Create a new module (and put it into the cache)\n\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t/******/ \t\t\texports: {},\n\t/******/ \t\t\tid: moduleId,\n\t/******/ \t\t\tloaded: false\n\t/******/ \t\t};\n\t/******/\n\t/******/ \t\t// Execute the module function\n\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t/******/\n\t/******/ \t\t// Flag the module as loaded\n\t/******/ \t\tmodule.loaded = true;\n\t/******/\n\t/******/ \t\t// Return the exports of the module\n\t/******/ \t\treturn module.exports;\n\t/******/ \t}\n\t/******/\n\t/******/\n\t/******/ \t// expose the modules object (__webpack_modules__)\n\t/******/ \t__webpack_require__.m = modules;\n\t/******/\n\t/******/ \t// expose the module cache\n\t/******/ \t__webpack_require__.c = installedModules;\n\t/******/\n\t/******/ \t// __webpack_public_path__\n\t/******/ \t__webpack_require__.p = \"\";\n\t/******/\n\t/******/ \t// Load entry module and return exports\n\t/******/ \treturn __webpack_require__(0);\n\t/******/ })\n\t/************************************************************************/\n\t/******/ ([\n\t/* 0 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(1);\n\t\tvar forms_1 = __webpack_require__(2);\n\t\tvar platform_browser_1 = __webpack_require__(3);\n\t\tvar ng2_tooltip_directive_1 = __webpack_require__(4);\n\t\texports.Ng2TooltipDirective = ng2_tooltip_directive_1.Ng2TooltipDirective;\n\t\tvar ng2_overlay_1 = __webpack_require__(5);\n\t\tvar Ng2TooltipOverlayModule = (function () {\n\t\t    function Ng2TooltipOverlayModule() {\n\t\t    }\n\t\t    Ng2TooltipOverlayModule = __decorate([\n\t\t        core_1.NgModule({\n\t\t            imports: [platform_browser_1.BrowserModule, forms_1.FormsModule, ng2_overlay_1.Ng2OverlayModule],\n\t\t            declarations: [ng2_tooltip_directive_1.Ng2TooltipDirective],\n\t\t            exports: [ng2_tooltip_directive_1.Ng2TooltipDirective]\n\t\t        }), \n\t\t        __metadata('design:paramtypes', [])\n\t\t    ], Ng2TooltipOverlayModule);\n\t\t    return Ng2TooltipOverlayModule;\n\t\t}());\n\t\texports.Ng2TooltipOverlayModule = Ng2TooltipOverlayModule;\n\t\n\t\n\t/***/ },\n\t/* 1 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\t\n\t/***/ },\n\t/* 2 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\t\n\t/***/ },\n\t/* 3 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\t\n\t/***/ },\n\t/* 4 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(1);\n\t\tvar ng2_overlay_1 = __webpack_require__(5);\n\t\tvar Ng2TooltipDirective = (function () {\n\t\t    function Ng2TooltipDirective(viewContainerRef, overlayManager) {\n\t\t        this.viewContainerRef = viewContainerRef;\n\t\t        this.overlayManager = overlayManager;\n\t\t        this.el = this.viewContainerRef.element.nativeElement;\n\t\t    }\n\t\t    Ng2TooltipDirective.prototype.ngAfterViewInit = function () {\n\t\t        this.overlay = this.getTooltipOverlay(this.el, this.tooltip);\n\t\t    };\n\t\t    Ng2TooltipDirective.prototype.showTooltip = function ($event) {\n\t\t        this.overlayManager.open(this.overlay, $event);\n\t\t        $event.stopPropagation();\n\t\t    };\n\t\t    Ng2TooltipDirective.prototype.hideTooltip = function ($event) {\n\t\t        this.overlayManager.close(this.overlay);\n\t\t        $event.stopPropagation();\n\t\t    };\n\t\t    Ng2TooltipDirective.prototype.getTooltipOverlay = function (el, tooltip) {\n\t\t        var tooltipEl = document.createElement('ng2-tooltip');\n\t\t        tooltipEl.style.display = 'none';\n\t\t        var divEl = document.createElement('div');\n\t\t        divEl.innerHTML = \"\\n       <div class='tooltip-contents'>\" + tooltip + \"</div>\\n       <div class='tooltip-down-arrow'></div>\\n    \";\n\t\t        tooltipEl.appendChild(divEl);\n\t\t        //el.parentElement.insertBefore(tooltipEl, el.nextSibling);\n\t\t        el.appendChild(tooltipEl);\n\t\t        var overlay = new ng2_overlay_1.Overlay(tooltipEl, {\n\t\t            id: 'tooltip-' + (el.id || Math.floor(Math.random() * 1000000)),\n\t\t            position: 'top cursor outside'\n\t\t        });\n\t\t        this.overlayManager.register(overlay);\n\t\t        return overlay;\n\t\t    };\n\t\t    __decorate([\n\t\t        core_1.Input('ng2-tooltip'), \n\t\t        __metadata('design:type', String)\n\t\t    ], Ng2TooltipDirective.prototype, \"tooltip\", void 0);\n\t\t    Ng2TooltipDirective = __decorate([\n\t\t        core_1.Directive({\n\t\t            selector: '[ng2-tooltip]',\n\t\t            host: {\n\t\t                '(mouseover)': 'showTooltip($event)',\n\t\t                '(mouseout)': 'hideTooltip($event)'\n\t\t            }\n\t\t        }), \n\t\t        __metadata('design:paramtypes', [core_1.ViewContainerRef, ng2_overlay_1.OverlayManager])\n\t\t    ], Ng2TooltipDirective);\n\t\t    return Ng2TooltipDirective;\n\t\t}());\n\t\texports.Ng2TooltipDirective = Ng2TooltipDirective;\n\t\n\t\n\t/***/ },\n\t/* 5 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t(function webpackUniversalModuleDefinition(root, factory) {\n\t\t\tif(true)\n\t\t\t\tmodule.exports = factory(__webpack_require__(1), __webpack_require__(2), __webpack_require__(3));\n\t\t\telse if(typeof define === 'function' && define.amd)\n\t\t\t\tdefine([\"@angular/core\", \"@angular/forms\", \"@angular/platform-browser\"], factory);\n\t\t\telse if(typeof exports === 'object')\n\t\t\t\texports[\"ng2-overlay\"] = factory(require(\"@angular/core\"), require(\"@angular/forms\"), require(\"@angular/platform-browser\"));\n\t\t\telse\n\t\t\t\troot[\"ng2-overlay\"] = factory(root[\"@angular/core\"], root[\"@angular/forms\"], root[\"@angular/platform-browser\"]);\n\t\t})(this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__) {\n\t\treturn /******/ (function(modules) { // webpackBootstrap\n\t\t/******/ \t// The module cache\n\t\t/******/ \tvar installedModules = {};\n\t\t/******/\n\t\t/******/ \t// The require function\n\t\t/******/ \tfunction __webpack_require__(moduleId) {\n\t\t/******/\n\t\t/******/ \t\t// Check if module is in cache\n\t\t/******/ \t\tif(installedModules[moduleId])\n\t\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\t\t/******/\n\t\t/******/ \t\t// Create a new module (and put it into the cache)\n\t\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t\t/******/ \t\t\texports: {},\n\t\t/******/ \t\t\tid: moduleId,\n\t\t/******/ \t\t\tloaded: false\n\t\t/******/ \t\t};\n\t\t/******/\n\t\t/******/ \t\t// Execute the module function\n\t\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t\t/******/\n\t\t/******/ \t\t// Flag the module as loaded\n\t\t/******/ \t\tmodule.loaded = true;\n\t\t/******/\n\t\t/******/ \t\t// Return the exports of the module\n\t\t/******/ \t\treturn module.exports;\n\t\t/******/ \t}\n\t\t/******/\n\t\t/******/\n\t\t/******/ \t// expose the modules object (__webpack_modules__)\n\t\t/******/ \t__webpack_require__.m = modules;\n\t\t/******/\n\t\t/******/ \t// expose the module cache\n\t\t/******/ \t__webpack_require__.c = installedModules;\n\t\t/******/\n\t\t/******/ \t// __webpack_public_path__\n\t\t/******/ \t__webpack_require__.p = \"\";\n\t\t/******/\n\t\t/******/ \t// Load entry module and return exports\n\t\t/******/ \treturn __webpack_require__(0);\n\t\t/******/ })\n\t\t/************************************************************************/\n\t\t/******/ ([\n\t\t/* 0 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t};\n\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t};\n\t\t\tvar core_1 = __webpack_require__(1);\n\t\t\tvar forms_1 = __webpack_require__(2);\n\t\t\tvar platform_browser_1 = __webpack_require__(3);\n\t\t\tvar overlay_1 = __webpack_require__(4);\n\t\t\texports.Overlay = overlay_1.Overlay;\n\t\t\tvar overlay_manager_1 = __webpack_require__(6);\n\t\t\texports.OverlayManager = overlay_manager_1.OverlayManager;\n\t\t\tvar overlay_directive_1 = __webpack_require__(7);\n\t\t\texports.OverlayDirective = overlay_directive_1.OverlayDirective;\n\t\t\tvar Ng2OverlayModule = (function () {\n\t\t\t    function Ng2OverlayModule() {\n\t\t\t    }\n\t\t\t    Ng2OverlayModule = __decorate([\n\t\t\t        core_1.NgModule({\n\t\t\t            imports: [platform_browser_1.BrowserModule, forms_1.FormsModule],\n\t\t\t            declarations: [overlay_directive_1.OverlayDirective],\n\t\t\t            providers: [overlay_manager_1.OverlayManager],\n\t\t\t            exports: [overlay_directive_1.OverlayDirective]\n\t\t\t        }), \n\t\t\t        __metadata('design:paramtypes', [])\n\t\t\t    ], Ng2OverlayModule);\n\t\t\t    return Ng2OverlayModule;\n\t\t\t}());\n\t\t\texports.Ng2OverlayModule = Ng2OverlayModule;\n\t\t\t;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 1 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\t\t\n\t\t/***/ },\n\t\t/* 2 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\t\t\n\t\t/***/ },\n\t\t/* 3 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\t\t\n\t\t/***/ },\n\t\t/* 4 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar util_1 = __webpack_require__(5);\n\t\t\tvar Overlay = (function () {\n\t\t\t    function Overlay(el, options) {\n\t\t\t        options = options || {};\n\t\t\t        this.id = options.id;\n\t\t\t        this.type = options.type;\n\t\t\t        if (!this.id) {\n\t\t\t            throw \"Invalid overlay id\";\n\t\t\t        }\n\t\t\t        this.element = el; // overlay wrapper element with table dsplay\n\t\t\t        this.windowOverlay = options.windowOverlay;\n\t\t\t        this.position = this.getPositionProperty(options.position || 'center center');\n\t\t\t    }\n\t\t\t    Overlay.prototype.positionIt = function (event) {\n\t\t\t        if (this.position.inside) {\n\t\t\t            this.positionItInside(this.position);\n\t\t\t        }\n\t\t\t        else {\n\t\t\t            this.positionItOutside(this.position, event);\n\t\t\t        }\n\t\t\t    };\n\t\t\t    Overlay.prototype.getPositionProperty = function (positionStr) {\n\t\t\t        var position = {}, inside;\n\t\t\t        var _a = positionStr.split(' '), vertical = _a[0], horizontal = _a[1], insideStr = _a[2];\n\t\t\t        horizontal = horizontal || 'center';\n\t\t\t        vertical = vertical || 'center';\n\t\t\t        inside = (insideStr !== 'outside' || this.windowOverlay);\n\t\t\t        position.horizontal = Overlay[horizontal.toUpperCase()];\n\t\t\t        position.vertical = Overlay[vertical.toUpperCase()];\n\t\t\t        position.inside = inside;\n\t\t\t        return position;\n\t\t\t    };\n\t\t\t    Overlay.prototype.positionItInside = function (position) {\n\t\t\t        this.element.style.display = 'flex';\n\t\t\t        //top / left positioning\n\t\t\t        if (this.windowOverlay) {\n\t\t\t            this.element.style.position = 'fixed';\n\t\t\t            //works as blocker\n\t\t\t            Object.assign(this.element.style, {\n\t\t\t                backgroundColor: 'rgba(0,0,0,0.2)',\n\t\t\t                top: '0', left: '0', bottom: '0', right: '0',\n\t\t\t                width: '100%', height: '100%'\n\t\t\t            });\n\t\t\t        }\n\t\t\t        else {\n\t\t\t            //adjust top/left to match to parentElement\n\t\t\t            var parentEl = this.element.parentElement;\n\t\t\t            //works as a blocker\n\t\t\t            Object.assign(this.element.style, {\n\t\t\t                position: 'absolute',\n\t\t\t                // backgroundColor: 'transparent',\n\t\t\t                backgroundColor: 'rgba(0,0,0,0.2)',\n\t\t\t                top: parentEl.offsetTop + 'px',\n\t\t\t                left: parentEl.offsetLeft + 'px',\n\t\t\t                width: parentEl.offsetWidth + 'px',\n\t\t\t                height: parentEl.offsetHeight + 'px'\n\t\t\t            });\n\t\t\t        }\n\t\t\t        ;\n\t\t\t        //horizontal position\n\t\t\t        switch (position.horizontal) {\n\t\t\t            case Overlay.LEFT:\n\t\t\t                this.element.style.justifyContent = 'flex-start';\n\t\t\t                break;\n\t\t\t            case Overlay.CENTER:\n\t\t\t                this.element.style.justifyContent = 'center';\n\t\t\t                break;\n\t\t\t            case Overlay.RIGHT:\n\t\t\t                this.element.style.justifyContent = 'flex-end';\n\t\t\t                break;\n\t\t\t        }\n\t\t\t        //vertical position\n\t\t\t        switch (position.vertical) {\n\t\t\t            case Overlay.LEFT:\n\t\t\t                this.element.style.alignItems = 'flex-start';\n\t\t\t                break;\n\t\t\t            case Overlay.CENTER:\n\t\t\t            case Overlay.MIDDLE:\n\t\t\t                this.element.style.alignItems = 'center';\n\t\t\t                break;\n\t\t\t            case Overlay.RIGHT:\n\t\t\t                this.element.style.alignItems = 'flex-end';\n\t\t\t                break;\n\t\t\t        }\n\t\t\t    };\n\t\t\t    Overlay.prototype.positionItOutside = function (position, event) {\n\t\t\t        //adjust top/left to match to parentElement\n\t\t\t        var parentEl = this.element.parentElement;\n\t\t\t        //works as guide line?\n\t\t\t        Object.assign(this.element.style, {\n\t\t\t            position: 'absolute',\n\t\t\t            pointerEvents: 'none',\n\t\t\t            top: parentEl.offsetTop + 'px',\n\t\t\t            left: parentEl.offsetLeft + 'px',\n\t\t\t            width: parentEl.offsetWidth + 'px',\n\t\t\t            height: parentEl.offsetHeight + 'px'\n\t\t\t        });\n\t\t\t        this.element.style.display = 'block';\n\t\t\t        var elToPosition = (this.element.children[0]);\n\t\t\t        elToPosition.style.position = 'absolute';\n\t\t\t        elToPosition.style.pointerEvents = 'auto';\n\t\t\t        switch (position.vertical) {\n\t\t\t            case Overlay.TOP:\n\t\t\t                elToPosition.style.bottom = this.element.offsetHeight + 'px';\n\t\t\t                break;\n\t\t\t            case Overlay.BOTTOM:\n\t\t\t                elToPosition.style.top = this.element.offsetHeight + 'px';\n\t\t\t                break;\n\t\t\t            case Overlay.LEFT:\n\t\t\t                elToPosition.style.right = this.element.offsetWidth + 'px';\n\t\t\t                break;\n\t\t\t            case Overlay.RIGHT:\n\t\t\t                elToPosition.style.left = this.element.offsetWidth + 'px';\n\t\t\t                break;\n\t\t\t        }\n\t\t\t        switch (position.horizontal) {\n\t\t\t            case Overlay.CENTER:\n\t\t\t                elToPosition.style.left = (this.element.offsetWidth - elToPosition.offsetWidth) / 2 + 'px';\n\t\t\t                break;\n\t\t\t            case Overlay.LEFT:\n\t\t\t                elToPosition.style.left = '0';\n\t\t\t                break;\n\t\t\t            case Overlay.RIGHT:\n\t\t\t                elToPosition.style.right = '0';\n\t\t\t                break;\n\t\t\t            case Overlay.TOP:\n\t\t\t                elToPosition.style.top = '0';\n\t\t\t                break;\n\t\t\t            case Overlay.BOTTOM:\n\t\t\t                elToPosition.style.bottom = '0';\n\t\t\t                break;\n\t\t\t            case Overlay.CURSOR:\n\t\t\t                var mousePos = util_1.Util.getMousePositionInElement(event, this.element);\n\t\t\t                if ((mousePos.x + elToPosition.offsetWidth) > this.element.offsetWidth) {\n\t\t\t                    elToPosition.style.left = (this.element.offsetWidth - elToPosition.offsetWidth - 5) + 'px';\n\t\t\t                }\n\t\t\t                else if (mousePos.x < elToPosition.offsetWidth / 2) {\n\t\t\t                    elToPosition.style.left = '0px';\n\t\t\t                }\n\t\t\t                else {\n\t\t\t                    elToPosition.style.left = mousePos.x - elToPosition.offsetWidth / 2 + 'px';\n\t\t\t                }\n\t\t\t                break;\n\t\t\t        }\n\t\t\t    };\n\t\t\t    Overlay.TOP = 11;\n\t\t\t    Overlay.MIDDLE = 12;\n\t\t\t    Overlay.BOTTOM = 13;\n\t\t\t    Overlay.LEFT = 21;\n\t\t\t    Overlay.CENTER = 22;\n\t\t\t    Overlay.RIGHT = 23;\n\t\t\t    Overlay.CURSOR = 31;\n\t\t\t    return Overlay;\n\t\t\t}());\n\t\t\texports.Overlay = Overlay;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 5 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar Util = (function () {\n\t\t\t    function Util() {\n\t\t\t    }\n\t\t\t    Util.getDocumentPosition = function (oElement) {\n\t\t\t        var posX = 0, posY = 0;\n\t\t\t        if (oElement.offsetParent) {\n\t\t\t            for (; oElement; oElement = oElement.offsetParent) {\n\t\t\t                posX += oElement.offsetLeft;\n\t\t\t                posY += oElement.offsetTop;\n\t\t\t            }\n\t\t\t            return { x: posX, y: posY };\n\t\t\t        }\n\t\t\t        else {\n\t\t\t            return { x: oElement['x'], y: oElement['y'] };\n\t\t\t        }\n\t\t\t    };\n\t\t\t    Util.getMousePositionInElement = function (evt, element) {\n\t\t\t        evt = evt || window.event;\n\t\t\t        var posX = 0, posY = 0;\n\t\t\t        var elPos = this.getDocumentPosition(element);\n\t\t\t        if (evt.pageX || evt.pageY) {\n\t\t\t            posX = evt.pageX;\n\t\t\t            posY = evt.pageY;\n\t\t\t        }\n\t\t\t        else if (evt.clientX || evt.clientY) {\n\t\t\t            posX = evt.clientX +\n\t\t\t                document.body.scrollLeft +\n\t\t\t                document.documentElement.scrollLeft;\n\t\t\t            posY = evt.clientY +\n\t\t\t                document.body.scrollTop +\n\t\t\t                document.documentElement.scrollTop;\n\t\t\t        }\n\t\t\t        return {\n\t\t\t            x: posX - elPos.x,\n\t\t\t            y: posY - elPos.y\n\t\t\t        };\n\t\t\t    };\n\t\t\t    return Util;\n\t\t\t}());\n\t\t\texports.Util = Util;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 6 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t};\n\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t};\n\t\t\tvar core_1 = __webpack_require__(1);\n\t\t\tvar OverlayManager = (function () {\n\t\t\t    function OverlayManager() {\n\t\t\t    }\n\t\t\t    OverlayManager.prototype.register = function (overlay) {\n\t\t\t        OverlayManager.overlays[overlay.id] = overlay;\n\t\t\t        // console.log('overlay.register, OverlayManager.overlays', OverlayManager.overlays);\n\t\t\t    };\n\t\t\t    OverlayManager.prototype.open = function (arg, event) {\n\t\t\t        var overlay = typeof arg === 'string' ? OverlayManager.overlays[arg] : arg;\n\t\t\t        if (!overlay.opened) {\n\t\t\t            overlay.positionIt(event);\n\t\t\t            overlay.opened = true;\n\t\t\t        }\n\t\t\t    };\n\t\t\t    OverlayManager.prototype.close = function (arg) {\n\t\t\t        var overlay = typeof arg === 'string' ? OverlayManager.overlays[arg] : arg;\n\t\t\t        overlay.element.style.display = 'none';\n\t\t\t        overlay.opened = false;\n\t\t\t    };\n\t\t\t    //list of overlay objects\n\t\t\t    OverlayManager.overlays = {};\n\t\t\t    OverlayManager = __decorate([\n\t\t\t        core_1.Injectable(), \n\t\t\t        __metadata('design:paramtypes', [])\n\t\t\t    ], OverlayManager);\n\t\t\t    return OverlayManager;\n\t\t\t}());\n\t\t\texports.OverlayManager = OverlayManager;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 7 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t};\n\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t};\n\t\t\tvar core_1 = __webpack_require__(1);\n\t\t\tvar overlay_manager_1 = __webpack_require__(6);\n\t\t\tvar overlay_1 = __webpack_require__(4);\n\t\t\tvar OverlayDirective = (function () {\n\t\t\t    function OverlayDirective(viewContainerRef, overlayManager) {\n\t\t\t        this.viewContainerRef = viewContainerRef;\n\t\t\t        this.overlayManager = overlayManager;\n\t\t\t        this.el = this.viewContainerRef.element.nativeElement;\n\t\t\t    }\n\t\t\t    OverlayDirective.prototype.ngAfterViewInit = function () {\n\t\t\t        this.wrapItWithOverlayTag();\n\t\t\t        this.registerToOverlayManager();\n\t\t\t    };\n\t\t\t    OverlayDirective.prototype.wrapItWithOverlayTag = function () {\n\t\t\t        //console.log('wrapped overlay directive element with <ng2-overlay>');\n\t\t\t        this.overlayEl = document.createElement('ng2-overlay');\n\t\t\t        this.overlayEl.style.display = 'none';\n\t\t\t        this.el.parentElement.insertBefore(this.overlayEl, this.el.nextSibling);\n\t\t\t        this.overlayEl.appendChild(this.el);\n\t\t\t    };\n\t\t\t    //create Overlay object,  then register this element to overlayManager\n\t\t\t    OverlayDirective.prototype.registerToOverlayManager = function () {\n\t\t\t        var positionStr = this.overlayPosition;\n\t\t\t        var overlay = new overlay_1.Overlay(this.overlayEl, {\n\t\t\t            id: this.el.id,\n\t\t\t            windowOverlay: this.overlayOf == \"window\",\n\t\t\t            position: positionStr\n\t\t\t        });\n\t\t\t        //console.log('registering overlay', overlay);\n\t\t\t        this.overlayManager.register(overlay);\n\t\t\t    };\n\t\t\t    __decorate([\n\t\t\t        core_1.Input('ng2-overlay-of'), \n\t\t\t        __metadata('design:type', String)\n\t\t\t    ], OverlayDirective.prototype, \"overlayOf\", void 0);\n\t\t\t    __decorate([\n\t\t\t        core_1.Input('ng2-overlay-position'), \n\t\t\t        __metadata('design:type', String)\n\t\t\t    ], OverlayDirective.prototype, \"overlayPosition\", void 0);\n\t\t\t    OverlayDirective = __decorate([\n\t\t\t        core_1.Directive({\n\t\t\t            selector: '[ng2-overlay], [ng2-overlay-of], [ng2-overlay-position]',\n\t\t\t        }), \n\t\t\t        __metadata('design:paramtypes', [core_1.ViewContainerRef, overlay_manager_1.OverlayManager])\n\t\t\t    ], OverlayDirective);\n\t\t\t    return OverlayDirective;\n\t\t\t}());\n\t\t\texports.OverlayDirective = OverlayDirective;\n\t\t\n\t\t\n\t\t/***/ }\n\t\t/******/ ])\n\t\t});\n\t\t;\n\t\t//# sourceMappingURL=ng2-overlay.umd.js.map\n\t\n\t/***/ }\n\t/******/ ])\n\t});\n\t;\n\t//# sourceMappingURL=ng2-tooltip-overlay.umd.js.map\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function webpackUniversalModuleDefinition(root, factory) {\n\t\tif(true)\n\t\t\tmodule.exports = factory(__webpack_require__(1), __webpack_require__(2), __webpack_require__(3));\n\t\telse if(typeof define === 'function' && define.amd)\n\t\t\tdefine([\"@angular/core\", \"@angular/forms\", \"@angular/platform-browser\"], factory);\n\t\telse if(typeof exports === 'object')\n\t\t\texports[\"ng2-scrollable\"] = factory(require(\"@angular/core\"), require(\"@angular/forms\"), require(\"@angular/platform-browser\"));\n\t\telse\n\t\t\troot[\"ng2-scrollable\"] = factory(root[\"@angular/core\"], root[\"@angular/forms\"], root[\"@angular/platform-browser\"]);\n\t})(this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__) {\n\treturn /******/ (function(modules) { // webpackBootstrap\n\t/******/ \t// The module cache\n\t/******/ \tvar installedModules = {};\n\t/******/\n\t/******/ \t// The require function\n\t/******/ \tfunction __webpack_require__(moduleId) {\n\t/******/\n\t/******/ \t\t// Check if module is in cache\n\t/******/ \t\tif(installedModules[moduleId])\n\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\t/******/\n\t/******/ \t\t// Create a new module (and put it into the cache)\n\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t/******/ \t\t\texports: {},\n\t/******/ \t\t\tid: moduleId,\n\t/******/ \t\t\tloaded: false\n\t/******/ \t\t};\n\t/******/\n\t/******/ \t\t// Execute the module function\n\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t/******/\n\t/******/ \t\t// Flag the module as loaded\n\t/******/ \t\tmodule.loaded = true;\n\t/******/\n\t/******/ \t\t// Return the exports of the module\n\t/******/ \t\treturn module.exports;\n\t/******/ \t}\n\t/******/\n\t/******/\n\t/******/ \t// expose the modules object (__webpack_modules__)\n\t/******/ \t__webpack_require__.m = modules;\n\t/******/\n\t/******/ \t// expose the module cache\n\t/******/ \t__webpack_require__.c = installedModules;\n\t/******/\n\t/******/ \t// __webpack_public_path__\n\t/******/ \t__webpack_require__.p = \"\";\n\t/******/\n\t/******/ \t// Load entry module and return exports\n\t/******/ \treturn __webpack_require__(0);\n\t/******/ })\n\t/************************************************************************/\n\t/******/ ([\n\t/* 0 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(1);\n\t\tvar forms_1 = __webpack_require__(2);\n\t\tvar platform_browser_1 = __webpack_require__(3);\n\t\tvar ng2_scrollable_directive_1 = __webpack_require__(4);\n\t\texports.Ng2ScrollableDirective = ng2_scrollable_directive_1.Ng2ScrollableDirective;\n\t\tvar Ng2ScrollableModule = (function () {\n\t\t    function Ng2ScrollableModule() {\n\t\t    }\n\t\t    Ng2ScrollableModule = __decorate([\n\t\t        core_1.NgModule({\n\t\t            imports: [platform_browser_1.BrowserModule, forms_1.FormsModule],\n\t\t            declarations: [ng2_scrollable_directive_1.Ng2ScrollableDirective],\n\t\t            exports: [ng2_scrollable_directive_1.Ng2ScrollableDirective]\n\t\t        }), \n\t\t        __metadata('design:paramtypes', [])\n\t\t    ], Ng2ScrollableModule);\n\t\t    return Ng2ScrollableModule;\n\t\t}());\n\t\texports.Ng2ScrollableModule = Ng2ScrollableModule;\n\t\n\t\n\t/***/ },\n\t/* 1 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\t\n\t/***/ },\n\t/* 2 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\t\n\t/***/ },\n\t/* 3 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\t\n\t/***/ },\n\t/* 4 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(1);\n\t\tvar ng2_utils_1 = __webpack_require__(5);\n\t\tvar Ng2ScrollableDirective = (function () {\n\t\t    function Ng2ScrollableDirective(el) {\n\t\t        this.elementVisible = new core_1.EventEmitter();\n\t\t        this.sections = [];\n\t\t        this.visible = ng2_utils_1.elementVisible;\n\t\t        this.el = el.nativeElement;\n\t\t        this.el.style.position = 'relative';\n\t\t    }\n\t\t    // setup list of sections\n\t\t    Ng2ScrollableDirective.prototype.ngOnInit = function () {\n\t\t        for (var i = 0; i < this.el.children.length; i++) {\n\t\t            var childEl = this.el.children[i];\n\t\t            childEl.id && this.sections.push(childEl);\n\t\t        }\n\t\t        var thisElStyle = window.getComputedStyle(this.el);\n\t\t        var elToListenScroll = thisElStyle.overflow === 'auto' ? this.el : window;\n\t\t        this.listenScrollOn(elToListenScroll);\n\t\t    };\n\t\t    Ng2ScrollableDirective.prototype.listenScrollOn = function (el) {\n\t\t        var _this = this;\n\t\t        el.addEventListener('scroll', function () {\n\t\t            var elScrolledToVisible = null;\n\t\t            for (var i = 0; i < _this.sections.length; i++) {\n\t\t                var section = _this.sections[i];\n\t\t                var visible = _this.visible(section, el);\n\t\t                if (_this.horizontal && (visible.left || visible.right)) {\n\t\t                    elScrolledToVisible = section;\n\t\t                    break;\n\t\t                }\n\t\t                else if (!_this.horizontal && (visible.top || visible.bottom)) {\n\t\t                    elScrolledToVisible = section;\n\t\t                    break;\n\t\t                }\n\t\t            }\n\t\t            elScrolledToVisible && _this.elementVisible.emit(elScrolledToVisible);\n\t\t        });\n\t\t    };\n\t\t    Ng2ScrollableDirective.scrollTo = function (selector, parentSelector, horizontal, distance) {\n\t\t        // argument validation\n\t\t        var parentEl, targetEl;\n\t\t        parentSelector = parentSelector || 'body';\n\t\t        targetEl = document.querySelector(selector);\n\t\t        if (!targetEl) {\n\t\t            throw \"Invalid selector \" + selector;\n\t\t        }\n\t\t        parentEl = document.querySelector(parentSelector);\n\t\t        if (!parentEl) {\n\t\t            throw \"Invalid parent selector \" + parentSelector;\n\t\t        }\n\t\t        // detect the current environment\n\t\t        var parentElStyle = window.getComputedStyle(parentEl);\n\t\t        var scrollContainerEl = parentElStyle.overflow === 'auto' ?\n\t\t            parentEl : document.body;\n\t\t        var currentScrollTop = scrollContainerEl.scrollTop;\n\t\t        var currentScrollLeft = scrollContainerEl.scrollLeft;\n\t\t        // determine targetOffsetTop(or Left);\n\t\t        var targetOffsetTop;\n\t\t        var targetOffsetLeft;\n\t\t        if (scrollContainerEl === document.body) {\n\t\t            var bodyRect = document.body.getBoundingClientRect();\n\t\t            var targetRect = targetEl.getBoundingClientRect();\n\t\t            targetOffsetTop = targetRect.top - bodyRect.top;\n\t\t            targetOffsetLeft = targetRect.left - bodyRect.left;\n\t\t        }\n\t\t        else {\n\t\t            targetOffsetTop = targetEl.offsetTop;\n\t\t            targetOffsetLeft = targetEl.offsetLeft;\n\t\t        }\n\t\t        if (distance) {\n\t\t            currentScrollTop += distance;\n\t\t            currentScrollLeft += distance;\n\t\t        }\n\t\t        // start scrolling\n\t\t        var step = horizontal ?\n\t\t            Math.ceil((targetOffsetLeft - currentScrollLeft) / 10) :\n\t\t            Math.ceil((targetOffsetTop - currentScrollTop) / 10);\n\t\t        var scrollProp = horizontal ? 'scrollLeft' : 'scrollTop';\n\t\t        (function loop(i, prop) {\n\t\t            setTimeout(function main() {\n\t\t                scrollContainerEl[prop] += step;\n\t\t                i > 1 && loop(i - 1, prop);\n\t\t            }, 50);\n\t\t        }(10, scrollProp));\n\t\t    };\n\t\t    __decorate([\n\t\t        core_1.Input(), \n\t\t        __metadata('design:type', Boolean)\n\t\t    ], Ng2ScrollableDirective.prototype, \"horizontal\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Output(), \n\t\t        __metadata('design:type', Object)\n\t\t    ], Ng2ScrollableDirective.prototype, \"elementVisible\", void 0);\n\t\t    Ng2ScrollableDirective = __decorate([\n\t\t        core_1.Directive({\n\t\t            selector: '[ng2-scrollable]'\n\t\t        }), \n\t\t        __metadata('design:paramtypes', [core_1.ElementRef])\n\t\t    ], Ng2ScrollableDirective);\n\t\t    return Ng2ScrollableDirective;\n\t\t}());\n\t\texports.Ng2ScrollableDirective = Ng2ScrollableDirective;\n\t\n\t\n\t/***/ },\n\t/* 5 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t(function webpackUniversalModuleDefinition(root, factory) {\n\t\t\tif(true)\n\t\t\t\tmodule.exports = factory(__webpack_require__(1));\n\t\t\telse if(typeof define === 'function' && define.amd)\n\t\t\t\tdefine([\"@angular/core\"], factory);\n\t\t\telse if(typeof exports === 'object')\n\t\t\t\texports[\"ng2-utils\"] = factory(require(\"@angular/core\"));\n\t\t\telse\n\t\t\t\troot[\"ng2-utils\"] = factory(root[\"@angular/core\"]);\n\t\t})(this, function(__WEBPACK_EXTERNAL_MODULE_1__) {\n\t\treturn /******/ (function(modules) { // webpackBootstrap\n\t\t/******/ \t// The module cache\n\t\t/******/ \tvar installedModules = {};\n\t\t/******/\n\t\t/******/ \t// The require function\n\t\t/******/ \tfunction __webpack_require__(moduleId) {\n\t\t/******/\n\t\t/******/ \t\t// Check if module is in cache\n\t\t/******/ \t\tif(installedModules[moduleId])\n\t\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\t\t/******/\n\t\t/******/ \t\t// Create a new module (and put it into the cache)\n\t\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t\t/******/ \t\t\texports: {},\n\t\t/******/ \t\t\tid: moduleId,\n\t\t/******/ \t\t\tloaded: false\n\t\t/******/ \t\t};\n\t\t/******/\n\t\t/******/ \t\t// Execute the module function\n\t\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t\t/******/\n\t\t/******/ \t\t// Flag the module as loaded\n\t\t/******/ \t\tmodule.loaded = true;\n\t\t/******/\n\t\t/******/ \t\t// Return the exports of the module\n\t\t/******/ \t\treturn module.exports;\n\t\t/******/ \t}\n\t\t/******/\n\t\t/******/\n\t\t/******/ \t// expose the modules object (__webpack_modules__)\n\t\t/******/ \t__webpack_require__.m = modules;\n\t\t/******/\n\t\t/******/ \t// expose the module cache\n\t\t/******/ \t__webpack_require__.c = installedModules;\n\t\t/******/\n\t\t/******/ \t// __webpack_public_path__\n\t\t/******/ \t__webpack_require__.p = \"\";\n\t\t/******/\n\t\t/******/ \t// Load entry module and return exports\n\t\t/******/ \treturn __webpack_require__(0);\n\t\t/******/ })\n\t\t/************************************************************************/\n\t\t/******/ ([\n\t\t/* 0 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t\t};\n\t\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t\t};\n\t\t\tvar core_1 = __webpack_require__(1);\n\t\t\tvar scroll_to_1 = __webpack_require__(2);\n\t\t\texports.scrollTo = scroll_to_1.scrollTo;\n\t\t\tvar element_visible_1 = __webpack_require__(3);\n\t\t\texports.elementVisible = element_visible_1.elementVisible;\n\t\t\tvar computed_style_1 = __webpack_require__(4);\n\t\t\texports.computedStyle = computed_style_1.computedStyle;\n\t\t\tvar outer_width_1 = __webpack_require__(5);\n\t\t\texports.outerWidth = outer_width_1.outerWidth;\n\t\t\tvar outer_height_1 = __webpack_require__(6);\n\t\t\texports.outerHeight = outer_height_1.outerHeight;\n\t\t\tvar Ng2UtilsModule = (function () {\n\t\t\t    function Ng2UtilsModule() {\n\t\t\t    }\n\t\t\t    Ng2UtilsModule = __decorate([\n\t\t\t        core_1.NgModule({\n\t\t\t            declarations: [\n\t\t\t                scroll_to_1.scrollTo,\n\t\t\t                element_visible_1.elementVisible,\n\t\t\t                computed_style_1.computedStyle,\n\t\t\t                outer_width_1.outerWidth,\n\t\t\t                outer_height_1.outerHeight\n\t\t\t            ],\n\t\t\t            exports: [\n\t\t\t                scroll_to_1.scrollTo,\n\t\t\t                element_visible_1.elementVisible,\n\t\t\t                computed_style_1.computedStyle,\n\t\t\t                outer_width_1.outerWidth,\n\t\t\t                outer_height_1.outerHeight\n\t\t\t            ]\n\t\t\t        }), \n\t\t\t        __metadata('design:paramtypes', [])\n\t\t\t    ], Ng2UtilsModule);\n\t\t\t    return Ng2UtilsModule;\n\t\t\t}());\n\t\t\texports.Ng2UtilsModule = Ng2UtilsModule;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 1 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\t\t\n\t\t/***/ },\n\t\t/* 2 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\t/**\n\t\t\t * scroll to the selector within the parent selector by scrolling 10 times within 500ms\n\t\t\t * @param selector\n\t\t\t * @param parentSelector\n\t\t\t */\n\t\t\tfunction scrollTo(selector, parentSelector) {\n\t\t\t    console.log('selector', selector, 'parentSelector', parentSelector);\n\t\t\t    var parentEl, targetEl;\n\t\t\t    targetEl = document.querySelector(selector);\n\t\t\t    if (!targetEl) {\n\t\t\t        throw \"Invalid selector \" + selector;\n\t\t\t    }\n\t\t\t    parentEl = document.querySelector(parentSelector);\n\t\t\t    if (!parentEl) {\n\t\t\t        throw \"Invalid parent selector \" + parentSelector;\n\t\t\t    }\n\t\t\t    var parentElStyle = window.getComputedStyle(parentEl);\n\t\t\t    parentEl = parentElStyle['overflow'] === 'auto' ? parentEl : document.body;\n\t\t\t    var currentScrollTop = parentEl.scrollTop;\n\t\t\t    var targetOffsetTop = targetEl.offsetTop;\n\t\t\t    if (parentEl === document.body) {\n\t\t\t        var bodyRect = document.body.getBoundingClientRect();\n\t\t\t        var targetRect = targetEl.getBoundingClientRect();\n\t\t\t        targetOffsetTop = targetRect.top - bodyRect.top;\n\t\t\t    }\n\t\t\t    var step = Math.ceil((targetOffsetTop - currentScrollTop) / 10);\n\t\t\t    (function loop(i) {\n\t\t\t        setTimeout(function main() {\n\t\t\t            parentEl.scrollTop += step;\n\t\t\t            i > 1 && loop(i - 1);\n\t\t\t        }, 50);\n\t\t\t    }(10));\n\t\t\t}\n\t\t\texports.scrollTo = scrollTo;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 3 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\t/**\n\t\t\t * Returns an element is visible within outer element\n\t\t\t * @param innerEl\n\t\t\t * @param outerEl\n\t\t\t * @param adjustment\n\t\t\t * @returns {{top: boolean, bottom: boolean, left: boolean, right: boolean}}\n\t\t\t */\n\t\t\tfunction elementVisible(innerEl, outerEl, adjustment) {\n\t\t\t    var innerRect = innerEl.getBoundingClientRect();\n\t\t\t    var bottomAdjustment = (adjustment && adjustment.bottom || 0);\n\t\t\t    if (outerEl === window) {\n\t\t\t        return {\n\t\t\t            top: innerRect.bottom - bottomAdjustment > window.innerHeight\n\t\t\t                && innerRect.top < window.innerHeight,\n\t\t\t            bottom: innerRect.bottom - bottomAdjustment > 0\n\t\t\t                && innerRect.bottom < window.innerHeight,\n\t\t\t            left: innerRect.right > window.innerWidth\n\t\t\t                && innerRect.left < window.innerWidth,\n\t\t\t            right: innerRect.right > 0\n\t\t\t                && innerRect.right < window.innerWidth\n\t\t\t        };\n\t\t\t    }\n\t\t\t    else {\n\t\t\t        var outerRect = outerEl.getBoundingClientRect();\n\t\t\t        var defaultView = (innerEl.ownerDocument || document).defaultView;\n\t\t\t        var computedStyle = defaultView.getComputedStyle(outerEl, null);\n\t\t\t        var outerRectBorderTopWidth = parseInt(computedStyle.getPropertyValue('border-top-width'), 10);\n\t\t\t        var outerRectBorderLeftWidth = parseInt(computedStyle.getPropertyValue('border-left-width'), 10);\n\t\t\t        /* top is visible or bottom is visible */\n\t\t\t        var topVisible = (innerRect.top >= outerRect.top\n\t\t\t            && innerRect.top < outerRect.bottom);\n\t\t\t        var bottomVisible = (innerRect.bottom > (outerRect.top + outerRectBorderTopWidth)\n\t\t\t            && innerRect.bottom < outerRect.bottom);\n\t\t\t        var leftVisible = (innerRect.left >= outerRect.left\n\t\t\t            && innerRect.left < outerRect.right);\n\t\t\t        var rightVisible = (innerRect.right > (outerRect.left + outerRectBorderLeftWidth)\n\t\t\t            && innerRect.right < outerRect.right);\n\t\t\t        return {\n\t\t\t            top: topVisible,\n\t\t\t            bottom: bottomVisible,\n\t\t\t            left: leftVisible,\n\t\t\t            right: rightVisible\n\t\t\t        };\n\t\t\t    }\n\t\t\t}\n\t\t\texports.elementVisible = elementVisible;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 4 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\t/**\n\t\t\t * returns coumputed style of given element\n\t\t\t * @param el\n\t\t\t * @param styleProp\n\t\t\t * @returns {any}\n\t\t\t */\n\t\t\tfunction computedStyle(el, styleProp) {\n\t\t\t    var value, defaultView = (el.ownerDocument || document).defaultView;\n\t\t\t    // W3C standard way:\n\t\t\t    if (defaultView && defaultView.getComputedStyle) {\n\t\t\t        // sanitize property name to css notation\n\t\t\t        // (hypen separated words eg. font-Size)\n\t\t\t        styleProp = styleProp.replace(/([A-Z])/g, \"-$1\").toLowerCase();\n\t\t\t        return defaultView.getComputedStyle(el, null).getPropertyValue(styleProp);\n\t\t\t    }\n\t\t\t    else if (el['currentStyle']) {\n\t\t\t        // sanitize property name to camelCase\n\t\t\t        styleProp = styleProp.replace(/\\-(\\w)/g, function (str, letter) {\n\t\t\t            return letter.toUpperCase();\n\t\t\t        });\n\t\t\t        value = el['currentStyle'][styleProp];\n\t\t\t        // convert other units to pixels on IE\n\t\t\t        if (/^\\d+(em|pt|%|ex)?$/i.test(value)) {\n\t\t\t            return (function (value) {\n\t\t\t                var oldLeft = el.style.left, oldRsLeft = el['runtimeStyle'].left;\n\t\t\t                el['runtimeStyle'].left = el['currentStyle'].left;\n\t\t\t                el.style.left = value || 0;\n\t\t\t                value = el.style['pixelLeft'] + \"px\";\n\t\t\t                el.style.left = oldLeft;\n\t\t\t                el['runtimeStyle'].left = oldRsLeft;\n\t\t\t                return value;\n\t\t\t            })(value);\n\t\t\t        }\n\t\t\t        return value;\n\t\t\t    }\n\t\t\t}\n\t\t\texports.computedStyle = computedStyle;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 5 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tfunction outerWidth(el) {\n\t\t\t    var style = getComputedStyle(el);\n\t\t\t    return el.offsetWidth +\n\t\t\t        parseInt(style.getPropertyValue('margin-left')) +\n\t\t\t        parseInt(style.getPropertyValue('margin-right'));\n\t\t\t}\n\t\t\texports.outerWidth = outerWidth;\n\t\t\n\t\t\n\t\t/***/ },\n\t\t/* 6 */\n\t\t/***/ function(module, exports) {\n\t\t\n\t\t\t\"use strict\";\n\t\t\tfunction outerHeight(el) {\n\t\t\t    var style = getComputedStyle(el);\n\t\t\t    return el.offsetHeight +\n\t\t\t        parseInt(style.getPropertyValue('margin-top')) +\n\t\t\t        parseInt(style.getPropertyValue('margin-bottom'));\n\t\t\t}\n\t\t\texports.outerHeight = outerHeight;\n\t\t\n\t\t\n\t\t/***/ }\n\t\t/******/ ])\n\t\t});\n\t\t;\n\t\t//# sourceMappingURL=ng2-utils.umd.js.map\n\t\n\t/***/ }\n\t/******/ ])\n\t});\n\t;\n\t//# sourceMappingURL=ng2-scrollable.umd.js.map\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function webpackUniversalModuleDefinition(root, factory) {\n\t\tif(true)\n\t\t\tmodule.exports = factory(__webpack_require__(1), __webpack_require__(2), __webpack_require__(3));\n\t\telse if(typeof define === 'function' && define.amd)\n\t\t\tdefine([\"@angular/core\", \"@angular/forms\", \"@angular/platform-browser\"], factory);\n\t\telse if(typeof exports === 'object')\n\t\t\texports[\"ng2-ui-sortable\"] = factory(require(\"@angular/core\"), require(\"@angular/forms\"), require(\"@angular/platform-browser\"));\n\t\telse\n\t\t\troot[\"ng2-ui-sortable\"] = factory(root[\"@angular/core\"], root[\"@angular/forms\"], root[\"@angular/platform-browser\"]);\n\t})(this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__) {\n\treturn /******/ (function(modules) { // webpackBootstrap\n\t/******/ \t// The module cache\n\t/******/ \tvar installedModules = {};\n\t/******/\n\t/******/ \t// The require function\n\t/******/ \tfunction __webpack_require__(moduleId) {\n\t/******/\n\t/******/ \t\t// Check if module is in cache\n\t/******/ \t\tif(installedModules[moduleId])\n\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\t/******/\n\t/******/ \t\t// Create a new module (and put it into the cache)\n\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t/******/ \t\t\texports: {},\n\t/******/ \t\t\tid: moduleId,\n\t/******/ \t\t\tloaded: false\n\t/******/ \t\t};\n\t/******/\n\t/******/ \t\t// Execute the module function\n\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t/******/\n\t/******/ \t\t// Flag the module as loaded\n\t/******/ \t\tmodule.loaded = true;\n\t/******/\n\t/******/ \t\t// Return the exports of the module\n\t/******/ \t\treturn module.exports;\n\t/******/ \t}\n\t/******/\n\t/******/\n\t/******/ \t// expose the modules object (__webpack_modules__)\n\t/******/ \t__webpack_require__.m = modules;\n\t/******/\n\t/******/ \t// expose the module cache\n\t/******/ \t__webpack_require__.c = installedModules;\n\t/******/\n\t/******/ \t// __webpack_public_path__\n\t/******/ \t__webpack_require__.p = \"\";\n\t/******/\n\t/******/ \t// Load entry module and return exports\n\t/******/ \treturn __webpack_require__(0);\n\t/******/ })\n\t/************************************************************************/\n\t/******/ ([\n\t/* 0 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(1);\n\t\tvar forms_1 = __webpack_require__(2);\n\t\tvar platform_browser_1 = __webpack_require__(3);\n\t\tvar ng2_sortable_directive_1 = __webpack_require__(4);\n\t\texports.Ng2SortableDirective = ng2_sortable_directive_1.Ng2SortableDirective;\n\t\tvar Ng2SortableModule = (function () {\n\t\t    function Ng2SortableModule() {\n\t\t    }\n\t\t    Ng2SortableModule = __decorate([\n\t\t        core_1.NgModule({\n\t\t            imports: [platform_browser_1.BrowserModule, forms_1.FormsModule],\n\t\t            declarations: [ng2_sortable_directive_1.Ng2SortableDirective],\n\t\t            exports: [ng2_sortable_directive_1.Ng2SortableDirective]\n\t\t        }), \n\t\t        __metadata('design:paramtypes', [])\n\t\t    ], Ng2SortableModule);\n\t\t    return Ng2SortableModule;\n\t\t}());\n\t\texports.Ng2SortableModule = Ng2SortableModule;\n\t\n\t\n\t/***/ },\n\t/* 1 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\t\n\t/***/ },\n\t/* 2 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\t\n\t/***/ },\n\t/* 3 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\t\n\t/***/ },\n\t/* 4 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(1);\n\t\tvar Ng2SortableDirective = (function () {\n\t\t    function Ng2SortableDirective(viewContainerRef) {\n\t\t        var _this = this;\n\t\t        this.viewContainerRef = viewContainerRef;\n\t\t        this.orderChanged = new core_1.EventEmitter();\n\t\t        this.dragStartHandler = function (event) {\n\t\t            //console.log('dragStartHandler');\n\t\t            _this.draggingEl = event.target;\n\t\t            Object.assign(_this.draggingEl.style, {\n\t\t                zIndex: 3,\n\t\t                pointerEvents: 'none'\n\t\t            });\n\t\t        };\n\t\t        this.dragHandler = function (event) {\n\t\t            //console.log('dragHandler');\n\t\t            Object.assign(_this.draggingEl.style, {\n\t\t                transform: 'translate(0px,' + event.deltaY + 'px)'\n\t\t            });\n\t\t            var newElDragEnter = document.elementFromPoint(event.center.x, event.center.y);\n\t\t            if (_this.elDragEnter !== newElDragEnter) {\n\t\t                if (_this.elDragEnter) {\n\t\t                    _this.elDragEnter.className = _this.elDragEnter.className.replace(/\\ drag-enter/g, '');\n\t\t                }\n\t\t                _this.elDragEnter = newElDragEnter;\n\t\t                if (newElDragEnter.tagName === 'LI') {\n\t\t                    newElDragEnter.className += ' drag-enter';\n\t\t                }\n\t\t            }\n\t\t        };\n\t\t        this.dragEndHandler = function (event) {\n\t\t            //console.log('dragEndHandler');\n\t\t            Object.assign(_this.draggingEl.style, {\n\t\t                transform: 'translate(0,0)',\n\t\t                zIndex: 1,\n\t\t                pointerEvents: 'inherit'\n\t\t            });\n\t\t            // remove class and drop the element\n\t\t            if (_this.elDragEnter) {\n\t\t                _this.elDragEnter.className = _this.elDragEnter.className.replace(/\\ drag-enter/g, '');\n\t\t                _this.elDragEnter.parentNode.insertBefore(_this.draggingEl, _this.elDragEnter);\n\t\t                _this.emitOrderChanged();\n\t\t            }\n\t\t        };\n\t\t        this.ulEl = this.viewContainerRef.element.nativeElement;\n\t\t    }\n\t\t    Ng2SortableDirective.prototype.ngAfterViewInit = function () {\n\t\t        this.liEls = this.ulEl.querySelectorAll('li');\n\t\t        for (var i = 0; i < this.liEls.length; i++) {\n\t\t            var liEl = this.liEls[i];\n\t\t            // create a simple instance by default, it only adds horizontal recognizers\n\t\t            var mc = new Hammer(liEl);\n\t\t            // let the pan gesture support all directions.\n\t\t            // this will block the vertical scrolling on a touch-device while on the element\n\t\t            mc.get('pan').set({ direction: Hammer.DIRECTION_ALL });\n\t\t            mc.on('panstart', this.dragStartHandler);\n\t\t            mc.on('panup pandown', this.dragHandler);\n\t\t            mc.on('panend', this.dragEndHandler);\n\t\t            this.emitOrderChanged();\n\t\t        }\n\t\t    };\n\t\t    Ng2SortableDirective.prototype.emitOrderChanged = function () {\n\t\t        var liEls = this.ulEl.querySelectorAll('li');\n\t\t        var orders = Array.prototype.slice.call(liEls).map(function (el) { return el.id; });\n\t\t        this.orderChanged.emit(orders);\n\t\t    };\n\t\t    __decorate([\n\t\t        // order of LI ids\n\t\t        core_1.Output(), \n\t\t        __metadata('design:type', Object)\n\t\t    ], Ng2SortableDirective.prototype, \"orderChanged\", void 0);\n\t\t    Ng2SortableDirective = __decorate([\n\t\t        core_1.Directive({\n\t\t            selector: '[ng2-sortable]'\n\t\t        }), \n\t\t        __metadata('design:paramtypes', [core_1.ViewContainerRef])\n\t\t    ], Ng2SortableDirective);\n\t\t    return Ng2SortableDirective;\n\t\t}());\n\t\texports.Ng2SortableDirective = Ng2SortableDirective;\n\t\n\t\n\t/***/ }\n\t/******/ ])\n\t});\n\t;\n\t//# sourceMappingURL=ng2-ui-sortable.umd.js.map\n\n/***/ }\n/******/ ])\n});\n;\n//# sourceMappingURL=ng2-ui.umd.js.map//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ },

/***/ 357:
/***/ function(module, exports) {

	eval("module.exports = \"<header class=\\\"masthead\\\">\\n  <div class=\\\"container bg-blue border-0 w-980\\\">\\n    <a href=\\\"/\\\" class=\\\"logo left text-white\\\">\\n      <img class=\\\"v-middle\\\" src=\\\"https://avatars1.githubusercontent.com/u/20460529?v=3&s=32\\\" />\\n      <span>NG2-UI</span>\\n    </a>\\n    <repo-info class=\\\"masthead-nav right\\\" numbers-section=\\\"1\\\"></repo-info>\\n    <!--<nav class=\\\"masthead-nav right\\\">-->\\n      <!--<a class=\\\"active\\\" href=\\\"/scaffolding\\\">Docs</a>-->\\n      <!--<a href=\\\"/about\\\">About</a>-->\\n      <!--<a href=\\\"https://github.com/primer/primer\\\" target=\\\"_blank\\\">GitHub</a>-->\\n      <!--<a href=\\\"https://github.com/primer/primer/blob/master/README.md#install\\\" target=\\\"_blank\\\">Install</a>-->\\n    <!--</nav>-->\\n  </div>\\n</header>\\n<div class=\\\"main container\\\">\\n  <div class=\\\"columns\\\">\\n    <div class=\\\"drawer one-fourth column\\\">\\n      <drawer-component class=\\\"drawer shadow-1\\\"></drawer-component>\\n      <repo-info contributors-section=\\\"1\\\"></repo-info>\\n    </div>\\n    <div class=\\\"three-fourths column markdown-body\\\">\\n      <router-outlet></router-outlet>\\n    </div>\\n  </div>\\n  <footer class=\\\"footer\\\">\\n    <div>\\n      Copyright JsValley 2016.<br>\\n      Created and maintained by the Ng2-UI team.\\n    </div>\\n  </footer>\\n</div>\\n\"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvYXBwLmh0bWw/ZDg1YyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiIzNTcuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IFwiPGhlYWRlciBjbGFzcz1cXFwibWFzdGhlYWRcXFwiPlxcbiAgPGRpdiBjbGFzcz1cXFwiY29udGFpbmVyIGJnLWJsdWUgYm9yZGVyLTAgdy05ODBcXFwiPlxcbiAgICA8YSBocmVmPVxcXCIvXFxcIiBjbGFzcz1cXFwibG9nbyBsZWZ0IHRleHQtd2hpdGVcXFwiPlxcbiAgICAgIDxpbWcgY2xhc3M9XFxcInYtbWlkZGxlXFxcIiBzcmM9XFxcImh0dHBzOi8vYXZhdGFyczEuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3UvMjA0NjA1Mjk/dj0zJnM9MzJcXFwiIC8+XFxuICAgICAgPHNwYW4+TkcyLVVJPC9zcGFuPlxcbiAgICA8L2E+XFxuICAgIDxyZXBvLWluZm8gY2xhc3M9XFxcIm1hc3RoZWFkLW5hdiByaWdodFxcXCIgbnVtYmVycy1zZWN0aW9uPVxcXCIxXFxcIj48L3JlcG8taW5mbz5cXG4gICAgPCEtLTxuYXYgY2xhc3M9XFxcIm1hc3RoZWFkLW5hdiByaWdodFxcXCI+LS0+XFxuICAgICAgPCEtLTxhIGNsYXNzPVxcXCJhY3RpdmVcXFwiIGhyZWY9XFxcIi9zY2FmZm9sZGluZ1xcXCI+RG9jczwvYT4tLT5cXG4gICAgICA8IS0tPGEgaHJlZj1cXFwiL2Fib3V0XFxcIj5BYm91dDwvYT4tLT5cXG4gICAgICA8IS0tPGEgaHJlZj1cXFwiaHR0cHM6Ly9naXRodWIuY29tL3ByaW1lci9wcmltZXJcXFwiIHRhcmdldD1cXFwiX2JsYW5rXFxcIj5HaXRIdWI8L2E+LS0+XFxuICAgICAgPCEtLTxhIGhyZWY9XFxcImh0dHBzOi8vZ2l0aHViLmNvbS9wcmltZXIvcHJpbWVyL2Jsb2IvbWFzdGVyL1JFQURNRS5tZCNpbnN0YWxsXFxcIiB0YXJnZXQ9XFxcIl9ibGFua1xcXCI+SW5zdGFsbDwvYT4tLT5cXG4gICAgPCEtLTwvbmF2Pi0tPlxcbiAgPC9kaXY+XFxuPC9oZWFkZXI+XFxuPGRpdiBjbGFzcz1cXFwibWFpbiBjb250YWluZXJcXFwiPlxcbiAgPGRpdiBjbGFzcz1cXFwiY29sdW1uc1xcXCI+XFxuICAgIDxkaXYgY2xhc3M9XFxcImRyYXdlciBvbmUtZm91cnRoIGNvbHVtblxcXCI+XFxuICAgICAgPGRyYXdlci1jb21wb25lbnQgY2xhc3M9XFxcImRyYXdlciBzaGFkb3ctMVxcXCI+PC9kcmF3ZXItY29tcG9uZW50PlxcbiAgICAgIDxyZXBvLWluZm8gY29udHJpYnV0b3JzLXNlY3Rpb249XFxcIjFcXFwiPjwvcmVwby1pbmZvPlxcbiAgICA8L2Rpdj5cXG4gICAgPGRpdiBjbGFzcz1cXFwidGhyZWUtZm91cnRocyBjb2x1bW4gbWFya2Rvd24tYm9keVxcXCI+XFxuICAgICAgPHJvdXRlci1vdXRsZXQ+PC9yb3V0ZXItb3V0bGV0PlxcbiAgICA8L2Rpdj5cXG4gIDwvZGl2PlxcbiAgPGZvb3RlciBjbGFzcz1cXFwiZm9vdGVyXFxcIj5cXG4gICAgPGRpdj5cXG4gICAgICBDb3B5cmlnaHQgSnNWYWxsZXkgMjAxNi48YnI+XFxuICAgICAgQ3JlYXRlZCBhbmQgbWFpbnRhaW5lZCBieSB0aGUgTmcyLVVJIHRlYW0uXFxuICAgIDwvZGl2PlxcbiAgPC9mb290ZXI+XFxuPC9kaXY+XFxuXCJcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vYXBwL2FwcC5odG1sXG4gKiogbW9kdWxlIGlkID0gMzU3XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9");

/***/ },

/***/ 358:
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = __webpack_require__(1);\nvar DrawerComponent = (function () {\n    function DrawerComponent() {\n    }\n    DrawerComponent = __decorate([\n        core_1.Component({\n            selector: 'drawer-component',\n            template: \"\\n    <ul class=\\\"menu\\\">\\n      <li class=\\\"menu-item\\\" routerLinkActive=\\\"selected\\\"><a routerLink=\\\"/getting-started\\\">Getting Started</a>\\n      <li class=\\\"menu-item components\\\">\\n        <div class=\\\"pb-3\\\">Components</div>\\n        <ul class=\\\"menu \\\">\\n          <li class=\\\"menu-item\\\" routerLinkActive=\\\"selected\\\"><a routerLink=\\\"/auto-complete\\\">Auto Complete</a>\\n          <li class=\\\"menu-item\\\" routerLinkActive=\\\"selected\\\"><a routerLink=\\\"/datetime-picker\\\">Datetime Picker</a>\\n          <li class=\\\"menu-item\\\" routerLinkActive=\\\"selected\\\"><a routerLink=\\\"/google-map\\\">Google Map</a>\\n          <li class=\\\"menu-item\\\" routerLinkActive=\\\"selected\\\"><a routerLink=\\\"/infinite-list\\\">Infinite List</a>\\n          <li class=\\\"menu-item\\\" routerLinkActive=\\\"selected\\\"><a routerLink=\\\"/tab\\\">Tab</a>\\n          <li class=\\\"menu-item\\\" routerLinkActive=\\\"selected\\\"><a routerLink=\\\"/accordion\\\">Accordion </a>\\n          <li class=\\\"menu-item\\\" routerLinkActive=\\\"selected\\\"><a routerLink=\\\"/tooltip\\\">Tooltip</a>\\n          <li class=\\\"menu-item\\\" routerLinkActive=\\\"selected\\\"><a routerLink=\\\"/menu\\\">Menu</a>\\n          <li class=\\\"menu-item\\\" routerLinkActive=\\\"selected\\\"><a routerLink=\\\"/parallax\\\">Parallax Scroll</a>\\n          <li class=\\\"menu-item\\\" routerLinkActive=\\\"selected\\\"><a routerLink=\\\"/popup\\\">Popup</a>\\n          <li class=\\\"menu-item\\\" routerLinkActive=\\\"selected\\\"><a routerLink=\\\"/scrollable\\\">Scrollable</a>\\n          <li class=\\\"menu-item\\\" routerLinkActive=\\\"selected\\\"><a routerLink=\\\"/sortable\\\">Sortable</a>\\n          <li class=\\\"menu-item\\\" routerLinkActive=\\\"selected\\\"><a routerLink=\\\"/sticky\\\">Sticky Section</a>\\n        </ul>\\n      <li class=\\\"menu-item\\\"><a href=\\\"https://github.com/ng2-ui/ng2-ui/issues\\\">Help</a>\\n    </ul>\\n  \"\n        }), \n        __metadata('design:paramtypes', [])\n    ], DrawerComponent);\n    return DrawerComponent;\n}());\nexports.DrawerComponent = DrawerComponent;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvZHJhd2VyLmNvbXBvbmVudC50cz80ODc1Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQSxpQ0FBd0IsQ0FBZSxDQUFDO0FBNEJ4QztJQUFBO0lBQ0EsQ0FBQztJQTNCRDtRQUFDLGdCQUFTLENBQUM7WUFDVCxRQUFRLEVBQUUsa0JBQWtCO1lBQzVCLFFBQVEsRUFBRSxnd0RBc0JUO1NBQ0YsQ0FBQzs7dUJBQUE7SUFFRixzQkFBQztBQUFELENBQUM7QUFEWSx1QkFBZSxrQkFDM0IiLCJmaWxlIjoiMzU4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21wb25lbnR9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2RyYXdlci1jb21wb25lbnQnLFxuICB0ZW1wbGF0ZTogYFxuICAgIDx1bCBjbGFzcz1cIm1lbnVcIj5cbiAgICAgIDxsaSBjbGFzcz1cIm1lbnUtaXRlbVwiIHJvdXRlckxpbmtBY3RpdmU9XCJzZWxlY3RlZFwiPjxhIHJvdXRlckxpbms9XCIvZ2V0dGluZy1zdGFydGVkXCI+R2V0dGluZyBTdGFydGVkPC9hPlxuICAgICAgPGxpIGNsYXNzPVwibWVudS1pdGVtIGNvbXBvbmVudHNcIj5cbiAgICAgICAgPGRpdiBjbGFzcz1cInBiLTNcIj5Db21wb25lbnRzPC9kaXY+XG4gICAgICAgIDx1bCBjbGFzcz1cIm1lbnUgXCI+XG4gICAgICAgICAgPGxpIGNsYXNzPVwibWVudS1pdGVtXCIgcm91dGVyTGlua0FjdGl2ZT1cInNlbGVjdGVkXCI+PGEgcm91dGVyTGluaz1cIi9hdXRvLWNvbXBsZXRlXCI+QXV0byBDb21wbGV0ZTwvYT5cbiAgICAgICAgICA8bGkgY2xhc3M9XCJtZW51LWl0ZW1cIiByb3V0ZXJMaW5rQWN0aXZlPVwic2VsZWN0ZWRcIj48YSByb3V0ZXJMaW5rPVwiL2RhdGV0aW1lLXBpY2tlclwiPkRhdGV0aW1lIFBpY2tlcjwvYT5cbiAgICAgICAgICA8bGkgY2xhc3M9XCJtZW51LWl0ZW1cIiByb3V0ZXJMaW5rQWN0aXZlPVwic2VsZWN0ZWRcIj48YSByb3V0ZXJMaW5rPVwiL2dvb2dsZS1tYXBcIj5Hb29nbGUgTWFwPC9hPlxuICAgICAgICAgIDxsaSBjbGFzcz1cIm1lbnUtaXRlbVwiIHJvdXRlckxpbmtBY3RpdmU9XCJzZWxlY3RlZFwiPjxhIHJvdXRlckxpbms9XCIvaW5maW5pdGUtbGlzdFwiPkluZmluaXRlIExpc3Q8L2E+XG4gICAgICAgICAgPGxpIGNsYXNzPVwibWVudS1pdGVtXCIgcm91dGVyTGlua0FjdGl2ZT1cInNlbGVjdGVkXCI+PGEgcm91dGVyTGluaz1cIi90YWJcIj5UYWI8L2E+XG4gICAgICAgICAgPGxpIGNsYXNzPVwibWVudS1pdGVtXCIgcm91dGVyTGlua0FjdGl2ZT1cInNlbGVjdGVkXCI+PGEgcm91dGVyTGluaz1cIi9hY2NvcmRpb25cIj5BY2NvcmRpb24gPC9hPlxuICAgICAgICAgIDxsaSBjbGFzcz1cIm1lbnUtaXRlbVwiIHJvdXRlckxpbmtBY3RpdmU9XCJzZWxlY3RlZFwiPjxhIHJvdXRlckxpbms9XCIvdG9vbHRpcFwiPlRvb2x0aXA8L2E+XG4gICAgICAgICAgPGxpIGNsYXNzPVwibWVudS1pdGVtXCIgcm91dGVyTGlua0FjdGl2ZT1cInNlbGVjdGVkXCI+PGEgcm91dGVyTGluaz1cIi9tZW51XCI+TWVudTwvYT5cbiAgICAgICAgICA8bGkgY2xhc3M9XCJtZW51LWl0ZW1cIiByb3V0ZXJMaW5rQWN0aXZlPVwic2VsZWN0ZWRcIj48YSByb3V0ZXJMaW5rPVwiL3BhcmFsbGF4XCI+UGFyYWxsYXggU2Nyb2xsPC9hPlxuICAgICAgICAgIDxsaSBjbGFzcz1cIm1lbnUtaXRlbVwiIHJvdXRlckxpbmtBY3RpdmU9XCJzZWxlY3RlZFwiPjxhIHJvdXRlckxpbms9XCIvcG9wdXBcIj5Qb3B1cDwvYT5cbiAgICAgICAgICA8bGkgY2xhc3M9XCJtZW51LWl0ZW1cIiByb3V0ZXJMaW5rQWN0aXZlPVwic2VsZWN0ZWRcIj48YSByb3V0ZXJMaW5rPVwiL3Njcm9sbGFibGVcIj5TY3JvbGxhYmxlPC9hPlxuICAgICAgICAgIDxsaSBjbGFzcz1cIm1lbnUtaXRlbVwiIHJvdXRlckxpbmtBY3RpdmU9XCJzZWxlY3RlZFwiPjxhIHJvdXRlckxpbms9XCIvc29ydGFibGVcIj5Tb3J0YWJsZTwvYT5cbiAgICAgICAgICA8bGkgY2xhc3M9XCJtZW51LWl0ZW1cIiByb3V0ZXJMaW5rQWN0aXZlPVwic2VsZWN0ZWRcIj48YSByb3V0ZXJMaW5rPVwiL3N0aWNreVwiPlN0aWNreSBTZWN0aW9uPC9hPlxuICAgICAgICA8L3VsPlxuICAgICAgPGxpIGNsYXNzPVwibWVudS1pdGVtXCI+PGEgaHJlZj1cImh0dHBzOi8vZ2l0aHViLmNvbS9uZzItdWkvbmcyLXVpL2lzc3Vlc1wiPkhlbHA8L2E+XG4gICAgPC91bD5cbiAgYFxufSlcbmV4cG9ydCBjbGFzcyBEcmF3ZXJDb21wb25lbnQge1xufVxuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9+L2FuZ3VsYXIyLXRlbXBsYXRlLWxvYWRlciEuL2FwcC9kcmF3ZXIuY29tcG9uZW50LnRzXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==");

/***/ },

/***/ 359:
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = __webpack_require__(1);\nvar router_1 = __webpack_require__(30);\nvar http_cache_1 = __webpack_require__(360);\nvar RepoInfoComponent = (function () {\n    function RepoInfoComponent(router, httpCache) {\n        var _this = this;\n        this.router = router;\n        this.httpCache = httpCache;\n        router.events.subscribe(function (event) {\n            if (event instanceof router_1.NavigationStart) {\n                _this.currentUrl = event.url;\n                console.log('currentUrl .........', _this.currentUrl);\n                if (_this.repositories) {\n                    _this.update();\n                }\n            }\n        });\n    }\n    RepoInfoComponent.prototype.ngOnInit = function () {\n        var _this = this;\n        this.httpCache.get('https://api.github.com/users/ng2-ui/repos')\n            .subscribe(function (resp) {\n            console.log('repositories', resp);\n            _this.repositories = resp;\n            _this.update();\n        });\n    };\n    RepoInfoComponent.prototype.update = function () {\n        var _this = this;\n        var currentRepoUrl = this.getCurrentRepoUrl();\n        console.log('current repo url', currentRepoUrl);\n        for (var i = 0; i < this.repositories.length; i++) {\n            var repo = this.repositories[i];\n            if (repo.url === currentRepoUrl) {\n                this.currentRepo = repo;\n                console.log('currentRepo', this.currentRepo);\n                break;\n            }\n        }\n        this.getContributors(currentRepoUrl).subscribe(function (resp) {\n            console.log('resp', resp);\n            _this.contributors = resp;\n        });\n    };\n    RepoInfoComponent.prototype.getContributors = function (repoUrl) {\n        return this.httpCache.get(repoUrl + '/contributors');\n    };\n    RepoInfoComponent.prototype.getCurrentRepoUrl = function () {\n        switch (this.currentUrl) {\n            case '/auto-complete': return 'https://api.github.com/repos/ng2-ui/ng2-auto-complete';\n            case '/datetime-picker': return 'https://api.github.com/repos/ng2-ui/ng2-datetime-picker';\n            case '/google-map': return 'https://api.github.com/repos/ng2-ui/ng2-map';\n            case '/infinite-list': return 'https://api.github.com/repos/ng2-ui/ng2-infinite-list';\n            case '/tab': return 'https://api.github.com/repos/ng2-ui/ng2-tab';\n            case '/accordion': return 'https://api.github.com/repos/ng2-ui/ng2-collapsable';\n            case '/tooltip': return 'https://api.github.com/repos/ng2-ui/ng2-tooltip-overlay';\n            case '/menu': return 'https://api.github.com/repos/ng2-ui/ng2-menu';\n            case '/parallax': return 'https://api.github.com/repos/ng2-ui/ng2-parallax-scroll';\n            case '/popup': return 'https://api.github.com/repos/ng2-ui/ng2-popup';\n            case '/scrollable': return 'https://api.github.com/repos/ng2-ui/ng2-scrollable';\n            case '/sortable': return 'https://api.github.com/repos/ng2-ui/ng2-ui-sortable';\n            case '/sticky': return 'https://api.github.com/repos/ng2-ui/ng2-sticky';\n            default: return 'https://api.github.com/repos/ng2-ui/ng2-ui';\n        }\n    };\n    __decorate([\n        core_1.Input('contributors-section'), \n        __metadata('design:type', String)\n    ], RepoInfoComponent.prototype, \"contributorsSection\", void 0);\n    __decorate([\n        core_1.Input('numbers-section'), \n        __metadata('design:type', String)\n    ], RepoInfoComponent.prototype, \"numbersSection\", void 0);\n    RepoInfoComponent = __decorate([\n        core_1.Component({\n            selector: 'repo-info',\n            template: \"\\n    <div *ngIf=\\\"numbersSection\\\">\\n      <div *ngIf=\\\"currentUrl && currentRepo\\\">\\n        <span class=\\\"numbers d-inline-block\\\">\\n          <button class=\\\"btn btn-sm\\\">\\n            <a href=\\\"{{currentRepo.html_url}}\\\">\\n              <span class=\\\"octicon octicon-repo\\\"></span>\\n              {{currentUrl.replace('/','')}}\\n            </a>\\n          </button>\\n        </span>\\n        \\n        <span class=\\\"numbers d-inline-block\\\">\\n          <button class=\\\"btn btn-sm btn-with-count\\\">\\n            <a href=\\\"{{currentRepo.html_url}}\\\">\\n              <span class=\\\"octicon octicon-star\\\"></span>\\n              Star           \\n            </a>\\n          </button>\\n          <a class=\\\"social-count\\\" \\n            href=\\\"{{currentRepo.html_url}}/stargazers\\\">\\n            {{currentRepo.stargazers_count}}\\n          </a>\\n        </span>\\n        \\n        <span class=\\\"numbers d-inline-block\\\">\\n          <button class=\\\"btn btn-sm\\\">\\n            <a href=\\\"{{currentRepo.html_url}}/issues\\\">\\n              <span class=\\\"octicon octicon-issue-opened\\\"></span>\\n              {{currentRepo.open_issues}}\\n              Issues\\n            </a>\\n          </button>\\n        </span>\\n      </div>\\n    </div>\\n    \\n    <div *ngIf=\\\"contributorsSection\\\"\\n      class=\\\"container p-3 border\\\">\\n      <h3>Contributors</h3> \\n      <ul *ngIf=\\\"contributors\\\">\\n        <li class=\\\"contributor\\\" *ngFor=\\\"let user of contributors\\\">\\n          <a href=\\\"{{user.html_url}}\\\">\\n           <img src=\\\"{{user.avatar_url}}\\\" height=\\\"64\\\" /> <br/>\\n           <div class=\\\"name\\\">{{user.login}}</div>\\n          </a>\\n        </li>\\n        <li class=\\\"contributor\\\">\\n          <a href=\\\"{{currentRepo.html_url}}\\\">\\n           <div class=\\\"you\\\">You</div><br/>\\n           <div class=\\\"name\\\">Your Name</div>\\n          </a>\\n        </li>\\n      </ul>\\n    </div>\\n  \"\n        }), \n        __metadata('design:paramtypes', [router_1.Router, http_cache_1.HttpCache])\n    ], RepoInfoComponent);\n    return RepoInfoComponent;\n}());\nexports.RepoInfoComponent = RepoInfoComponent;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ },

/***/ 360:
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = __webpack_require__(1);\nvar Rx_1 = __webpack_require__(59);\nvar http_1 = __webpack_require__(28);\nvar ng2_storage_1 = __webpack_require__(361);\nvar HttpCache = (function () {\n    function HttpCache(http, storage) {\n        this.http = http;\n        this.storage = storage;\n    }\n    HttpCache.prototype.get = function (url) {\n        var _this = this;\n        var cached;\n        if (cached = this.storage.getItem(url)) {\n            return Rx_1.Observable.of(cached);\n        }\n        else {\n            return this.http.get(url)\n                .map(function (resp) {\n                console.log('HTTP RESPONSE:', url, resp);\n                _this.storage.setItem(url, resp.text());\n                return resp.json();\n            });\n        }\n    };\n    HttpCache = __decorate([\n        core_1.Injectable(), \n        __metadata('design:paramtypes', [http_1.Http, ng2_storage_1.Ng2Storage])\n    ], HttpCache);\n    return HttpCache;\n}());\nexports.HttpCache = HttpCache;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvaHR0cC1jYWNoZS50cz9hZTU3Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQSxpQ0FBeUIsQ0FBZSxDQUFDO0FBQ3pDLCtCQUF5QixFQUFTLENBQUM7QUFDbkMsaUNBQW1CLEVBQWUsQ0FBQztBQUNuQyx3Q0FBeUIsR0FBZSxDQUFDO0FBR3pDO0lBQ0UsbUJBQ1UsSUFBVSxFQUNWLE9BQW1CO1FBRG5CLFNBQUksR0FBSixJQUFJLENBQU07UUFDVixZQUFPLEdBQVAsT0FBTyxDQUFZO0lBQzFCLENBQUM7SUFFSix1QkFBRyxHQUFILFVBQUksR0FBVztRQUFmLGlCQVlDO1FBWEMsSUFBSSxNQUFXLENBQUM7UUFDaEIsRUFBRSxDQUFDLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUN2QyxNQUFNLENBQUMsZUFBVSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUMvQixDQUFDO1FBQUMsSUFBSSxDQUFDLENBQUM7WUFDTixNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDO2lCQUN0QixHQUFHLENBQUMsY0FBSTtnQkFDUCxPQUFPLENBQUMsR0FBRyxDQUFDLGdCQUFnQixFQUFFLEdBQUcsRUFBRSxJQUFJLENBQUMsQ0FBQztnQkFDekMsS0FBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDO2dCQUN2QyxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDO1lBQ3JCLENBQUMsQ0FBQyxDQUFDO1FBQ1AsQ0FBQztJQUNILENBQUM7SUFuQkg7UUFBQyxpQkFBVSxFQUFFOztpQkFBQTtJQW9CYixnQkFBQztBQUFELENBQUM7QUFuQlksaUJBQVMsWUFtQnJCIiwiZmlsZSI6IjM2MC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7SW5qZWN0YWJsZX0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7T2JzZXJ2YWJsZX0gZnJvbSBcInJ4anMvUnhcIjtcbmltcG9ydCB7SHR0cH0gZnJvbSBcIkBhbmd1bGFyL2h0dHBcIjtcbmltcG9ydCB7TmcyU3RvcmFnZX0gZnJvbSBcIi4vbmcyLXN0b3JhZ2VcIjtcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIEh0dHBDYWNoZSB7XG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgaHR0cDogSHR0cCxcbiAgICBwcml2YXRlIHN0b3JhZ2U6IE5nMlN0b3JhZ2VcbiAgKSB7fVxuXG4gIGdldCh1cmw6IHN0cmluZyk6IE9ic2VydmFibGU8YW55PiB7XG4gICAgbGV0IGNhY2hlZDogYW55O1xuICAgIGlmIChjYWNoZWQgPSB0aGlzLnN0b3JhZ2UuZ2V0SXRlbSh1cmwpKSB7XG4gICAgICByZXR1cm4gT2JzZXJ2YWJsZS5vZihjYWNoZWQpO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gdGhpcy5odHRwLmdldCh1cmwpXG4gICAgICAgIC5tYXAocmVzcCA9PiB7XG4gICAgICAgICAgY29uc29sZS5sb2coJ0hUVFAgUkVTUE9OU0U6JywgdXJsLCByZXNwKTtcbiAgICAgICAgICB0aGlzLnN0b3JhZ2Uuc2V0SXRlbSh1cmwsIHJlc3AudGV4dCgpKTtcbiAgICAgICAgICByZXR1cm4gcmVzcC5qc29uKCk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgfVxufVxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vfi9hbmd1bGFyMi10ZW1wbGF0ZS1sb2FkZXIhLi9hcHAvaHR0cC1jYWNoZS50c1xuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=");

/***/ },

/***/ 361:
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = __webpack_require__(1);\nvar MemoryStorage = (function () {\n    function MemoryStorage() {\n        this.data = {};\n    }\n    Object.defineProperty(MemoryStorage.prototype, \"length\", {\n        get: function () { return Object.keys(this.data).length; },\n        enumerable: true,\n        configurable: true\n    });\n    MemoryStorage.prototype.getItem = function (key) { return this.data[key]; };\n    MemoryStorage.prototype.setItem = function (key, value) { this.data[key] = value; };\n    MemoryStorage.prototype.removeItem = function (key) { delete this.data[key]; };\n    MemoryStorage.prototype.clear = function () { this.data = {}; };\n    MemoryStorage.prototype.key = function (num) { return Object.keys(this.data)[num]; };\n    return MemoryStorage;\n}());\nvar Ng2Storage = (function () {\n    function Ng2Storage() {\n        // preference && (this.preference = preference);   //'localStorage' or 'sessionStorage'\n        this.preference = 'sessionStorage';\n        if (this.preference == 'localStorage' && this.hasStorage('localStorage')) {\n            this.storage = window.localStorage;\n        }\n        else if (this.preference == 'sessionStorage' && this.hasStorage('sessionStorage')) {\n            this.storage = window.sessionStorage;\n        }\n        else {\n            this.storage = new MemoryStorage();\n        }\n    }\n    Object.defineProperty(Ng2Storage.prototype, \"length\", {\n        get: function () { return this.storage.length; },\n        enumerable: true,\n        configurable: true\n    });\n    Ng2Storage.prototype.getItem = function (key) {\n        var strValue = this.storage.getItem(key);\n        try {\n            return JSON.parse(strValue);\n        }\n        catch (e) {\n            return strValue;\n        }\n    };\n    Ng2Storage.prototype.setItem = function (key, value) {\n        var strValue = typeof value === 'object' ? JSON.stringify(value) : value.toString();\n        this.storage.setItem(key, strValue);\n    };\n    Ng2Storage.prototype.removeItem = function (key) { this.storage.removeItem(key); };\n    Ng2Storage.prototype.clear = function () { this.storage.clear(); };\n    Ng2Storage.prototype.hasStorage = function (name) {\n        try {\n            window[name].setItem('test', '1');\n            window[name].removeItem('test');\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    };\n    Ng2Storage = __decorate([\n        core_1.Injectable(), \n        __metadata('design:paramtypes', [])\n    ], Ng2Storage);\n    return Ng2Storage;\n}());\nexports.Ng2Storage = Ng2Storage;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvbmcyLXN0b3JhZ2UudHM/MWJhOCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUEsaUNBQXlCLENBQWUsQ0FBQztBQUV6QztJQUFBO1FBQ0UsU0FBSSxHQUFRLEVBQUUsQ0FBQztJQU9qQixDQUFDO0lBTkMsc0JBQUksaUNBQU07YUFBVixjQUF5QyxNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQzs7O09BQUE7SUFDaEYsK0JBQU8sR0FBUCxVQUFRLEdBQVcsSUFBc0IsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ2pFLCtCQUFPLEdBQVAsVUFBUSxHQUFXLEVBQUUsS0FBVSxJQUFVLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsS0FBSyxDQUFDLENBQUMsQ0FBQztJQUNsRSxrQ0FBVSxHQUFWLFVBQVcsR0FBVyxJQUFtQixPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ2pFLDZCQUFLLEdBQUwsY0FBeUMsSUFBSSxDQUFDLElBQUksR0FBRyxFQUFFLEVBQUMsQ0FBQztJQUN6RCwyQkFBRyxHQUFILFVBQUksR0FBVyxJQUEwQixNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ2hGLG9CQUFDO0FBQUQsQ0FBQztBQUdEO0lBSUU7UUFDRSx1RkFBdUY7UUFKekYsZUFBVSxHQUFRLGdCQUFnQixDQUFDO1FBTWpDLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxVQUFVLElBQUksY0FBYyxJQUFJLElBQUksQ0FBQyxVQUFVLENBQUMsY0FBYyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ3pFLElBQUksQ0FBQyxPQUFPLEdBQUcsTUFBTSxDQUFDLFlBQVk7UUFDcEMsQ0FBQztRQUFDLElBQUksQ0FBQyxFQUFFLEVBQUMsSUFBSSxDQUFDLFVBQVUsSUFBSSxnQkFBZ0IsSUFBSSxJQUFJLENBQUMsVUFBVSxDQUFDLGdCQUFnQixDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ25GLElBQUksQ0FBQyxPQUFPLEdBQUcsTUFBTSxDQUFDLGNBQWM7UUFDdEMsQ0FBQztRQUFDLElBQUksQ0FBQyxDQUFDO1lBQ04sSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLGFBQWEsRUFBRTtRQUNwQyxDQUFDO0lBQ0gsQ0FBQztJQUVELHNCQUFJLDhCQUFNO2FBQVYsY0FBeUMsTUFBTSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQzs7O09BQUE7SUFDdEUsNEJBQU8sR0FBUCxVQUFRLEdBQVE7UUFDZCxJQUFJLFFBQVEsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUN6QyxJQUFJLENBQUM7WUFDSCxNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUM5QixDQUFFO1FBQUEsS0FBSyxFQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDVixNQUFNLENBQUMsUUFBUSxDQUFDO1FBQ2xCLENBQUM7SUFDSCxDQUFDO0lBQ0QsNEJBQU8sR0FBUCxVQUFRLEdBQVcsRUFBRSxLQUFVO1FBQzdCLElBQUksUUFBUSxHQUFHLE9BQU8sS0FBSyxLQUFLLFFBQVEsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxHQUFHLEtBQUssQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUNwRixJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsUUFBUSxDQUFDLENBQUM7SUFDdEMsQ0FBQztJQUNELCtCQUFVLEdBQVYsVUFBVyxHQUFXLElBQW1CLElBQUksQ0FBQyxPQUFPLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUN4RSwwQkFBSyxHQUFMLGNBQXlDLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQztJQUV4RCwrQkFBVSxHQUFsQixVQUFtQixJQUFZO1FBQzdCLElBQUksQ0FBQztZQUNILE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxPQUFPLENBQUMsTUFBTSxFQUFFLEdBQUcsQ0FBQyxDQUFDO1lBQ2xDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDLENBQUM7WUFDaEMsTUFBTSxDQUFDLElBQUk7UUFDYixDQUFFO1FBQUEsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNYLE1BQU0sQ0FBQyxLQUFLO1FBQ2QsQ0FBQztJQUNILENBQUM7SUF6Q0g7UUFBQyxpQkFBVSxFQUFFOztrQkFBQTtJQTBDYixpQkFBQztBQUFELENBQUM7QUF6Q1ksa0JBQVUsYUF5Q3RCIiwiZmlsZSI6IjM2MS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7SW5qZWN0YWJsZX0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcblxuY2xhc3MgTWVtb3J5U3RvcmFnZSB7XG4gIGRhdGE6IGFueSA9IHt9O1xuICBnZXQgbGVuZ3RoKCk6IG51bWJlciAgICAgICAgICAgICAgICAgICB7IHJldHVybiBPYmplY3Qua2V5cyh0aGlzLmRhdGEpLmxlbmd0aDsgfVxuICBnZXRJdGVtKGtleTogc3RyaW5nKSAgICAgICAgICAgICAgICAgICB7IHJldHVybiB0aGlzLmRhdGFba2V5XTsgfVxuICBzZXRJdGVtKGtleTogc3RyaW5nLCB2YWx1ZTogYW55KTogdm9pZCB7IHRoaXMuZGF0YVtrZXldID0gdmFsdWU7IH1cbiAgcmVtb3ZlSXRlbShrZXk6IHN0cmluZyk6IHZvaWQgICAgICAgICAgeyBkZWxldGUgdGhpcy5kYXRhW2tleV07IH1cbiAgY2xlYXIoKTogdm9pZCAgICAgICAgICAgICAgICAgICAgICAgICAgeyB0aGlzLmRhdGEgPSB7fSB9XG4gIGtleShudW06IG51bWJlcik6IHN0cmluZyAgICAgICAgICAgICAgIHsgcmV0dXJuIE9iamVjdC5rZXlzKHRoaXMuZGF0YSlbbnVtXTsgfVxufVxuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgTmcyU3RvcmFnZSB7XG4gIHByZWZlcmVuY2U6IGFueSA9ICdzZXNzaW9uU3RvcmFnZSc7XG4gIHN0b3JhZ2U6IGFueTtcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICAvLyBwcmVmZXJlbmNlICYmICh0aGlzLnByZWZlcmVuY2UgPSBwcmVmZXJlbmNlKTsgICAvLydsb2NhbFN0b3JhZ2UnIG9yICdzZXNzaW9uU3RvcmFnZSdcblxuICAgIGlmICh0aGlzLnByZWZlcmVuY2UgPT0gJ2xvY2FsU3RvcmFnZScgJiYgdGhpcy5oYXNTdG9yYWdlKCdsb2NhbFN0b3JhZ2UnKSkge1xuICAgICAgdGhpcy5zdG9yYWdlID0gd2luZG93LmxvY2FsU3RvcmFnZVxuICAgIH0gZWxzZSBpZih0aGlzLnByZWZlcmVuY2UgPT0gJ3Nlc3Npb25TdG9yYWdlJyAmJiB0aGlzLmhhc1N0b3JhZ2UoJ3Nlc3Npb25TdG9yYWdlJykpIHtcbiAgICAgIHRoaXMuc3RvcmFnZSA9IHdpbmRvdy5zZXNzaW9uU3RvcmFnZVxuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLnN0b3JhZ2UgPSBuZXcgTWVtb3J5U3RvcmFnZSgpXG4gICAgfVxuICB9XG5cbiAgZ2V0IGxlbmd0aCgpOiBudW1iZXIgICAgICAgICAgICAgICAgICAgeyByZXR1cm4gdGhpcy5zdG9yYWdlLmxlbmd0aDsgfVxuICBnZXRJdGVtKGtleTogYW55KSAgICAgICAgICAgICAgICAgICB7XG4gICAgbGV0IHN0clZhbHVlID0gdGhpcy5zdG9yYWdlLmdldEl0ZW0oa2V5KTtcbiAgICB0cnkge1xuICAgICAgcmV0dXJuIEpTT04ucGFyc2Uoc3RyVmFsdWUpO1xuICAgIH0gY2F0Y2goZSkge1xuICAgICAgcmV0dXJuIHN0clZhbHVlO1xuICAgIH1cbiAgfVxuICBzZXRJdGVtKGtleTogc3RyaW5nLCB2YWx1ZTogYW55KTogdm9pZCB7XG4gICAgbGV0IHN0clZhbHVlID0gdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyA/IEpTT04uc3RyaW5naWZ5KHZhbHVlKSA6IHZhbHVlLnRvU3RyaW5nKCk7XG4gICAgdGhpcy5zdG9yYWdlLnNldEl0ZW0oa2V5LCBzdHJWYWx1ZSk7XG4gIH1cbiAgcmVtb3ZlSXRlbShrZXk6IHN0cmluZyk6IHZvaWQgICAgICAgICAgeyB0aGlzLnN0b3JhZ2UucmVtb3ZlSXRlbShrZXkpOyB9XG4gIGNsZWFyKCk6IHZvaWQgICAgICAgICAgICAgICAgICAgICAgICAgIHsgdGhpcy5zdG9yYWdlLmNsZWFyKCkgIH1cblxuICBwcml2YXRlIGhhc1N0b3JhZ2UobmFtZTogc3RyaW5nKSB7XG4gICAgdHJ5IHtcbiAgICAgIHdpbmRvd1tuYW1lXS5zZXRJdGVtKCd0ZXN0JywgJzEnKTtcbiAgICAgIHdpbmRvd1tuYW1lXS5yZW1vdmVJdGVtKCd0ZXN0Jyk7XG4gICAgICByZXR1cm4gdHJ1ZVxuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIHJldHVybiBmYWxzZVxuICAgIH1cbiAgfVxufVxuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9+L2FuZ3VsYXIyLXRlbXBsYXRlLWxvYWRlciEuL2FwcC9uZzItc3RvcmFnZS50c1xuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=");

/***/ },

/***/ 362:
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\nvar router_1 = __webpack_require__(30);\nvar components_route_1 = __webpack_require__(363);\nvar getting_started_component_1 = __webpack_require__(378);\nexports.routes = [\n    { path: 'getting-started', component: getting_started_component_1.GettingStartedComponent }\n].concat(components_route_1.ComponentsRoutes, [\n    { path: '', redirectTo: '/getting-started', pathMatch: 'full' }\n]);\nexports.APP_ROUTER_PROVIDERS = router_1.RouterModule.forRoot(exports.routes);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvYXBwLnJvdXRlcy50cz8xYWUwIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxtQ0FBcUMsRUFBaUIsQ0FBQztBQUd2RCw2Q0FBNEMsR0FBc0MsQ0FBQztBQUNuRixzREFBNEMsR0FBNkIsQ0FBQztBQUc3RCxjQUFNLEdBQVc7SUFDNUIsRUFBRSxJQUFJLEVBQUUsaUJBQWlCLEVBQUUsU0FBUyxFQUFFLG1EQUF1QixFQUFDO1NBQzNELG1DQUFnQjtJQUNuQixFQUFFLElBQUksRUFBRSxFQUFFLEVBQUcsVUFBVSxFQUFFLGtCQUFrQixFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQUM7RUFDaEUsQ0FBQztBQUVXLDRCQUFvQixHQUF3QixxQkFBWSxDQUFDLE9BQU8sQ0FBQyxjQUFNLENBQUMsQ0FBQyIsImZpbGUiOiIzNjIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSb3V0ZXMsIFJvdXRlck1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XG5pbXBvcnQgeyBNb2R1bGVXaXRoUHJvdmlkZXJzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IENvbXBvbmVudHNSb3V0ZXMgfSAgICAgICAgICAgIGZyb20gXCIuL25nMi11aS1jb21wb25lbnRzL2NvbXBvbmVudHMucm91dGVcIjtcbmltcG9ydCB7IEdldHRpbmdTdGFydGVkQ29tcG9uZW50IH0gICAgIGZyb20gXCIuL2dldHRpbmctc3RhcnRlZC5jb21wb25lbnRcIjtcblxuXG5leHBvcnQgY29uc3Qgcm91dGVzOiBSb3V0ZXMgPSBbXG4gIHsgcGF0aDogJ2dldHRpbmctc3RhcnRlZCcsIGNvbXBvbmVudDogR2V0dGluZ1N0YXJ0ZWRDb21wb25lbnR9LFxuICAuLi5Db21wb25lbnRzUm91dGVzLFxuICB7IHBhdGg6ICcnLCAgcmVkaXJlY3RUbzogJy9nZXR0aW5nLXN0YXJ0ZWQnLCBwYXRoTWF0Y2g6ICdmdWxsJ31cbl07XG5cbmV4cG9ydCBjb25zdCBBUFBfUk9VVEVSX1BST1ZJREVSUzogTW9kdWxlV2l0aFByb3ZpZGVycyA9IFJvdXRlck1vZHVsZS5mb3JSb290KHJvdXRlcyk7XG5cblxuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9+L2FuZ3VsYXIyLXRlbXBsYXRlLWxvYWRlciEuL2FwcC9hcHAucm91dGVzLnRzXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==");

/***/ },

/***/ 363:
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\nvar accordion_component_1 = __webpack_require__(364);\nvar datetime_picker_component_1 = __webpack_require__(365);\nvar google_map_component_1 = __webpack_require__(366);\nvar infinite_list_component_1 = __webpack_require__(367);\nvar overlay_component_1 = __webpack_require__(368);\nvar parallax_scroll_component_1 = __webpack_require__(369);\nvar popup_component_1 = __webpack_require__(370);\nvar scrollable_component_1 = __webpack_require__(371);\nvar sticky_component_1 = __webpack_require__(372);\nvar tab_component_1 = __webpack_require__(373);\nvar tooltip_component_1 = __webpack_require__(374);\nvar auto_complete_component_1 = __webpack_require__(375);\nvar menu_component_1 = __webpack_require__(376);\nvar sortable_component_1 = __webpack_require__(377);\nexports.ComponentsRoutes = [\n    { path: 'auto-complete', component: auto_complete_component_1.AutoCompleteComponent },\n    { path: 'datetime-picker', component: datetime_picker_component_1.DatetimePickerComponent },\n    { path: 'google-map', component: google_map_component_1.GoogleMapComponent },\n    { path: 'infinite-list', component: infinite_list_component_1.InfiniteListComponent },\n    { path: 'tab', component: tab_component_1.TabComponent },\n    { path: 'accordion', component: accordion_component_1.AccordionComponent },\n    { path: 'tooltip', component: tooltip_component_1.TooltipComponent },\n    { path: 'menu', component: menu_component_1.MenuComponent },\n    { path: 'overlay', component: overlay_component_1.OverlayComponent },\n    { path: 'parallax', component: parallax_scroll_component_1.ParallaxScrollComponent },\n    { path: 'popup', component: popup_component_1.PopupComponent },\n    { path: 'scrollable', component: scrollable_component_1.ScrollableComponent },\n    { path: 'sticky', component: sticky_component_1.StickyComponent },\n    { path: 'sortable', component: sortable_component_1.SortableComponent }\n];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvbmcyLXVpLWNvbXBvbmVudHMvY29tcG9uZW50cy5yb3V0ZS50cz85ZWVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFFQSxnREFBaUMsR0FBdUIsQ0FBQztBQUN6RCxzREFBc0MsR0FBNkIsQ0FBQztBQUNwRSxpREFBaUMsR0FBd0IsQ0FBQztBQUMxRCxvREFBb0MsR0FBMkIsQ0FBQztBQUNoRSw4Q0FBK0IsR0FBcUIsQ0FBQztBQUNyRCxzREFBc0MsR0FBNkIsQ0FBQztBQUNwRSw0Q0FBNkIsR0FBbUIsQ0FBQztBQUNqRCxpREFBa0MsR0FBd0IsQ0FBQztBQUMzRCw2Q0FBOEIsR0FBb0IsQ0FBQztBQUNuRCwwQ0FBMkIsR0FBaUIsQ0FBQztBQUM3Qyw4Q0FBK0IsR0FBcUIsQ0FBQztBQUNyRCxvREFBb0MsR0FBMkIsQ0FBQztBQUNoRSwyQ0FBNEIsR0FBa0IsQ0FBQztBQUMvQywrQ0FBZ0MsR0FBc0IsQ0FBQztBQUUxQyx3QkFBZ0IsR0FBVztJQUN0QyxFQUFDLElBQUksRUFBRSxlQUFlLEVBQUUsU0FBUyxFQUFFLCtDQUFxQixFQUFDO0lBQ3pELEVBQUMsSUFBSSxFQUFFLGlCQUFpQixFQUFFLFNBQVMsRUFBRSxtREFBdUIsRUFBQztJQUM3RCxFQUFDLElBQUksRUFBRSxZQUFZLEVBQUUsU0FBUyxFQUFFLHlDQUFrQixFQUFDO0lBQ25ELEVBQUMsSUFBSSxFQUFFLGVBQWUsRUFBRSxTQUFTLEVBQUUsK0NBQXFCLEVBQUM7SUFDekQsRUFBQyxJQUFJLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBRSw0QkFBWSxFQUFDO0lBQ3RDLEVBQUMsSUFBSSxFQUFFLFdBQVcsRUFBRSxTQUFTLEVBQUUsd0NBQWtCLEVBQUM7SUFDbEQsRUFBQyxJQUFJLEVBQUUsU0FBUyxFQUFFLFNBQVMsRUFBRSxvQ0FBZ0IsRUFBQztJQUM5QyxFQUFDLElBQUksRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLDhCQUFhLEVBQUM7SUFDeEMsRUFBQyxJQUFJLEVBQUUsU0FBUyxFQUFFLFNBQVMsRUFBRSxvQ0FBZ0IsRUFBQztJQUM5QyxFQUFDLElBQUksRUFBRSxVQUFVLEVBQUUsU0FBUyxFQUFFLG1EQUF1QixFQUFDO0lBQ3RELEVBQUMsSUFBSSxFQUFFLE9BQU8sRUFBRSxTQUFTLEVBQUUsZ0NBQWMsRUFBQztJQUMxQyxFQUFDLElBQUksRUFBRSxZQUFZLEVBQUUsU0FBUyxFQUFFLDBDQUFtQixFQUFDO0lBQ3BELEVBQUMsSUFBSSxFQUFFLFFBQVEsRUFBRSxTQUFTLEVBQUUsa0NBQWUsRUFBQztJQUM1QyxFQUFDLElBQUksRUFBRSxVQUFVLEVBQUUsU0FBUyxFQUFFLHNDQUFpQixFQUFDO0NBQ2pELENBQUMiLCJmaWxlIjoiMzYzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUm91dGVzIH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcblxuaW1wb3J0IHtBY2NvcmRpb25Db21wb25lbnR9IGZyb20gXCIuL2FjY29yZGlvbi5jb21wb25lbnRcIjtcbmltcG9ydCB7RGF0ZXRpbWVQaWNrZXJDb21wb25lbnR9IGZyb20gXCIuL2RhdGV0aW1lLXBpY2tlci5jb21wb25lbnRcIjtcbmltcG9ydCB7R29vZ2xlTWFwQ29tcG9uZW50fSBmcm9tIFwiLi9nb29nbGUtbWFwLmNvbXBvbmVudFwiO1xuaW1wb3J0IHtJbmZpbml0ZUxpc3RDb21wb25lbnR9IGZyb20gXCIuL2luZmluaXRlLWxpc3QuY29tcG9uZW50XCI7XG5pbXBvcnQge092ZXJsYXlDb21wb25lbnR9IGZyb20gXCIuL292ZXJsYXkuY29tcG9uZW50XCI7XG5pbXBvcnQge1BhcmFsbGF4U2Nyb2xsQ29tcG9uZW50fSBmcm9tIFwiLi9wYXJhbGxheC1zY3JvbGwuY29tcG9uZW50XCI7XG5pbXBvcnQge1BvcHVwQ29tcG9uZW50fSBmcm9tIFwiLi9wb3B1cC5jb21wb25lbnRcIjtcbmltcG9ydCB7U2Nyb2xsYWJsZUNvbXBvbmVudH0gZnJvbSBcIi4vc2Nyb2xsYWJsZS5jb21wb25lbnRcIjtcbmltcG9ydCB7U3RpY2t5Q29tcG9uZW50fSBmcm9tIFwiLi9zdGlja3kuY29tcG9uZW50XCI7XG5pbXBvcnQge1RhYkNvbXBvbmVudH0gZnJvbSBcIi4vdGFiLmNvbXBvbmVudFwiO1xuaW1wb3J0IHtUb29sdGlwQ29tcG9uZW50fSBmcm9tIFwiLi90b29sdGlwLmNvbXBvbmVudFwiO1xuaW1wb3J0IHtBdXRvQ29tcGxldGVDb21wb25lbnR9IGZyb20gXCIuL2F1dG8tY29tcGxldGUuY29tcG9uZW50XCI7XG5pbXBvcnQge01lbnVDb21wb25lbnR9IGZyb20gXCIuL21lbnUuY29tcG9uZW50XCI7XG5pbXBvcnQge1NvcnRhYmxlQ29tcG9uZW50fSBmcm9tIFwiLi9zb3J0YWJsZS5jb21wb25lbnRcIjtcblxuZXhwb3J0IGNvbnN0IENvbXBvbmVudHNSb3V0ZXM6IFJvdXRlcyA9IFtcbiAge3BhdGg6ICdhdXRvLWNvbXBsZXRlJywgY29tcG9uZW50OiBBdXRvQ29tcGxldGVDb21wb25lbnR9LFxuICB7cGF0aDogJ2RhdGV0aW1lLXBpY2tlcicsIGNvbXBvbmVudDogRGF0ZXRpbWVQaWNrZXJDb21wb25lbnR9LFxuICB7cGF0aDogJ2dvb2dsZS1tYXAnLCBjb21wb25lbnQ6IEdvb2dsZU1hcENvbXBvbmVudH0sXG4gIHtwYXRoOiAnaW5maW5pdGUtbGlzdCcsIGNvbXBvbmVudDogSW5maW5pdGVMaXN0Q29tcG9uZW50fSxcbiAge3BhdGg6ICd0YWInLCBjb21wb25lbnQ6IFRhYkNvbXBvbmVudH0sXG4gIHtwYXRoOiAnYWNjb3JkaW9uJywgY29tcG9uZW50OiBBY2NvcmRpb25Db21wb25lbnR9LFxuICB7cGF0aDogJ3Rvb2x0aXAnLCBjb21wb25lbnQ6IFRvb2x0aXBDb21wb25lbnR9LFxuICB7cGF0aDogJ21lbnUnLCBjb21wb25lbnQ6IE1lbnVDb21wb25lbnR9LFxuICB7cGF0aDogJ292ZXJsYXknLCBjb21wb25lbnQ6IE92ZXJsYXlDb21wb25lbnR9LFxuICB7cGF0aDogJ3BhcmFsbGF4JywgY29tcG9uZW50OiBQYXJhbGxheFNjcm9sbENvbXBvbmVudH0sXG4gIHtwYXRoOiAncG9wdXAnLCBjb21wb25lbnQ6IFBvcHVwQ29tcG9uZW50fSxcbiAge3BhdGg6ICdzY3JvbGxhYmxlJywgY29tcG9uZW50OiBTY3JvbGxhYmxlQ29tcG9uZW50fSxcbiAge3BhdGg6ICdzdGlja3knLCBjb21wb25lbnQ6IFN0aWNreUNvbXBvbmVudH0sXG4gIHtwYXRoOiAnc29ydGFibGUnLCBjb21wb25lbnQ6IFNvcnRhYmxlQ29tcG9uZW50fVxuXTtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vfi9hbmd1bGFyMi10ZW1wbGF0ZS1sb2FkZXIhLi9hcHAvbmcyLXVpLWNvbXBvbmVudHMvY29tcG9uZW50cy5yb3V0ZS50c1xuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=");

/***/ },

/***/ 364:
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = __webpack_require__(1);\nvar AccordionComponent = (function () {\n    function AccordionComponent() {\n        this.foo = 'foo';\n        this.bar = 'bar';\n    }\n    AccordionComponent.prototype.ngAfterViewInit = function () {\n        window.scroll(0, 0);\n    };\n    AccordionComponent = __decorate([\n        core_1.Component({\n            template: \"\\n    <div class=\\\"container page-title\\\">\\n      <h1>Accordion</h1>\\n    </div>\\n    <div class=\\\"container\\\">\\n      <div ng2-collapsable\\n        selected=\\\"js\\\"\\n        selected-index-class=\\\"selected\\\"\\n        selected-contents-class=\\\"selected\\\">\\n        <div index=\\\"html\\\">HTML</div>\\n        <div contents=\\\"html\\\">HTML {{foo}}</div>\\n        \\n        <div index=\\\"js\\\">Javascript</div>\\n        <div contents=\\\"js\\\">Javascript {{bar}}</div>\\n        \\n        <div index=\\\"css\\\">Css</div>\\n        <div contents=\\\"css\\\">Style Sheet</div>\\n      </div>\\n      <div class=\\\"spacer x2\\\"></div>\\n      <div ng2-tab> \\n        <div class=\\\"tabs\\\">\\n          <div index=\\\"html\\\">HTML</div>\\n          <div index=\\\"js\\\">Javascript</div>\\n        </div>\\n        <div class=\\\"tab-contents\\\">\\n          <div contents=\\\"html\\\">\\n<pre><code class=\\\"language-markup\\\"\\n>&lt;div ng2-collapsable\\n  selected=\\\"js\\\"\\n  selected-index-class=\\\"selected\\\"\\n  selected-contents-class=\\\"selected\\\">\\n  &lt;div index=\\\"html\\\">HTML&lt;/div>\\n  &lt;div contents=\\\"html\\\">HTML &123;&123;foo&125;&125;&lt;/div>\\n  \\n  &lt;div index=\\\"js\\\">Javascript&lt;/div>\\n  &lt;div contents=\\\"js\\\">Javascript &123;&123;bar&125;&125;&lt;/div>\\n  \\n  &lt;div index=\\\"css\\\">Css&lt;/div>\\n  &lt;div contents=\\\"css\\\">Style Sheet&lt;/div>\\n&lt;/div></code></pre>\\n          </div>\\n          <div contents=\\\"js\\\">\\n<pre><code class=\\\"language-javascript\\\"\\n>import &123; Component &125; from '@angular/core';\\n\\n@Component(&123;\\n  templateUr: 'app.html'\\n&125;)\\nexport class AppComponent &123;\\n  foo: any = 'foo';\\n  bar: any = 'bar';\\n&125;</code></pre>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\"\n        }), \n        __metadata('design:paramtypes', [])\n    ], AccordionComponent);\n    return AccordionComponent;\n}());\nexports.AccordionComponent = AccordionComponent;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvbmcyLXVpLWNvbXBvbmVudHMvYWNjb3JkaW9uLmNvbXBvbmVudC50cz83NmQ5Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQSxpQ0FBMEIsQ0FBZSxDQUFDO0FBNEQxQztJQUFBO1FBQ0UsUUFBRyxHQUFRLEtBQUssQ0FBQztRQUNqQixRQUFHLEdBQVEsS0FBSyxDQUFDO0lBS25CLENBQUM7SUFIQyw0Q0FBZSxHQUFmO1FBQ0UsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLENBQUM7SUFDckIsQ0FBQztJQWhFSDtRQUFDLGdCQUFTLENBQUM7WUFDVCxRQUFRLEVBQUUsNHBEQXVERDtTQUNWLENBQUM7OzBCQUFBO0lBUUYseUJBQUM7QUFBRCxDQUFDO0FBUFksMEJBQWtCLHFCQU85QiIsImZpbGUiOiIzNjQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQENvbXBvbmVudCh7XG4gIHRlbXBsYXRlOiBgXG4gICAgPGRpdiBjbGFzcz1cImNvbnRhaW5lciBwYWdlLXRpdGxlXCI+XG4gICAgICA8aDE+QWNjb3JkaW9uPC9oMT5cbiAgICA8L2Rpdj5cbiAgICA8ZGl2IGNsYXNzPVwiY29udGFpbmVyXCI+XG4gICAgICA8ZGl2IG5nMi1jb2xsYXBzYWJsZVxuICAgICAgICBzZWxlY3RlZD1cImpzXCJcbiAgICAgICAgc2VsZWN0ZWQtaW5kZXgtY2xhc3M9XCJzZWxlY3RlZFwiXG4gICAgICAgIHNlbGVjdGVkLWNvbnRlbnRzLWNsYXNzPVwic2VsZWN0ZWRcIj5cbiAgICAgICAgPGRpdiBpbmRleD1cImh0bWxcIj5IVE1MPC9kaXY+XG4gICAgICAgIDxkaXYgY29udGVudHM9XCJodG1sXCI+SFRNTCB7e2Zvb319PC9kaXY+XG4gICAgICAgIFxuICAgICAgICA8ZGl2IGluZGV4PVwianNcIj5KYXZhc2NyaXB0PC9kaXY+XG4gICAgICAgIDxkaXYgY29udGVudHM9XCJqc1wiPkphdmFzY3JpcHQge3tiYXJ9fTwvZGl2PlxuICAgICAgICBcbiAgICAgICAgPGRpdiBpbmRleD1cImNzc1wiPkNzczwvZGl2PlxuICAgICAgICA8ZGl2IGNvbnRlbnRzPVwiY3NzXCI+U3R5bGUgU2hlZXQ8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdiBjbGFzcz1cInNwYWNlciB4MlwiPjwvZGl2PlxuICAgICAgPGRpdiBuZzItdGFiPiBcbiAgICAgICAgPGRpdiBjbGFzcz1cInRhYnNcIj5cbiAgICAgICAgICA8ZGl2IGluZGV4PVwiaHRtbFwiPkhUTUw8L2Rpdj5cbiAgICAgICAgICA8ZGl2IGluZGV4PVwianNcIj5KYXZhc2NyaXB0PC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzPVwidGFiLWNvbnRlbnRzXCI+XG4gICAgICAgICAgPGRpdiBjb250ZW50cz1cImh0bWxcIj5cbjxwcmU+PGNvZGUgY2xhc3M9XCJsYW5ndWFnZS1tYXJrdXBcIlxuPiZsdDtkaXYgbmcyLWNvbGxhcHNhYmxlXG4gIHNlbGVjdGVkPVwianNcIlxuICBzZWxlY3RlZC1pbmRleC1jbGFzcz1cInNlbGVjdGVkXCJcbiAgc2VsZWN0ZWQtY29udGVudHMtY2xhc3M9XCJzZWxlY3RlZFwiPlxuICAmbHQ7ZGl2IGluZGV4PVwiaHRtbFwiPkhUTUwmbHQ7L2Rpdj5cbiAgJmx0O2RpdiBjb250ZW50cz1cImh0bWxcIj5IVE1MICYxMjM7JjEyMztmb28mMTI1OyYxMjU7Jmx0Oy9kaXY+XG4gIFxuICAmbHQ7ZGl2IGluZGV4PVwianNcIj5KYXZhc2NyaXB0Jmx0Oy9kaXY+XG4gICZsdDtkaXYgY29udGVudHM9XCJqc1wiPkphdmFzY3JpcHQgJjEyMzsmMTIzO2JhciYxMjU7JjEyNTsmbHQ7L2Rpdj5cbiAgXG4gICZsdDtkaXYgaW5kZXg9XCJjc3NcIj5Dc3MmbHQ7L2Rpdj5cbiAgJmx0O2RpdiBjb250ZW50cz1cImNzc1wiPlN0eWxlIFNoZWV0Jmx0Oy9kaXY+XG4mbHQ7L2Rpdj48L2NvZGU+PC9wcmU+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPGRpdiBjb250ZW50cz1cImpzXCI+XG48cHJlPjxjb2RlIGNsYXNzPVwibGFuZ3VhZ2UtamF2YXNjcmlwdFwiXG4+aW1wb3J0ICYxMjM7IENvbXBvbmVudCAmMTI1OyBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQENvbXBvbmVudCgmMTIzO1xuICB0ZW1wbGF0ZVVyOiAnYXBwLmh0bWwnXG4mMTI1OylcbmV4cG9ydCBjbGFzcyBBcHBDb21wb25lbnQgJjEyMztcbiAgZm9vOiBhbnkgPSAnZm9vJztcbiAgYmFyOiBhbnkgPSAnYmFyJztcbiYxMjU7PC9jb2RlPjwvcHJlPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PmBcbn0pXG5leHBvcnQgY2xhc3MgQWNjb3JkaW9uQ29tcG9uZW50IHtcbiAgZm9vOiBhbnkgPSAnZm9vJztcbiAgYmFyOiBhbnkgPSAnYmFyJztcblxuICBuZ0FmdGVyVmlld0luaXQoKTogdm9pZCB7XG4gICAgd2luZG93LnNjcm9sbCgwLDApO1xuICB9XG59XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL34vYW5ndWxhcjItdGVtcGxhdGUtbG9hZGVyIS4vYXBwL25nMi11aS1jb21wb25lbnRzL2FjY29yZGlvbi5jb21wb25lbnQudHNcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9");

/***/ },

/***/ 365:
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = __webpack_require__(1);\nvar DatetimePickerComponent = (function () {\n    function DatetimePickerComponent() {\n        this.date1 = new Date(\"2015-01-01\");\n        this.date2 = new Date(\"Thu Jan 01 2015 00:00:00 GMT-0500 (EST)\");\n        this.date3 = '2015-01-01T00:00:00-0400';\n        this.date4 = '2015-01-01';\n        this.gmtDate = '2015-01-01T00:00:00.000Z';\n    }\n    DatetimePickerComponent.prototype.ngAfterViewInit = function () {\n        window.scroll(0, 0);\n    };\n    DatetimePickerComponent = __decorate([\n        core_1.Component({\n            styles: [\"input[ng2-datetime-picker] {width: 300px; height: 24px}\"],\n            template: \"\\n    <div class=\\\"container page-title\\\">\\n      <h1>Datetime Picker</h1>\\n    </div>\\n    \\n    <div class=\\\"container\\\">\\n      <p>\\n        Datetime picker converts input field into datetime selector by simply adding \\\"ng2-datetime-picker\\\" as an attribute.\\n      </p> \\n    \\n      <div class=\\\"spacer x2\\\"></div>\\n      <p><b>myDate</b>: &123;&123;myDate&125;&125;</p>\\n      <input [(ngModel)]=\\\"myDate\\\" ng2-datetime-picker />\\n      <ng2-tab>\\n        <div class=\\\"tabs\\\">\\n           <div index=\\\"html\\\">HTML</div>\\n           <div index=\\\"js\\\">Javascript</div>\\n         </div> \\n         <div class=\\\"tab-contents\\\">\\n           <div contents=\\\"html\\\">\\n<pre><code class=\\\"language-markup\\\"\\n>&lt;input [(ngModel)]=\\\"myDate\\\" ng2-datetime-picker /&gt;</code></pre>\\n           </div>\\n           <div contents=\\\"js\\\">\\n<pre><code class=\\\"language-javascript\\\"\\n>import &123; Component &125; from '@angular/core';\\n\\n@Component(&123;\\n  templateUr: 'app.html'\\n&125;)\\nexport class AppComponent&123;\\n  myDate: string;\\n&125;</code></pre>\\n           </div>\\n         </div>\\n      </ng2-tab>\\n        \\n      <div class=\\\"spacer x2\\\"></div>\\n      <p><b>date1</b>: &123;&123;date1&125;&125;</p>\\n      <input [(ngModel)]=\\\"date1\\\" ng2-datetime-picker date-only=\\\"true\\\" />\\n      <ng2-tab>\\n        <div class=\\\"tabs\\\">\\n           <div index=\\\"html\\\">HTML</div>\\n           <div index=\\\"js\\\">Javascript</div>\\n         </div> \\n         <div class=\\\"tab-contents\\\">\\n           <div contents=\\\"html\\\">\\n<pre><code class=\\\"language-markup\\\"\\n>&lt;input [(ngModel)]=\\\"date1\\\" ng2-datetime-picker\\n       date-only=\\\"true\\\" /&gt;</code></pre>\\n           </div>\\n           <div contents=\\\"js\\\">\\n<pre><code class=\\\"language-javascript\\\"\\n>import &123; Component &125; from '@angular/core';\\n\\n@Component(&123;\\n  templateUr: 'app.html'\\n&125;)\\nexport class AppComponent&123;\\n  date1 = new Date(\\\"2015-01-01\\\");\\n&125;</code></pre>\\n           </div>\\n         </div>\\n      </ng2-tab>\\n        \\n      <div class=\\\"spacer x2\\\"></div>\\n      <p><b>date2</b>: &123;&123;date2&125;&125;</p>\\n      <input [(ngModel)]=\\\"date2\\\" ng2-datetime-picker date-only=\\\"true\\\" />\\n      <ng2-tab>\\n        <div class=\\\"tabs\\\">\\n           <div index=\\\"html\\\">HTML</div>\\n           <div index=\\\"js\\\">Javascript</div>\\n         </div> \\n         <div class=\\\"tab-contents\\\">\\n           <div contents=\\\"html\\\">\\n<pre><code class=\\\"language-markup\\\"\\n>&lt;input [(ngModel)]=\\\"date2\\\" ng2-datetime-picker\\n       date-only=\\\"true\\\" /&gt;</code></pre>\\n           </div>\\n           <div contents=\\\"js\\\">\\n<pre><code class=\\\"language-javascript\\\"\\n>import &123; Component &125; from '@angular/core';\\n\\n@Component(&123;\\n  templateUr: 'app.html'\\n&125;)\\nexport class AppComponent&123;\\n  date2 = new Date(\\\"Thu Jan 01 2015 00:00:00 GMT-0500 (EST)\\\");\\n&125;</code></pre>\\n           </div>\\n         </div>\\n      </ng2-tab>\\n        \\n      <div class=\\\"spacer x2\\\"></div>\\n      <p><b>date3</b>: &123;&123;date3&125;&125;</p>\\n      <input [(ngModel)]=\\\"date3\\\" ng2-datetime-picker close-on-select=\\\"false\\\" />\\n      <ng2-tab>\\n        <div class=\\\"tabs\\\">\\n           <div index=\\\"html\\\">HTML</div>\\n           <div index=\\\"js\\\">Javascript</div>\\n         </div> \\n         <div class=\\\"tab-contents\\\">\\n           <div contents=\\\"html\\\">\\n<pre><code class=\\\"language-markup\\\"\\n>&lt;input  [(ngModel)]=\\\"date3\\\" ng2-datetime-picker\\n       close-on-select=\\\"false\\\" /&gt;</code></pre>\\n           </div>\\n           <div contents=\\\"js\\\">\\n<pre><code class=\\\"language-javascript\\\"\\n>import &123; Component &125; from '@angular/core';\\n\\n@Component(&123;\\n  templateUr: 'app.html'\\n&125;)\\nexport class AppComponent&123;\\n  date3 = '2015-01-01T00:00:00-0400';\\n&125;</code></pre>\\n           </div>\\n         </div>\\n      </ng2-tab>\\n        \\n      <div class=\\\"spacer x2\\\"></div>\\n      <p><b>date4</b>: &123;&123;date4&125;&125;</p>\\n      <input [(ngModel)]=\\\"date4\\\" ng2-datetime-picker hour=\\\"23\\\" minute='59'/>\\n      <ng2-tab>\\n        <div class=\\\"tabs\\\">\\n           <div index=\\\"html\\\">HTML</div>\\n           <div index=\\\"js\\\">Javascript</div>\\n         </div> \\n         <div class=\\\"tab-contents\\\">\\n           <div contents=\\\"html\\\">\\n<pre><code class=\\\"language-markup\\\"\\n>&lt;input ng-model=\\\"date4\\\" ng2-datetime-picker\\n       hour=\\\"23\\\"\\n       minute='59'/&gt; </code></pre>\\n           </div>\\n           <div contents=\\\"js\\\">\\n<pre><code class=\\\"language-javascript\\\"\\n>import &123; Component &125; from '@angular/core';\\n\\n@Component(&123;\\n  templateUr: 'app.html'\\n&125;)\\nexport class AppComponent&123;\\n  date4 = '2015-01-01';\\n&125;</code></pre>\\n           </div>\\n         </div>\\n      </ng2-tab>\\n        \\n      <div class=\\\"spacer x2\\\"></div>\\n      <p><b>gmtDate</b>: &123;&123;gmtDate&125;&125;</p>\\n      <input [(ngModel)]=\\\"gmtDate\\\" ng2-datetime-picker />\\n      <ng2-tab>\\n        <div class=\\\"tabs\\\">\\n           <div index=\\\"html\\\">HTML</div>\\n           <div index=\\\"js\\\">Javascript</div>\\n         </div> \\n         <div class=\\\"tab-contents\\\">\\n           <div contents=\\\"html\\\">\\n<pre><code class=\\\"language-markup\\\"\\n>&lt;input [(ngModel)]=\\\"gmtDate\\\" ng2-datetime-picker /&gt; </code></pre>\\n           </div>\\n           <div contents=\\\"js\\\">\\n<pre><code class=\\\"language-javascript\\\"\\n>import &123; Component &125; from '@angular/core';\\n\\n@Component(&123;\\n  templateUr: 'app.html'\\n&125;)\\nexport class AppComponent&123;\\n  gmtDate = '2015-01-01T00:00:00.000Z';\\n&125;</code></pre>\\n           </div>\\n         </div>\\n      </ng2-tab>\\n        \\n    </div>\"\n        }), \n        __metadata('design:paramtypes', [])\n    ], DatetimePickerComponent);\n    return DatetimePickerComponent;\n}());\nexports.DatetimePickerComponent = DatetimePickerComponent;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ },

/***/ 366:
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = __webpack_require__(1);\nvar GoogleMapComponent = (function () {\n    function GoogleMapComponent() {\n        this.positions = [];\n        this.tab1 = 1;\n        this.tab2 = 1;\n        this.tab3 = 1;\n        this.tab4 = 1;\n    }\n    GoogleMapComponent.prototype.ngAfterViewInit = function () {\n        window.scroll(0, 0);\n    };\n    GoogleMapComponent.prototype.clicked = function (marker) {\n        marker.map.mapComponent.openInfoWindow('iw', marker, {\n            lat: marker.getPosition().lat(), lng: marker.getPosition().lng()\n        });\n    };\n    GoogleMapComponent.prototype.showRandomMarkers = function () {\n        var randomLat, randomLng;\n        this.positions = [];\n        for (var i = 0; i < 9; i++) {\n            randomLat = Math.random() * (43.7399 - 43.7300) + 43.7300;\n            randomLng = Math.random() * (-79.7600 - -79.7699) + -79.7699;\n            this.positions.push([randomLat, randomLng]);\n        }\n    };\n    GoogleMapComponent = __decorate([\n        core_1.Component({\n            template: \"\\n    <div class=\\\"container page-title\\\" xmlns=\\\"http://www.w3.org/1999/html\\\">\\n      <h1>Google Map</h1>\\n    </div>\\n    <div class=\\\"container\\\">\\n    \\n      <div class=\\\"spacer x3\\\"></div>\\n      <h2>Markers with *ngFor</h2>\\n        <ng2-map zoom=\\\"13\\\" center=\\\"Brampton, Canada\\\" scrollwheel=\\\"false\\\">\\n          <marker *ngFor=\\\"let pos of positions\\\" [position]=\\\"pos\\\"></marker>\\n        </ng2-map>\\n        <button (click)=\\\"showRandomMarkers()\\\">Show Random Markers</button>\\n      <div>\\n        <div class=\\\"tabs\\\">\\n          <div class=\\\"tab\\\" (click)=\\\"tab3=1\\\" [class.selected]=\\\"tab3===1\\\">html</div>\\n          <div class=\\\"tab\\\" (click)=\\\"tab3=2\\\" [class.selected]=\\\"tab3===2\\\">javascript</div>\\n        </div>\\n        <div class=\\\"tab-contents\\\">\\n          <div *ngIf=\\\"tab3===1\\\">\\n            <pre><code class=\\\"language-markup\\\"\\n>&lt;ng2-map zoom=\\\"13\\\" center=\\\"Brampton, Canada\\\" scrollwheel=\\\"false\\\">\\n  &lt;marker *ngFor=\\\"let pos of positions\\\" [position]=\\\"pos\\\">&lt;/marker>\\n&lt;/ng2-map>\\n&lt;button (click)=\\\"showRandomMarkers()\\\">Show Random Markers&lt;/button></code></pre>\\n          </div>\\n          <div *ngIf=\\\"tab3===2\\\">\\n            <pre><code class=\\\"language-markup\\\"\\n            >import &123; Component &125; from '@angular/core';\\n\\n@Component(&123;\\n  template: require('./app.html')\\n&125;)\\nclass AppCompoment &123;\\n  public positions=[];\\n  \\n  showRandomMarkers() &123;\\n    let randomLat: number, randomLng: number;\\n\\n    this.positions = [];\\n    for (let i=0; i<9; i++) &123;\\n      randomLat = Math.random() * (43.7399 - 43.7300) + 43.7300;\\n      randomLng = Math.random() * (-79.7600 - -79.7699) + -79.7699;\\n      this.positions.push([randomLat, randomLng]);\\n    &125;\\n  &125;\\n&125;</code></pre>\\n          </div>\\n        </div>\\n      </div>\\n      \\n      <div class=\\\"spacer x3\\\"></div>\\n      <h2>Simple Map</h2>\\n      <div>\\n        <div class=\\\"tabs\\\">\\n          <div class=\\\"tab\\\" (click)=\\\"tab4=1\\\" [class.selected]=\\\"tab4===1\\\">html</div>\\n          <div class=\\\"tab\\\" (click)=\\\"tab4=2\\\" [class.selected]=\\\"tab4===2\\\">javascript</div>\\n        </div>\\n        <div class=\\\"tab-contents\\\">\\n          <div *ngIf=\\\"tab4===1\\\">\\n            <pre><code class=\\\"language-markup\\\"\\n            >&lt;ng2-map center=\\\"Brampton, Canada\\\" scrollwheel=\\\"false\\\">&lt;/ng2-map></code></pre>\\n          </div>\\n          <div *ngIf=\\\"tab4===2\\\">\\n            <pre><code class=\\\"language-markup\\\"\\n            >import &123; Component &125; from '@angular/core';\\n\\n@Component(&123;\\n  template: require('./app.html')\\n&125;)\\nclass AppCompoment &123;&125;</code></pre>\\n          </div>\\n        </div>\\n      </div>\\n          \\n      <div class=\\\"spacer x3\\\"></div>\\n      <h2>Simple Marker</h2>\\n      <div>\\n        <div class=\\\"tabs\\\">\\n          <div class=\\\"tab\\\" (click)=\\\"tab1=1\\\" [class.selected]=\\\"tab1===1\\\">html</div>\\n          <div class=\\\"tab\\\" (click)=\\\"tab1=2\\\" [class.selected]=\\\"tab1===2\\\">javascript</div>\\n        </div>\\n        <div class=\\\"tab-contents\\\">\\n          <div *ngIf=\\\"tab1===1\\\">\\n            <pre><code class=\\\"language-markup\\\">&lt;ng2-map center=\\\"Brampton, Canada\\\" >\\n&lt;marker position=\\\"Brampton, Canada\\\"\\n  (markerDragstart)=\\\"log($event, 'dragstart')\\\"\\n  (markerDragend)=\\\"log($event, 'dragend')\\\"\\n  draggable=\\\"true\\\">&lt;/marker>\\n&lt;/ng2-map></code></pre>\\n          </div>\\n          <div *ngIf=\\\"tab1===2\\\">\\n            <pre><code class=\\\"language-markup\\\"\\n            >import &123; Component &125; from '@angular/core';\\n\\n@Component(&123;\\n  template: require('./app.html')\\n&125;)\\nclass AppCompoment &123;\\n  log(marker, str) &123;\\n    console.log('event .... >', marker, str);\\n  &125;\\n&125;</code></pre>\\n          </div>\\n        </div>\\n      </div>\\n      \\n      <div class=\\\"spacer x3\\\"></div>\\n      <h2>Simple InfoWindow</h2>\\n      <div>\\n        <div class=\\\"tabs\\\">\\n          <div class=\\\"tab\\\" (click)=\\\"tab2=1\\\" [class.selected]=\\\"tab2===1\\\">html</div>\\n          <div class=\\\"tab\\\" (click)=\\\"tab2=2\\\" [class.selected]=\\\"tab2===2\\\">javascript</div>\\n        </div>\\n        <div class=\\\"tab-contents\\\">\\n          <div id=\\\"html\\\" *ngIf=\\\"tab2===1\\\">\\n<pre><code class=\\\"language-markup\\\"\\n>&lt;ng2-map center=\\\"Brampton, Canada\\\">\\n  &lt;marker position=\\\"Brampton, Canada\\\" draggable=\\\"true\\\" (markerClick)=\\\"clicked($event)\\\">&lt;/marker>\\n  &lt;info-window id=\\\"iw\\\">\\n    lat: [[lat]], lng: [[lng]]\\n  &lt;/info-window>\\n&lt;/ng2-map></code></pre>\\n          </div>\\n          <div id=\\\"javascript\\\" *ngIf=\\\"tab2===2\\\">\\n<pre><code class=\\\"language-javascript\\\"\\n>import &123; Component &125; from '@angular/core';\\n\\n@Component(&123;\\n  template: require('./app.html')\\n&125;)\\nclass AppCompoment &123;\\n  clicked(marker) &123;\\n    marker.map.mapComponent.openInfoWindow('iw', marker, &123;\\n      lat: marker.getPosition().lat(), lng: marker.getPosition().lng()\\n    &125;)\\n  &125;\\n&125;</code></pre>\\n          </div>\\n        </div>\\n      </div>\\n     \\n    </div>\"\n        }), \n        __metadata('design:paramtypes', [])\n    ], GoogleMapComponent);\n    return GoogleMapComponent;\n}());\nexports.GoogleMapComponent = GoogleMapComponent;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ },

/***/ 367:
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = __webpack_require__(1);\nvar InfiniteListComponent = (function () {\n    function InfiniteListComponent() {\n        this.set1 = {\n            limit: 10, offset: 0, endOfList: false, loadingInProgress: false, list: []\n        };\n        this.set2 = {\n            limit: 10, offset: 0, endOfList: false, loadingInProgress: false, list: []\n        };\n    }\n    InfiniteListComponent.prototype.ngAfterViewInit = function () {\n        window.scroll(0, 0);\n    };\n    InfiniteListComponent.prototype.loadMore = function (data) {\n        if (!data.loadingInProgress) {\n            if (data.offset > 99) {\n                data.endOfList = true;\n            }\n            else {\n                setTimeout(function () { return data.loadingInProgress = true; });\n                setTimeout(function () {\n                    var max = data.offset + data.limit;\n                    for (var i = data.offset; i < max; i++) {\n                        data.list.push(i);\n                    }\n                    data.offset = max;\n                    data.loadingInProgress = false;\n                }, 1000);\n            }\n        }\n    };\n    InfiniteListComponent = __decorate([\n        core_1.Component({\n            template: \"\\n    <div class=\\\"container page-title\\\" xmlns=\\\"http://www.w3.org/1999/html\\\">\\n      <h1>Infinite List</h1>\\n    </div>\\n    <div class=\\\"container\\\">\\n    \\n      <h2>Vertically</h2>\\n      <ul ng2-infinite-list  class=\\\"infinite-list\\\"\\n          (endVisible)=\\\"loadMore(set1)\\\">\\n        <li *ngFor=\\\"let item of set1.list\\\">{{item+1}}</li>\\n        <div ng2-infinite-list-end>\\n          <div *ngIf=\\\"set1.loadingInProgress\\\">Loading</div>\\n          <div *ngIf=\\\"set1.endOfList\\\">End Of List</div>\\n        </div>\\n      </ul>\\n      loading in progress : {{set1.loadingInProgress}};\\n      <ng2-tab>\\n        <div class=\\\"tabs\\\">\\n           <div index=\\\"html\\\">HTML</div>\\n           <div index=\\\"js\\\">Javascript</div>\\n         </div> \\n         <div class=\\\"tab-contents\\\">\\n           <div contents=\\\"html\\\">\\n<pre><code class=\\\"language-markup\\\"\\n>&lt;ul ng2-infinite-list  class=\\\"infinite-list\\\"\\n          (endVisible)=\\\"loadMore(set1)\\\">\\n        &lt;li *ngFor=\\\"let item of set1.list\\\">&123;&123;item+1&125;&125;&lt;/li>\\n        &lt;div ng2-infinite-list-end>\\n          &lt;div *ngIf=\\\"set1.loadingInProgress\\\">Loading&lt;/div>\\n          &lt;div *ngIf=\\\"set1.endOfList\\\">End Of List&lt;/div>\\n        &lt;/div>\\n      &lt;/ul></code></pre>\\n           </div>\\n           <div contents=\\\"js\\\">\\n<pre><code class=\\\"language-javascript\\\"\\n>import &123; Component &125; from '@angular/core';\\n\\n@Component(&123;\\n  templates: 'app.tpl.html'\\n&125;)  \\nexport class AppComponent &123;\\n\\n  set1: any = &123;\\n    limit: 10, offset: 0, endOfList: false, loadingInProgress: false, list: []\\n  &125;;\\n\\n  loadMore(data: any): void &123;\\n    if (!data.loadingInProgress) &123;\\n      if (data.offset > 99) &123;    // detect the end of list\\n        data.endOfList = true;\\n      &125; else &123;\\n        setTimeout(() => data.loadingInProgress = true);\\n        setTimeout(() => &123;      // mimics http call delay\\n          let max = data.offset + data.limit;\\n          for (let i = data.offset; i < max; i++) &123;\\n            data.list.push(i);\\n          &125;\\n          data.offset = max;\\n          data.loadingInProgress = false;\\n        &125;, 1000);\\n      &125;\\n    &125;\\n  &125;\\n&125;</code></pre>\\n           </div>\\n         </div>\\n      </ng2-tab>\\n    \\n      <div class=\\\"spacer x3\\\"></div>\\n      <h2>Horizontally</h2>\\n      <div ng2-infinite-list horizontal=\\\"true\\\"\\n           class=\\\"infinite-list horizontal\\\"\\n           (endVisible)=\\\"loadMore(set2)\\\">\\n        <div *ngFor=\\\"let item of set2.list\\\">{{item+1}}</div>\\n        <div ng2-infinite-list-end>\\n        &nbsp;\\n        <div *ngIf=\\\"set2.loadingInProgress\\\">Loading</div>\\n        <div *ngIf=\\\"set2.endOfList\\\">End Of List</div>\\n        </div>\\n      </div>\\n      loading in progress : {{set2.loadingInProgress}}      \\n      <ng2-tab>\\n        <div class=\\\"tabs\\\">\\n           <div index=\\\"html\\\">HTML</div>\\n           <div index=\\\"js\\\">Javascript</div>\\n         </div> \\n         <div class=\\\"tab-contents\\\">\\n           <div contents=\\\"html\\\">\\n<pre><code class=\\\"language-markup\\\"\\n>&lt;div ng2-infinite-list horizontal=\\\"true\\\"\\n           class=\\\"infinite-list horizontal\\\"\\n           (endVisible)=\\\"loadMore(set2)\\\">\\n        &lt;div *ngFor=\\\"let item of set2.list\\\">&123;&123;item+1&125;&125;&lt;/div>\\n        &lt;div ng2-infinite-list-end>\\n        &nbsp;\\n        &lt;div *ngIf=\\\"set2.loadingInProgress\\\">Loading&lt;/div>\\n        &lt;div *ngIf=\\\"set2.endOfList\\\">End Of List&lt;/div>\\n        &lt;/div>\\n      &lt;/div>\\n</code></pre>\\n           </div>\\n           <div contents=\\\"js\\\">\\n<pre><code class=\\\"language-javascript\\\"\\n>import &123; Component &125; from '@angular/core';\\n\\n@Component(&123;\\n  templates: 'app.tpl.html'\\n&125;)  \\nexport class AppComponent &123;\\n\\n  set2: any = &123;\\n    limit: 10, offset: 0, endOfList: false, loadingInProgress: false, list: []\\n  &125;;\\n\\n  loadMore(data: any): void &123;\\n    if (!data.loadingInProgress) &123;\\n      if (data.offset > 99) &123;    // detect the end of list\\n        data.endOfList = true;\\n      &125; else &123;\\n        setTimeout(() => data.loadingInProgress = true);\\n        setTimeout(() => &123;      // mimics http call delay\\n          let max = data.offset + data.limit;\\n          for (let i = data.offset; i < max; i++) &123;\\n            data.list.push(i);\\n          &125;\\n          data.offset = max;\\n          data.loadingInProgress = false;\\n        &125;, 1000);\\n      &125;\\n    &125;\\n  &125;\\n&125;</code></pre>\\n           </div>\\n         </div>\\n      </ng2-tab>\\n\",\n            styles: [\"\\n    .infinite-list {\\n      overflow: auto;\\n      border: 5px solid #999;\\n      height: 200px;\\n      position: relative;\\n    }\\n    .infinite-list > * {\\n      min-height: 20px\\n    }\\n\\n    .infinite-list > *:nth-child(odd) {\\n      background-color: #eee\\n    }\\n\\n    .infinite-list.horizontal {\\n      height: 120px;\\n      white-space: nowrap;\\n      overflow-y: hidden;\\n    }\\n    .infinite-list.horizontal > div {\\n      border: 1px solid #666;\\n      width: 50px;\\n      height: 80px;\\n      display: inline-block;\\n      margin: 10px;\\n      vertical-align: top;\\n    }\"]\n        }), \n        __metadata('design:paramtypes', [])\n    ], InfiniteListComponent);\n    return InfiniteListComponent;\n}());\nexports.InfiniteListComponent = InfiniteListComponent;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ },

/***/ 368:
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = __webpack_require__(1);\nvar ng2_ui_1 = __webpack_require__(58);\nvar OverlayComponent = (function () {\n    function OverlayComponent(overlayManager) {\n        this.overlayManager = overlayManager;\n    }\n    OverlayComponent.prototype.ngAfterViewInit = function () {\n        window.scroll(0, 0);\n    };\n    OverlayComponent = __decorate([\n        core_1.Component({\n            template: \"\\n    <div class=\\\"container page-title\\\">\\n      <h1>Overlay</h1>\\n    </div>\\n    <div class=\\\"container\\\">\\n      <p class=\\\"page-title-description\\\">\\n        Overlay is an on-the-top layer over DOM elements. Commonly this is used to have some feature to show on the top \\n        of html or an element and to disappear when action is taken.\\n      </p>\\n      \\n      For example\\n      <ol>\\n        <li>Loading Sign</li>\\n        <li>Tooltip</li>\\n        <li>Hover Effect</li>\\n        <li>Etc</li>\\n      </ol>\\n      \\n      <h2>Window Overlay - Modal</h2>\\n      <div id=\\\"window-loading\\\" ng2-overlay-of=\\\"window\\\">\\n        <div style=\\\"color:#fff\\\">Loading</div>\\n        <button (click)=\\\"overlayManager.close('window-loading')\\\">Close</button>\\n      </div>\\n      <button (click)=\\\"overlayManager.open('window-loading')\\\">Show Loading For Window</button>\\n      \\n    </div>\"\n        }), \n        __metadata('design:paramtypes', [ng2_ui_1.OverlayManager])\n    ], OverlayComponent);\n    return OverlayComponent;\n}());\nexports.OverlayComponent = OverlayComponent;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvbmcyLXVpLWNvbXBvbmVudHMvb3ZlcmxheS5jb21wb25lbnQudHM/NjNjNiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUEsaUNBQTBCLENBQWUsQ0FBQztBQUMxQyxtQ0FBZ0MsRUFBUSxDQUFDO0FBOEJ6QztJQUNFLDBCQUFtQixjQUE4QjtRQUE5QixtQkFBYyxHQUFkLGNBQWMsQ0FBZ0I7SUFBRyxDQUFDO0lBRXJELDBDQUFlLEdBQWY7UUFDRSxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsQ0FBQztJQUNyQixDQUFDO0lBakNIO1FBQUMsZ0JBQVMsQ0FBQztZQUNULFFBQVEsRUFBRSw2M0JBeUJEO1NBQ1YsQ0FBQzs7d0JBQUE7SUFPRix1QkFBQztBQUFELENBQUM7QUFOWSx3QkFBZ0IsbUJBTTVCIiwiZmlsZSI6IjM2OC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgIE92ZXJsYXlNYW5hZ2VyIH0gZnJvbSAnbmcyLXVpJztcblxuQENvbXBvbmVudCh7XG4gIHRlbXBsYXRlOiBgXG4gICAgPGRpdiBjbGFzcz1cImNvbnRhaW5lciBwYWdlLXRpdGxlXCI+XG4gICAgICA8aDE+T3ZlcmxheTwvaDE+XG4gICAgPC9kaXY+XG4gICAgPGRpdiBjbGFzcz1cImNvbnRhaW5lclwiPlxuICAgICAgPHAgY2xhc3M9XCJwYWdlLXRpdGxlLWRlc2NyaXB0aW9uXCI+XG4gICAgICAgIE92ZXJsYXkgaXMgYW4gb24tdGhlLXRvcCBsYXllciBvdmVyIERPTSBlbGVtZW50cy4gQ29tbW9ubHkgdGhpcyBpcyB1c2VkIHRvIGhhdmUgc29tZSBmZWF0dXJlIHRvIHNob3cgb24gdGhlIHRvcCBcbiAgICAgICAgb2YgaHRtbCBvciBhbiBlbGVtZW50IGFuZCB0byBkaXNhcHBlYXIgd2hlbiBhY3Rpb24gaXMgdGFrZW4uXG4gICAgICA8L3A+XG4gICAgICBcbiAgICAgIEZvciBleGFtcGxlXG4gICAgICA8b2w+XG4gICAgICAgIDxsaT5Mb2FkaW5nIFNpZ248L2xpPlxuICAgICAgICA8bGk+VG9vbHRpcDwvbGk+XG4gICAgICAgIDxsaT5Ib3ZlciBFZmZlY3Q8L2xpPlxuICAgICAgICA8bGk+RXRjPC9saT5cbiAgICAgIDwvb2w+XG4gICAgICBcbiAgICAgIDxoMj5XaW5kb3cgT3ZlcmxheSAtIE1vZGFsPC9oMj5cbiAgICAgIDxkaXYgaWQ9XCJ3aW5kb3ctbG9hZGluZ1wiIG5nMi1vdmVybGF5LW9mPVwid2luZG93XCI+XG4gICAgICAgIDxkaXYgc3R5bGU9XCJjb2xvcjojZmZmXCI+TG9hZGluZzwvZGl2PlxuICAgICAgICA8YnV0dG9uIChjbGljayk9XCJvdmVybGF5TWFuYWdlci5jbG9zZSgnd2luZG93LWxvYWRpbmcnKVwiPkNsb3NlPC9idXR0b24+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxidXR0b24gKGNsaWNrKT1cIm92ZXJsYXlNYW5hZ2VyLm9wZW4oJ3dpbmRvdy1sb2FkaW5nJylcIj5TaG93IExvYWRpbmcgRm9yIFdpbmRvdzwvYnV0dG9uPlxuICAgICAgXG4gICAgPC9kaXY+YFxufSlcbmV4cG9ydCBjbGFzcyBPdmVybGF5Q29tcG9uZW50e1xuICBjb25zdHJ1Y3RvcihwdWJsaWMgb3ZlcmxheU1hbmFnZXI6IE92ZXJsYXlNYW5hZ2VyKSB7fVxuXG4gIG5nQWZ0ZXJWaWV3SW5pdCgpOiB2b2lkIHtcbiAgICB3aW5kb3cuc2Nyb2xsKDAsMCk7XG4gIH1cbn1cblxuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9+L2FuZ3VsYXIyLXRlbXBsYXRlLWxvYWRlciEuL2FwcC9uZzItdWktY29tcG9uZW50cy9vdmVybGF5LmNvbXBvbmVudC50c1xuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=");

/***/ },

/***/ 369:
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = __webpack_require__(1);\nvar ParallaxScrollComponent = (function () {\n    function ParallaxScrollComponent() {\n    }\n    ParallaxScrollComponent.prototype.ngAfterViewInit = function () {\n        window.scroll(0, 0);\n    };\n    ParallaxScrollComponent = __decorate([\n        core_1.Component({\n            template: \"\\n    <div class=\\\"container page-title\\\">\\n      <h1>Parallax Scroll</h1>\\n    </div>\\n    <div class=\\\"container\\\">\\n      <div style=\\\"height: 400px\\\"> \\n        <p>\\n          <b>Parallax scrolling</b> is a scrolling technique used computer graphics\\n          in which background images move more slowly than images in the foreground, \\n          creating the illusion of depth and immersion.\\n        </p>\\n        <p>\\n          scroll up/down and see how image changes.\\n          To see the proper parallax effect, the container window\\n          should be smaller than the image behind.\\n        </p>\\n      </div>\\n      <div ng2-parallax style=\\\"height: 400px\\\">\\n        <img src=\\\"http://materializecss.com/images/parallax1.jpg\\\" />\\n      </div>\\n      <ng2-tab>\\n        <div class=\\\"tabs\\\">\\n           <div index=\\\"html\\\">HTML</div>\\n           <div index=\\\"js\\\">Javascript</div>\\n         </div> \\n         <div class=\\\"tab-contents\\\">\\n           <div contents=\\\"html\\\">\\n<pre><code class=\\\"language-markup\\\"\\n>&lt;div ng2-parallax style=\\\"height: 400px\\\">\\n  &lt;img src=\\\"http://materializecss.com/images/parallax1.jpg\\\" />\\n&lt;/div>\\n</code></pre>\\n          </div>\\n          <div contents=\\\"js\\\">\\n<pre><code class=\\\"language-javascript\\\"\\n>import &123; Component &125; from '@angular/core';\\n\\n@Component(&123;\\n  templateUr: 'app.html'\\n&125;)\\nexport class AppComponent&123;\\n&125;</code></pre>\\n          </div>\\n         </div>\\n      </ng2-tab>\\n      <br/>\\n      <br/>\\n      <div ng2-parallax style=\\\"height: 400px\\\">\\n        <img src=\\\"http://materializecss.com/images/parallax2.jpg\\\" />\\n      </div>\\n      <div style=\\\"height: 400px\\\">\\n         This space is intentionally added for scrolling\\n      </div>\\n    </div>\"\n        }), \n        __metadata('design:paramtypes', [])\n    ], ParallaxScrollComponent);\n    return ParallaxScrollComponent;\n}());\nexports.ParallaxScrollComponent = ParallaxScrollComponent;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvbmcyLXVpLWNvbXBvbmVudHMvcGFyYWxsYXgtc2Nyb2xsLmNvbXBvbmVudC50cz83NDkzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQSxpQ0FBMEIsQ0FBZSxDQUFDO0FBMEQxQztJQUFBO0lBSUEsQ0FBQztJQUhDLGlEQUFlLEdBQWY7UUFDRSxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsQ0FBQztJQUNyQixDQUFDO0lBM0RIO1FBQUMsZ0JBQVMsQ0FBQztZQUNULFFBQVEsRUFBRSxpdURBcUREO1NBQ1YsQ0FBQzs7K0JBQUE7SUFLRiw4QkFBQztBQUFELENBQUM7QUFKWSwrQkFBdUIsMEJBSW5DIiwiZmlsZSI6IjM2OS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgdGVtcGxhdGU6IGBcbiAgICA8ZGl2IGNsYXNzPVwiY29udGFpbmVyIHBhZ2UtdGl0bGVcIj5cbiAgICAgIDxoMT5QYXJhbGxheCBTY3JvbGw8L2gxPlxuICAgIDwvZGl2PlxuICAgIDxkaXYgY2xhc3M9XCJjb250YWluZXJcIj5cbiAgICAgIDxkaXYgc3R5bGU9XCJoZWlnaHQ6IDQwMHB4XCI+IFxuICAgICAgICA8cD5cbiAgICAgICAgICA8Yj5QYXJhbGxheCBzY3JvbGxpbmc8L2I+IGlzIGEgc2Nyb2xsaW5nIHRlY2huaXF1ZSB1c2VkIGNvbXB1dGVyIGdyYXBoaWNzXG4gICAgICAgICAgaW4gd2hpY2ggYmFja2dyb3VuZCBpbWFnZXMgbW92ZSBtb3JlIHNsb3dseSB0aGFuIGltYWdlcyBpbiB0aGUgZm9yZWdyb3VuZCwgXG4gICAgICAgICAgY3JlYXRpbmcgdGhlIGlsbHVzaW9uIG9mIGRlcHRoIGFuZCBpbW1lcnNpb24uXG4gICAgICAgIDwvcD5cbiAgICAgICAgPHA+XG4gICAgICAgICAgc2Nyb2xsIHVwL2Rvd24gYW5kIHNlZSBob3cgaW1hZ2UgY2hhbmdlcy5cbiAgICAgICAgICBUbyBzZWUgdGhlIHByb3BlciBwYXJhbGxheCBlZmZlY3QsIHRoZSBjb250YWluZXIgd2luZG93XG4gICAgICAgICAgc2hvdWxkIGJlIHNtYWxsZXIgdGhhbiB0aGUgaW1hZ2UgYmVoaW5kLlxuICAgICAgICA8L3A+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXYgbmcyLXBhcmFsbGF4IHN0eWxlPVwiaGVpZ2h0OiA0MDBweFwiPlxuICAgICAgICA8aW1nIHNyYz1cImh0dHA6Ly9tYXRlcmlhbGl6ZWNzcy5jb20vaW1hZ2VzL3BhcmFsbGF4MS5qcGdcIiAvPlxuICAgICAgPC9kaXY+XG4gICAgICA8bmcyLXRhYj5cbiAgICAgICAgPGRpdiBjbGFzcz1cInRhYnNcIj5cbiAgICAgICAgICAgPGRpdiBpbmRleD1cImh0bWxcIj5IVE1MPC9kaXY+XG4gICAgICAgICAgIDxkaXYgaW5kZXg9XCJqc1wiPkphdmFzY3JpcHQ8L2Rpdj5cbiAgICAgICAgIDwvZGl2PiBcbiAgICAgICAgIDxkaXYgY2xhc3M9XCJ0YWItY29udGVudHNcIj5cbiAgICAgICAgICAgPGRpdiBjb250ZW50cz1cImh0bWxcIj5cbjxwcmU+PGNvZGUgY2xhc3M9XCJsYW5ndWFnZS1tYXJrdXBcIlxuPiZsdDtkaXYgbmcyLXBhcmFsbGF4IHN0eWxlPVwiaGVpZ2h0OiA0MDBweFwiPlxuICAmbHQ7aW1nIHNyYz1cImh0dHA6Ly9tYXRlcmlhbGl6ZWNzcy5jb20vaW1hZ2VzL3BhcmFsbGF4MS5qcGdcIiAvPlxuJmx0Oy9kaXY+XG48L2NvZGU+PC9wcmU+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPGRpdiBjb250ZW50cz1cImpzXCI+XG48cHJlPjxjb2RlIGNsYXNzPVwibGFuZ3VhZ2UtamF2YXNjcmlwdFwiXG4+aW1wb3J0ICYxMjM7IENvbXBvbmVudCAmMTI1OyBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQENvbXBvbmVudCgmMTIzO1xuICB0ZW1wbGF0ZVVyOiAnYXBwLmh0bWwnXG4mMTI1OylcbmV4cG9ydCBjbGFzcyBBcHBDb21wb25lbnQmMTIzO1xuJjEyNTs8L2NvZGU+PC9wcmU+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICA8L2Rpdj5cbiAgICAgIDwvbmcyLXRhYj5cbiAgICAgIDxici8+XG4gICAgICA8YnIvPlxuICAgICAgPGRpdiBuZzItcGFyYWxsYXggc3R5bGU9XCJoZWlnaHQ6IDQwMHB4XCI+XG4gICAgICAgIDxpbWcgc3JjPVwiaHR0cDovL21hdGVyaWFsaXplY3NzLmNvbS9pbWFnZXMvcGFyYWxsYXgyLmpwZ1wiIC8+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXYgc3R5bGU9XCJoZWlnaHQ6IDQwMHB4XCI+XG4gICAgICAgICBUaGlzIHNwYWNlIGlzIGludGVudGlvbmFsbHkgYWRkZWQgZm9yIHNjcm9sbGluZ1xuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+YFxufSlcbmV4cG9ydCBjbGFzcyBQYXJhbGxheFNjcm9sbENvbXBvbmVudCB7XG4gIG5nQWZ0ZXJWaWV3SW5pdCgpOiB2b2lkIHtcbiAgICB3aW5kb3cuc2Nyb2xsKDAsMCk7XG4gIH1cbn1cblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vfi9hbmd1bGFyMi10ZW1wbGF0ZS1sb2FkZXIhLi9hcHAvbmcyLXVpLWNvbXBvbmVudHMvcGFyYWxsYXgtc2Nyb2xsLmNvbXBvbmVudC50c1xuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=");

/***/ },

/***/ 370:
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = __webpack_require__(1);\nvar ng2_ui_1 = __webpack_require__(58);\nvar CustomPopupComponent = (function () {\n    function CustomPopupComponent() {\n        this.number = 0;\n    }\n    CustomPopupComponent = __decorate([\n        core_1.Component({\n            template: \"\\n    <p>This is custom popup</p>\\n    {{number}} <button (click)=\\\"number = number+1\\\">increase number</button><br/>\\n    <button (click)=\\\"popup.close()\\\">close</button>\"\n        }), \n        __metadata('design:paramtypes', [])\n    ], CustomPopupComponent);\n    return CustomPopupComponent;\n}());\nvar PopupComponent = (function () {\n    function PopupComponent() {\n    }\n    PopupComponent.prototype.ngafterviewinit = function () {\n        window.scroll(0, 0);\n    };\n    PopupComponent.prototype.openPopup = function (size, title) {\n        var _this = this;\n        this.popup.open(ng2_ui_1.Ng2MessagePopupComponent, {\n            classNames: size,\n            title: title,\n            message: \"This is message given using popup.open()\",\n            buttons: {\n                OK: function () {\n                    _this.message = \"Ok button is pressed\";\n                },\n                CANCEL: function () {\n                    _this.message = \"Cancel button is pressed\";\n                    _this.popup.close();\n                }\n            }\n        });\n    };\n    PopupComponent.prototype.openCustomPopup = function () {\n        this.popup.open(CustomPopupComponent, {\n            classNames: 'custom',\n            closeButton: false,\n        });\n    };\n    __decorate([\n        core_1.ViewChild(ng2_ui_1.Ng2PopupComponent), \n        __metadata('design:type', ng2_ui_1.Ng2PopupComponent)\n    ], PopupComponent.prototype, \"popup\", void 0);\n    PopupComponent = __decorate([\n        core_1.Component({\n            template: \"\\n    <div class=\\\"container page-title\\\">\\n      <h1>Popup</h1>\\n    </div>\\n    <div class=\\\"container\\\">\\n    \\n      <ng2-popup #popup></ng2-popup>\\n      <br/>\\n      {{message}}\\n      <br/>\\n      \\n      <button (click)=\\\"openPopup('small', 'Hello Small Popup')\\\">open small message popup</button>\\n      <br/>\\n      <button (click)=\\\"openPopup('medium', 'Hello Medium Popup')\\\">open medium message popup</button>\\n      <br/>\\n      <div class=\\\"spacer\\\"></div>\\n      <ng2-tab>\\n        <div class=\\\"tabs\\\">\\n           <div index=\\\"html\\\">HTML</div>\\n           <div index=\\\"js\\\">Javascript</div>\\n         </div> \\n         <div class=\\\"tab-contents\\\">\\n           <div contents=\\\"html\\\">\\n<pre><code class=\\\"language-markup\\\"\\n>&lt;button (click)=\\\"openPopup('small', 'Hello Small Popup')\\\">open small message popup&lt;/button>\\n&lt;br/>\\n&lt;button (click)=\\\"openPopup('medium', 'Hello Medium Popup')\\\">open medium message popup&lt;/button>\\n&lt;br/>\\n&lt;ng2-popup #popup>&lt;/ng2-popup></code></pre>\\n          </div>\\n          <div contents=\\\"js\\\">\\n<pre><code class=\\\"language-javascript\\\"\\n>import &123;Component, ViewChild&125; from '@angular/core';\\nimport &123; Ng2PopupComponent, Ng2MessagePopupComponent &125; from 'ng2-ui';\\n\\nexport class popupcomponent &123;\\n  @ViewChild(Ng2PopupComponent) popup: Ng2PopupComponent;\\n  message: string;\\n\\n  openPopup(size, title) &123;\\n    this.popup.open(Ng2MessagePopupComponent, &123;\\n      classNames: size,\\n      title: title,\\n      message: \\\"This is message given using popup.open()\\\",\\n      buttons: &123;\\n        OK: () => &123;\\n          this.message = \\\"Ok button is pressed\\\";\\n        &125;,\\n        CANCEL: () => &123;\\n          this.message = \\\"Cancel button is pressed\\\";\\n          this.popup.close();\\n        &125;\\n      &125;\\n    &125;);\\n  &125;\\n&125;</code></pre>\\n          </div>\\n         </div>\\n      </ng2-tab>\\n      \\n      <div class=\\\"spacer\\\"></div>\\n      <button (click)=\\\"openCustomPopup()\\\">open custom popup</button>\\n      <br/>\\n      <div class=\\\"spacer\\\"></div>\\n      <ng2-tab>\\n        <div class=\\\"tabs\\\">\\n           <div index=\\\"html\\\">HTML</div>\\n           <div index=\\\"js\\\">Javascript</div>\\n         </div> \\n         <div class=\\\"tab-contents\\\">\\n           <div contents=\\\"html\\\">\\n<pre><code class=\\\"language-markup\\\"\\n>&lt;button (click)=\\\"openCustomPopup()\\\">open custom popup&lt;/button>\\n&lt;br/>\\n&lt;ng2-popup #popup>&lt;/ng2-popup></code></pre>\\n          </div>\\n          <div contents=\\\"js\\\">\\n<pre><code class=\\\"language-javascript\\\"\\n>import &123;Component, ViewChild&125; from '@angular/core';\\nimport &123; Ng2PopupComponent &125; from 'ng2-ui';\\n\\n@Component(&123;\\n  template: `\\n  &lt;p>This is custom popup&lt;/p>\\n  \\\\&123;\\\\&123;number\\\\&125;\\\\&125; &lt;button (click)=\\\"number = number+1\\\">increase number&lt;/button>&lt;br/>\\n  &lt;button (click)=\\\"popup.close()\\\">close&lt;/button>\\n  `\\n&125;)\\nclass CustomPopupComponent &123;\\n  number: number = 0;\\n&125;\\n\\nexport class popupcomponent &123;\\n  @ViewChild(Ng2PopupComponent) popup: Ng2PopupComponent;\\n  message: string;\\n\\n  openCustomPopup() &123;\\n    this.popup.open(CustomPopupComponent, &123;\\n      classNames: 'custom',\\n      closeButton: false\\n    &125;);\\n  &125;\\n&125;</code></pre>\\n          </div>\\n         </div>\\n      </ng2-tab>\\n      \\n    </div>\"\n        }), \n        __metadata('design:paramtypes', [])\n    ], PopupComponent);\n    return PopupComponent;\n}());\nexports.PopupComponent = PopupComponent;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvbmcyLXVpLWNvbXBvbmVudHMvcG9wdXAuY29tcG9uZW50LnRzPzRkZjUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBLGlDQUFtQyxDQUFlLENBQUM7QUFDbkQsbUNBQTRELEVBQVEsQ0FBQztBQVFyRTtJQUFBO1FBQ0UsV0FBTSxHQUFXLENBQUMsQ0FBQztJQUNyQixDQUFDO0lBUkQ7UUFBQyxnQkFBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLDZLQUd1QztTQUNsRCxDQUFDOzs0QkFBQTtJQUdGLDJCQUFDO0FBQUQsQ0FBQztBQWdIRDtJQUFBO0lBK0JBLENBQUM7SUEzQkMsd0NBQWUsR0FBZjtRQUNFLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ3JCLENBQUM7SUFFRCxrQ0FBUyxHQUFULFVBQVUsSUFBWSxFQUFFLEtBQWE7UUFBckMsaUJBZUM7UUFkQyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxpQ0FBd0IsRUFBRTtZQUN4QyxVQUFVLEVBQUUsSUFBSTtZQUNoQixLQUFLLEVBQUUsS0FBSztZQUNaLE9BQU8sRUFBRSwwQ0FBMEM7WUFDbkQsT0FBTyxFQUFFO2dCQUNQLEVBQUUsRUFBRTtvQkFDRixLQUFJLENBQUMsT0FBTyxHQUFHLHNCQUFzQixDQUFDO2dCQUN4QyxDQUFDO2dCQUNELE1BQU0sRUFBRTtvQkFDTixLQUFJLENBQUMsT0FBTyxHQUFHLDBCQUEwQixDQUFDO29CQUMxQyxLQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssRUFBRSxDQUFDO2dCQUNyQixDQUFDO2FBQ0Y7U0FDRixDQUFDLENBQUM7SUFDTCxDQUFDO0lBRUQsd0NBQWUsR0FBZjtRQUNFLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLG9CQUFvQixFQUFFO1lBQ3BDLFVBQVUsRUFBRSxRQUFRO1lBQ3BCLFdBQVcsRUFBRSxLQUFLO1NBQ25CLENBQUMsQ0FBQztJQUNMLENBQUM7SUE3QkQ7UUFBQyxnQkFBUyxDQUFDLDBCQUFpQixDQUFDOztpREFBQTtJQS9HL0I7UUFBQyxnQkFBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLGt6R0EyR0Q7U0FDVixDQUFDOztzQkFBQTtJQWdDRixxQkFBQztBQUFELENBQUM7QUEvQlksc0JBQWMsaUJBK0IxQiIsImZpbGUiOiIzNzAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NvbXBvbmVudCwgVmlld0NoaWxkfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE5nMlBvcHVwQ29tcG9uZW50LCBOZzJNZXNzYWdlUG9wdXBDb21wb25lbnQgfSBmcm9tICduZzItdWknO1xuXG5AQ29tcG9uZW50KHtcbiAgdGVtcGxhdGU6IGBcbiAgICA8cD5UaGlzIGlzIGN1c3RvbSBwb3B1cDwvcD5cbiAgICB7e251bWJlcn19IDxidXR0b24gKGNsaWNrKT1cIm51bWJlciA9IG51bWJlcisxXCI+aW5jcmVhc2UgbnVtYmVyPC9idXR0b24+PGJyLz5cbiAgICA8YnV0dG9uIChjbGljayk9XCJwb3B1cC5jbG9zZSgpXCI+Y2xvc2U8L2J1dHRvbj5gXG59KVxuY2xhc3MgQ3VzdG9tUG9wdXBDb21wb25lbnQge1xuICBudW1iZXI6IG51bWJlciA9IDA7XG59XG5cbkBDb21wb25lbnQoe1xuICB0ZW1wbGF0ZTogYFxuICAgIDxkaXYgY2xhc3M9XCJjb250YWluZXIgcGFnZS10aXRsZVwiPlxuICAgICAgPGgxPlBvcHVwPC9oMT5cbiAgICA8L2Rpdj5cbiAgICA8ZGl2IGNsYXNzPVwiY29udGFpbmVyXCI+XG4gICAgXG4gICAgICA8bmcyLXBvcHVwICNwb3B1cD48L25nMi1wb3B1cD5cbiAgICAgIDxici8+XG4gICAgICB7e21lc3NhZ2V9fVxuICAgICAgPGJyLz5cbiAgICAgIFxuICAgICAgPGJ1dHRvbiAoY2xpY2spPVwib3BlblBvcHVwKCdzbWFsbCcsICdIZWxsbyBTbWFsbCBQb3B1cCcpXCI+b3BlbiBzbWFsbCBtZXNzYWdlIHBvcHVwPC9idXR0b24+XG4gICAgICA8YnIvPlxuICAgICAgPGJ1dHRvbiAoY2xpY2spPVwib3BlblBvcHVwKCdtZWRpdW0nLCAnSGVsbG8gTWVkaXVtIFBvcHVwJylcIj5vcGVuIG1lZGl1bSBtZXNzYWdlIHBvcHVwPC9idXR0b24+XG4gICAgICA8YnIvPlxuICAgICAgPGRpdiBjbGFzcz1cInNwYWNlclwiPjwvZGl2PlxuICAgICAgPG5nMi10YWI+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJ0YWJzXCI+XG4gICAgICAgICAgIDxkaXYgaW5kZXg9XCJodG1sXCI+SFRNTDwvZGl2PlxuICAgICAgICAgICA8ZGl2IGluZGV4PVwianNcIj5KYXZhc2NyaXB0PC9kaXY+XG4gICAgICAgICA8L2Rpdj4gXG4gICAgICAgICA8ZGl2IGNsYXNzPVwidGFiLWNvbnRlbnRzXCI+XG4gICAgICAgICAgIDxkaXYgY29udGVudHM9XCJodG1sXCI+XG48cHJlPjxjb2RlIGNsYXNzPVwibGFuZ3VhZ2UtbWFya3VwXCJcbj4mbHQ7YnV0dG9uIChjbGljayk9XCJvcGVuUG9wdXAoJ3NtYWxsJywgJ0hlbGxvIFNtYWxsIFBvcHVwJylcIj5vcGVuIHNtYWxsIG1lc3NhZ2UgcG9wdXAmbHQ7L2J1dHRvbj5cbiZsdDtici8+XG4mbHQ7YnV0dG9uIChjbGljayk9XCJvcGVuUG9wdXAoJ21lZGl1bScsICdIZWxsbyBNZWRpdW0gUG9wdXAnKVwiPm9wZW4gbWVkaXVtIG1lc3NhZ2UgcG9wdXAmbHQ7L2J1dHRvbj5cbiZsdDtici8+XG4mbHQ7bmcyLXBvcHVwICNwb3B1cD4mbHQ7L25nMi1wb3B1cD48L2NvZGU+PC9wcmU+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPGRpdiBjb250ZW50cz1cImpzXCI+XG48cHJlPjxjb2RlIGNsYXNzPVwibGFuZ3VhZ2UtamF2YXNjcmlwdFwiXG4+aW1wb3J0ICYxMjM7Q29tcG9uZW50LCBWaWV3Q2hpbGQmMTI1OyBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCAmMTIzOyBOZzJQb3B1cENvbXBvbmVudCwgTmcyTWVzc2FnZVBvcHVwQ29tcG9uZW50ICYxMjU7IGZyb20gJ25nMi11aSc7XG5cbmV4cG9ydCBjbGFzcyBwb3B1cGNvbXBvbmVudCAmMTIzO1xuICBAVmlld0NoaWxkKE5nMlBvcHVwQ29tcG9uZW50KSBwb3B1cDogTmcyUG9wdXBDb21wb25lbnQ7XG4gIG1lc3NhZ2U6IHN0cmluZztcblxuICBvcGVuUG9wdXAoc2l6ZSwgdGl0bGUpICYxMjM7XG4gICAgdGhpcy5wb3B1cC5vcGVuKE5nMk1lc3NhZ2VQb3B1cENvbXBvbmVudCwgJjEyMztcbiAgICAgIGNsYXNzTmFtZXM6IHNpemUsXG4gICAgICB0aXRsZTogdGl0bGUsXG4gICAgICBtZXNzYWdlOiBcIlRoaXMgaXMgbWVzc2FnZSBnaXZlbiB1c2luZyBwb3B1cC5vcGVuKClcIixcbiAgICAgIGJ1dHRvbnM6ICYxMjM7XG4gICAgICAgIE9LOiAoKSA9PiAmMTIzO1xuICAgICAgICAgIHRoaXMubWVzc2FnZSA9IFwiT2sgYnV0dG9uIGlzIHByZXNzZWRcIjtcbiAgICAgICAgJjEyNTssXG4gICAgICAgIENBTkNFTDogKCkgPT4gJjEyMztcbiAgICAgICAgICB0aGlzLm1lc3NhZ2UgPSBcIkNhbmNlbCBidXR0b24gaXMgcHJlc3NlZFwiO1xuICAgICAgICAgIHRoaXMucG9wdXAuY2xvc2UoKTtcbiAgICAgICAgJjEyNTtcbiAgICAgICYxMjU7XG4gICAgJjEyNTspO1xuICAmMTI1O1xuJjEyNTs8L2NvZGU+PC9wcmU+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICA8L2Rpdj5cbiAgICAgIDwvbmcyLXRhYj5cbiAgICAgIFxuICAgICAgPGRpdiBjbGFzcz1cInNwYWNlclwiPjwvZGl2PlxuICAgICAgPGJ1dHRvbiAoY2xpY2spPVwib3BlbkN1c3RvbVBvcHVwKClcIj5vcGVuIGN1c3RvbSBwb3B1cDwvYnV0dG9uPlxuICAgICAgPGJyLz5cbiAgICAgIDxkaXYgY2xhc3M9XCJzcGFjZXJcIj48L2Rpdj5cbiAgICAgIDxuZzItdGFiPlxuICAgICAgICA8ZGl2IGNsYXNzPVwidGFic1wiPlxuICAgICAgICAgICA8ZGl2IGluZGV4PVwiaHRtbFwiPkhUTUw8L2Rpdj5cbiAgICAgICAgICAgPGRpdiBpbmRleD1cImpzXCI+SmF2YXNjcmlwdDwvZGl2PlxuICAgICAgICAgPC9kaXY+IFxuICAgICAgICAgPGRpdiBjbGFzcz1cInRhYi1jb250ZW50c1wiPlxuICAgICAgICAgICA8ZGl2IGNvbnRlbnRzPVwiaHRtbFwiPlxuPHByZT48Y29kZSBjbGFzcz1cImxhbmd1YWdlLW1hcmt1cFwiXG4+Jmx0O2J1dHRvbiAoY2xpY2spPVwib3BlbkN1c3RvbVBvcHVwKClcIj5vcGVuIGN1c3RvbSBwb3B1cCZsdDsvYnV0dG9uPlxuJmx0O2JyLz5cbiZsdDtuZzItcG9wdXAgI3BvcHVwPiZsdDsvbmcyLXBvcHVwPjwvY29kZT48L3ByZT5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8ZGl2IGNvbnRlbnRzPVwianNcIj5cbjxwcmU+PGNvZGUgY2xhc3M9XCJsYW5ndWFnZS1qYXZhc2NyaXB0XCJcbj5pbXBvcnQgJjEyMztDb21wb25lbnQsIFZpZXdDaGlsZCYxMjU7IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0ICYxMjM7IE5nMlBvcHVwQ29tcG9uZW50ICYxMjU7IGZyb20gJ25nMi11aSc7XG5cbkBDb21wb25lbnQoJjEyMztcbiAgdGVtcGxhdGU6IFxcYFxuICAmbHQ7cD5UaGlzIGlzIGN1c3RvbSBwb3B1cCZsdDsvcD5cbiAgXFxcXCYxMjM7XFxcXCYxMjM7bnVtYmVyXFxcXCYxMjU7XFxcXCYxMjU7ICZsdDtidXR0b24gKGNsaWNrKT1cIm51bWJlciA9IG51bWJlcisxXCI+aW5jcmVhc2UgbnVtYmVyJmx0Oy9idXR0b24+Jmx0O2JyLz5cbiAgJmx0O2J1dHRvbiAoY2xpY2spPVwicG9wdXAuY2xvc2UoKVwiPmNsb3NlJmx0Oy9idXR0b24+XG4gIFxcYFxuJjEyNTspXG5jbGFzcyBDdXN0b21Qb3B1cENvbXBvbmVudCAmMTIzO1xuICBudW1iZXI6IG51bWJlciA9IDA7XG4mMTI1O1xuXG5leHBvcnQgY2xhc3MgcG9wdXBjb21wb25lbnQgJjEyMztcbiAgQFZpZXdDaGlsZChOZzJQb3B1cENvbXBvbmVudCkgcG9wdXA6IE5nMlBvcHVwQ29tcG9uZW50O1xuICBtZXNzYWdlOiBzdHJpbmc7XG5cbiAgb3BlbkN1c3RvbVBvcHVwKCkgJjEyMztcbiAgICB0aGlzLnBvcHVwLm9wZW4oQ3VzdG9tUG9wdXBDb21wb25lbnQsICYxMjM7XG4gICAgICBjbGFzc05hbWVzOiAnY3VzdG9tJyxcbiAgICAgIGNsb3NlQnV0dG9uOiBmYWxzZVxuICAgICYxMjU7KTtcbiAgJjEyNTtcbiYxMjU7PC9jb2RlPjwvcHJlPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgPC9kaXY+XG4gICAgICA8L25nMi10YWI+XG4gICAgICBcbiAgICA8L2Rpdj5gXG59KVxuZXhwb3J0IGNsYXNzIFBvcHVwQ29tcG9uZW50IHtcbiAgQFZpZXdDaGlsZChOZzJQb3B1cENvbXBvbmVudCkgcG9wdXA6IE5nMlBvcHVwQ29tcG9uZW50O1xuICBtZXNzYWdlOiBzdHJpbmc7XG5cbiAgbmdhZnRlcnZpZXdpbml0KCk6IHZvaWQge1xuICAgIHdpbmRvdy5zY3JvbGwoMCwwKTtcbiAgfVxuXG4gIG9wZW5Qb3B1cChzaXplOiBzdHJpbmcsIHRpdGxlOiBzdHJpbmcpIHtcbiAgICB0aGlzLnBvcHVwLm9wZW4oTmcyTWVzc2FnZVBvcHVwQ29tcG9uZW50LCB7XG4gICAgICBjbGFzc05hbWVzOiBzaXplLFxuICAgICAgdGl0bGU6IHRpdGxlLFxuICAgICAgbWVzc2FnZTogXCJUaGlzIGlzIG1lc3NhZ2UgZ2l2ZW4gdXNpbmcgcG9wdXAub3BlbigpXCIsXG4gICAgICBidXR0b25zOiB7XG4gICAgICAgIE9LOiAoKSA9PiB7XG4gICAgICAgICAgdGhpcy5tZXNzYWdlID0gXCJPayBidXR0b24gaXMgcHJlc3NlZFwiO1xuICAgICAgICB9LFxuICAgICAgICBDQU5DRUw6ICgpID0+IHtcbiAgICAgICAgICB0aGlzLm1lc3NhZ2UgPSBcIkNhbmNlbCBidXR0b24gaXMgcHJlc3NlZFwiO1xuICAgICAgICAgIHRoaXMucG9wdXAuY2xvc2UoKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgb3BlbkN1c3RvbVBvcHVwKCkge1xuICAgIHRoaXMucG9wdXAub3BlbihDdXN0b21Qb3B1cENvbXBvbmVudCwge1xuICAgICAgY2xhc3NOYW1lczogJ2N1c3RvbScsXG4gICAgICBjbG9zZUJ1dHRvbjogZmFsc2UsXG4gICAgfSk7XG4gIH1cbn1cblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vfi9hbmd1bGFyMi10ZW1wbGF0ZS1sb2FkZXIhLi9hcHAvbmcyLXVpLWNvbXBvbmVudHMvcG9wdXAuY29tcG9uZW50LnRzXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==");

/***/ },

/***/ 371:
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = __webpack_require__(1);\nvar ng2_ui_1 = __webpack_require__(58);\nvar ScrollableComponent = (function () {\n    function ScrollableComponent() {\n        this.id = 's1';\n        this.hid = 'h1';\n        this.wid = 'w1';\n    }\n    ScrollableComponent.prototype.ngAfterViewInit = function () {\n        window.scroll(0, 0);\n    };\n    ScrollableComponent.prototype.scrollTo = function (selector, parentSelector, horizontal) {\n        ng2_ui_1.Ng2ScrollableDirective.scrollTo(selector, // scroll to this\n        parentSelector, // scroll within (null if window scrolling)\n        horizontal, // is it horizontal scrolling\n        10 // distance from top or left\n        );\n    };\n    ScrollableComponent = __decorate([\n        core_1.Component({\n            template: \"\\n    <div class=\\\"container page-title\\\">\\n      <h1>Scrollable</h1>\\n    </div>\\n    <div class=\\\"container\\\">\\n      <h2>Scroll Within a Section Vertically</h2>\\n      <ul>\\n        <li *ngFor=\\\"let num of [1,2,3,4,5,6,7,8,9,10]\\\"\\n            [class.current]=\\\"id == 's'+ num \\\"\\n            (click)=\\\"scrollTo('#s'+num, '#v-scrollable')\\\">{{num}}\\n      </ul>\\n\\n      scrolled to: {{id}}\\n      <div id=\\\"v-scrollable\\\" class=\\\"scrollable section\\\"\\n           ng2-scrollable (elementVisible)=\\\"id = $event.id\\\">\\n        <div id=\\\"s1\\\">Section 1  (scroll to here)</div>\\n        <div id=\\\"s2\\\">Section 2  (scroll to here)</div>\\n        <div id=\\\"s3\\\">Section 3  (scroll to here)</div>\\n        <div id=\\\"s4\\\">Section 4  (scroll to here)</div>\\n        <div id=\\\"s5\\\">Section 5  (scroll to here)</div>\\n        <div id=\\\"s6\\\">Section 6  (scroll to here)</div>\\n        <div id=\\\"s7\\\">Section 7  (scroll to here)</div>\\n        <div id=\\\"s8\\\">Section 8  (scroll to here)</div>\\n        <div id=\\\"s9\\\">Section 9  (scroll to here)</div>\\n        <div id=\\\"s10\\\">Section 10  (scroll to here)</div>\\n      </div>\\n      <div class=\\\"spacer\\\"></div>\\n      <ng2-tab>\\n        <div class=\\\"tabs\\\">\\n           <div index=\\\"html\\\">HTML</div>\\n           <div index=\\\"js\\\">Javascript</div>\\n           <div index=\\\"css\\\">Stylesheet</div>\\n         </div> \\n         <div class=\\\"tab-contents\\\">\\n           <div contents=\\\"html\\\">\\n<pre><code class=\\\"language-markup\\\"\\n>&lt;ul>\\n  &lt;li *ngFor=\\\"let num of [1,2,3,4,5,6,7,8,9,10]\\\"\\n      [class.current]=\\\"id == 's'+ num \\\"\\n      (click)=\\\"scrollTo('#s'+num, '#v-scrollable')\\\">&123;&123;num&125;&125;\\n&lt;/ul>\\n\\nscrolled to: &123;&123;id&125;&125;\\n&lt;div id=\\\"v-scrollable\\\" class=\\\"scrollable section\\\"\\n     ng2-scrollable (elementVisible)=\\\"id = $event.id\\\">\\n  &lt;div id=\\\"s1\\\">Section 1  (scroll to here)&lt;/div>\\n  &lt;div id=\\\"s2\\\">Section 2  (scroll to here)&lt;/div>\\n  &lt;div id=\\\"s3\\\">Section 3  (scroll to here)&lt;/div>\\n  &lt;div id=\\\"s4\\\">Section 4  (scroll to here)&lt;/div>\\n  &lt;div id=\\\"s5\\\">Section 5  (scroll to here)&lt;/div>\\n  &lt;div id=\\\"s6\\\">Section 6  (scroll to here)&lt;/div>\\n  &lt;div id=\\\"s7\\\">Section 7  (scroll to here)&lt;/div>\\n  &lt;div id=\\\"s8\\\">Section 8  (scroll to here)&lt;/div>\\n  &lt;div id=\\\"s9\\\">Section 9  (scroll to here)&lt;/div>\\n  &lt;div id=\\\"s10\\\">Section 10  (scroll to here)&lt;/div>\\n&lt;/div>\\n</code></pre>\\n          </div>\\n          <div contents=\\\"js\\\">\\n<pre><code class=\\\"language-javascript\\\"\\n>import &123; Component &125; from '@angular/core';\\nimport &123; Ng2ScrollableDirective &125; from 'ng2-ui';\\n\\n@Component(&123;\\n  templateUr: 'app.html'\\n&125;)\\nexport class AppComponent&123;\\n  id: string = 's1';\\n  scrollTo(selector, parentSelector, horizontal) &123;\\n    Ng2ScrollableDirective.scrollTo(\\n      selector,       // scroll to this\\n      parentSelector, // scroll within (null if window scrolling)\\n      horizontal,     // is it horizontal scrolling\\n      10              // distance from top or left\\n    );\\n  &125;\\n&125;</code></pre>\\n          </div>\\n          <div contents=\\\"css\\\">\\n<pre><code class=\\\"language-stylesheet\\\"\\n>ul &123;list-style: none&125;\\nul li &123;display: inline-block; border: 1px solid #999; padding: 10px; cursor: pointer;&125;\\nul li.current &123; background: #333; color: #fff&125;\\n.scrollable &123; height: 200px; border: 1px solid #999; position: relative;&125;\\n.scrollable.window &123; height: auto;&125;\\n.scrollable > div &123;height: 110px&125;\\n.scrollable > div:nth-child(odd) &123; background-color: #ccc&125;\\n.scrollable.section &123;overflow:auto;&125;\\n</code></pre>\\n           </div>\\n         </div>\\n      </ng2-tab>\\n      \\n      <div class=\\\"spacer\\\"></div>\\n      <h2>Scroll Within a Section Horizontally</h2>\\n      <ul>\\n        <br/>\\n        <li *ngFor=\\\"let num of [1,2,3,4,5,6,7,8,9,10]\\\"\\n            [class.current]=\\\"hid == 'h'+ num \\\"\\n            (click)=\\\"scrollTo('#h'+num, '#h-scrollable', true)\\\">{{num}}\\n      </ul>\\n\\n      scrolled to: {{hid}}\\n      <div id=\\\"h-scrollable\\\" class=\\\"scrollable section horizontal\\\"\\n           ng2-scrollable\\n           [horizontal]=\\\"true\\\"\\n           (elementVisible)=\\\"hid = $event.id\\\">\\n        <div id=\\\"h1\\\">Section 1</div>\\n        <div id=\\\"h2\\\">Section 2</div>\\n        <div id=\\\"h3\\\">Section 3</div>\\n        <div id=\\\"h4\\\">Section 4</div>\\n        <div id=\\\"h5\\\">Section 5</div>\\n        <div id=\\\"h6\\\">Section 6</div>\\n        <div id=\\\"h7\\\">Section 7</div>\\n        <div id=\\\"h8\\\">Section 8</div>\\n        <div id=\\\"h9\\\">Section 9</div>\\n        <div id=\\\"h10\\\">Section 10</div>\\n      </div>\\n      <div class=\\\"spacer\\\"></div>\\n      <ng2-tab>\\n        <div class=\\\"tabs\\\">\\n           <div index=\\\"html\\\">HTML</div>\\n           <div index=\\\"js\\\">Javascript</div>\\n           <div index=\\\"css\\\">Stylesheet</div>\\n         </div> \\n         <div class=\\\"tab-contents\\\">\\n           <div contents=\\\"html\\\">\\n<pre><code class=\\\"language-markup\\\"\\n>&lt;h2>Scroll Within a Section Horizontally&lt;/h2>\\n&lt;ul>\\n  &lt;br/>\\n  &lt;li *ngFor=\\\"let num of [1,2,3,4,5,6,7,8,9,10]\\\"\\n      [class.current]=\\\"hid == 'h'+ num \\\"\\n      (click)=\\\"scrollTo('#h'+num, '#h-scrollable', true)\\\">&123;&123;num&125;&125;\\n&lt;/ul>\\n\\nscrolled to: &123;&123;hid&125;&125;\\n&lt;div id=\\\"h-scrollable\\\" class=\\\"scrollable section horizontal\\\"\\n     ng2-scrollable\\n     [horizontal]=\\\"true\\\"\\n     (elementVisible)=\\\"hid = $event.id\\\">\\n  &lt;div id=\\\"h1\\\">Section 1&lt;/div>\\n  &lt;div id=\\\"h2\\\">Section 2&lt;/div>\\n  &lt;div id=\\\"h3\\\">Section 3&lt;/div>\\n  &lt;div id=\\\"h4\\\">Section 4&lt;/div>\\n  &lt;div id=\\\"h5\\\">Section 5&lt;/div>\\n  &lt;div id=\\\"h6\\\">Section 6&lt;/div>\\n  &lt;div id=\\\"h7\\\">Section 7&lt;/div>\\n  &lt;div id=\\\"h8\\\">Section 8&lt;/div>\\n  &lt;div id=\\\"h9\\\">Section 9&lt;/div>\\n  &lt;div id=\\\"h10\\\">Section 10&lt;/div>\\n&lt;/div></code></pre>\\n          </div>\\n          <div contents=\\\"js\\\">\\n<pre><code class=\\\"language-javascript\\\"\\n>import &123; Component &125; from '@angular/core';\\nimport &123; Ng2ScrollableDirective &125; from 'ng2-ui';\\n\\n@Component(&123;\\n  templateUr: 'app.html'\\n&125;)\\nexport class AppComponent&123;\\n  hid: string = 'h1';\\n  scrollTo(selector, parentSelector, horizontal) &123;\\n    Ng2ScrollableDirective.scrollTo(\\n      selector,       // scroll to this\\n      parentSelector, // scroll within (null if window scrolling)\\n      horizontal,     // is it horizontal scrolling\\n      10              // distance from top or left\\n    );\\n  &125;\\n&125;</code></pre>\\n          </div>\\n          <div contents=\\\"css\\\">\\n<pre><code class=\\\"language-stylesheet\\\"\\n>ul &123;list-style: none&125;\\nul li &123;display: inline-block; border: 1px solid #999; padding: 10px; cursor: pointer;&125;\\nul li.current &123; background: #333; color: #fff&125;\\n.scrollable &123; height: 200px; border: 1px solid #999; position: relative;&125;\\n.scrollable > div &123;height: 110px&125;\\n.scrollable > div:nth-child(odd) &123; background-color: #ccc&125;\\n.scrollable.section &123;overflow:auto;&125;\\n\\n.horizontal &123;\\n  height: 100px;\\n  width: 100%;\\n  max-width: 450px;\\n  white-space: nowrap;\\n  overflow-y: hidden !important;\\n&125;\\n.horizontal > div &123;\\n  border: 1px solid #666;\\n  width: 200px;\\n  height: 80px;\\n  display: inline-block;\\n  text-align: center;\\n&125;</code></pre>\\n           </div>\\n         </div>\\n      </ng2-tab>\\n      \\n      <div class=\\\"spacer\\\"></div>\\n      <h2>Scroll Within Window</h2>\\n      <div class=\\\"scrollable window\\\"\\n           (elementVisible)=\\\"wid = $event.id\\\"\\n           (elementHidden)=\\\"whid = $event.id\\\"\\n           ng2-scrollable>\\n        <div id=\\\"w1\\\">One</div>\\n        <div id=\\\"w2\\\">Two</div>\\n        <div id=\\\"w3\\\">Three</div>\\n        <div id=\\\"w4\\\">Four</div>\\n        <div id=\\\"w5\\\">Five</div>\\n        <div id=\\\"w6\\\">Six</div>\\n        <div id=\\\"w7\\\">Seven</div>\\n        <div id=\\\"w8\\\">Eight</div>\\n        <div id=\\\"w9\\\">Nine</div>\\n        <div id=\\\"w10\\\">Ten</div>\\n      </div>\\n\\n      <ul style=\\\"position: fixed; bottom: 0; z-index: 1; background-color: #999\\\">\\n        id: {{wid}}\\n        <li *ngFor=\\\"let num of [1,2,3,4,5,6,7,8,9,10]\\\"\\n            [class.current]=\\\"wid == 'w'+ num \\\"\\n            (click)=\\\"scrollTo('#w'+num)\\\">{{num}}</li>\\n      </ul> \\n      <div class=\\\"spacer x4\\\"></div>\\n    </div>\",\n            styles: [\"\\n    ul {list-style: none}\\n    ul li {display: inline-block; border: 1px solid #999; padding: 10px; cursor: pointer;}\\n    ul li.current { background: #333; color: #fff}\\n    .scrollable { height: 200px; border: 1px solid #999; position: relative;}\\n    .scrollable.window { height: auto;}\\n    .scrollable > div {height: 110px}\\n    .scrollable > div:nth-child(odd) { background-color: #ccc}\\n\\n    ul.window {position: fixed; top: 0; left: 0; background: yellow; z-index: 1;}\\n    ul.window li {display: block; }\\n    .scrollable.section {overflow:auto;}\\n    \\n    .horizontal {\\n      height: 100px;\\n      width: 100%;\\n      max-width: 450px;\\n      white-space: nowrap;\\n      overflow-y: hidden !important;\\n    }\\n    .horizontal > div {\\n      border: 1px solid #666;\\n      width: 200px;\\n      height: 80px;\\n      display: inline-block;\\n      text-align: center;\\n    }\\n  \"]\n        }), \n        __metadata('design:paramtypes', [])\n    ], ScrollableComponent);\n    return ScrollableComponent;\n}());\nexports.ScrollableComponent = ScrollableComponent;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvbmcyLXVpLWNvbXBvbmVudHMvc2Nyb2xsYWJsZS5jb21wb25lbnQudHM/NzdlNiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUEsaUNBQTBCLENBQWUsQ0FBQztBQUMxQyxtQ0FBdUMsRUFBUSxDQUFDO0FBbVFoRDtJQUFBO1FBS0UsT0FBRSxHQUFXLElBQUksQ0FBQztRQUNsQixRQUFHLEdBQVcsSUFBSSxDQUFDO1FBQ25CLFFBQUcsR0FBVyxJQUFJLENBQUM7SUFTckIsQ0FBQztJQWZDLDZDQUFlLEdBQWY7UUFDRSxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsQ0FBQztJQUNyQixDQUFDO0lBS0Qsc0NBQVEsR0FBUixVQUFTLFFBQWdCLEVBQUUsY0FBc0IsRUFBRSxVQUFtQjtRQUNwRSwrQkFBc0IsQ0FBQyxRQUFRLENBQzdCLFFBQVEsRUFBUSxpQkFBaUI7UUFDakMsY0FBYyxFQUFFLDJDQUEyQztRQUMzRCxVQUFVLEVBQU0sNkJBQTZCO1FBQzdDLEVBQUUsQ0FBYyw0QkFBNEI7U0FDN0MsQ0FBQztJQUNKLENBQUM7SUFoUkg7UUFBQyxnQkFBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLG9zUUFrT0Q7WUFDVCxNQUFNLEVBQUUsQ0FBQywyM0JBMkJSLENBQUM7U0FDSCxDQUFDOzsyQkFBQTtJQWlCRiwwQkFBQztBQUFELENBQUM7QUFoQlksMkJBQW1CLHNCQWdCL0IiLCJmaWxlIjoiMzcxLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBOZzJTY3JvbGxhYmxlRGlyZWN0aXZlIH0gZnJvbSAnbmcyLXVpJztcblxuQENvbXBvbmVudCh7XG4gIHRlbXBsYXRlOiBgXG4gICAgPGRpdiBjbGFzcz1cImNvbnRhaW5lciBwYWdlLXRpdGxlXCI+XG4gICAgICA8aDE+U2Nyb2xsYWJsZTwvaDE+XG4gICAgPC9kaXY+XG4gICAgPGRpdiBjbGFzcz1cImNvbnRhaW5lclwiPlxuICAgICAgPGgyPlNjcm9sbCBXaXRoaW4gYSBTZWN0aW9uIFZlcnRpY2FsbHk8L2gyPlxuICAgICAgPHVsPlxuICAgICAgICA8bGkgKm5nRm9yPVwibGV0IG51bSBvZiBbMSwyLDMsNCw1LDYsNyw4LDksMTBdXCJcbiAgICAgICAgICAgIFtjbGFzcy5jdXJyZW50XT1cImlkID09ICdzJysgbnVtIFwiXG4gICAgICAgICAgICAoY2xpY2spPVwic2Nyb2xsVG8oJyNzJytudW0sICcjdi1zY3JvbGxhYmxlJylcIj57e251bX19XG4gICAgICA8L3VsPlxuXG4gICAgICBzY3JvbGxlZCB0bzoge3tpZH19XG4gICAgICA8ZGl2IGlkPVwidi1zY3JvbGxhYmxlXCIgY2xhc3M9XCJzY3JvbGxhYmxlIHNlY3Rpb25cIlxuICAgICAgICAgICBuZzItc2Nyb2xsYWJsZSAoZWxlbWVudFZpc2libGUpPVwiaWQgPSAkZXZlbnQuaWRcIj5cbiAgICAgICAgPGRpdiBpZD1cInMxXCI+U2VjdGlvbiAxICAoc2Nyb2xsIHRvIGhlcmUpPC9kaXY+XG4gICAgICAgIDxkaXYgaWQ9XCJzMlwiPlNlY3Rpb24gMiAgKHNjcm9sbCB0byBoZXJlKTwvZGl2PlxuICAgICAgICA8ZGl2IGlkPVwiczNcIj5TZWN0aW9uIDMgIChzY3JvbGwgdG8gaGVyZSk8L2Rpdj5cbiAgICAgICAgPGRpdiBpZD1cInM0XCI+U2VjdGlvbiA0ICAoc2Nyb2xsIHRvIGhlcmUpPC9kaXY+XG4gICAgICAgIDxkaXYgaWQ9XCJzNVwiPlNlY3Rpb24gNSAgKHNjcm9sbCB0byBoZXJlKTwvZGl2PlxuICAgICAgICA8ZGl2IGlkPVwiczZcIj5TZWN0aW9uIDYgIChzY3JvbGwgdG8gaGVyZSk8L2Rpdj5cbiAgICAgICAgPGRpdiBpZD1cInM3XCI+U2VjdGlvbiA3ICAoc2Nyb2xsIHRvIGhlcmUpPC9kaXY+XG4gICAgICAgIDxkaXYgaWQ9XCJzOFwiPlNlY3Rpb24gOCAgKHNjcm9sbCB0byBoZXJlKTwvZGl2PlxuICAgICAgICA8ZGl2IGlkPVwiczlcIj5TZWN0aW9uIDkgIChzY3JvbGwgdG8gaGVyZSk8L2Rpdj5cbiAgICAgICAgPGRpdiBpZD1cInMxMFwiPlNlY3Rpb24gMTAgIChzY3JvbGwgdG8gaGVyZSk8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdiBjbGFzcz1cInNwYWNlclwiPjwvZGl2PlxuICAgICAgPG5nMi10YWI+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJ0YWJzXCI+XG4gICAgICAgICAgIDxkaXYgaW5kZXg9XCJodG1sXCI+SFRNTDwvZGl2PlxuICAgICAgICAgICA8ZGl2IGluZGV4PVwianNcIj5KYXZhc2NyaXB0PC9kaXY+XG4gICAgICAgICAgIDxkaXYgaW5kZXg9XCJjc3NcIj5TdHlsZXNoZWV0PC9kaXY+XG4gICAgICAgICA8L2Rpdj4gXG4gICAgICAgICA8ZGl2IGNsYXNzPVwidGFiLWNvbnRlbnRzXCI+XG4gICAgICAgICAgIDxkaXYgY29udGVudHM9XCJodG1sXCI+XG48cHJlPjxjb2RlIGNsYXNzPVwibGFuZ3VhZ2UtbWFya3VwXCJcbj4mbHQ7dWw+XG4gICZsdDtsaSAqbmdGb3I9XCJsZXQgbnVtIG9mIFsxLDIsMyw0LDUsNiw3LDgsOSwxMF1cIlxuICAgICAgW2NsYXNzLmN1cnJlbnRdPVwiaWQgPT0gJ3MnKyBudW0gXCJcbiAgICAgIChjbGljayk9XCJzY3JvbGxUbygnI3MnK251bSwgJyN2LXNjcm9sbGFibGUnKVwiPiYxMjM7JjEyMztudW0mMTI1OyYxMjU7XG4mbHQ7L3VsPlxuXG5zY3JvbGxlZCB0bzogJjEyMzsmMTIzO2lkJjEyNTsmMTI1O1xuJmx0O2RpdiBpZD1cInYtc2Nyb2xsYWJsZVwiIGNsYXNzPVwic2Nyb2xsYWJsZSBzZWN0aW9uXCJcbiAgICAgbmcyLXNjcm9sbGFibGUgKGVsZW1lbnRWaXNpYmxlKT1cImlkID0gJGV2ZW50LmlkXCI+XG4gICZsdDtkaXYgaWQ9XCJzMVwiPlNlY3Rpb24gMSAgKHNjcm9sbCB0byBoZXJlKSZsdDsvZGl2PlxuICAmbHQ7ZGl2IGlkPVwiczJcIj5TZWN0aW9uIDIgIChzY3JvbGwgdG8gaGVyZSkmbHQ7L2Rpdj5cbiAgJmx0O2RpdiBpZD1cInMzXCI+U2VjdGlvbiAzICAoc2Nyb2xsIHRvIGhlcmUpJmx0Oy9kaXY+XG4gICZsdDtkaXYgaWQ9XCJzNFwiPlNlY3Rpb24gNCAgKHNjcm9sbCB0byBoZXJlKSZsdDsvZGl2PlxuICAmbHQ7ZGl2IGlkPVwiczVcIj5TZWN0aW9uIDUgIChzY3JvbGwgdG8gaGVyZSkmbHQ7L2Rpdj5cbiAgJmx0O2RpdiBpZD1cInM2XCI+U2VjdGlvbiA2ICAoc2Nyb2xsIHRvIGhlcmUpJmx0Oy9kaXY+XG4gICZsdDtkaXYgaWQ9XCJzN1wiPlNlY3Rpb24gNyAgKHNjcm9sbCB0byBoZXJlKSZsdDsvZGl2PlxuICAmbHQ7ZGl2IGlkPVwiczhcIj5TZWN0aW9uIDggIChzY3JvbGwgdG8gaGVyZSkmbHQ7L2Rpdj5cbiAgJmx0O2RpdiBpZD1cInM5XCI+U2VjdGlvbiA5ICAoc2Nyb2xsIHRvIGhlcmUpJmx0Oy9kaXY+XG4gICZsdDtkaXYgaWQ9XCJzMTBcIj5TZWN0aW9uIDEwICAoc2Nyb2xsIHRvIGhlcmUpJmx0Oy9kaXY+XG4mbHQ7L2Rpdj5cbjwvY29kZT48L3ByZT5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8ZGl2IGNvbnRlbnRzPVwianNcIj5cbjxwcmU+PGNvZGUgY2xhc3M9XCJsYW5ndWFnZS1qYXZhc2NyaXB0XCJcbj5pbXBvcnQgJjEyMzsgQ29tcG9uZW50ICYxMjU7IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0ICYxMjM7IE5nMlNjcm9sbGFibGVEaXJlY3RpdmUgJjEyNTsgZnJvbSAnbmcyLXVpJztcblxuQENvbXBvbmVudCgmMTIzO1xuICB0ZW1wbGF0ZVVyOiAnYXBwLmh0bWwnXG4mMTI1OylcbmV4cG9ydCBjbGFzcyBBcHBDb21wb25lbnQmMTIzO1xuICBpZDogc3RyaW5nID0gJ3MxJztcbiAgc2Nyb2xsVG8oc2VsZWN0b3IsIHBhcmVudFNlbGVjdG9yLCBob3Jpem9udGFsKSAmMTIzO1xuICAgIE5nMlNjcm9sbGFibGVEaXJlY3RpdmUuc2Nyb2xsVG8oXG4gICAgICBzZWxlY3RvciwgICAgICAgLy8gc2Nyb2xsIHRvIHRoaXNcbiAgICAgIHBhcmVudFNlbGVjdG9yLCAvLyBzY3JvbGwgd2l0aGluIChudWxsIGlmIHdpbmRvdyBzY3JvbGxpbmcpXG4gICAgICBob3Jpem9udGFsLCAgICAgLy8gaXMgaXQgaG9yaXpvbnRhbCBzY3JvbGxpbmdcbiAgICAgIDEwICAgICAgICAgICAgICAvLyBkaXN0YW5jZSBmcm9tIHRvcCBvciBsZWZ0XG4gICAgKTtcbiAgJjEyNTtcbiYxMjU7PC9jb2RlPjwvcHJlPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxkaXYgY29udGVudHM9XCJjc3NcIj5cbjxwcmU+PGNvZGUgY2xhc3M9XCJsYW5ndWFnZS1zdHlsZXNoZWV0XCJcbj51bCAmMTIzO2xpc3Qtc3R5bGU6IG5vbmUmMTI1O1xudWwgbGkgJjEyMztkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IGJvcmRlcjogMXB4IHNvbGlkICM5OTk7IHBhZGRpbmc6IDEwcHg7IGN1cnNvcjogcG9pbnRlcjsmMTI1O1xudWwgbGkuY3VycmVudCAmMTIzOyBiYWNrZ3JvdW5kOiAjMzMzOyBjb2xvcjogI2ZmZiYxMjU7XG4uc2Nyb2xsYWJsZSAmMTIzOyBoZWlnaHQ6IDIwMHB4OyBib3JkZXI6IDFweCBzb2xpZCAjOTk5OyBwb3NpdGlvbjogcmVsYXRpdmU7JjEyNTtcbi5zY3JvbGxhYmxlLndpbmRvdyAmMTIzOyBoZWlnaHQ6IGF1dG87JjEyNTtcbi5zY3JvbGxhYmxlID4gZGl2ICYxMjM7aGVpZ2h0OiAxMTBweCYxMjU7XG4uc2Nyb2xsYWJsZSA+IGRpdjpudGgtY2hpbGQob2RkKSAmMTIzOyBiYWNrZ3JvdW5kLWNvbG9yOiAjY2NjJjEyNTtcbi5zY3JvbGxhYmxlLnNlY3Rpb24gJjEyMztvdmVyZmxvdzphdXRvOyYxMjU7XG48L2NvZGU+PC9wcmU+XG4gICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgPC9kaXY+XG4gICAgICA8L25nMi10YWI+XG4gICAgICBcbiAgICAgIDxkaXYgY2xhc3M9XCJzcGFjZXJcIj48L2Rpdj5cbiAgICAgIDxoMj5TY3JvbGwgV2l0aGluIGEgU2VjdGlvbiBIb3Jpem9udGFsbHk8L2gyPlxuICAgICAgPHVsPlxuICAgICAgICA8YnIvPlxuICAgICAgICA8bGkgKm5nRm9yPVwibGV0IG51bSBvZiBbMSwyLDMsNCw1LDYsNyw4LDksMTBdXCJcbiAgICAgICAgICAgIFtjbGFzcy5jdXJyZW50XT1cImhpZCA9PSAnaCcrIG51bSBcIlxuICAgICAgICAgICAgKGNsaWNrKT1cInNjcm9sbFRvKCcjaCcrbnVtLCAnI2gtc2Nyb2xsYWJsZScsIHRydWUpXCI+e3tudW19fVxuICAgICAgPC91bD5cblxuICAgICAgc2Nyb2xsZWQgdG86IHt7aGlkfX1cbiAgICAgIDxkaXYgaWQ9XCJoLXNjcm9sbGFibGVcIiBjbGFzcz1cInNjcm9sbGFibGUgc2VjdGlvbiBob3Jpem9udGFsXCJcbiAgICAgICAgICAgbmcyLXNjcm9sbGFibGVcbiAgICAgICAgICAgW2hvcml6b250YWxdPVwidHJ1ZVwiXG4gICAgICAgICAgIChlbGVtZW50VmlzaWJsZSk9XCJoaWQgPSAkZXZlbnQuaWRcIj5cbiAgICAgICAgPGRpdiBpZD1cImgxXCI+U2VjdGlvbiAxPC9kaXY+XG4gICAgICAgIDxkaXYgaWQ9XCJoMlwiPlNlY3Rpb24gMjwvZGl2PlxuICAgICAgICA8ZGl2IGlkPVwiaDNcIj5TZWN0aW9uIDM8L2Rpdj5cbiAgICAgICAgPGRpdiBpZD1cImg0XCI+U2VjdGlvbiA0PC9kaXY+XG4gICAgICAgIDxkaXYgaWQ9XCJoNVwiPlNlY3Rpb24gNTwvZGl2PlxuICAgICAgICA8ZGl2IGlkPVwiaDZcIj5TZWN0aW9uIDY8L2Rpdj5cbiAgICAgICAgPGRpdiBpZD1cImg3XCI+U2VjdGlvbiA3PC9kaXY+XG4gICAgICAgIDxkaXYgaWQ9XCJoOFwiPlNlY3Rpb24gODwvZGl2PlxuICAgICAgICA8ZGl2IGlkPVwiaDlcIj5TZWN0aW9uIDk8L2Rpdj5cbiAgICAgICAgPGRpdiBpZD1cImgxMFwiPlNlY3Rpb24gMTA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdiBjbGFzcz1cInNwYWNlclwiPjwvZGl2PlxuICAgICAgPG5nMi10YWI+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJ0YWJzXCI+XG4gICAgICAgICAgIDxkaXYgaW5kZXg9XCJodG1sXCI+SFRNTDwvZGl2PlxuICAgICAgICAgICA8ZGl2IGluZGV4PVwianNcIj5KYXZhc2NyaXB0PC9kaXY+XG4gICAgICAgICAgIDxkaXYgaW5kZXg9XCJjc3NcIj5TdHlsZXNoZWV0PC9kaXY+XG4gICAgICAgICA8L2Rpdj4gXG4gICAgICAgICA8ZGl2IGNsYXNzPVwidGFiLWNvbnRlbnRzXCI+XG4gICAgICAgICAgIDxkaXYgY29udGVudHM9XCJodG1sXCI+XG48cHJlPjxjb2RlIGNsYXNzPVwibGFuZ3VhZ2UtbWFya3VwXCJcbj4mbHQ7aDI+U2Nyb2xsIFdpdGhpbiBhIFNlY3Rpb24gSG9yaXpvbnRhbGx5Jmx0Oy9oMj5cbiZsdDt1bD5cbiAgJmx0O2JyLz5cbiAgJmx0O2xpICpuZ0Zvcj1cImxldCBudW0gb2YgWzEsMiwzLDQsNSw2LDcsOCw5LDEwXVwiXG4gICAgICBbY2xhc3MuY3VycmVudF09XCJoaWQgPT0gJ2gnKyBudW0gXCJcbiAgICAgIChjbGljayk9XCJzY3JvbGxUbygnI2gnK251bSwgJyNoLXNjcm9sbGFibGUnLCB0cnVlKVwiPiYxMjM7JjEyMztudW0mMTI1OyYxMjU7XG4mbHQ7L3VsPlxuXG5zY3JvbGxlZCB0bzogJjEyMzsmMTIzO2hpZCYxMjU7JjEyNTtcbiZsdDtkaXYgaWQ9XCJoLXNjcm9sbGFibGVcIiBjbGFzcz1cInNjcm9sbGFibGUgc2VjdGlvbiBob3Jpem9udGFsXCJcbiAgICAgbmcyLXNjcm9sbGFibGVcbiAgICAgW2hvcml6b250YWxdPVwidHJ1ZVwiXG4gICAgIChlbGVtZW50VmlzaWJsZSk9XCJoaWQgPSAkZXZlbnQuaWRcIj5cbiAgJmx0O2RpdiBpZD1cImgxXCI+U2VjdGlvbiAxJmx0Oy9kaXY+XG4gICZsdDtkaXYgaWQ9XCJoMlwiPlNlY3Rpb24gMiZsdDsvZGl2PlxuICAmbHQ7ZGl2IGlkPVwiaDNcIj5TZWN0aW9uIDMmbHQ7L2Rpdj5cbiAgJmx0O2RpdiBpZD1cImg0XCI+U2VjdGlvbiA0Jmx0Oy9kaXY+XG4gICZsdDtkaXYgaWQ9XCJoNVwiPlNlY3Rpb24gNSZsdDsvZGl2PlxuICAmbHQ7ZGl2IGlkPVwiaDZcIj5TZWN0aW9uIDYmbHQ7L2Rpdj5cbiAgJmx0O2RpdiBpZD1cImg3XCI+U2VjdGlvbiA3Jmx0Oy9kaXY+XG4gICZsdDtkaXYgaWQ9XCJoOFwiPlNlY3Rpb24gOCZsdDsvZGl2PlxuICAmbHQ7ZGl2IGlkPVwiaDlcIj5TZWN0aW9uIDkmbHQ7L2Rpdj5cbiAgJmx0O2RpdiBpZD1cImgxMFwiPlNlY3Rpb24gMTAmbHQ7L2Rpdj5cbiZsdDsvZGl2PjwvY29kZT48L3ByZT5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8ZGl2IGNvbnRlbnRzPVwianNcIj5cbjxwcmU+PGNvZGUgY2xhc3M9XCJsYW5ndWFnZS1qYXZhc2NyaXB0XCJcbj5pbXBvcnQgJjEyMzsgQ29tcG9uZW50ICYxMjU7IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0ICYxMjM7IE5nMlNjcm9sbGFibGVEaXJlY3RpdmUgJjEyNTsgZnJvbSAnbmcyLXVpJztcblxuQENvbXBvbmVudCgmMTIzO1xuICB0ZW1wbGF0ZVVyOiAnYXBwLmh0bWwnXG4mMTI1OylcbmV4cG9ydCBjbGFzcyBBcHBDb21wb25lbnQmMTIzO1xuICBoaWQ6IHN0cmluZyA9ICdoMSc7XG4gIHNjcm9sbFRvKHNlbGVjdG9yLCBwYXJlbnRTZWxlY3RvciwgaG9yaXpvbnRhbCkgJjEyMztcbiAgICBOZzJTY3JvbGxhYmxlRGlyZWN0aXZlLnNjcm9sbFRvKFxuICAgICAgc2VsZWN0b3IsICAgICAgIC8vIHNjcm9sbCB0byB0aGlzXG4gICAgICBwYXJlbnRTZWxlY3RvciwgLy8gc2Nyb2xsIHdpdGhpbiAobnVsbCBpZiB3aW5kb3cgc2Nyb2xsaW5nKVxuICAgICAgaG9yaXpvbnRhbCwgICAgIC8vIGlzIGl0IGhvcml6b250YWwgc2Nyb2xsaW5nXG4gICAgICAxMCAgICAgICAgICAgICAgLy8gZGlzdGFuY2UgZnJvbSB0b3Agb3IgbGVmdFxuICAgICk7XG4gICYxMjU7XG4mMTI1OzwvY29kZT48L3ByZT5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8ZGl2IGNvbnRlbnRzPVwiY3NzXCI+XG48cHJlPjxjb2RlIGNsYXNzPVwibGFuZ3VhZ2Utc3R5bGVzaGVldFwiXG4+dWwgJjEyMztsaXN0LXN0eWxlOiBub25lJjEyNTtcbnVsIGxpICYxMjM7ZGlzcGxheTogaW5saW5lLWJsb2NrOyBib3JkZXI6IDFweCBzb2xpZCAjOTk5OyBwYWRkaW5nOiAxMHB4OyBjdXJzb3I6IHBvaW50ZXI7JjEyNTtcbnVsIGxpLmN1cnJlbnQgJjEyMzsgYmFja2dyb3VuZDogIzMzMzsgY29sb3I6ICNmZmYmMTI1O1xuLnNjcm9sbGFibGUgJjEyMzsgaGVpZ2h0OiAyMDBweDsgYm9yZGVyOiAxcHggc29saWQgIzk5OTsgcG9zaXRpb246IHJlbGF0aXZlOyYxMjU7XG4uc2Nyb2xsYWJsZSA+IGRpdiAmMTIzO2hlaWdodDogMTEwcHgmMTI1O1xuLnNjcm9sbGFibGUgPiBkaXY6bnRoLWNoaWxkKG9kZCkgJjEyMzsgYmFja2dyb3VuZC1jb2xvcjogI2NjYyYxMjU7XG4uc2Nyb2xsYWJsZS5zZWN0aW9uICYxMjM7b3ZlcmZsb3c6YXV0bzsmMTI1O1xuXG4uaG9yaXpvbnRhbCAmMTIzO1xuICBoZWlnaHQ6IDEwMHB4O1xuICB3aWR0aDogMTAwJTtcbiAgbWF4LXdpZHRoOiA0NTBweDtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgb3ZlcmZsb3cteTogaGlkZGVuICFpbXBvcnRhbnQ7XG4mMTI1O1xuLmhvcml6b250YWwgPiBkaXYgJjEyMztcbiAgYm9yZGVyOiAxcHggc29saWQgIzY2NjtcbiAgd2lkdGg6IDIwMHB4O1xuICBoZWlnaHQ6IDgwcHg7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuJjEyNTs8L2NvZGU+PC9wcmU+XG4gICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgPC9kaXY+XG4gICAgICA8L25nMi10YWI+XG4gICAgICBcbiAgICAgIDxkaXYgY2xhc3M9XCJzcGFjZXJcIj48L2Rpdj5cbiAgICAgIDxoMj5TY3JvbGwgV2l0aGluIFdpbmRvdzwvaDI+XG4gICAgICA8ZGl2IGNsYXNzPVwic2Nyb2xsYWJsZSB3aW5kb3dcIlxuICAgICAgICAgICAoZWxlbWVudFZpc2libGUpPVwid2lkID0gJGV2ZW50LmlkXCJcbiAgICAgICAgICAgKGVsZW1lbnRIaWRkZW4pPVwid2hpZCA9ICRldmVudC5pZFwiXG4gICAgICAgICAgIG5nMi1zY3JvbGxhYmxlPlxuICAgICAgICA8ZGl2IGlkPVwidzFcIj5PbmU8L2Rpdj5cbiAgICAgICAgPGRpdiBpZD1cIncyXCI+VHdvPC9kaXY+XG4gICAgICAgIDxkaXYgaWQ9XCJ3M1wiPlRocmVlPC9kaXY+XG4gICAgICAgIDxkaXYgaWQ9XCJ3NFwiPkZvdXI8L2Rpdj5cbiAgICAgICAgPGRpdiBpZD1cInc1XCI+Rml2ZTwvZGl2PlxuICAgICAgICA8ZGl2IGlkPVwidzZcIj5TaXg8L2Rpdj5cbiAgICAgICAgPGRpdiBpZD1cInc3XCI+U2V2ZW48L2Rpdj5cbiAgICAgICAgPGRpdiBpZD1cInc4XCI+RWlnaHQ8L2Rpdj5cbiAgICAgICAgPGRpdiBpZD1cInc5XCI+TmluZTwvZGl2PlxuICAgICAgICA8ZGl2IGlkPVwidzEwXCI+VGVuPC9kaXY+XG4gICAgICA8L2Rpdj5cblxuICAgICAgPHVsIHN0eWxlPVwicG9zaXRpb246IGZpeGVkOyBib3R0b206IDA7IHotaW5kZXg6IDE7IGJhY2tncm91bmQtY29sb3I6ICM5OTlcIj5cbiAgICAgICAgaWQ6IHt7d2lkfX1cbiAgICAgICAgPGxpICpuZ0Zvcj1cImxldCBudW0gb2YgWzEsMiwzLDQsNSw2LDcsOCw5LDEwXVwiXG4gICAgICAgICAgICBbY2xhc3MuY3VycmVudF09XCJ3aWQgPT0gJ3cnKyBudW0gXCJcbiAgICAgICAgICAgIChjbGljayk9XCJzY3JvbGxUbygnI3cnK251bSlcIj57e251bX19PC9saT5cbiAgICAgIDwvdWw+IFxuICAgICAgPGRpdiBjbGFzcz1cInNwYWNlciB4NFwiPjwvZGl2PlxuICAgIDwvZGl2PmAsXG4gIHN0eWxlczogW2BcbiAgICB1bCB7bGlzdC1zdHlsZTogbm9uZX1cbiAgICB1bCBsaSB7ZGlzcGxheTogaW5saW5lLWJsb2NrOyBib3JkZXI6IDFweCBzb2xpZCAjOTk5OyBwYWRkaW5nOiAxMHB4OyBjdXJzb3I6IHBvaW50ZXI7fVxuICAgIHVsIGxpLmN1cnJlbnQgeyBiYWNrZ3JvdW5kOiAjMzMzOyBjb2xvcjogI2ZmZn1cbiAgICAuc2Nyb2xsYWJsZSB7IGhlaWdodDogMjAwcHg7IGJvcmRlcjogMXB4IHNvbGlkICM5OTk7IHBvc2l0aW9uOiByZWxhdGl2ZTt9XG4gICAgLnNjcm9sbGFibGUud2luZG93IHsgaGVpZ2h0OiBhdXRvO31cbiAgICAuc2Nyb2xsYWJsZSA+IGRpdiB7aGVpZ2h0OiAxMTBweH1cbiAgICAuc2Nyb2xsYWJsZSA+IGRpdjpudGgtY2hpbGQob2RkKSB7IGJhY2tncm91bmQtY29sb3I6ICNjY2N9XG5cbiAgICB1bC53aW5kb3cge3Bvc2l0aW9uOiBmaXhlZDsgdG9wOiAwOyBsZWZ0OiAwOyBiYWNrZ3JvdW5kOiB5ZWxsb3c7IHotaW5kZXg6IDE7fVxuICAgIHVsLndpbmRvdyBsaSB7ZGlzcGxheTogYmxvY2s7IH1cbiAgICAuc2Nyb2xsYWJsZS5zZWN0aW9uIHtvdmVyZmxvdzphdXRvO31cbiAgICBcbiAgICAuaG9yaXpvbnRhbCB7XG4gICAgICBoZWlnaHQ6IDEwMHB4O1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBtYXgtd2lkdGg6IDQ1MHB4O1xuICAgICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgICAgIG92ZXJmbG93LXk6IGhpZGRlbiAhaW1wb3J0YW50O1xuICAgIH1cbiAgICAuaG9yaXpvbnRhbCA+IGRpdiB7XG4gICAgICBib3JkZXI6IDFweCBzb2xpZCAjNjY2O1xuICAgICAgd2lkdGg6IDIwMHB4O1xuICAgICAgaGVpZ2h0OiA4MHB4O1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIH1cbiAgYF1cbn0pXG5leHBvcnQgY2xhc3MgU2Nyb2xsYWJsZUNvbXBvbmVudCB7XG4gIG5nQWZ0ZXJWaWV3SW5pdCgpOiB2b2lkIHtcbiAgICB3aW5kb3cuc2Nyb2xsKDAsMCk7XG4gIH1cblxuICBpZDogc3RyaW5nID0gJ3MxJztcbiAgaGlkOiBzdHJpbmcgPSAnaDEnO1xuICB3aWQ6IHN0cmluZyA9ICd3MSc7XG4gIHNjcm9sbFRvKHNlbGVjdG9yOiBzdHJpbmcsIHBhcmVudFNlbGVjdG9yOiBzdHJpbmcsIGhvcml6b250YWw6IGJvb2xlYW4pIHtcbiAgICBOZzJTY3JvbGxhYmxlRGlyZWN0aXZlLnNjcm9sbFRvKFxuICAgICAgc2VsZWN0b3IsICAgICAgIC8vIHNjcm9sbCB0byB0aGlzXG4gICAgICBwYXJlbnRTZWxlY3RvciwgLy8gc2Nyb2xsIHdpdGhpbiAobnVsbCBpZiB3aW5kb3cgc2Nyb2xsaW5nKVxuICAgICAgaG9yaXpvbnRhbCwgICAgIC8vIGlzIGl0IGhvcml6b250YWwgc2Nyb2xsaW5nXG4gICAgICAxMCAgICAgICAgICAgICAgLy8gZGlzdGFuY2UgZnJvbSB0b3Agb3IgbGVmdFxuICAgICk7XG4gIH1cbn1cblxuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9+L2FuZ3VsYXIyLXRlbXBsYXRlLWxvYWRlciEuL2FwcC9uZzItdWktY29tcG9uZW50cy9zY3JvbGxhYmxlLmNvbXBvbmVudC50c1xuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=");

/***/ },

/***/ 372:
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = __webpack_require__(1);\nvar StickyComponent = (function () {\n    function StickyComponent() {\n    }\n    StickyComponent.prototype.ngAfterViewInit = function () {\n        window.scroll(0, 0);\n    };\n    StickyComponent = __decorate([\n        core_1.Component({\n            template: \"\\n    <div class=\\\"container page-title\\\">\\n      <h1>Sticky</h1>\\n    </div>\\n    <div class=\\\"container\\\">\\n    \\n      <div class=\\\"sticky-container\\\">\\n        <div class=\\\"sticky-float-right\\\">\\n          <div ng2-sticky style=\\\"float: right\\\"> float: right </div>\\n        </div>\\n      </div>\\n      <div class=\\\"spacer\\\"></div>\\n      <ng2-tab>\\n        <div class=\\\"tabs\\\">\\n           <div index=\\\"html\\\">HTML</div>\\n           <div index=\\\"js\\\">Javascript</div>\\n           <div index=\\\"css\\\">Stylesheet</div>\\n         </div> \\n         <div class=\\\"tab-contents\\\">\\n           <div contents=\\\"html\\\">\\n<pre><code class=\\\"language-markup\\\"\\n>&lt;div class=\\\"sticky-container\\\">\\n  &lt;div class=\\\"float-right\\\">\\n    &lt;div ng2-sticky style=\\\"float: right\\\"> float: right &lt;/div>\\n  &lt;/div>\\n&lt;/div>\\n</code></pre>\\n          </div>\\n          <div contents=\\\"js\\\">\\n<pre><code class=\\\"language-javascript\\\"\\n>import &123; Component &125; from '@angular/core';\\n\\n@Component(&123;\\n  templateUr: 'app.html'\\n&125;)\\nexport class AppComponent&123;\\n&125;</code></pre>\\n          </div>\\n          <div contents=\\\"css\\\">\\n<pre><code class=\\\"language-stylesheet\\\"\\n>.sticky-container > div &123;\\n  border: 1px solid #333;\\n  background-image: linear-gradient(rgba(255, 255, 255, 1) 50%, transparent 50%, transparent);\\n  background-size: 50px 50px;\\n  height: 300px;\\n&125;\\n.sticky-float-right &123;\\n  background-color: rgba(0,255,0, .2);\\n&125;\\ndiv[ng2-sticky] &123;\\n  min-width: 400px;\\n  text-align: center;\\n  background: #333;\\n  color: #fff;\\n  border: 1px solid #333;\\n  padding: 10px;\\n&125;</code></pre>\\n           </div>\\n         </div>\\n      </ng2-tab>\\n      <div class=\\\"spacer\\\"></div>\\n      <div class=\\\"sticky-container\\\">\\n        <div class=\\\"sticky-float-left\\\">\\n          <div ng2-sticky style=\\\"float: left\\\"> float: left </div>\\n        </div>\\n      </div>\\n      <div class=\\\"spacer\\\"></div>\\n      <ng2-tab>\\n        <div class=\\\"tabs\\\">\\n           <div index=\\\"html\\\">HTML</div>\\n           <div index=\\\"js\\\">Javascript</div>\\n           <div index=\\\"css\\\">Stylesheet</div>\\n         </div> \\n         <div class=\\\"tab-contents\\\">\\n           <div contents=\\\"html\\\">\\n<pre><code class=\\\"language-markup\\\"\\n>&lt;div class=\\\"sticky-container\\\">\\n  &lt;div class=\\\"float-left\\\">\\n    &lt;div ng2-sticky style=\\\"float: left\\\"> float: left &lt;/div>\\n  &lt;/div>\\n&lt;/div>\\n</code></pre>\\n          </div>\\n          <div contents=\\\"js\\\">\\n<pre><code class=\\\"language-javascript\\\"\\n>import &123; Component &125; from '@angular/core';\\n\\n@Component(&123;\\n  templateUr: 'app.html'\\n&125;)\\nexport class AppComponent&123;\\n&125;</code></pre>\\n          </div>\\n          <div contents=\\\"css\\\">\\n<pre><code class=\\\"language-stylesheet\\\"\\n>.sticky-container > div &123;\\n  border: 1px solid #333;\\n  background-image: linear-gradient(rgba(255, 255, 255, 1) 50%, transparent 50%, transparent);\\n  background-size: 50px 50px;\\n  height: 300px;\\n&125;\\n.sticky-float-left &123;\\n  background-color: rgba(255,0,0, .2);\\n&125;\\ndiv[ng2-sticky] &123;\\n  min-width: 400px;\\n  text-align: center;\\n  background: #333;\\n  color: #fff;\\n  border: 1px solid #333;\\n  padding: 10px;\\n&125;\\n</code></pre>\\n           </div>\\n         </div>\\n      </ng2-tab>\\n      <div class=\\\"spacer\\\"></div>\\n        \\n      <div class=\\\"sticky-container\\\">\\n        <div class=\\\"div-middle\\\">\\n          <div>One</div> <div>After</div> <div>Another</div>\\n          <div ng2-sticky> &lt;div> tag in the middle </div>\\n          <div>One</div> <div>After</div> <div>Another</div>\\n        </div>\\n      </div>\\n      <div class=\\\"spacer\\\"></div>\\n      \\n      <ng2-tab>\\n        <div class=\\\"tabs\\\">\\n           <div index=\\\"html\\\">HTML</div>\\n           <div index=\\\"js\\\">Javascript</div>\\n           <div index=\\\"css\\\">Stylesheet</div>\\n         </div> \\n         <div class=\\\"tab-contents\\\">\\n           <div contents=\\\"html\\\">\\n<pre><code class=\\\"language-markup\\\"\\n>&lt;div class=\\\"sticky-container\\\">\\n  &lt;div class=\\\"div-middle\\\">\\n    &lt;div>One&lt;/div> &lt;div>After&lt;/div> &lt;div>Another&lt;/div>\\n    &lt;div ng2-sticky> &lt;div> tag in the middle &lt;/div>\\n    &lt;div>One&lt;/div> &lt;div>After&lt;/div> &lt;div>Another&lt;/div>\\n  &lt;/div>\\n&lt;/div></code></pre>\\n          </div>\\n          <div contents=\\\"js\\\">\\n<pre><code class=\\\"language-javascript\\\"\\n>import &123; Component &125; from '@angular/core';\\n\\n@Component(&123;\\n  templateUr: 'app.html'\\n&125;)\\nexport class AppComponent&123;\\n&125;</code></pre>\\n          </div>\\n          <div contents=\\\"css\\\">\\n<pre><code class=\\\"language-stylesheet\\\"\\n>.sticky-container > div &123;\\n  border: 1px solid #333;\\n  background-image: linear-gradient(rgba(255, 255, 255, 1) 50%, transparent 50%, transparent);\\n  background-size: 50px 50px;\\n  height: 300px;\\n&125;\\n.div-middle &123;\\n  background-color: rgba(0,0,255, .2);\\n&125;\\ndiv[ng2-sticky] &123;\\n  min-width: 400px;\\n  text-align: center;\\n  background: #333;\\n  color: #fff;\\n  border: 1px solid #333;\\n  padding: 10px;\\n&125;\\n.div-middle div[ng2-sticky] &123;\\n  margin: 0;\\n&125;\\n</code></pre>\\n           </div>\\n         </div>\\n      </ng2-tab>\\n      <div class=\\\"spacer\\\"></div>\\n      <div style=\\\"height:300px\\\">\\n        This space is left-blank intentionally to see scroll effect\\n      </div>\\n      \\n    </div>\",\n            styles: [\"\\n    .sticky-container > div {\\n      /*margin: 20px;*/\\n      border: 1px solid #333;\\n      background-image: linear-gradient(rgba(255, 255, 255, 1) 50%, transparent 50%, transparent);\\n      background-size: 50px 50px;\\n      height: 300px;\\n    }\\n    .sticky-float-left {\\n      background-color: rgba(255,0,0, .2);\\n    }\\n    .sticky-float-right {\\n      background-color: rgba(0,255,0, .2);\\n    }\\n    .div-middle {\\n      background-color: rgba(0,0,255, .2);\\n    }\\n    div[ng2-sticky] {\\n      /*margin: 30px 10px 10px 10px;*/\\n      min-width: 400px;\\n      text-align: center;\\n      background: #333;\\n      color: #fff;\\n      border: 1px solid #333;\\n      padding: 10px;\\n    }\\n    .div-middle div[ng2-sticky] {\\n      margin: 0;\\n    }\\n  \"]\n        }), \n        __metadata('design:paramtypes', [])\n    ], StickyComponent);\n    return StickyComponent;\n}());\nexports.StickyComponent = StickyComponent;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ },

/***/ 373:
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = __webpack_require__(1);\nvar TabComponent = (function () {\n    function TabComponent() {\n    }\n    TabComponent.prototype.ngAfterViewInit = function () {\n        window.scroll(0, 0);\n    };\n    TabComponent = __decorate([\n        core_1.Component({\n            template: \"\\n    <div class=\\\"container page-title\\\">\\n      <h1>Tab</h1>\\n    </div>\\n    <div class=\\\"container\\\">\\n     <h2> Simple Tab </h2>\\n     <div ng2-tab>\\n       <div class=\\\"tabs\\\">\\n          <div index=\\\"html\\\">HTML</div>\\n          <div index=\\\"js\\\">Javascript</div>\\n        </div>\\n        <div class=\\\"tab-contents\\\">\\n          <div contents=\\\"html\\\">\\n<pre><code class=\\\"langage-markup\\\"\\n>&lt;div ng2-tab> \\n &lt;div class=\\\"tabs\\\">\\n    &lt;div index=\\\"html\\\">HTML&lt;/div>\\n    &lt;div index=\\\"js\\\">Javascript&lt;/div>\\n  &lt;/div>\\n  &lt;div class=\\\"tab-contents\\\">\\n    &lt;div contents=\\\"html\\\">HTML  &lt;/div>\\n    &lt;div contents=\\\"js\\\">Javascript  &lt;/div>\\n  &lt;/div>\\n&lt;/div></code></pre>\\n          </div>\\n          <div contents=\\\"js\\\">\\n<pre><code class=\\\"langage-javascript\\\"\\n>import &123; Component &125; from '@angular/core';\\n\\n@Component(&123;\\n  templateUr: 'app.html'\\n&125;)\\nexport class AppComponent&123;\\n&125;</code></pre>\\n          </div>\\n        </div>\\n      </div>\\n      \\n      <br/><br/>\\n      <h2> Tab with animation </h2>\\n      <ng2-tab\\n        selected=\\\"js\\\"\\n        selected-index-class=\\\"selected\\\"\\n        selected-contents-class=\\\"fadeIn animated\\\">\\n        <div class=\\\"tabs\\\">\\n          <div index=\\\"html\\\">HTML</div>\\n          <div index=\\\"js\\\">Javascript</div>\\n        </div>\\n        <div class=\\\"tab-contents\\\">\\n          <div contents=\\\"html\\\">\\n<pre><code class=\\\"language-markup\\\"\\n>&lt;ng2-tab selected=\\\"js\\\" \\n  selected-contents-class=\\\"fadeIn animated\\\" \\n  selected-index-class=\\\"selected\\\">\\n  &lt;div class=\\\"tabs\\\">\\n    &lt;div index=\\\"html\\\">HTML&lt;/div>\\n    &lt;div index=\\\"js\\\">Javascript&lt;/div>\\n  &lt;/div>\\n  &lt;div class=\\\"tab-contents\\\">\\n    &lt;div contents=\\\"html\\\">HTML&lt;/div>\\n    &lt;div contents=\\\"js\\\">Javascript&lt;/div>\\n  &lt;/div>\\n&lt;/ng2-tab></code></pre>\\n          </div>\\n          <div contents=\\\"js\\\">\\n<pre><code class=\\\"langage-javascript\\\"\\n>import &123; Component &125; from '@angular/core';\\n\\n@Component(&123;\\n  templateUr: 'app.html'\\n&125;)\\nexport class AppComponent&123;\\n&125;</code></pre>\\n        </div>\\n        </div>\\n      </ng2-tab> \\n      NOTE: There is a default css given by component, but a user can override the tab style.\\n    </div>\\n\"\n        }), \n        __metadata('design:paramtypes', [])\n    ], TabComponent);\n    return TabComponent;\n}());\nexports.TabComponent = TabComponent;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvbmcyLXVpLWNvbXBvbmVudHMvdGFiLmNvbXBvbmVudC50cz8wOTQ0Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQSxpQ0FBMEIsQ0FBZSxDQUFDO0FBbUYxQztJQUFBO0lBSUEsQ0FBQztJQUhDLHNDQUFlLEdBQWY7UUFDRSxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsQ0FBQztJQUNyQixDQUFDO0lBcEZIO1FBQUMsZ0JBQVMsQ0FBQztZQUNULFFBQVEsRUFBRSw4dUVBOEVYO1NBQ0EsQ0FBQzs7b0JBQUE7SUFLRixtQkFBQztBQUFELENBQUM7QUFKWSxvQkFBWSxlQUl4QiIsImZpbGUiOiIzNzMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQENvbXBvbmVudCh7XG4gIHRlbXBsYXRlOiBgXG4gICAgPGRpdiBjbGFzcz1cImNvbnRhaW5lciBwYWdlLXRpdGxlXCI+XG4gICAgICA8aDE+VGFiPC9oMT5cbiAgICA8L2Rpdj5cbiAgICA8ZGl2IGNsYXNzPVwiY29udGFpbmVyXCI+XG4gICAgIDxoMj4gU2ltcGxlIFRhYiA8L2gyPlxuICAgICA8ZGl2IG5nMi10YWI+XG4gICAgICAgPGRpdiBjbGFzcz1cInRhYnNcIj5cbiAgICAgICAgICA8ZGl2IGluZGV4PVwiaHRtbFwiPkhUTUw8L2Rpdj5cbiAgICAgICAgICA8ZGl2IGluZGV4PVwianNcIj5KYXZhc2NyaXB0PC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzPVwidGFiLWNvbnRlbnRzXCI+XG4gICAgICAgICAgPGRpdiBjb250ZW50cz1cImh0bWxcIj5cbjxwcmU+PGNvZGUgY2xhc3M9XCJsYW5nYWdlLW1hcmt1cFwiXG4+Jmx0O2RpdiBuZzItdGFiPiBcbiAmbHQ7ZGl2IGNsYXNzPVwidGFic1wiPlxuICAgICZsdDtkaXYgaW5kZXg9XCJodG1sXCI+SFRNTCZsdDsvZGl2PlxuICAgICZsdDtkaXYgaW5kZXg9XCJqc1wiPkphdmFzY3JpcHQmbHQ7L2Rpdj5cbiAgJmx0Oy9kaXY+XG4gICZsdDtkaXYgY2xhc3M9XCJ0YWItY29udGVudHNcIj5cbiAgICAmbHQ7ZGl2IGNvbnRlbnRzPVwiaHRtbFwiPkhUTUwgICZsdDsvZGl2PlxuICAgICZsdDtkaXYgY29udGVudHM9XCJqc1wiPkphdmFzY3JpcHQgICZsdDsvZGl2PlxuICAmbHQ7L2Rpdj5cbiZsdDsvZGl2PjwvY29kZT48L3ByZT5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8ZGl2IGNvbnRlbnRzPVwianNcIj5cbjxwcmU+PGNvZGUgY2xhc3M9XCJsYW5nYWdlLWphdmFzY3JpcHRcIlxuPmltcG9ydCAmMTIzOyBDb21wb25lbnQgJjEyNTsgZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBDb21wb25lbnQoJjEyMztcbiAgdGVtcGxhdGVVcjogJ2FwcC5odG1sJ1xuJjEyNTspXG5leHBvcnQgY2xhc3MgQXBwQ29tcG9uZW50JjEyMztcbiYxMjU7PC9jb2RlPjwvcHJlPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgICAgXG4gICAgICA8YnIvPjxici8+XG4gICAgICA8aDI+IFRhYiB3aXRoIGFuaW1hdGlvbiA8L2gyPlxuICAgICAgPG5nMi10YWJcbiAgICAgICAgc2VsZWN0ZWQ9XCJqc1wiXG4gICAgICAgIHNlbGVjdGVkLWluZGV4LWNsYXNzPVwic2VsZWN0ZWRcIlxuICAgICAgICBzZWxlY3RlZC1jb250ZW50cy1jbGFzcz1cImZhZGVJbiBhbmltYXRlZFwiPlxuICAgICAgICA8ZGl2IGNsYXNzPVwidGFic1wiPlxuICAgICAgICAgIDxkaXYgaW5kZXg9XCJodG1sXCI+SFRNTDwvZGl2PlxuICAgICAgICAgIDxkaXYgaW5kZXg9XCJqc1wiPkphdmFzY3JpcHQ8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJ0YWItY29udGVudHNcIj5cbiAgICAgICAgICA8ZGl2IGNvbnRlbnRzPVwiaHRtbFwiPlxuPHByZT48Y29kZSBjbGFzcz1cImxhbmd1YWdlLW1hcmt1cFwiXG4+Jmx0O25nMi10YWIgc2VsZWN0ZWQ9XCJqc1wiIFxuICBzZWxlY3RlZC1jb250ZW50cy1jbGFzcz1cImZhZGVJbiBhbmltYXRlZFwiIFxuICBzZWxlY3RlZC1pbmRleC1jbGFzcz1cInNlbGVjdGVkXCI+XG4gICZsdDtkaXYgY2xhc3M9XCJ0YWJzXCI+XG4gICAgJmx0O2RpdiBpbmRleD1cImh0bWxcIj5IVE1MJmx0Oy9kaXY+XG4gICAgJmx0O2RpdiBpbmRleD1cImpzXCI+SmF2YXNjcmlwdCZsdDsvZGl2PlxuICAmbHQ7L2Rpdj5cbiAgJmx0O2RpdiBjbGFzcz1cInRhYi1jb250ZW50c1wiPlxuICAgICZsdDtkaXYgY29udGVudHM9XCJodG1sXCI+SFRNTCZsdDsvZGl2PlxuICAgICZsdDtkaXYgY29udGVudHM9XCJqc1wiPkphdmFzY3JpcHQmbHQ7L2Rpdj5cbiAgJmx0Oy9kaXY+XG4mbHQ7L25nMi10YWI+PC9jb2RlPjwvcHJlPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxkaXYgY29udGVudHM9XCJqc1wiPlxuPHByZT48Y29kZSBjbGFzcz1cImxhbmdhZ2UtamF2YXNjcmlwdFwiXG4+aW1wb3J0ICYxMjM7IENvbXBvbmVudCAmMTI1OyBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQENvbXBvbmVudCgmMTIzO1xuICB0ZW1wbGF0ZVVyOiAnYXBwLmh0bWwnXG4mMTI1OylcbmV4cG9ydCBjbGFzcyBBcHBDb21wb25lbnQmMTIzO1xuJjEyNTs8L2NvZGU+PC9wcmU+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvbmcyLXRhYj4gXG4gICAgICBOT1RFOiBUaGVyZSBpcyBhIGRlZmF1bHQgY3NzIGdpdmVuIGJ5IGNvbXBvbmVudCwgYnV0IGEgdXNlciBjYW4gb3ZlcnJpZGUgdGhlIHRhYiBzdHlsZS5cbiAgICA8L2Rpdj5cbmBcbn0pXG5leHBvcnQgY2xhc3MgVGFiQ29tcG9uZW50IHtcbiAgbmdBZnRlclZpZXdJbml0KCk6IHZvaWQge1xuICAgIHdpbmRvdy5zY3JvbGwoMCwwKTtcbiAgfVxufVxuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9+L2FuZ3VsYXIyLXRlbXBsYXRlLWxvYWRlciEuL2FwcC9uZzItdWktY29tcG9uZW50cy90YWIuY29tcG9uZW50LnRzXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==");

/***/ },

/***/ 374:
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = __webpack_require__(1);\nvar TooltipComponent = (function () {\n    function TooltipComponent() {\n    }\n    TooltipComponent.prototype.ngAfterViewInit = function () {\n        window.scroll(0, 0);\n    };\n    TooltipComponent = __decorate([\n        core_1.Component({\n            template: \"\\n    <div class=\\\"container page-title\\\">\\n      <h1>Tooltip</h1>\\n    </div>\\n    <div class=\\\"container\\\">\\n      \\n      <div ng2-tooltip=\\\"This is my tooltip\\\">\\n        tooltip 1\\n        <div ng2-tooltip=\\\"this is also tootip\\\">\\n          tooltip 2 \\n          <div ng2-tooltip=\\\"this is too tootip\\\">\\n            tooltip 3\\n          </div>\\n        </div>\\n      </div>\\n      \\n      <ng2-tab>\\n        <div class=\\\"tabs\\\">\\n          <div index=\\\"html\\\">HTML</div>\\n          <div index=\\\"js\\\">Javascript</div>\\n          <div index=\\\"css\\\">Stylesheet</div>\\n        </div> \\n        <div class=\\\"tab-contents\\\">\\n          <div contents=\\\"html\\\">\\n<pre><code class=\\\"language-markup\\\"\\n>&lt;div ng2-tooltip=\\\"This is my tooltip\\\">\\n  tooltip 1\\n  &lt;div ng2-tooltip=\\\"this is also tootip\\\">\\n    tooltip 2 \\n    &lt;div ng2-tooltip=\\\"this is too tootip\\\">\\n      tooltip 3\\n    &lt;/div>\\n  &lt;/div>\\n&lt;/div></code></pre>\\n          </div>\\n          <div contents=\\\"js\\\">\\n<pre><code class=\\\"language-javascript\\\"\\n>import &123; Component &125; from '@angular/core';\\n\\n@Component(&123;\\n  templateUr: 'app.html'\\n&125;)\\nexport class AppComponent&123;\\n&125;</code></pre>\\n          </div>\\n          <div contents=\\\"css\\\">\\n<pre><code class=\\\"language-css\\\"\\n>[ng2-tooltip] &123;margin: 40px; border: 1px solid #ccc &125;\\n\\n[ng2-tooltip] .tooltip-contents &123;\\n  border: 1px solid #ccc; padding: 5px\\n&125;\\n[ng2-tooltip] .tooltip-down-arrow &123;\\n  height: 10px;\\n&125;\\n[ng2-tooltip] .tooltip-down-arrow:before &123;\\n  content: '';\\n  display: block;\\n  position: absolute;\\n  width: 10px;\\n  height: 10px;\\n  left: 45%;\\n  bottom: 5px;\\n  background: #FFFFFF;\\n  border-left:1px solid #ccc;\\n  border-bottom:1px solid #ccc;\\n  transform:rotate(-45deg);\\n&125;</code></pre>\\n          </div>\\n        </div>\\n      </ng2-tab>\\n      \\n      Plunker Example: https://plnkr.co/edit/keOHIe?p=preview\\n    </div>\"\n        }), \n        __metadata('design:paramtypes', [])\n    ], TooltipComponent);\n    return TooltipComponent;\n}());\nexports.TooltipComponent = TooltipComponent;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvbmcyLXVpLWNvbXBvbmVudHMvdG9vbHRpcC5jb21wb25lbnQudHM/NTQ0NyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUEsaUNBQTBCLENBQWUsQ0FBQztBQThFMUM7SUFBQTtJQUlBLENBQUM7SUFIQywwQ0FBZSxHQUFmO1FBQ0UsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLENBQUM7SUFDckIsQ0FBQztJQS9FSDtRQUFDLGdCQUFTLENBQUM7WUFDVCxRQUFRLEVBQUUsazVEQXlFRDtTQUNWLENBQUM7O3dCQUFBO0lBS0YsdUJBQUM7QUFBRCxDQUFDO0FBSlksd0JBQWdCLG1CQUk1QiIsImZpbGUiOiIzNzQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQENvbXBvbmVudCh7XG4gIHRlbXBsYXRlOiBgXG4gICAgPGRpdiBjbGFzcz1cImNvbnRhaW5lciBwYWdlLXRpdGxlXCI+XG4gICAgICA8aDE+VG9vbHRpcDwvaDE+XG4gICAgPC9kaXY+XG4gICAgPGRpdiBjbGFzcz1cImNvbnRhaW5lclwiPlxuICAgICAgXG4gICAgICA8ZGl2IG5nMi10b29sdGlwPVwiVGhpcyBpcyBteSB0b29sdGlwXCI+XG4gICAgICAgIHRvb2x0aXAgMVxuICAgICAgICA8ZGl2IG5nMi10b29sdGlwPVwidGhpcyBpcyBhbHNvIHRvb3RpcFwiPlxuICAgICAgICAgIHRvb2x0aXAgMiBcbiAgICAgICAgICA8ZGl2IG5nMi10b29sdGlwPVwidGhpcyBpcyB0b28gdG9vdGlwXCI+XG4gICAgICAgICAgICB0b29sdGlwIDNcbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICAgIFxuICAgICAgPG5nMi10YWI+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJ0YWJzXCI+XG4gICAgICAgICAgPGRpdiBpbmRleD1cImh0bWxcIj5IVE1MPC9kaXY+XG4gICAgICAgICAgPGRpdiBpbmRleD1cImpzXCI+SmF2YXNjcmlwdDwvZGl2PlxuICAgICAgICAgIDxkaXYgaW5kZXg9XCJjc3NcIj5TdHlsZXNoZWV0PC9kaXY+XG4gICAgICAgIDwvZGl2PiBcbiAgICAgICAgPGRpdiBjbGFzcz1cInRhYi1jb250ZW50c1wiPlxuICAgICAgICAgIDxkaXYgY29udGVudHM9XCJodG1sXCI+XG48cHJlPjxjb2RlIGNsYXNzPVwibGFuZ3VhZ2UtbWFya3VwXCJcbj4mbHQ7ZGl2IG5nMi10b29sdGlwPVwiVGhpcyBpcyBteSB0b29sdGlwXCI+XG4gIHRvb2x0aXAgMVxuICAmbHQ7ZGl2IG5nMi10b29sdGlwPVwidGhpcyBpcyBhbHNvIHRvb3RpcFwiPlxuICAgIHRvb2x0aXAgMiBcbiAgICAmbHQ7ZGl2IG5nMi10b29sdGlwPVwidGhpcyBpcyB0b28gdG9vdGlwXCI+XG4gICAgICB0b29sdGlwIDNcbiAgICAmbHQ7L2Rpdj5cbiAgJmx0Oy9kaXY+XG4mbHQ7L2Rpdj48L2NvZGU+PC9wcmU+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPGRpdiBjb250ZW50cz1cImpzXCI+XG48cHJlPjxjb2RlIGNsYXNzPVwibGFuZ3VhZ2UtamF2YXNjcmlwdFwiXG4+aW1wb3J0ICYxMjM7IENvbXBvbmVudCAmMTI1OyBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQENvbXBvbmVudCgmMTIzO1xuICB0ZW1wbGF0ZVVyOiAnYXBwLmh0bWwnXG4mMTI1OylcbmV4cG9ydCBjbGFzcyBBcHBDb21wb25lbnQmMTIzO1xuJjEyNTs8L2NvZGU+PC9wcmU+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPGRpdiBjb250ZW50cz1cImNzc1wiPlxuPHByZT48Y29kZSBjbGFzcz1cImxhbmd1YWdlLWNzc1wiXG4+W25nMi10b29sdGlwXSAmMTIzO21hcmdpbjogNDBweDsgYm9yZGVyOiAxcHggc29saWQgI2NjYyAmMTI1O1xuXG5bbmcyLXRvb2x0aXBdIC50b29sdGlwLWNvbnRlbnRzICYxMjM7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7IHBhZGRpbmc6IDVweFxuJjEyNTtcbltuZzItdG9vbHRpcF0gLnRvb2x0aXAtZG93bi1hcnJvdyAmMTIzO1xuICBoZWlnaHQ6IDEwcHg7XG4mMTI1O1xuW25nMi10b29sdGlwXSAudG9vbHRpcC1kb3duLWFycm93OmJlZm9yZSAmMTIzO1xuICBjb250ZW50OiAnJztcbiAgZGlzcGxheTogYmxvY2s7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgd2lkdGg6IDEwcHg7XG4gIGhlaWdodDogMTBweDtcbiAgbGVmdDogNDUlO1xuICBib3R0b206IDVweDtcbiAgYmFja2dyb3VuZDogI0ZGRkZGRjtcbiAgYm9yZGVyLWxlZnQ6MXB4IHNvbGlkICNjY2M7XG4gIGJvcmRlci1ib3R0b206MXB4IHNvbGlkICNjY2M7XG4gIHRyYW5zZm9ybTpyb3RhdGUoLTQ1ZGVnKTtcbiYxMjU7PC9jb2RlPjwvcHJlPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvbmcyLXRhYj5cbiAgICAgIFxuICAgICAgUGx1bmtlciBFeGFtcGxlOiBodHRwczovL3BsbmtyLmNvL2VkaXQva2VPSEllP3A9cHJldmlld1xuICAgIDwvZGl2PmBcbn0pXG5leHBvcnQgY2xhc3MgVG9vbHRpcENvbXBvbmVudCB7XG4gIG5nQWZ0ZXJWaWV3SW5pdCgpOiB2b2lkIHtcbiAgICB3aW5kb3cuc2Nyb2xsKDAsMCk7XG4gIH1cbn1cblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vfi9hbmd1bGFyMi10ZW1wbGF0ZS1sb2FkZXIhLi9hcHAvbmcyLXVpLWNvbXBvbmVudHMvdG9vbHRpcC5jb21wb25lbnQudHNcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9");

/***/ },

/***/ 375:
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = __webpack_require__(1);\nvar AutoCompleteComponent = (function () {\n    function AutoCompleteComponent() {\n        this.arrayOfStrings = [\"this\", \"is\", \"array\", \"of\", \"text\"];\n        this.arrayOfKeyValues = [{ id: 1, value: 'One' }, { id: 2, value: 'Two' }, { id: 3, value: 'Three' }, { id: 4, value: 'Four' }];\n        this.arrayOfKeyValues2 = [{ key: 1, name: 'Key One' }, { key: 2, name: 'Key Two' }, { key: 3, name: 'Key Three' }, { key: 4, name: 'Key Four' }];\n        this.googleGeoCode = \"https://maps.googleapis.com/maps/api/geocode/json?address=:keyword\";\n    }\n    AutoCompleteComponent.prototype.ngAfterViewInit = function () {\n        window.scroll(0, 0);\n    };\n    AutoCompleteComponent = __decorate([\n        core_1.Component({\n            template: \"\\n    <div class=\\\"container page-title\\\">\\n      <h1>Auto Complete</h1>\\n    </div>\\n    <div class=\\\"container\\\">\\n      <h2> Autocomplete From Local Source </h2>\\n      <div class=\\\"spacer x3\\\"></div>\\n      <div class=\\\"container round-border\\\">\\n        <div class=\\\"title\\\">Simple string of array as source</div>\\n        <p><input ng2-auto-complete\\n          [(ngModel)]=\\\"model1\\\"\\n          [source]=\\\"arrayOfStrings\\\"\\n          placeholder=\\\"enter text\\\"/>\\n        <p><b>model1</b>: &123;&123;model1 | json&125;&125;\\n        <ng2-tab>\\n          <div class=\\\"tabs\\\">\\n             <div index=\\\"html\\\">HTML</div>\\n             <div index=\\\"js\\\">Javascript</div>\\n           </div> \\n           <div class=\\\"tab-contents\\\">\\n             <div contents=\\\"html\\\">\\n<pre><code class=\\\"language-markup\\\"\\n>&lt;input ng2-auto-complete\\n          [(ngModel)]=\\\"model1\\\"\\n          [source]=\\\"arrayOfStrings\\\"\\n          placeholder=\\\"enter text\\\"/></code></pre>\\n             </div>\\n             <div contents=\\\"js\\\">\\n<pre><code class=\\\"language-javascript\\\"\\n>import &123; Component &125; from '@angular/core';\\n\\n@Component(&123;\\n  templateUr: 'app.html'\\n&125;)\\nexport class AppComponent&123;\\n  model1: any;\\n  arrayOfStrings: string[] =\\n    [\\\"this\\\", \\\"is\\\", \\\"array\\\", \\\"of\\\", \\\"text\\\"];\\n&125;</code></pre>\\n             </div>\\n           </div>\\n        </ng2-tab>\\n      </div>\\n      <div class=\\\"spacer x4\\\"></div>\\n      \\n      <div class=\\\"container round-border\\\">\\n        <div class=\\\"title\\\">Simple object of array as source</div>\\n        <p><input ng2-auto-complete\\n          [(ngModel)]=\\\"model2\\\"\\n          [source]=\\\"arrayOfKeyValues\\\" \\n          placeholder=\\\"enter text\\\"/> \\n        <p><b>model2</b>: &123;&123;model2 | json&125;&125;\\n        <ng2-tab>\\n          <div class=\\\"tabs\\\">\\n             <div index=\\\"html\\\">HTML</div>\\n             <div index=\\\"js\\\">Javascript</div>\\n           </div> \\n           <div class=\\\"tab-contents\\\">\\n             <div contents=\\\"html\\\">\\n<pre><code class=\\\"language-markup\\\"\\n>&lt;input ng2-auto-complete\\n        [(ngModel)]=\\\"model2\\\"\\n        [source]=\\\"arrayOfKeyValues\\\" \\n        placeholder=\\\"enter text\\\"/></code></pre>\\n             </div>\\n             <div contents=\\\"js\\\">\\n<pre><code class=\\\"language-javascript\\\"\\n>import &123; Component &125; from '@angular/core';\\n\\n@Component(&123;\\n  templateUr: 'app.html'\\n&125;)\\nexport class AppComponent&123;\\n  model2: any;\\n  arrayOfKeyValues: any[] =\\n    [&123;id:1, value:'One'&125;, &123;id:2, value:'Two'&125;, &123;id:3, value:'Three'&125;, &123;id:4, value:'Four'&125;];\\n&125;</code></pre>\\n             </div>\\n           </div>\\n        </ng2-tab>\\n      </div>\\n      <div class=\\\"spacer x4\\\"></div>\\n      \\n      <div class=\\\"container round-border\\\">\\n        <div class=\\\"title\\\">Custom object of array as source</div>\\n        <p><input ng2-auto-complete \\n          [source]=\\\"arrayOfKeyValues2\\\"\\n          [(ngModel)]=\\\"model3\\\"\\n          placeholder=\\\"enter text\\\"\\n          value-property-name=\\\"key\\\"\\n          display-property-name=\\\"name\\\"/></p>\\n        <p><b>model3:</b> &123;&123;model3 | json&125;&125;<br/></p>\\n        <ng2-tab>\\n          <div class=\\\"tabs\\\">\\n             <div index=\\\"html\\\">HTML</div>\\n             <div index=\\\"js\\\">Javascript</div>\\n           </div> \\n           <div class=\\\"tab-contents\\\">\\n             <div contents=\\\"html\\\">\\n<pre><code class=\\\"language-markup\\\"\\n>&lt;input ng2-auto-complete \\n          [source]=\\\"arrayOfKeyValues2\\\"\\n          [(ngModel)]=\\\"model3\\\"\\n          placeholder=\\\"enter text\\\"\\n          value-property-name=\\\"key\\\"\\n          display-property-name=\\\"name\\\"/></code></pre>\\n             </div>\\n             <div contents=\\\"js\\\">\\n<pre><code class=\\\"language-javascript\\\"\\n>import &123; Component &125; from '@angular/core';\\n\\n@Component(&123;\\n  templateUr: 'app.html'\\n&125;)\\nexport class AppComponent&123;\\n  model3: any;\\n  arrayOfKeyValues2: any[] =\\n    [&123;key:1, name:'Key One'&125;, &123;key:2, name:'Key Two'&125;, &123;key:3, name:'Key Three'&125;, &123;key:4, name:'Key Four'&125;];\\n&125;</code></pre>\\n             </div>\\n           </div>\\n        </ng2-tab>\\n      </div>\\n        \\n      <h2> Autocomplete From Remote Source </h2>\\n      \\n      <div class=\\\"spacer x3\\\"></div>\\n      <div class=\\\"container round-border\\\">\\n        <div class=\\\"title\\\">Google geocode API as source</div>\\n        <p><b>source:</b> &123;&123;googleGeoCode&125;&125;\\n        <p><input ng2-auto-complete\\n          [(ngModel)]=\\\"model4\\\"\\n          placeholder=\\\"Enter Address(min. 2 chars)\\\"\\n          [source]=\\\"googleGeoCode\\\" \\n          display-property-name=\\\"formatted_address\\\"\\n          path-to-data=\\\"results\\\"\\n          min-chars=\\\"2\\\" />\\n        <p><b>model4</b>: &123;&123;model4 | json&125;&125;<br/></p>\\n        <ng2-tab>\\n          <div class=\\\"tabs\\\">\\n             <div index=\\\"html\\\">HTML</div>\\n             <div index=\\\"js\\\">Javascript</div>\\n           </div> \\n           <div class=\\\"tab-contents\\\">\\n             <div contents=\\\"html\\\">\\n<pre><code class=\\\"language-markup\\\"\\n>&lt;input ng2-auto-complete\\n          [(ngModel)]=\\\"model4\\\"\\n          placeholder=\\\"Enter Address(min. 2 chars)\\\"\\n          [source]=\\\"googleGeoCode\\\" \\n          display-property-name=\\\"formatted_address\\\"\\n          path-to-data=\\\"results\\\"\\n          min-chars=\\\"2\\\" /></code></pre>\\n             </div>\\n             <div contents=\\\"js\\\">\\n<pre><code class=\\\"language-javascript\\\"\\n>import &123; Component &125; from '@angular/core';\\n\\n@Component(&123;\\n  templateUr: 'app.html'\\n&125;)\\nexport class AppComponent&123;\\n  model4: any;\\n\\n  googleGeoCode: string = \\\"https://maps.googleapis.com/maps/api/geocode/json?address=:keyword\\\";\\n&125;</code></pre>\\n             </div>\\n           </div>\\n        </ng2-tab>\\n      </div>\\n      <div class=\\\"spacer x4\\\"></div>\\n      <div class=\\\"spacer x4\\\"></div>\\n      \\n    </div>\"\n        }), \n        __metadata('design:paramtypes', [])\n    ], AutoCompleteComponent);\n    return AutoCompleteComponent;\n}());\nexports.AutoCompleteComponent = AutoCompleteComponent;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ },

/***/ 376:
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = __webpack_require__(1);\nvar MenuComponent = (function () {\n    function MenuComponent() {\n    }\n    MenuComponent.prototype.ngAfterViewInit = function () {\n        window.scroll(0, 0);\n    };\n    MenuComponent = __decorate([\n        core_1.Component({\n            template: \"\\n    <div class=\\\"container page-title\\\">\\n      <h1>Menu</h1>\\n    </div>\\n    <div class=\\\"container\\\">\\n    \\n      <h2>Dropdown Menu</h2>\\n      <div>\\n        <ul class=\\\"horizontal-menu\\\">\\n          <li> Item 1\\n            <ul ng2-menu=\\\"bottom\\\">\\n              <li> Menu Item 1-1 </li>\\n              <li> Menu Item 1-2 </li>\\n              <li> Menu Item 1-3 </li>\\n            </ul>\\n          </li>\\n          \\n          <li> Item 2\\n            <ul ng2-menu=\\\"bottom\\\">\\n              <li> Menu Item 2-1 </li>\\n              <li> Item 2-2 \\n                <ul ng2-menu=\\\"right\\\">\\n                  <li> Menu Item 2-2-1 </li> \\n                  <li> Menu Item 2-2-2 </li>\\n                  <li> Menu Item 2-2-3 </li>\\n                </ul>\\n              </li>\\n              <li> Menu Item 2-3 </li>\\n            </ul>\\n          </li>\\n          <li>Menu Item 3</li>\\n        </ul>\\n      </div>\\n      \\n      <div class=\\\"spacer x8\\\"></div>\\n      <div class=\\\"spacer x8\\\"></div>\\n      <ng2-tab>\\n        <div class=\\\"tabs\\\">\\n           <div index=\\\"html\\\">HTML</div>\\n           <div index=\\\"js\\\">Javascript</div>\\n           <div index=\\\"css\\\">Stylesheet</div>\\n         </div> \\n         <div class=\\\"tab-contents\\\">\\n           <div contents=\\\"html\\\">\\n<pre><code class=\\\"language-markup\\\"\\n>&lt;ul class=\\\"horizontal-menu\\\">\\n  &lt;li> Menu Item 1\\n    &lt;ul ng2-menu=\\\"top\\\">\\n      &lt;li> Menu Item 1-1\\n      &lt;li> Menu Item 1-2 \\n      &lt;li> Menu Item 1-3\\n    &lt;/ul>\\n  &lt;li> Menu Item 2\\n    &lt;ul ng2-menu=\\\"top\\\">\\n      &lt;li> Menu Item 2-1 \\n      &lt;li> Menu Item 2-2\\n      &lt;li> Menu Item 2-3\\n    &lt;/ul>\\n  &lt;li> Menu Item 3\\n    &lt;ul ng2-menu=\\\"top\\\">\\n      &lt;li> Menu Item 3-1\\n      &lt;li> Menu Item 3-2\\n      &lt;li> Menu Item 3-3\\n    &lt;/ul>\\n&lt;/ul></code></pre>\\n          </div>\\n          <div contents=\\\"js\\\">\\n<pre><code class=\\\"language-javascript\\\"\\n>import &123; Component &125; from '@angular/core';\\n\\n@Component(&123;\\n  templateUr: 'app.html',\\n  styles: [require('./app.css')]\\n&125;)\\nexport class AppComponent&123;\\n&125;</code></pre>\\n          </div>\\n          <div contents=\\\"css\\\">\\n<pre><code class=\\\"language-stylesheet\\\"\\n>ul.horizontal-menu,\\n.has-ng2-menu ul[ng2-menu]\\n&123;\\n  background: #3db2e1;\\n  background: -moz-linear-gradient(top, #69c4e8, #21a1d4);\\n  background: -ms-linear-gradient(top, #69c4e8, #21a1d4);\\n  background: -o-linear-gradient(top, #69c4e8, #21a1d4);\\n  background: -webkit-linear-gradient(top, #69c4e8, #21a1d4);\\n  background: linear-gradient(to bottom, #69c4e8, #21a1d4);\\n  border-radius: 2px;\\n  box-shadow: inset 0 -3px 0 #1f97c7, inset 0 -3px 3px #1f9acc, inset 0 2px 2px #9ad7ef, inset 1px 0 2px #22a4d9, inset -1px 0 2px #22a4d9, 0 1px 1px rgba(0, 0, 0, 0.1), 0 2px 2px rgba(0, 0, 0, 0.06), 0 3px 3px rgba(0, 0, 0, 0.17), 2px 1px 2px rgba(0, 0, 0, 0.05), -2px 1px 2px rgba(0, 0, 0, 0.05);\\n  display: inline-block;\\n  font-family: 'Open Sans', Helvetica, sans-serif;\\n  width: auto;\\n&125;\\nul.horizontal-menu > li &123;\\n  -moz-transition: color .2s ease;\\n  -ms-transition: color .2s ease;\\n  -o-transition: color .2s ease;\\n  -webkit-transition: color .2s ease;\\n  color: #ffffff;\\n  display: inline-block !important;\\n  font-size: 13px;\\n  font-weight: 700;\\n  letter-spacing: 1px;\\n  padding: 20px 25px;\\n  text-decoration: none;\\n  text-shadow: 0 1px 0 rgba(0, 0, 0, 0.25);\\n  text-transform: uppercase;\\n  transition: color .2s ease;\\n&125;\\nul.horizontal-menu > li:hover,\\n.has-ng2-menu li:hover &123;\\n  color: #ccc;\\n&125;\\nul.horizontal-menu > li:hover ul,\\n.has-ng2-menu li:hover ul &123;\\n  color: #fff;\\n&125;\\n\\n.dropdown-menu, .right-side-menu, .bottom-menu &123;\\n  display: inline-block;\\n&125;\\n\\n.has-ng2-menu.active &123;\\n  color: #fff;\\n&125;\\n.has-ng2-menu::after &123;\\n  content: '25bc';\\n  display: inline-block;\\n  padding: 6px 12px;\\n  text-align: center;\\n  float: right;\\n  font-size: 8px;\\n  line-height: 13px;\\n&125;\\n.has-ng2-menu.active::after &123;\\n  color: #333;\\n&125;\\n\\n.has-ng2-menu ul[ng2-menu] &123;\\n  background-color: #fff;\\n  display: none;\\n  list-style: none;\\n  margin: 0;\\n  padding: 0\\n&125;\\n.has-ng2-menu.active > ul[ng2-menu] &123;\\n  display: inline-block;\\n&125;\\n.has-ng2-menu > ul[ng2-menu] > li &123;\\n  display: block;\\n  margin: 0;\\n  padding: 10px;\\n  white-space: nowrap;\\n&125;\\n\\n</code></pre>\\n           </div>\\n         </div>\\n      </ng2-tab>\\n     \\n    \\n      <h2>Right-Side Menu</h2>\\n      \\n      <div class=\\\"right-side-menu\\\">\\n        Menu\\n        <ul ng2-menu=\\\"right\\\">\\n          <li> Menu Item 1 \\n            <ul ng2-menu=\\\"right\\\">\\n              <li> Menu Item 1-1\\n              <li> Menu Item 1-2 \\n              <li> Menu Item 1-3\\n            </ul>\\n          <li> Menu Item 2\\n            <ul ng2-menu=\\\"right\\\">\\n              <li> Menu Item 2-1 &nbsp; &nbsp; &nbsp;\\n              <li> Menu Item 2-2 \\n                <ul ng2-menu=\\\"right\\\">\\n                  <li> Menu Item 2-2-1 \\n                  <li> Menu Item 2-2-2 \\n                  <li> Menu Item 2-2-3 \\n                </ul>\\n              \\n              <li> Menu Item 2-3 \\n            </ul>\\n          <li>Menu Item 3 &nbsp; &nbsp; &nbsp;\\n        </ul>\\n      </div>\\n      \\n      <div class=\\\"spacer x8\\\"></div>\\n      <div class=\\\"spacer x8\\\"></div>\\n      <ng2-tab>\\n        <div class=\\\"tabs\\\">\\n           <div index=\\\"html\\\">HTML</div>\\n           <div index=\\\"js\\\">Javascript</div>\\n           <div index=\\\"css\\\">Stylesheet</div>\\n         </div> \\n         <div class=\\\"tab-contents\\\">\\n           <div contents=\\\"html\\\">\\n<pre><code class=\\\"language-markup\\\"\\n>&lt;ul ng2-menu=\\\"right\\\">\\n  &lt;li> Menu Item 1 \\n    &lt;ul ng2-menu=\\\"right\\\">\\n      &lt;li> Menu Item 1-1\\n      &lt;li> Menu Item 1-2 \\n      &lt;li> Menu Item 1-3\\n    &lt;/ul>\\n  &lt;li> Menu Item 2\\n    &lt;ul ng2-menu=\\\"right\\\">\\n      &lt;li> Menu Item 2-1 &nbsp; &nbsp; &nbsp;\\n      &lt;li> Menu Item 2-2 \\n        &lt;ul ng2-menu=\\\"right\\\">\\n          &lt;li> Menu Item 2-2-1 \\n          &lt;li> Menu Item 2-2-2 \\n          &lt;li> Menu Item 2-2-3 \\n        &lt;/ul>\\n      \\n      &lt;li> Menu Item 2-3 \\n    &lt;/ul>\\n  &lt;li>Menu Item 3 &nbsp; &nbsp; &nbsp;\\n&lt;/ul></code></pre>\\n          </div>\\n          <div contents=\\\"js\\\">\\n<pre><code class=\\\"language-javascript\\\"\\n>import &123; Component &125; from '@angular/core';\\n\\n@Component(&123;\\n  templateUr: 'app.html',\\n  styles: [require('./app.css')]\\n&125;)\\nexport class AppComponent&123;\\n&125;</code></pre>\\n          </div>\\n          <div contents=\\\"css\\\">\\n<pre><code class=\\\"language-stylesheet\\\">\\nThe same as the above. .... Omitted Intentionally\\n</code></pre>\\n           </div>\\n         </div>\\n      </ng2-tab>\\n      \\n      \\n      <h2>Bottom-Side Menu</h2>\\n      \\n      <div class=\\\"spacer x8\\\"></div>\\n      <div class=\\\"bottom-menu\\\">\\n        <ul class=\\\"horizontal-menu\\\">\\n          <li> Menu Item 1\\n            <ul ng2-menu=\\\"top\\\">\\n              <li> Menu Item 1-1\\n              <li> Menu Item 1-2 \\n              <li> Menu Item 1-3\\n            </ul>\\n          <li> Menu Item 2\\n            <ul ng2-menu=\\\"top\\\">\\n              <li> Menu Item 2-1 \\n              <li> Menu Item 2-2\\n              <li> Menu Item 2-3\\n            </ul>\\n          <li> Menu Item 3\\n            <ul ng2-menu=\\\"top\\\">\\n              <li> Menu Item 3-1\\n              <li> Menu Item 3-2\\n              <li> Menu Item 3-3\\n            </ul>\\n        </ul>\\n      </div>\\n      \\n      <ng2-tab>\\n        <div class=\\\"tabs\\\">\\n           <div index=\\\"html\\\">HTML</div>\\n           <div index=\\\"js\\\">Javascript</div>\\n           <div index=\\\"css\\\">Stylesheet</div>\\n         </div> \\n         <div class=\\\"tab-contents\\\">\\n          <div contents=\\\"html\\\">\\n<pre><code class=\\\"language-markup\\\"\\n>&lt;ul class=\\\"horizontal-menu\\\">\\n  &lt;li> Menu Item 1\\n    &lt;ul ng2-menu=\\\"top\\\">\\n      &lt;li> Menu Item 1-1\\n      &lt;li> Menu Item 1-2 \\n      &lt;li> Menu Item 1-3\\n    &lt;/ul>\\n  &lt;li> Menu Item 2\\n    &lt;ul ng2-menu=\\\"top\\\">\\n      &lt;li> Menu Item 2-1 \\n      &lt;li> Menu Item 2-2\\n      &lt;li> Menu Item 2-3\\n    &lt;/ul>\\n  &lt;li> Menu Item 3\\n    &lt;ul ng2-menu=\\\"top\\\">\\n      &lt;li> Menu Item 3-1\\n      &lt;li> Menu Item 3-2\\n      &lt;li> Menu Item 3-3\\n    &lt;/ul>\\n&lt;/ul></code></pre>\\n          </div>\\n          <div contents=\\\"js\\\">\\n<pre><code class=\\\"language-javascript\\\"\\n>import &123; Component &125; from '@angular/core';\\n\\n@Component(&123;\\n  templateUr: 'app.html',\\n  styles: [require('./app.css')]\\n&125;)\\nexport class AppComponent&123;\\n&125;</code></pre>\\n          </div>\\n          <div contents=\\\"css\\\">\\n<pre><code class=\\\"language-stylesheet\\\">\\nThe same as the above. .... Omitted Intentionally\\n</code></pre>\\n           </div>\\n         </div>\\n      </ng2-tab>\\n      \\n      \\n      Plunker Example: https://plnkr.co/edit/wTu6EB?p=preview\\n    </div>\"\n        }), \n        __metadata('design:paramtypes', [])\n    ], MenuComponent);\n    return MenuComponent;\n}());\nexports.MenuComponent = MenuComponent;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ },

/***/ 377:
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = __webpack_require__(1);\nvar SortableComponent = (function () {\n    function SortableComponent() {\n    }\n    SortableComponent.prototype.ngAfterViewInit = function () {\n        window.scroll(0, 0);\n    };\n    SortableComponent = __decorate([\n        core_1.Component({\n            template: \"\\n    <div>\\n      <div class=\\\"spacer\\\"></div>\\n      <ul ng2-sortable>\\n        <li id=\\\"order\\\">Order</li>\\n        <li id=\\\"me\\\">Me</li>\\n        <li id=\\\"right\\\">Right</li>\\n        <li id=\\\"the\\\">The</li>\\n        <li id=\\\"into\\\">Into</li>\\n        <li id=\\\"put\\\">Put</li>\\n      </ul>\\n      <ng2-tab>\\n        <div class=\\\"tabs\\\">\\n           <div index=\\\"html\\\">HTML</div>\\n           <div index=\\\"js\\\">Javascript</div>\\n           <div index=\\\"css\\\">Stylesheet</div>\\n         </div> \\n         <div class=\\\"tab-contents\\\">\\n           <div contents=\\\"html\\\">\\n<pre><code class=\\\"language-markup\\\">\\n&lt;ul ng2-sortable>\\n  &lt;li id=\\\"order\\\">Order&lt;/li>\\n  &lt;li id=\\\"me\\\">Me&lt;/li>\\n  &lt;li id=\\\"right\\\">Right&lt;/li>\\n  &lt;li id=\\\"the\\\">The&lt;/li>\\n  &lt;li id=\\\"into\\\">Into&lt;/li>\\n  &lt;li id=\\\"put\\\">Put&lt;/li>\\n&lt;/ul>\\n</code></pre>\\n          </div>\\n          <div contents=\\\"js\\\">\\n<pre><code class=\\\"language-javascript\\\">\\nimport {{'{'}} Component {{'}'}} from '@angular/core';\\n\\n@Component({{'{'}}\\n  templateUr: 'app.html'\\n{{'}'}})\\nexport class AppComponent {{'{'}}\\n  order: string[] = [];\\n{{'}'}}</code></pre>\\n          </div>\\n          <div contents=\\\"css\\\">\\n<pre><code class=\\\"language-stylesheet\\\">\\nul[ng2-sortable] {{'}'}}\\n   padding: 10px; \\n   border: 1px solid #ccc;\\n  list-style: none; \\n  display: block\\n{{'}'}}\\nul[ng2-sortable] li {{'{'}}\\n  padding: 10px 5px;\\n  background: #4986e7;\\n  color: #fff; \\n  border: 1px solid #fff;\\n  display: block; \\n  position: relative\\n{{'}'}}\\nul[ng2-sortable] li.drag-enter {{'{'}}\\n  border-top: 2px solid yellow;\\n{{'}'}}\\n</code></pre>\\n           </div>\\n         </div>\\n      </ng2-tab>\\n      \\n    </div>\",\n            styles: [\"\\n    ul[ng2-sortable] {\\n       padding: 10px; \\n       border: 1px solid #ccc;\\n      list-style: none; \\n      display: block\\n    }\\n    ul[ng2-sortable] li {\\n      padding: 10px 5px;\\n      background: #4986e7;\\n      color: #fff; \\n      border: 1px solid #fff;\\n      display: block; \\n      position: relative\\n    }\\n    ul[ng2-sortable] li.drag-enter {\\n      border-top: 2px solid yellow;\\n    }\\n  \"]\n        }), \n        __metadata('design:paramtypes', [])\n    ], SortableComponent);\n    return SortableComponent;\n}());\nexports.SortableComponent = SortableComponent;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvbmcyLXVpLWNvbXBvbmVudHMvc29ydGFibGUuY29tcG9uZW50LnRzPzMwNWMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBLGlDQUEwQixDQUFlLENBQUM7QUF5RjFDO0lBQUE7SUFJQSxDQUFDO0lBSEMsMkNBQWUsR0FBZjtRQUNFLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ3JCLENBQUM7SUExRkg7UUFBQyxnQkFBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLGdyREFpRUQ7WUFDVCxNQUFNLEVBQUUsQ0FBQyw2WkFrQlIsQ0FBQztTQUNILENBQUM7O3lCQUFBO0lBS0Ysd0JBQUM7QUFBRCxDQUFDO0FBSlkseUJBQWlCLG9CQUk3QiIsImZpbGUiOiIzNzcuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQENvbXBvbmVudCh7XG4gIHRlbXBsYXRlOiBgXG4gICAgPGRpdj5cbiAgICAgIDxkaXYgY2xhc3M9XCJzcGFjZXJcIj48L2Rpdj5cbiAgICAgIDx1bCBuZzItc29ydGFibGU+XG4gICAgICAgIDxsaSBpZD1cIm9yZGVyXCI+T3JkZXI8L2xpPlxuICAgICAgICA8bGkgaWQ9XCJtZVwiPk1lPC9saT5cbiAgICAgICAgPGxpIGlkPVwicmlnaHRcIj5SaWdodDwvbGk+XG4gICAgICAgIDxsaSBpZD1cInRoZVwiPlRoZTwvbGk+XG4gICAgICAgIDxsaSBpZD1cImludG9cIj5JbnRvPC9saT5cbiAgICAgICAgPGxpIGlkPVwicHV0XCI+UHV0PC9saT5cbiAgICAgIDwvdWw+XG4gICAgICA8bmcyLXRhYj5cbiAgICAgICAgPGRpdiBjbGFzcz1cInRhYnNcIj5cbiAgICAgICAgICAgPGRpdiBpbmRleD1cImh0bWxcIj5IVE1MPC9kaXY+XG4gICAgICAgICAgIDxkaXYgaW5kZXg9XCJqc1wiPkphdmFzY3JpcHQ8L2Rpdj5cbiAgICAgICAgICAgPGRpdiBpbmRleD1cImNzc1wiPlN0eWxlc2hlZXQ8L2Rpdj5cbiAgICAgICAgIDwvZGl2PiBcbiAgICAgICAgIDxkaXYgY2xhc3M9XCJ0YWItY29udGVudHNcIj5cbiAgICAgICAgICAgPGRpdiBjb250ZW50cz1cImh0bWxcIj5cbjxwcmU+PGNvZGUgY2xhc3M9XCJsYW5ndWFnZS1tYXJrdXBcIj5cbiZsdDt1bCBuZzItc29ydGFibGU+XG4gICZsdDtsaSBpZD1cIm9yZGVyXCI+T3JkZXImbHQ7L2xpPlxuICAmbHQ7bGkgaWQ9XCJtZVwiPk1lJmx0Oy9saT5cbiAgJmx0O2xpIGlkPVwicmlnaHRcIj5SaWdodCZsdDsvbGk+XG4gICZsdDtsaSBpZD1cInRoZVwiPlRoZSZsdDsvbGk+XG4gICZsdDtsaSBpZD1cImludG9cIj5JbnRvJmx0Oy9saT5cbiAgJmx0O2xpIGlkPVwicHV0XCI+UHV0Jmx0Oy9saT5cbiZsdDsvdWw+XG48L2NvZGU+PC9wcmU+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPGRpdiBjb250ZW50cz1cImpzXCI+XG48cHJlPjxjb2RlIGNsYXNzPVwibGFuZ3VhZ2UtamF2YXNjcmlwdFwiPlxuaW1wb3J0IHt7J3snfX0gQ29tcG9uZW50IHt7J30nfX0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBDb21wb25lbnQoe3sneyd9fVxuICB0ZW1wbGF0ZVVyOiAnYXBwLmh0bWwnXG57eyd9J319KVxuZXhwb3J0IGNsYXNzIEFwcENvbXBvbmVudCB7eyd7J319XG4gIG9yZGVyOiBzdHJpbmdbXSA9IFtdO1xue3snfSd9fTwvY29kZT48L3ByZT5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8ZGl2IGNvbnRlbnRzPVwiY3NzXCI+XG48cHJlPjxjb2RlIGNsYXNzPVwibGFuZ3VhZ2Utc3R5bGVzaGVldFwiPlxudWxbbmcyLXNvcnRhYmxlXSB7eyd9J319XG4gICBwYWRkaW5nOiAxMHB4OyBcbiAgIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7IFxuICBkaXNwbGF5OiBibG9ja1xue3snfSd9fVxudWxbbmcyLXNvcnRhYmxlXSBsaSB7eyd7J319XG4gIHBhZGRpbmc6IDEwcHggNXB4O1xuICBiYWNrZ3JvdW5kOiAjNDk4NmU3O1xuICBjb2xvcjogI2ZmZjsgXG4gIGJvcmRlcjogMXB4IHNvbGlkICNmZmY7XG4gIGRpc3BsYXk6IGJsb2NrOyBcbiAgcG9zaXRpb246IHJlbGF0aXZlXG57eyd9J319XG51bFtuZzItc29ydGFibGVdIGxpLmRyYWctZW50ZXIge3sneyd9fVxuICBib3JkZXItdG9wOiAycHggc29saWQgeWVsbG93O1xue3snfSd9fVxuPC9jb2RlPjwvcHJlPlxuICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgIDwvZGl2PlxuICAgICAgPC9uZzItdGFiPlxuICAgICAgXG4gICAgPC9kaXY+YCxcbiAgc3R5bGVzOiBbYFxuICAgIHVsW25nMi1zb3J0YWJsZV0ge1xuICAgICAgIHBhZGRpbmc6IDEwcHg7IFxuICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XG4gICAgICBsaXN0LXN0eWxlOiBub25lOyBcbiAgICAgIGRpc3BsYXk6IGJsb2NrXG4gICAgfVxuICAgIHVsW25nMi1zb3J0YWJsZV0gbGkge1xuICAgICAgcGFkZGluZzogMTBweCA1cHg7XG4gICAgICBiYWNrZ3JvdW5kOiAjNDk4NmU3O1xuICAgICAgY29sb3I6ICNmZmY7IFxuICAgICAgYm9yZGVyOiAxcHggc29saWQgI2ZmZjtcbiAgICAgIGRpc3BsYXk6IGJsb2NrOyBcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZVxuICAgIH1cbiAgICB1bFtuZzItc29ydGFibGVdIGxpLmRyYWctZW50ZXIge1xuICAgICAgYm9yZGVyLXRvcDogMnB4IHNvbGlkIHllbGxvdztcbiAgICB9XG4gIGBdXG59KVxuZXhwb3J0IGNsYXNzIFNvcnRhYmxlQ29tcG9uZW50IHtcbiAgbmdBZnRlclZpZXdJbml0KCk6IHZvaWQge1xuICAgIHdpbmRvdy5zY3JvbGwoMCwwKTtcbiAgfVxufVxuXG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL34vYW5ndWxhcjItdGVtcGxhdGUtbG9hZGVyIS4vYXBwL25nMi11aS1jb21wb25lbnRzL3NvcnRhYmxlLmNvbXBvbmVudC50c1xuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=");

/***/ },

/***/ 378:
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = __webpack_require__(1);\nvar GettingStartedComponent = (function () {\n    function GettingStartedComponent() {\n    }\n    GettingStartedComponent.prototype.ngAfterViewInit = function () {\n        window.scroll(0, 0);\n    };\n    GettingStartedComponent = __decorate([\n        core_1.Component({\n            template: \"\\n<div class=\\\"container page-title\\\">\\n  <h1>Getting Started</h1>\\n</div>\\n<div class=\\\"container\\\">\\n  <p class=\\\"page-title-description\\\">\\n    ng2-ui is a collection of quality Angular2 directives.\\n    To make ng2-ui available to your project, you need to install a npm package and \\n    import NG2_DIRECTIVES.\\n  </p>\\n  \\n  <h2>NPM Install</h2>\\n  <pre><code class=\\\"language-bash\\\">$ npm install ng2-ui --save</code></pre>\\n  \\n  <h2>systemjs.config.js</h2>\\n  <pre><code class=\\\"language-javascript\\\">\\nmap: {{ '{' }}\\n  app: \\\"app\\\",\\n  ...\\n  'ng2-ui': 'https://npmcdn.com/ng2-ui' // <----- this\\n{{ '}' }},\\n\\npackages: {{ '{' }}\\n   app: {{ '{' }}main: './main.js', defaultExtension: 'js'{{ '}' }},\\n   ...\\n   'ng2-ui': {{ '{' }} main: 'dist/index.js', defaultExtension: 'js' {{ '}' }}  // <----- this\\n   {{ '}' }}\\n}</code></pre>\\n      \\n  <h2>Usage</h2>\\n  <p><b>Import and include directives for your application</b>\\n  <p>app.component.ts\\n  <pre><code class=\\\"language-javascript\\\">\\n//our root app component\\nimport {{ '{' }}Component, enableProdMode{{ '}' }} from '@angular/core'\\nenableProdMode();\\n\\n@Component({{ '{' }}\\n  selector: 'my-app',\\n  template: require('./src/app.tpl.html'),\\n{{ '}' }})\\nexport class AppComponent {{ '{' }} ... {{ '}' }}\\n</code></pre>\\n\\n<p><b>src/app.tpl.html</b></p>\\n<pre><code class=\\\"language-markup\\\">\\n&lt;input [(ngModel)]=\\\"date1\\\" ng2-datetime-picker /> \\n\\n&lt;ng2-map center=\\\"Brampton, Canada\\\">&lt;/ng2-map> \\n</code></pre>\\n</div>\\n  \"\n        }), \n        __metadata('design:paramtypes', [])\n    ], GettingStartedComponent);\n    return GettingStartedComponent;\n}());\nexports.GettingStartedComponent = GettingStartedComponent;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvZ2V0dGluZy1zdGFydGVkLmNvbXBvbmVudC50cz8yYWZiIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQSxpQ0FBMEIsQ0FBZSxDQUFDO0FBdUQxQztJQUFBO0lBSUEsQ0FBQztJQUhDLGlEQUFlLEdBQWY7UUFDRSxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsQ0FBQztJQUNyQixDQUFDO0lBekRIO1FBQUMsZ0JBQVMsQ0FBQztZQUNULFFBQVEsRUFBRSxtK0NBbURUO1NBQ0YsQ0FBQzs7K0JBQUE7SUFLRiw4QkFBQztBQUFELENBQUM7QUFKWSwrQkFBdUIsMEJBSW5DIiwiZmlsZSI6IjM3OC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuQENvbXBvbmVudCh7XG4gIHRlbXBsYXRlOiBgXG48ZGl2IGNsYXNzPVwiY29udGFpbmVyIHBhZ2UtdGl0bGVcIj5cbiAgPGgxPkdldHRpbmcgU3RhcnRlZDwvaDE+XG48L2Rpdj5cbjxkaXYgY2xhc3M9XCJjb250YWluZXJcIj5cbiAgPHAgY2xhc3M9XCJwYWdlLXRpdGxlLWRlc2NyaXB0aW9uXCI+XG4gICAgbmcyLXVpIGlzIGEgY29sbGVjdGlvbiBvZiBxdWFsaXR5IEFuZ3VsYXIyIGRpcmVjdGl2ZXMuXG4gICAgVG8gbWFrZSBuZzItdWkgYXZhaWxhYmxlIHRvIHlvdXIgcHJvamVjdCwgeW91IG5lZWQgdG8gaW5zdGFsbCBhIG5wbSBwYWNrYWdlIGFuZCBcbiAgICBpbXBvcnQgTkcyX0RJUkVDVElWRVMuXG4gIDwvcD5cbiAgXG4gIDxoMj5OUE0gSW5zdGFsbDwvaDI+XG4gIDxwcmU+PGNvZGUgY2xhc3M9XCJsYW5ndWFnZS1iYXNoXCI+JCBucG0gaW5zdGFsbCBuZzItdWkgLS1zYXZlPC9jb2RlPjwvcHJlPlxuICBcbiAgPGgyPnN5c3RlbWpzLmNvbmZpZy5qczwvaDI+XG4gIDxwcmU+PGNvZGUgY2xhc3M9XCJsYW5ndWFnZS1qYXZhc2NyaXB0XCI+XG5tYXA6IHt7ICd7JyB9fVxuICBhcHA6IFwiYXBwXCIsXG4gIC4uLlxuICAnbmcyLXVpJzogJ2h0dHBzOi8vbnBtY2RuLmNvbS9uZzItdWknIC8vIDwtLS0tLSB0aGlzXG57eyAnfScgfX0sXG5cbnBhY2thZ2VzOiB7eyAneycgfX1cbiAgIGFwcDoge3sgJ3snIH19bWFpbjogJy4vbWFpbi5qcycsIGRlZmF1bHRFeHRlbnNpb246ICdqcyd7eyAnfScgfX0sXG4gICAuLi5cbiAgICduZzItdWknOiB7eyAneycgfX0gbWFpbjogJ2Rpc3QvaW5kZXguanMnLCBkZWZhdWx0RXh0ZW5zaW9uOiAnanMnIHt7ICd9JyB9fSAgLy8gPC0tLS0tIHRoaXNcbiAgIHt7ICd9JyB9fVxufTwvY29kZT48L3ByZT5cbiAgICAgIFxuICA8aDI+VXNhZ2U8L2gyPlxuICA8cD48Yj5JbXBvcnQgYW5kIGluY2x1ZGUgZGlyZWN0aXZlcyBmb3IgeW91ciBhcHBsaWNhdGlvbjwvYj5cbiAgPHA+YXBwLmNvbXBvbmVudC50c1xuICA8cHJlPjxjb2RlIGNsYXNzPVwibGFuZ3VhZ2UtamF2YXNjcmlwdFwiPlxuLy9vdXIgcm9vdCBhcHAgY29tcG9uZW50XG5pbXBvcnQge3sgJ3snIH19Q29tcG9uZW50LCBlbmFibGVQcm9kTW9kZXt7ICd9JyB9fSBmcm9tICdAYW5ndWxhci9jb3JlJ1xuZW5hYmxlUHJvZE1vZGUoKTtcblxuQENvbXBvbmVudCh7eyAneycgfX1cbiAgc2VsZWN0b3I6ICdteS1hcHAnLFxuICB0ZW1wbGF0ZTogcmVxdWlyZSgnLi9zcmMvYXBwLnRwbC5odG1sJyksXG57eyAnfScgfX0pXG5leHBvcnQgY2xhc3MgQXBwQ29tcG9uZW50IHt7ICd7JyB9fSAuLi4ge3sgJ30nIH19XG48L2NvZGU+PC9wcmU+XG5cbjxwPjxiPnNyYy9hcHAudHBsLmh0bWw8L2I+PC9wPlxuPHByZT48Y29kZSBjbGFzcz1cImxhbmd1YWdlLW1hcmt1cFwiPlxuJmx0O2lucHV0IFsobmdNb2RlbCldPVwiZGF0ZTFcIiBuZzItZGF0ZXRpbWUtcGlja2VyIC8+IFxuXG4mbHQ7bmcyLW1hcCBjZW50ZXI9XCJCcmFtcHRvbiwgQ2FuYWRhXCI+Jmx0Oy9uZzItbWFwPiBcbjwvY29kZT48L3ByZT5cbjwvZGl2PlxuICBgXG59KVxuZXhwb3J0IGNsYXNzIEdldHRpbmdTdGFydGVkQ29tcG9uZW50IHtcbiAgbmdBZnRlclZpZXdJbml0KCk6IHZvaWQge1xuICAgIHdpbmRvdy5zY3JvbGwoMCwwKTtcbiAgfVxufVxuXG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL34vYW5ndWxhcjItdGVtcGxhdGUtbG9hZGVyIS4vYXBwL2dldHRpbmctc3RhcnRlZC5jb21wb25lbnQudHNcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9");

/***/ }

});